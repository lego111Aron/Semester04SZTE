{"config":{"lang":["hu"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Alkalmaz\u00e1sfejleszt\u00e9s I. jegyzet","text":"<p>Ez a jegyzet offline tanul\u00e1s c\u00e9lj\u00e1b\u00f3l le is t\u00f6lthet\u0151 itt</p>"},{"location":"#az-elkeszult-jegyzetrol-hibak","title":"Az elk\u00e9sz\u00fclt jegyzetr\u0151l, hib\u00e1k","text":""},{"location":"#hibak","title":"Hib\u00e1k","text":"<p>A jegyzet folyamatosan k\u00e9sz\u00fcl, \u00edgy el\u0151fordulhatnak benne apr\u00f3bb hib\u00e1k, hi\u00e1nyoss\u00e1gok, el\u00edr\u00e1sok. Ha valaki esetleg ilyet tal\u00e1lna, k\u00e9rem \u00edrjon az <code>siket .at. inf.u-szeged.hu</code> c\u00edmre, hogy mihamarabb jav\u00edthassuk. A t\u00e1rgyi t\u00e9ved\u00e9sek jelent\u00e9s\u00e9rt cser\u00e9be pluszpontok szerz\u00e9s\u00e9re van lehet\u0151s\u00e9g, gyakorlatvezet\u0151t\u0151l f\u00fcggetlen\u00fcl.</p>"},{"location":"#keszitok","title":"K\u00e9sz\u00edt\u0151k","text":"<ul> <li>B\u00e1rsony Daniella</li> <li>Gajd\u00e1cs Enik\u0151</li> <li>Heged\u0171s P\u00e9ter</li> <li>Horv\u00e1th D\u00e1niel</li> <li>S\u00e1godi Zolt\u00e1n</li> <li>Siket Istv\u00e1n</li> <li>Soha P\u00e9ter</li> <li>T\u00f3th Zolt\u00e1n G\u00e1bor</li> <li>Vince D\u00e1niel</li> <li>Viszkok Tam\u00e1s</li> </ul>"},{"location":"00_Kovetelmenyek/","title":"Le\u00edr\u00e1s","text":"<p>A tant\u00e1rgy a Java nyelvre \u00e9s futtat\u00f3rendszerre f\u00f3kusz\u00e1lva ismerteti meg a hallgat\u00f3kat az alkalmaz\u00e1sfejleszt\u00e9shez haszn\u00e1latos technol\u00f3gi\u00e1kkal: v\u00e9grehajt\u00e1s p\u00e1rhuzamos\u00edt\u00e1sa (sz\u00e1lkezel\u00e9s), felhaszn\u00e1l\u00f3i fel\u00fclet l\u00e9trehoz\u00e1sa \u00e9s kezel\u00e9se, adatb\u00e1zis-hozz\u00e1f\u00e9r\u00e9s, \u00e9s szerver oldali webes megold\u00e1sok.</p>"},{"location":"00_Kovetelmenyek/#tematika","title":"Tematika","text":"<ul> <li>Fejleszt\u00e9shez haszn\u00e1lt eszk\u00f6z\u00f6k<ul> <li>IDE</li> <li>Build rendszer</li> </ul> </li> <li>Felhaszn\u00e1l\u00f3i fel\u00fclet l\u00e9trehoz\u00e1sa \u00e9s kezel\u00e9se<ul> <li>GUI fejleszt\u00e9s</li> </ul> </li> <li>Adatb\u00e1zishoz hozz\u00e1f\u00e9r\u00e9s</li> <li>Szerver oldali webes megold\u00e1sok<ul> <li>Dinamikus webes fel\u00fclet kialak\u00edt\u00e1sa</li> </ul> </li> <li>XML technol\u00f3gi\u00e1k</li> <li>V\u00e9grehajt\u00e1s p\u00e1rhuzamos\u00edt\u00e1sa (sz\u00e1lkezel\u00e9s)</li> </ul>"},{"location":"00_Kovetelmenyek/#gyakorlat-kovetelmenyek","title":"Gyakorlat k\u00f6vetelm\u00e9nyek","text":"<p>Hamarosan ...</p>"},{"location":"01_gyakorlat/","title":"1. gyakorlat","text":""},{"location":"01_gyakorlat/#xml-extensible-markup-language","title":"XML (eXtensible Markup Language)","text":"<p>Az XML-t adatok t\u00e1rol\u00e1s\u00e1ra \u00e9s tov\u00e1bb\u00edt\u00e1s\u00e1ra tervezt\u00e9k. Mind ember \u00e9s mind g\u00e9p sz\u00e1m\u00e1ra olvashat\u00f3 form\u00e1tumban t\u00e1rolja az adatot (azaz, sz\u00f6veges form\u00e1tumban \u00e9s nem bin\u00e1risan). Az XML szoftver- \u00e9s hardverf\u00fcggetlen eszk\u00f6z, \u00edgy p\u00e9ld\u00e1ul el\u0151szeretettel alkalmazt\u00e1k/alkalmazz\u00e1k web szolg\u00e1ltat\u00e1sokban adatok tov\u00e1bb\u00edt\u00e1s\u00e1ra. \u00d6nmag\u00e1ban nem csin\u00e1l semmit, nincsenek el\u0151re defini\u00e1lt tagek.</p> <p>Egy egyszer\u0171 XML p\u00e9lda:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;note&gt;\n&lt;to&gt;B\u00e9la&lt;/to&gt;\n&lt;from&gt;Jani&lt;/from&gt;\n&lt;heading&gt;Reminder&lt;/heading&gt;\n&lt;body&gt;Don't forget me this weekend!&lt;/body&gt;\n&lt;/note&gt;\n</code></pre> <p>Az XML-t sokszor haszn\u00e1lj\u00e1k arra, hogy az adatot elszepar\u00e1lj\u00e1k a megjelen\u00edt\u00e9st\u0151l, tov\u00e1bb\u00e1 el\u0151szeretettel alkalmazz\u00e1k konfigur\u00e1ci\u00f3s \u00e1llom\u00e1nyokk\u00e9nt (pl.: <code>build.xml</code> Ant eset\u00e9ben, illetve <code>pom.xml</code> Maven eset\u00e9ben, stb). Ilyen \u00e9rtelemben egyen\u00e9rt\u00e9k\u0171 lehet a JSON-nel is, melyben szint\u00e9n adatokat adhatunk meg.</p>"},{"location":"01_gyakorlat/#xml-fa","title":"XML fa","text":"<ul> <li>Az XML dokumentumok elemei egy fa strukt\u00far\u00e1t alkotnak, melyet szok\u00e1s XML DOM-nak is h\u00edvni (HTML DOM mint\u00e1j\u00e1ra).</li> <li>Minden XML dokumentumban pontosan egy gy\u00f6k\u00e9r tal\u00e1lhat\u00f3.</li> <li>Minden pontnak lehetnek gyerekei is.</li> <li>A fenti p\u00e9ld\u00e1ban <code>&lt;note&gt;</code> a gy\u00f6k\u00e9r, melynek n\u00e9gy gyereke van (<code>to</code>, <code>from</code>, <code>heading</code> \u00e9s <code>body</code>)</li> </ul> <p>Az XML-ek els\u0151 sor\u00e1ban az \u00fagynevezett prolog sor tal\u00e1lhat\u00f3, mely speci\u00e1lis form\u00e1tum\u00fa \u00e9s opcion\u00e1lis. A lenti p\u00e9ld\u00e1ban a haszn\u00e1lt XML verzi\u00f3j\u00e1t (kezdetekt\u0151l fogva 1.0) \u00e9s a karakterk\u00f3dol\u00e1st adja meg (az alap\u00e9rtelmezett az UTF-8).</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n</code></pre> <p>A prolog sor nem r\u00e9sze az XML dokumentumnak, ez\u00e9rt nincs sz\u00fcks\u00e9g lez\u00e1r\u00f3 tagre.</p> <p>Egy XML dokumentum j\u00f3l form\u00e1zott, ha teljes\u00fclnek a k\u00f6vetkez\u0151k:</p> <ul> <li>Nincs \u00e1tlapol\u00f3 tag-p\u00e1r (P\u00e9ld\u00e1ul nincs ilyen: <code>&lt;to&gt; &lt;from&gt; &lt;/to&gt; &lt;/from&gt;</code>)</li> <li>Minden tagnek van lez\u00e1r\u00f3 p\u00e1rja</li> <li>Minden attrib\u00fatum \u00e9rt\u00e9k id\u00e9z\u0151jelek vagy aposztr\u00f3fok k\u00f6z\u00f6tt szerepel</li> <li>Pontosan egy gy\u00f6k\u00e9r elem tal\u00e1lhat\u00f3 a dokumentumban</li> </ul>"},{"location":"01_gyakorlat/#karakter-entitasok","title":"Karakter entit\u00e1sok","text":"<p>Mivel az XML-ben vannak speci\u00e1lis karakterek, ezeket valahogy m\u00e1shogy kell \u00edrnunk, ha egy ilyen karaktert szeretn\u00e9nk adatk\u00e9nt t\u00e1rolni. Ezek a karakter entit\u00e1sok:</p> Karakter entit\u00e1s Megjelen\u00e9s Elnevez\u00e9s &amp;lt; &lt; kisebb mint &amp;gt; &gt; nagyobb mint &amp;amp; &amp; \u00e9s jel &amp;apos; ' aposztr\u00f3f &amp;quot; \" id\u00e9z\u0151jel <p>P\u00e9ld\u00e1ul azt szeretn\u00e9nk \u00edrni a <code>&lt;heading&gt;</code> tag-ek k\u00f6z\u00e9, hogy x &lt; y, akkor azt a k\u00f6vetkez\u0151k\u00e9ppen tehetj\u00fck meg:</p> <pre><code>&lt;heading&gt; x &amp;lt; y &lt;/heading&gt;\n</code></pre>"},{"location":"01_gyakorlat/#elemek","title":"Elemek","text":"<p>Minden XML elem a k\u00f6vetkez\u0151ket tartalmazhatja:</p> <ul> <li>sz\u00f6veg (Pl: <code>&lt;to&gt;</code> sz\u00f6veg <code>&lt;/to&gt;</code> )</li> <li>attrib\u00fatum (Pl: <code>&lt;note id=\"attr\"&gt; &lt;/note&gt;</code> )</li> <li>tov\u00e1bbi elemek, azaz gyerek elemek (Pl: a <code>note</code> tartalmazza a <code>to</code>, <code>from</code>, <code>heading</code>, <code>body</code> tageket)</li> <li>a fentiek kombin\u00e1ci\u00f3ja (egy elemnek lehet egyszerre attrib\u00fatuma, lehet benne sz\u00f6veg, illetve a sz\u00f6veg mellett tov\u00e1bbi elemeket is tartalmazhat)</li> </ul> <p>Az al\u00e1bbi p\u00e9ld\u00e1ban l\u00e1thatunk egy olyan esetet, amikor egy elem kombin\u00e1lva tartalmazza az \u00f6sszes lehet\u0151s\u00e9get:</p> <pre><code>&lt;note id=\"12\"&gt;\nEz itt a sz\u00f6veg r\u00e9sz.\n    &lt;child_element&gt;\n...\n    &lt;/child_element&gt;\n&lt;/note&gt;\n</code></pre> <p>Az XML tagek lehetnek \u00fcresek is, azaz nincs benn\u00fck se sz\u00f6veg, se m\u00e1sik elem:</p> <pre><code>&lt;heading&gt;&lt;/heading&gt;\n</code></pre> <p>Ezt r\u00f6videbben is \u00edrhatjuk, az al\u00e1bbi form\u00e1ban, melyet self-closing tag-nek nevez\u00fcnk:</p> <pre><code>&lt;heading /&gt;\n</code></pre>"},{"location":"01_gyakorlat/#gyerek-elem-vagy-attributum","title":"Gyerek elem vagy attrib\u00fatum","text":"<pre><code>&lt;note&gt;\n&lt;to&gt;Jozsi&lt;/to&gt;\n&lt;/note&gt;\n</code></pre> <p>A fenti XML r\u00e9szlet ekvivalens a k\u00f6vetkez\u0151 k\u00f3ddal:</p> <pre><code>&lt;note to=\"Jozsi\" /&gt;\n</code></pre> <p>L\u00e1that\u00f3, hogy teljesen mindegy, melyik m\u00f3dot v\u00e1lasztjuk, mivel maga az adat \u00edgy vagy \u00fagy, de meg lesz adva. Akkor m\u00e9gis mikor melyiket haszn\u00e1ljuk? Alapgondolat: Az elemre vonatkoz\u00f3 meta-adatokat t\u00e1roljuk attrib\u00fatumokban a t\u00f6bbit pedig gyermek elemk\u00e9nt hozzuk l\u00e9tre. Teh\u00e1t a <code>to</code> legyen ink\u00e1bb gyermek elem. Ha a <code>note</code>-ra vonatkoz\u00f3 meta-adatunk van (Pl: <code>id</code>), akkor azt t\u00e1roljuk attrib\u00fatumk\u00e9nt. Amikor valamilyen \u00f6sszetett adatr\u00f3l van sz\u00f3 (Pl. a <code>to</code> adaton bel\u00fcl t\u00e1rolunk egy <code>name</code>, illetve <code>email</code> adatot), akkor nyilv\u00e1nval\u00f3an gyerek elemet haszn\u00e1ljunk!</p>"},{"location":"01_gyakorlat/#nevterek-namespaces","title":"N\u00e9vterek (namespaces)","text":"<p>Az XML n\u00e9vterek alapvet\u0151 funkci\u00f3ja, hogy a n\u00e9v\u00fctk\u00f6z\u00e9seket elker\u00fclj\u00fck. Ez akkor fordulhat el\u0151, ha k\u00fcl\u00f6nb\u00f6z\u0151 XML-eket (k\u00fcl\u00f6nb\u00f6z\u0151 domain) akarunk egyes\u00edteni. P\u00e9ld\u00e1ul egy HTML table-t haszn\u00e1l\u00f3 r\u00e9szlet:</p> <pre><code>&lt;table&gt;\n&lt;tr&gt;\n&lt;td&gt;Apples&lt;/td&gt;\n&lt;td&gt;Bananas&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n</code></pre> <p>Egy m\u00e1sik dokumentumban viszont a table egy b\u00fatordarabra vonatkozik:</p> <pre><code>&lt;table&gt;\n&lt;name&gt;African Coffee Table&lt;/name&gt;\n&lt;width&gt;80&lt;/width&gt;\n&lt;length&gt;120&lt;/length&gt;\n&lt;/table&gt;\n</code></pre> <p>Ha ezt a k\u00e9t dokumentumot \u00f6sszef\u00e9s\u00fcln\u00e9nk, akkor n\u00e9v\u00fctk\u00f6z\u00e9s l\u00e9pne fel, mivel mindkett\u0151 dokumentumban van table, azonban teljesen m\u00e1s a jelent\u00e9s\u00fck (r\u00e1ad\u00e1sul m\u00e1s elemeket is tartalmaznak).</p> <pre><code>&lt;h:table&gt;\n&lt;h:tr&gt;\n&lt;h:td&gt;Apples&lt;/h:td&gt;\n&lt;h:td&gt;Bananas&lt;/h:td&gt;\n&lt;/h:tr&gt;\n&lt;/h:table&gt;\n\n&lt;f:table&gt;\n&lt;f:name&gt;African Coffee Table&lt;/f:name&gt;\n&lt;f:width&gt;80&lt;/f:width&gt;\n&lt;f:length&gt;120&lt;/f:length&gt;\n&lt;/f:table&gt;\n</code></pre> <p>A fenti p\u00e9lda m\u00e9g nem teljes, mivel n\u00e9vtereket m\u00e1r haszn\u00e1lunk benne, de m\u00e9g nem defini\u00e1ltuk a \"h\" \u00e9s \"f\" n\u00e9vtereket. A n\u00e9vtereket b\u00e1rmelyik elem <code>xmlns</code> attrib\u00fatum\u00e1ban defini\u00e1lhatjuk. A n\u00e9vterek defini\u00e1l\u00e1s\u00e1nak szintaxisa:</p> <pre><code>xmlns:prefix=\"URI\"\n</code></pre> <p>A fenti p\u00e9lda helyesen a n\u00e9vt\u00e9r defin\u00edci\u00f3kkal kieg\u00e9sz\u00edtve \u00edgy n\u00e9z ki:</p> <pre><code>&lt;root&gt;\n&lt;h:table xmlns:h=\"http://www.w3.org/TR/html4/\"&gt;\n&lt;h:tr&gt;\n&lt;h:td&gt;Apples&lt;/h:td&gt;\n&lt;h:td&gt;Bananas&lt;/h:td&gt;\n&lt;/h:tr&gt;\n&lt;/h:table&gt;\n\n&lt;f:table xmlns:f=\"http://www.w3schools.com/furniture\"&gt;\n&lt;f:name&gt;African Coffee Table&lt;/f:name&gt;\n&lt;f:width&gt;80&lt;/f:width&gt;\n&lt;f:length&gt;120&lt;/f:length&gt;\n&lt;/f:table&gt;\n&lt;/root&gt;\n</code></pre> <p>A n\u00e9vt\u00e9r defin\u00edci\u00f3j\u00e1t az \u00f6sszes gyermek elem \u00f6r\u00f6k\u00f6li, azaz minden gyerekn\u00e9l haszn\u00e1lhatjuk a defini\u00e1lt namespace prefix-et. A n\u00e9vtereket a root elemn\u00e9l is defini\u00e1lhatjuk, majd a gyerekelemek k\u00f6z\u00f6tt b\u00e1rhol haszn\u00e1lhatjuk:</p> <pre><code>&lt;root\nxmlns:h=\"http://www.w3.org/TR/html4/\"\nxmlns:f=\"http://www.w3schools.com/furniture\"&gt;\n</code></pre> <p>A n\u00e9vterekn\u00e9l a az URI-nak nem kell l\u00e9tez\u0151nek lennie, csak az egyedis\u00e9get hivatott biztos\u00edtani. A v\u00e1llalatok azonban arra szokt\u00e1k haszn\u00e1lni, hogy a n\u00e9vteret le\u00edr\u00f3 oldalra mutassanak. Megadhatunk alap\u00e9rtelmezett n\u00e9vteret (default namespace) is, melynek form\u00e1ja:</p> <pre><code>xmlns=\"URI\"\n</code></pre> <p>Ilyenkor az \u00f6sszes gyerek elem ugyanabba a namespace-be fog tartozni. Vegy\u00fck \u00e9szre, hogy ebben az esetben a prefix megad\u00e1s\u00e1t elhagyjuk! A fenti p\u00e9lda default n\u00e9vterekkel:</p> <pre><code>&lt;root&gt;\n&lt;table xmlns=\"http://www.w3.org/TR/html4/\"&gt;\n&lt;tr&gt;\n&lt;td&gt;Apples&lt;/td&gt;\n&lt;td&gt;Bananas&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n\n&lt;table xmlns=\"http://www.w3schools.com/furniture\"&gt;\n&lt;name&gt;African Coffee Table&lt;/name&gt;\n&lt;width&gt;80&lt;/width&gt;\n&lt;length&gt;120&lt;/length&gt;\n&lt;/table&gt;\n&lt;/root&gt;\n</code></pre> <p>Mivel prefixet sem haszn\u00e1lunk a n\u00e9vt\u00e9r megad\u00e1s\u00e1n\u00e1l, \u00edgy a gyerek elemekben sem kell hogy megadjuk azokat, mivel automatikusan a f\u00e1ban f\u00f6lfel\u00e9 elindulva a legels\u0151 megtal\u00e1lt n\u00e9vt\u00e9rbe fognak tartozni.</p> <p>Feladat (01_users)</p> <p>K\u00e9sz\u00edts\u00fcnk egy XML dokumentumot manu\u00e1lisan! A dokumentumban fel\u00e9p\u00edt\u00e9se legyen a k\u00f6vetkez\u0151:</p> <ul> <li>A gy\u0151k\u00e9relem legyen a <code>users</code></li> <li> <p>A <code>users</code> elemen bel\u00fcl legyen 3 <code>user</code> elem, ahol minden <code>user</code> a k\u00f6vetkez\u0151 tulajdons\u00e1gokkal rendelkezik:</p> <ul> <li><code>id</code></li> <li><code>name</code></li> <li><code>email</code></li> <li><code>age</code></li> </ul> </li> </ul> <p>Az \u00f6sszes <code>user</code> teetsz\u0151leges adatot tartalmazhat.</p> Megold\u00e1s <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;users&gt;\n&lt;user id=\"1\"&gt;\n&lt;name&gt;Gipsz Jakab&lt;/name&gt;\n&lt;email&gt;gipsz@jakab.hu&lt;/email&gt;\n&lt;age&gt;21&lt;/age&gt;\n&lt;/user&gt;\n&lt;user id=\"2\"&gt;\n&lt;name&gt;Kandisz N\u00f3ra&lt;/name&gt;\n&lt;email&gt;kandisz@nora.hu&lt;/email&gt;\n&lt;age&gt;54&lt;/age&gt;\n&lt;/user&gt;\n&lt;user id=\"3\"&gt;\n&lt;name&gt;Beviz Elek&lt;/name&gt;\n&lt;email&gt;beviz@elek.com&lt;/email&gt;\n&lt;age&gt;14&lt;/age&gt;\n&lt;/user&gt;\n&lt;/users&gt;\n</code></pre> <p>Az XML alapjait a k\u00f6vetkez\u0151 vide\u00f3 foglalja \u00f6ssze:</p> <p></p>"},{"location":"01_gyakorlat/#build-rendszerek","title":"Build rendszerek","text":"<p>\u00c1ltal\u00e1noss\u00e1g\u00e1ban a build rendszerek seg\u00edtenek, hogy a fejleszt\u00e9si folyamat sokkal k\u00f6nnyebben \u00e9s g\u00f6rd\u00fcl\u00e9kenyebben mehessen v\u00e9gbe. De mit is nevez\u00fcnk pontosan build folyamatnak? \u00c1ltal\u00e1noss\u00e1g\u00e1ban v\u00e9ve mondhatjuk azt, hogy a build folyamat sor\u00e1n a forr\u00e1sk\u00f3db\u00f3l valamilyen futtathat\u00f3 term\u00e9ket kapunk. A ford\u00edt\u00e1s mellett t\u00e1mogat\u00e1st ad f\u00fcgg\u0151s\u00e9gek (3rd-party libek) kezel\u00e9s\u00e9re, egy\u00e9b jar-ok classpath-ba rak\u00e1s\u00e1ra, tesztek futtat\u00e1s\u00e1ra, a leford\u00edtott k\u00f3dot csomagba rakhatjuk (JAR, WAR, vagy ZIP). Az elk\u00e9sz\u00fclt csomagokat azt\u00e1n publik\u00e1lni is lehet egy alkalmaz\u00e1sszerverre vagy egy repository-ba. Ebben is seg\u00edtenek a build rendszerek, mint amilyen a Maven is, mely k\u00e9pes ezeket a l\u00e9p\u00e9seket automatiz\u00e1lni, \u00edgy a k\u00e9zi buildel\u00e9s sor\u00e1n esetlegesen bek\u00f6vetkez\u0151 hib\u00e1k sz\u00e1m\u00e1t is lecs\u00f6kkenthetj\u00fck.</p>"},{"location":"01_gyakorlat/#maven","title":"Maven","text":"<p>A Maven egy build keretrendszer a sok k\u00f6z\u00fcl, mely Java nyelv\u0171 alkalmaz\u00e1sok build-el\u00e9s\u00e9hez ad seg\u00edts\u00e9get. Azon fel\u00fcl, hogy a buildel\u00e9s automatiz\u00e1lhat\u00f3 a seg\u00edts\u00e9g\u00e9vel, bizonyos mint\u00e1kat (best practices) is el\u0151nyben r\u00e9szes\u00edt, mely alapj\u00e1n seg\u00edti a projekt fel\u00e9p\u00edt\u00e9s\u00e9nek k\u00f6nnyebb \u00e9rthet\u0151s\u00e9g\u00e9t, \u00edgy a produktivit\u00e1st is n\u00f6velve. Egy ilyen best practice p\u00e9ld\u00e1ul a forr\u00e1sk\u00f3dok helye, ami alapb\u00f3l a projekt gy\u00f6k\u00e9rk\u00f6nyvt\u00e1ra alatt az <code>src</code> mapp\u00e1ban tal\u00e1lhat\u00f3. Amennyiben ezt a best practice-t k\u00f6vetj\u00fck, akkor a build le\u00edr\u00f3ban, mely a <code>pom.xml</code> lesz, nem is kell megadnunk azt, hogy hol tal\u00e1lhat\u00f3ak a forr\u00e1sk\u00f3d f\u00e1jljaink.</p> <p>A Maven a k\u00f6vetkez\u0151 feladatok elv\u00e9gz\u00e9s\u00e9ben seg\u00e9dkezik, azaz automatiz\u00e1lja azokat:</p> <ul> <li>Build (k\u00f3dgener\u00e1l\u00e1s, ford\u00edt\u00e1s, package-el\u00e9s)</li> <li>Dokument\u00e1ci\u00f3 gener\u00e1l\u00e1sa (pl.: Javadoc)</li> <li>Reporting</li> <li>F\u00fcgg\u0151s\u00e9gek kezel\u00e9se</li> <li>SCM (Source Code Management)</li> <li>Release</li> <li>Distribution</li> </ul> <p>Az automatiz\u00e1l\u00e1s el\u0151nye, hogy kisebb a hibalehet\u0151s\u00e9g (nincs emberi t\u00e9nyez\u0151), illetve gyorsabb is maga a folyamat.</p>"},{"location":"01_gyakorlat/#maven-fo-kepessegei","title":"Maven f\u0151 k\u00e9pess\u00e9gei:","text":"<ul> <li>egyszer\u0171 projekt l\u00e9trehoz\u00e1s, mely k\u00f6veti a best practice-t. A maven projekt template-eket k\u00edn\u00e1l, amiket archetype-nak nevez.</li> <li>f\u00fcgg\u0151s\u00e9gkezel\u00e9s: automatikusan friss\u00edti, let\u00f6lti \u00e9s valid\u00e1lja a f\u00fcgg\u0151s\u00e9geket (library-k).</li> <li>k\u00f6zponti repository: a projekt\u00fcnk f\u00fcgg\u0151s\u00e9geit a lok\u00e1lis g\u00e9pr\u0151l vagy publikus repository-kb\u00f3l szerzi be a Maven (pl: Maven Central Repository)</li> </ul>"},{"location":"01_gyakorlat/#maven-telepitese","title":"Maven telep\u00edt\u00e9se","text":"<p>Parancssori Maven-hez:</p> <ul> <li>Legyen JDK a g\u00e9pre telep\u00edtve</li> <li>JAVA_HOME k\u00f6rnyezeti v\u00e1ltoz\u00f3t \u00e1ll\u00edtsd be</li> <li>PATH k\u00f6rnyezeti v\u00e1ltoz\u00f3hoz add hozz\u00e1 a $JAVA_HOME/bin bejegyz\u00e9st (Win alatt %JAVA_HOME%\\bin)</li> <li>T\u00f6ltsd le a Maven-t (https://maven.apache.org/download.cgi)</li> <li>Csomagold ki valahova a t\u00f6m\u00f6r\u00edtett \u00e1llom\u00e1nyokat</li> <li>ahova kicsomagoltad a maven-t add hozz\u00e1 a PATH-hoz (bin k\u00f6nyvt\u00e1rral egy\u00fctt)</li> <li>nyiss egy termin\u00e1lt \u00e9s futtasd az 'mvn --version' parancsot</li> </ul> <p>Eclipse \u00e9s IntelliJ is ad bundled Maven-t, azaz az IDE-ben be\u00e9p\u00edtve, a parancssori telep\u00edt\u00e9se n\u00e9lk\u00fcl is lesz m\u00e1r ilyen\u00fcnk.</p>"},{"location":"01_gyakorlat/#pom-project-object-model","title":"POM - Project Object Model","text":"<p>Minden Maven projektben megtal\u00e1lhat\u00f3 egy <code>pom.xml</code> \u00e1llom\u00e1ny, mely a projekt gy\u00f6k\u00e9rk\u00f6nyvt\u00e1r\u00e1ban foglal helyet. Ebben az \u00e1llom\u00e1nyban vannak a config-ok, a projekt alapinform\u00e1ci\u00f3i.</p> <p>Amiket itt megadhatunk:</p> <ul> <li>f\u00fcgg\u0151s\u00e9gek</li> <li>pluginok</li> <li>goal-ok</li> <li>build profilok</li> <li>projekt verzi\u00f3</li> </ul> <p>Mivel minden projektet egy group (<code>groupId</code>) \u00e9s egy name (<code>artifactId</code>) azonos\u00edt a maven repository-ban (n\u00e9zz\u00fcnk sz\u00e9t a Maven k\u00f6zponti repoban: https://search.maven.org/ \u00e9s keress\u00fcnk r\u00e1 p\u00e9ld\u00e1ul a JUnit-ra!), ez\u00e9rt a mi projekt\u00fcnknek is kell ilyenekkel rendelkeznie (persze emiatt m\u00e9g nem lesz publik\u00e1lva a projekt\u00fcnk a k\u00f6zponti repository-ba).</p> <p>Feladat (02_FirstMaven)</p> <p>K\u00e9sz\u00edts\u00fcnk egy \u00faj Maven projektet \u00e9s n\u00e9zz\u00fck meg annak eredm\u00e9ny\u00e9t, azaz a legener\u00e1lt projektet!</p> <p>L\u00e9p\u00e9sek (IntelliJ):</p> <ul> <li>File-&gt;New-&gt;Project...</li> <li>Bal oldalon v\u00e1lasszuk ki a <code>Maven</code>-t! V\u00e1lasszuk ki a szimpatikus JDK verzi\u00f3t!</li> <li>Most m\u00e9g ne pip\u00e1ljuk be a <code>Create from archetype</code> opci\u00f3t!</li> <li>A k\u00f6vetkez\u0151 l\u00e9p\u00e9sben adjuk meg a projekt nev\u00e9t \u00e9s hely\u00e9t!</li> <li>Az <code>Artifact Coordinates</code> alatt megadhatjuk a <code>groupId</code>-t, <code>artifactId</code>-t \u00e9s a <code>version</code>-t is.</li> <li>Az utols\u00f3 oldalon a haszn\u00e1lni k\u00edv\u00e1nt maven-t v\u00e1laszthatjuk ki, illetve megadhatjuk a user setting f\u00e1jlt \u00e9s a lok\u00e1l repo hely\u00e9t. Ezeket most hagyjuk alap\u00e9rtelmezetten.</li> <li>Finish</li> </ul> <p>N\u00e9zz\u00fcnk meg az eredm\u00e9nyt!</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n&lt;groupId&gt;hu.alkfejl&lt;/groupId&gt;\n&lt;artifactId&gt;FirstMaven&lt;/artifactId&gt;\n&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n\n&lt;/project&gt;\n</code></pre> <ul> <li>Minden <code>pom.xml</code> f\u00e1jlban a dokumentum gy\u00f6kere a <code>project</code> elem. Itt k\u00fcl\u00f6nb\u00f6z\u0151 namespace defin\u00edci\u00f3k vannak megadva attrib\u00fatumk\u00e9nt, illetve a maven XSD (XML Schema Definition) f\u00e1jlra is tal\u00e1lhatunk hivatkoz\u00e1st (az XSD adja meg, hogy egy POM s\u00e9m\u00e1nak megfelel\u0151 XML dokumentumban milyen elemek, milyen attrib\u00fatumok, stb. szerepelhetnek).</li> <li>A model version a pom.xml-re vonatkozik. Ezt mindig 4.0.0-ra \u00e1ll\u00edtsuk, mivel jelenleg ez az egyetlen haszn\u00e1latos verzi\u00f3!</li> <li><code>groupId, artifactId, version</code> olyan k\u00f6telez\u0151 elemek, melyek egy\u00e9rtelm\u0171en azonos\u00edtanak egy-egy projektet a maven repository-ban.</li> <li>A <code>groupId</code> a v\u00e1llalat vagy szervezetre vonatkoz\u00f3 egyedi azonos\u00edt\u00f3. Pl: <code>com.company</code></li> <li>Az <code>artifactId</code> a projektre vonatkoz\u00f3 azonos\u00edt\u00f3. A <code>groupId</code>-val egy\u00fctt egy\u00e9rtelm\u0171en meghat\u00e1rozza a projektet a repository-ban.</li> <li>A <code>version</code> a projekt verzi\u00f3j\u00e1t adja meg. A repository-ban egy projekthez k\u00fcl\u00f6nb\u00f6z\u0151 verzi\u00f3k is adottak lehetnek, \u00edgy ezt is egy\u00e9rtelm\u0171s\u00edteni kell.</li> </ul>"},{"location":"01_gyakorlat/#pom-fajl-tipusok","title":"POM f\u00e1jl t\u00edpusok","text":"<p>Alapvet\u0151en 3 t\u00edpusa l\u00e9tezik:</p> <ul> <li>Egyszer\u0171 (Simple) POM f\u00e1jl: L\u00e9nyeg\u00e9ben az a f\u00e1jl, amit fentebb kaptunk. Csak azok az inform\u00e1ci\u00f3k vannak benne, ami az adott projektre vonatkozik.</li> <li>Super POM f\u00e1jl: Minden egyszer\u0171 POM f\u00e1jlnak van \u0151se, amit super POM-nak nevez\u00fcnk. Ezekben a Super POM-okban alap\u00e9rtelmezett be\u00e1ll\u00edt\u00e1sokat tal\u00e1lunk, melyeket meg\u00f6r\u00f6k\u00f6lnek az egyszer\u0171 POM f\u00e1jlok. A Super POM-ok a Maven telep\u00edt\u00e9si k\u00f6nyvt\u00e1r\u00e1ban tal\u00e1lhat\u00f3ak meg: <code>M2_HOME/lib</code> alatt. A Super POM-okat soha ne m\u00f3dos\u00edtsuk, mert ezzel pont az alap\u00e9rtelmezett konfigur\u00e1ci\u00f3k el\u0151ny\u00e9t csorb\u00edtjuk!</li> <li>Effective POM f\u00e1jl: A super \u00e9s a simple POM-ok kombin\u00e1ci\u00f3ja, azaz a t\u00e9nyleges (effective) POM f\u00e1jl, melyet az adott projekten alkalmazunk.</li> </ul> <p>\u00d6sszefoglal\u00e1sk\u00e9ppen, az \u00e1ltalunk \u00edrt <code>pom.xml</code> egy super POM-b\u00f3l sz\u00e1rmazik, amely egy csom\u00f3 alap dolgot megad (hogyan kell ford\u00edtani a projektet, hogyan kell futtatni a teszteket, stb.), pontosan az\u00e9rt, hogy nek\u00fcnk m\u00e1r csak az elt\u00e9r\u00e9seket kelljen megadni, \u00edgy kevesebb konfigur\u00e1ci\u00f3val m\u00e1ris egy t\u00e9nylegesen m\u0171k\u00f6d\u0151 build le\u00edr\u00f3 f\u00e1jlunk lesz. A saj\u00e1t pom.xml f\u00e1jlunk kieg\u00e9sz\u00edt\u00e9s\u00e9t a super POM-al egy\u00fctt (azaz az effective POM-ot) megn\u00e9zhetj\u00fck, ha kiadjuk a k\u00f6vetkez\u0151 parancsot:</p> <pre><code>mvn help:effective-pom\n</code></pre> <p>Ezt meg tudjuk csin\u00e1lni az IntelliJ-n bel\u00fcl is. Ehhez a Maven n\u00e9zetre is sz\u00fcks\u00e9g\u00fcnk lesz. Ha nincs megnyitva: Ctrl + Shift + A -&gt; <code>Maven</code>.</p> <p></p> <p>Itt a kis 'm'-re kattintva be\u00edrhatjuk oda a fenti parancsot. Ha futtatjuk, akkor az eredm\u00e9nyt az IntelliJ-n bel\u00fcl l\u00e1thatjuk.</p> <p>IntelliJ-n bel\u00fcl egy m\u00e1sik m\u00f3d erre, ha a <code>pom.xml</code> \u00e1llom\u00e1nyra jobb klikkel\u00fcnk \u00e9s a <code>Maven -&gt; Show Effective POM</code> opci\u00f3t kiv\u00e1lasztjuk.</p>"},{"location":"01_gyakorlat/#fuggosegek","title":"F\u00fcgg\u0151s\u00e9gek","text":"<p>Azokat a k\u00fcls\u0151 lib-eket vagy keretrendszereket, amiket a projekt\u00fcnk haszn\u00e1l f\u00fcgg\u0151s\u00e9geknek nevezz\u00fck. A Maven k\u00e9pes automatikusan let\u00f6lteni a forr\u00e1sk\u00f3dot \u00e9s a dokument\u00e1ci\u00f3t is hozz\u00e1. Nem kell let\u00f6lten\u00fcnk a megfelel\u0151 verzi\u00f3j\u00fa JAR-t valahonnan a netr\u0151l, majd hozz\u00e1adni a projekt\u00fcnk lib-jeihez, classpath-ba rakni stb.</p> <p>Eg\u00e9sz\u00edts\u00fck ki a pom.xml-t a k\u00f6vetkez\u0151kkel (project elem gyereke)!</p> <p><pre><code>&lt;dependencies&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;log4j&lt;/groupId&gt;\n&lt;artifactId&gt;log4j&lt;/artifactId&gt;\n&lt;version&gt;1.2.17&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre> A dependency-kn\u00e9l is <code>groupId</code>, <code>artifactId</code> \u00e9s <code>version</code> alapj\u00e1n megy az azonos\u00edt\u00e1s. Ez alapj\u00e1n tudja a rendszer, hogy mit kell let\u00f6lteni.</p> <p>Feladat</p> <p>K\u00e9sz\u00edts\u00fcnk egy <code>Main</code> \u00e1llom\u00e1nyt a projektben \u00e9s haszn\u00e1ljuk a <code>log4j</code>-t benne!</p> Megold\u00e1s <pre><code>import org.apache.log4j.Level;\nimport org.apache.log4j.Logger;\n\npublic class Main {\n\nprivate static final Logger logger = Logger.getLogger(Main.class);\n\npublic static void main(String[] args) {\nlogger.info(\"Starting main\");\n\nif(logger.isDebugEnabled()){\nlogger.debug(\"This is debug\");\n}\n\nlogger.info(\"Ending main\");\n}\n\n\n}\n</code></pre> <p>Tipp</p> <p>Ha azt kapjuk, hogy <code>release version x not supported</code>, akkor a k\u00f6vetkez\u0151ket kell tenn\u00fcnk (ez a maven miatt van sajnos, aki 1.5-re \u00e1ll\u00edtja a ford\u00edt\u00f3t). A <code>pom.xml</code>-ben adjuk hozz\u00e1 az Apache Maven Compiler Plugin-t (kicsit k\u00e9s\u0151bb m\u00e9g besz\u00e9l\u00fcnk a plugin-ekr\u0151l).</p> <pre><code>&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n&lt;version&gt;3.8.1&lt;/version&gt;\n&lt;configuration&gt;\n&lt;source&gt;11&lt;/source&gt;\n&lt;target&gt;11&lt;/target&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n</code></pre> <p>Figyelem</p> <p>Arra figyelj\u00fcnk, hogy amennyiben a Maven automatikus import-ot nem enged\u00e9lyezt\u00fck a projektben, akkor nyomjuk meg a refresh gombot a Maven f\u00fcl\u00f6n, mivel ilyen esetben nem t\u00f6lti le automatikusan a f\u00fcgg\u0151s\u00e9geket a rendszer!</p> <p>Tranzit\u00edv f\u00fcgg\u0151s\u00e9gek: Amikor egy f\u00fcgg\u0151s\u00e9g\u00fcnknek tov\u00e1bbi f\u00fcgg\u0151s\u00e9gei vannak, akkor tranzit\u00edv f\u00fcgg\u0151s\u00e9gr\u0151l besz\u00e9l\u00fcnk.</p> <p>P\u00e9ld\u00e1ul a <code>junit-jupiter-engine</code> f\u00fcgg\u0151s\u00e9gnek van egy tov\u00e1bbi f\u00fcgg\u0151s\u00e9ge (m\u00e1sok mellett) a <code>junit-jupiter-api</code>-ra, \u00edgy ez ut\u00f3bbit\u00f3l a mi alkalmaz\u00e1sunk tranzit\u00edvan f\u00fcgg.</p> <p>Feladat</p> <p>Pr\u00f3b\u00e1ljuk ki, hogy f\u00fcgg\u0151s\u00e9gk\u00e9nt megadjuk az al\u00e1bbit:</p> <p><pre><code>&lt;dependency&gt;\n&lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;\n&lt;artifactId&gt;junit-jupiter-engine&lt;/artifactId&gt;\n&lt;version&gt;5.7.0&lt;/version&gt;\n&lt;scope&gt;test&lt;/scope&gt;\n&lt;/dependency&gt;\n</code></pre> , majd IntelliJ-n bel\u00fcl a Maven f\u00fcl\u00f6n a <code>Dependencies</code> alatt megvizsg\u00e1ljuk a f\u00fcgg\u0151s\u00e9geket!</p> <p>Megjegyz\u00e9s</p> <p>A tranzit\u00edv f\u00fcgg\u0151s\u00e9gek miatt el\u0151fordulhat, hogy egy f\u00fcgg\u0151s\u00e9g t\u00f6bbsz\u00f6r ker\u00fcl megad\u00e1sra (direkt \u00e9s tranzit\u00edv m\u00f3don is ak\u00e1r). Ilyenkor a nem k\u00edv\u00e1natos tranzit\u00edv f\u00fcgg\u0151s\u00e9get kiz\u00e1rhatjuk a k\u00f6vetkez\u0151k\u00e9ppen (ha p\u00e9ld\u00e1ul JUnit 4-r\u0151l van sz\u00f3):</p> <pre><code>...\n&lt;dependency&gt;\n...\n    &lt;exclusions&gt;\n&lt;exclusion&gt;\n&lt;groupId&gt;junit&lt;/groupId&gt;\n&lt;artifactId&gt;junit&lt;/artifactId&gt;\n&lt;/exclusion&gt;\n&lt;/exclusions&gt;\n&lt;/dependency&gt;\n</code></pre> <p>A f\u00fcgg\u0151s\u00e9geknek lehetnek scope-jai, melyek a k\u00f6vetkez\u0151k lehetnek:</p> <ul> <li>compile: Alap\u00e9rtelmezett scope (ha nem \u00edrjuk ki akkor is ez lesz). Az ilyen m\u00f3don megadott f\u00fcgg\u0151s\u00e9gek beleker\u00fclnek a classpath-ba.</li> <li>provided: Hasonl\u00f3 a compile-hoz, de itt a f\u00fcgg\u0151s\u00e9get fut\u00e1sk\u00f6zben kapja meg a rendszer. A f\u00fcgg\u0151s\u00e9g el\u00e9rhet\u0151 lesz ford\u00edt\u00e1si id\u0151ben is, de az a v\u00e9gs\u0151 artifact-ba nem ker\u00fcl bele. P\u00e9lda: <code>javax.servlet-api</code></li> <li>runtime: A f\u00fcgg\u0151s\u00e9g csak fut\u00e1s k\u00f6zben lesz el\u00e9rhet\u0151, ford\u00edt\u00e1sn\u00e1l nem. P\u00e9ld\u00e1ul, ha MySQL-t haszn\u00e1lunk az alkalmaz\u00e1sunkban, akkor a MySQL driver f\u00fcgg\u0151s\u00e9g\u00e9t runtime-ra \u00e1ll\u00edtva biztosak lehet\u00fcnk abban, hogy a JDBC API-t haszn\u00e1ljuk \u00e9s a konkr\u00e9t driver-t csak fut\u00e1s k\u00f6zben haszn\u00e1lja a rendszer.</li> <li>test: Ezek a f\u00fcgg\u0151s\u00e9gek csak a tesztek futtat\u00e1sa k\u00f6zben lesznek el\u00e9rhet\u0151ek. Tipikus p\u00e9lda: TestNG, JUnit</li> </ul>"},{"location":"01_gyakorlat/#repository-k","title":"Repository-k","text":"<p>A Maven repository-kb\u00f3l t\u00f6lti le a f\u00fcgg\u0151s\u00e9geket (libek \u00e9s plugin-ok), illetve itt t\u00e1rolja a build eredm\u00e9nyeket is (ak\u00e1r mi is publik\u00e1lhatjuk saj\u00e1t projekt\u00fcnket). Van egy lok\u00e1lis repository, mely a home k\u00f6nyvt\u00e1r <code>.m2/</code> k\u00f6nyvt\u00e1r\u00e1ban tal\u00e1lhat\u00f3 meg. Amennyiben egy lib vagy plugin a lok\u00e1lis repoban el\u00e9rhet\u0151, akkor a Maven azt haszn\u00e1lja, m\u00e1sk\u00fcl\u00f6nben let\u00f6lti a k\u00f6zponti rep\u00f3b\u00f3l \u00e9s elt\u00e1rolja a lok\u00e1lisban is, \u00edgy legk\u00f6zelebb m\u00e1r nem kell a t\u00e1voli repository-hoz fordulnia. Vannak olyan lib-ek, amik nem a Maven k\u00f6zponti repoban vannak, hanem valamelyik m\u00e1sik repoban (pl: JBoss alkalmaz\u00e1sszerver). Az ilyen esetekben tov\u00e1bbi repokat adhatunk meg a pom.xml-ben.</p> <p>P\u00e9lda:</p> <pre><code>&lt;repositories&gt;\n&lt;repository&gt;\n&lt;id&gt;JBoss repository&lt;/id&gt;\n&lt;url&gt;http://repository.jboss.org/nexus/content/groups/public/&lt;/url&gt;\n&lt;/repository&gt;\n&lt;/repositories&gt;\n</code></pre>"},{"location":"01_gyakorlat/#build-eletciklusok","title":"Build \u00e9letciklusok","text":"<p>Az alap koncepci\u00f3k ut\u00e1n n\u00e9zz\u00fck, hogy a Maven milyen m\u00f3don build-eli a Java projekt\u00fcnket!</p> <p>Minden maven build egy \u00e9letciklust k\u00f6vet, melyek f\u00e1zisokb\u00f3l \u00e1llnak, \u00e9s a f\u00e1zisokhoz goal-ok rendelhet\u0151ek. Pl egy \u00e9letciklusra: ford\u00edts, csomagold az \u00e1llom\u00e1nyokat jar-ba \u00e9s rakd ki a maven repoba.</p> <p>Alapb\u00f3l a k\u00f6vetkez\u0151 \u00e9letciklusok \u00e1llnak rendelkez\u00e9sre:</p> <ul> <li>default</li> <li>clean</li> <li>site</li> </ul> <p>Ezek az \u00e9letciklusok egym\u00e1st\u00f3l f\u00fcggetlenek, \u00e9s ak\u00e1r egyszerre is v\u00e9grehajthat\u00f3ak. A default \u00e9letciklus a k\u00f6vetkez\u0151 f\u00e1zisokra oszthat\u00f3:</p> <ul> <li>validate \u2013 a projekt pom.xml \u00e1llom\u00e1ny\u00e1nak helyess\u00e9g\u00e9t ellen\u0151rzi</li> <li>compile \u2013 ford\u00edt\u00e1s bin\u00e1riss\u00e1</li> <li>test \u2013 unit tesztek futtat\u00e1sa</li> <li>package \u2013 a leford\u00edtott k\u00f3dot csomagba pakoljuk (ZIP, WAR, JAR, EAR)</li> <li>integration-test \u2013 tov\u00e1bbi tesztek futtat\u00e1sa, melyhez kell m\u00e1r a csomag is</li> <li>verify \u2013 a csomag helyess\u00e9g\u00e9nek ellen\u0151rz\u00e9se</li> <li>install \u2013 a lok\u00e1lis maven repoba rakja bele a csomagot</li> <li>deploy \u2013 t\u00e1voli szer\u00f3ra vagy k\u00f6zponti repoba rakja ki a csomagot</li> </ul> <p>A fenti build folyamat eredm\u00e9nyek\u00e9ppen el\u0151\u00e1ll\u00f3 f\u00e1jlokat a clean lifecycle-el t\u00f6r\u00f6lhetj\u00fck (<code>.class</code> \u00e9s metaadatokat tartalmaz\u00f3 f\u00e1jlok, l\u00e9nyeg\u00e9ben a <code>target</code> mappa tartalma). Ezek mellett a site lifecycle seg\u00edts\u00e9g\u00e9vel a Javadoc-ot gener\u00e1ltathatjuk le a rendszerrel.</p> <p>A fent eml\u00edtett f\u00e1zisokhoz mindig tartozik egy pre \u00e9s egy post r\u00e9sz is, amikhez defini\u00e1lhatjuk tov\u00e1bbi goal-okat, melyek rendre a f\u00e1zis el\u0151tt vagy ut\u00e1n futnak le (a pre \u00e9s a post k\u00f6z\u00f6tt van a sima f\u00e1zis is. Pl: pre-compile, compile, post-compile).</p> <p>Na de mi is akkor egy goal? A goal egy j\u00f3l meghat\u00e1rozott feladat, mely hozz\u00e1j\u00e1rul a projekt buildel\u00e9s\u00e9hez. Egy goal f\u00e1zisokhoz tartozhat (0 vagy t\u00f6bb is lehet). Az a goal ami nem tartozik egy f\u00e1zishoz sem, az csak \u00e9letcikluson k\u00edv\u00fcl, direkt h\u00edvhat\u00f3.</p> <p>Vegy\u00fcnk egy p\u00e9ld\u00e1t!</p> <pre><code>mvn clean dependency:copy-dependencies package\n</code></pre> <p>Ebben a parancsban a <code>clean</code> egy \u00e9letciklus, a <code>package</code> a default \u00e9letciklus egy build f\u00e1zisa, a <code>dependency:copy-dependencies</code> viszont egy goal. A parancsban megadott sorrendben fognak lefutni a build f\u00e1zisok \u00e9s goal-ok.</p> <p>\u00d6sszess\u00e9g\u00e9ben gondolhatunk egy f\u00e1zisra \u00fagy, mint goal-ok halmaz\u00e1ra. Illetve egy \u00e9letciklusra, \u00fagy mint f\u00e1zisok egym\u00e1sut\u00e1nis\u00e1g\u00e1ra.</p> <p>Feladat</p> <p>N\u00e9zz\u00fck meg az IntelliJ-ben is a lehet\u0151s\u00e9geket!</p>"},{"location":"01_gyakorlat/#plugin-ok-es-goal-ok","title":"Plugin-ok \u00e9s Goal-ok","text":"<p>Egy plugin nem m\u00e1s mint goal-ok halmaza, melyek mindegyike valamilyen f\u00e1zisban ker\u00fcl v\u00e9grehajt\u00e1sra (ez a sorrendis\u00e9g miatt fontos).</p> <p>Van egy rak\u00e1s be\u00e9p\u00edtett plugin amit haszn\u00e1lhatunk. Ezeket megn\u00e9zhetj\u00fck itt.</p> <p>A Maven rendelkezik egy alap\u00e9rtelmezett megad\u00e1ssal is, hogy melyik f\u00e1zishoz milyen goal-ok vannak alapb\u00f3l bek\u00f6tve. L\u00e1sd itt.</p> <p>Hogy egy f\u00e1zishoz tartoz\u00f3 goal-okat lefuttassunk a k\u00f6vetkez\u0151t kell kiadnunk a parancssorban:</p> <pre><code>mvn &lt;phase&gt;\n</code></pre> <p>P\u00e9ld\u00e1ul az <code>mvn clean install</code> parancs kiad\u00e1s\u00e1ra elt\u00e1vol\u00edtjuk az el\u0151z\u0151leg konstru\u00e1lt csomagot \u00e9s a leford\u00edtott \u00e1llom\u00e1nyokat (clean f\u00e1zis), majd lefuttattjuk az \u00f6sszes f\u00e1zist, ami sz\u00fcks\u00e9ges az install-hoz.</p> <p>A plugin jobb meg\u00e9rt\u00e9s\u00e9hez vizsg\u00e1ljuk meg a Maven Compiler Plugin-t, mely a forr\u00e1sk\u00f3dok leford\u00edt\u00e1s\u00e1\u00e9rt felel\u0151s (.class f\u00e1jlok el\u0151\u00e1ll\u00edt\u00e1sa), azaz ekvivalens egy <code>javac</code> futtat\u00e1ssal. A compiler plugin haszn\u00e1lat\u00e1hoz a k\u00f6vetkez\u0151t kell megadnunk a <code>pom.xml</code>-ben:</p> <pre><code>&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n&lt;version&gt;3.8.1&lt;/version&gt;\n&lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n</code></pre> <p>A compiler plugin enged\u00e9lyezi a <code>compile</code> f\u00e1zis haszn\u00e1lat\u00e1t a default lifecycle-ben. Ezut\u00e1n adjuk ki a k\u00f6vetkez\u0151 parancsot, hogy leford\u00edtsuk a projekt forr\u00e1s\u00e1llom\u00e1nyait!</p> <pre><code>mvn compiler:compile\n</code></pre> <p>Hat\u00e1s\u00e1ra a leford\u00edtott \u00e1llom\u00e1nyok a <code>target</code> mappa alatt j\u00f6nnek l\u00e9tre.</p> <p>IntelliJ-ben szimpl\u00e1n dupla kattoljunk a Maven f\u00fcl alatt a compile lifecycle elemre \u00e9s hasonl\u00f3 hat\u00e1st \u00e9rhet\u00fcnk el!</p>"},{"location":"01_gyakorlat/#property-k-hasznalata","title":"Property-k haszn\u00e1lata","text":"<p>A pom.xml-ben ha t\u00f6bb helyen akarunk konstans \u00e9rt\u00e9keket felhaszn\u00e1lni, akkor \u00e9rdemes lehet property-ket haszn\u00e1lni. A defini\u00e1lt property-ket a pom.xml-ben b\u00e1rhol felhaszn\u00e1lhatjuk \u00e9s hivatkozni a <code>${property_name}</code> alakban kell.</p> <p>P\u00e9ld\u00e1ul a fenti maven compiler haszn\u00e1lat\u00e1t \u00edgy is m\u00f3dos\u00edthatjuk a pom.xml-ben.</p> <pre><code>&lt;properties&gt;\n&lt;java_version&gt;11&lt;/java_version&gt;\n&lt;/properties&gt;\n\n&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n&lt;version&gt;3.8.1&lt;/version&gt;\n&lt;configuration&gt;\n&lt;source&gt;${java_version}&lt;/source&gt;\n&lt;target&gt;${java_version}&lt;/target&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n</code></pre> <p>A property-k j\u00f3l j\u00f6hetnek az \u00fatvonalmegad\u00e1sokn\u00e1l is.</p>"},{"location":"01_gyakorlat/#pom-build-szekcio","title":"POM - Build szekci\u00f3","text":"<p>A pom.xml egy fontos szelete a build, melybe m\u00e1r raktunk plugin-t is fentebb. Ebben a r\u00e9szben adhatjuk meg az alap\u00e9rtelmezett Maven goal-t, a projekt bin\u00e1risainak mapp\u00e1j\u00e1t, az alkalmaz\u00e1sunk nev\u00e9t.</p> <pre><code>&lt;build&gt;\n&lt;defaultGoal&gt;install&lt;/defaultGoal&gt;\n&lt;directory&gt;${basedir}/target&lt;/directory&gt;\n&lt;finalName&gt;${artifactId}-${version}&lt;/finalName&gt;\n//...\n&lt;/build&gt;\n</code></pre> <p>A fenti r\u00e9szletben haszn\u00e1lt property-ket haszn\u00e1lhatjuk an\u00e9lk\u00fcl, hogy azokat a properties elemben defini\u00e1ljuk, ezeket szolg\u00e1ltatja a rendszer.</p> <p>A Maven alapjait az al\u00e1bbi vide\u00f3 foglalja \u00f6ssze:</p> <p></p>"},{"location":"01_gyakorlat/#profilok","title":"Profilok","text":"<p>A fejleszt\u00e9s k\u00f6zben \u00e1ltal\u00e1ban felmer\u00fcl az ig\u00e9ny, hogy m\u00e1sk\u00e9ppen menjen a build folyamata fejleszt\u00e9s k\u00f6zben, mint amikor production k\u00f3dot akarunk el\u0151\u00e1ll\u00edtani \u00e9s azt valahova \u00e9les\u00edteni. Erre kit\u0171n\u0151 megold\u00e1st adnak a profilok, amik igaz\u00e1b\u00f3l k\u00fcl\u00f6nb\u00f6z\u0151 konfigur\u00e1ci\u00f3kat adnak meg a pom.xml-en bel\u00fcl.</p> <p>P\u00e9lda:</p> <pre><code>&lt;profiles&gt;\n&lt;profile&gt;\n&lt;id&gt;production&lt;/id&gt;\n&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n//...\n               &lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n&lt;/profile&gt;\n&lt;profile&gt;\n&lt;id&gt;development&lt;/id&gt;\n&lt;activation&gt;\n&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;\n&lt;/activation&gt;\n&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n//...\n               &lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n&lt;/profile&gt;\n&lt;/profiles&gt;\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban a development az alap\u00e9rtelmezett (<code>activeByDefault</code> elem adja meg), de amennyiben a <code>production</code>-t akarjuk haszn\u00e1lni akkor a k\u00f6vetkez\u0151t kell kiadni:</p> <pre><code>mvn clean install -Pproduction\n</code></pre> <p>Az is lehet, hogy a development k\u00f6zben nem szeretn\u00e9nk, ha a tesztek lefutn\u00e1nak. Ilyenkor a k\u00f6vetkez\u0151t haszn\u00e1lhatjuk:</p> <pre><code>&lt;profile&gt;\n&lt;id&gt;development&lt;/id&gt;\n&lt;properties&gt;\n&lt;maven.test.skip&gt;true&lt;/maven.test.skip&gt;\n&lt;/properties&gt;\n&lt;activation&gt;\n&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;\n&lt;/activation&gt;\n&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n//...\n            &lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n&lt;/profile&gt;\n</code></pre>"},{"location":"01_gyakorlat/#maven-projekt-parancssorbol","title":"Maven projekt parancssorb\u00f3l","text":"<pre><code>mvn archetype:generate -DgroupId=hu.alkfejl -DartifactId=commandline-maven -DarchetypeArtifactId=maven-archetype-quickstart\n</code></pre> <p>A fenti parancs hat\u00e1s\u00e1ra gener\u00e1l\u00f3dik egy projekt, mely a maven-archetype-quickstart projekt sablont haszn\u00e1lja. Emellett a <code>groupId</code>-t \u00e9s az <code>artifactId</code>-t adtuk meg. Alap\u00e9rtelmezetten interakt\u00edv m\u00f3dban indul a gener\u00e1l\u00e1s. Ha ezt ki akarjuk kapcsolni, akkor a <code>-DinteractiveMode=false</code> kapcsol\u00f3t is adjuk \u00e1t a maven-nek! A l\u00e9trehozott projektben benne lesz a JUnit, illetve egy egyszer\u0171 'Hello World' jelleg\u0171 <code>App.java</code> \u00e1llom\u00e1ny.</p> <p>A maven archetype-ok el\u0151re defini\u00e1lt projekt v\u00e1zakat/sablonokat tartalmaznak, melyek k\u00f6z\u00fcl v\u00e1laszthatjuk a nek\u00fcnk legjobban megfelel\u0151t.</p> <p>Ha elk\u00e9sz\u00fclt a projekt\u00fcnk, akkor ford\u00edtsuk le azt maven-nel:</p> <pre><code>mvn compile\n</code></pre> <p>Ekkor a maven v\u00e9gigmegy az \u00f6sszes f\u00e1zison, ami a compile-ig van a sorban \u00e9s mag\u00e1n a compile-on is. V\u00e9geredm\u00e9nyk\u00e9nt leford\u00edtja a projekt \u00e1llom\u00e1nyait.</p> <p>Tesztek futtat\u00e1s\u00e1hoz:</p> <pre><code>mvn test\n</code></pre> <p>Csomag k\u00e9sz\u00edt\u00e9s\u00e9hez:</p> <pre><code>mvn package\n</code></pre>"},{"location":"01_gyakorlat/#alkalmazas-futtatasa","title":"Alkalmaz\u00e1s futtat\u00e1sa","text":"<p>Az alkalmaz\u00e1st futtathatjuk is a maven seg\u00edts\u00e9g\u00e9vel. Ehhez egy plugin-re lesz sz\u00fcks\u00e9g\u00fcnk, melynek neve: <code>exec-maven-plugin</code>.</p> <p>A pom.xml <code>plugins</code> r\u00e9szben helyezz\u00fck el a k\u00f6vetkez\u0151t: <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;\n&lt;artifactId&gt;exec-maven-plugin&lt;/artifactId&gt;\n&lt;version&gt;1.5.0&lt;/version&gt;\n&lt;configuration&gt;\n&lt;mainClass&gt;hu.alkfejl.App&lt;/mainClass&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre></p> <p>Ezut\u00e1n:</p> <pre><code>mvn exec:java\n</code></pre> <p>paranccsal futtathatjuk majd a projekt\u00fcnket.</p> <p>Feladat (03_XML_Reader)</p> <p>Olvassuk be az el\u0151z\u0151leg elk\u00e9sz\u00edtett <code>users.xml</code> \u00e1llom\u00e1ny felhaszn\u00e1l\u00f3it:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;users&gt;\n&lt;user id=\"1\"&gt;\n&lt;name&gt;Gipsz Jakab&lt;/name&gt;\n&lt;email&gt;gipsz@jakab.hu&lt;/email&gt;\n&lt;age&gt;21&lt;/age&gt;\n&lt;/user&gt;\n&lt;user id=\"2\"&gt;\n&lt;name&gt;Kandisz N\u00f3ra&lt;/name&gt;\n&lt;email&gt;kandisz@nora.hu&lt;/email&gt;\n&lt;age&gt;54&lt;/age&gt;\n&lt;/user&gt;\n&lt;user id=\"3\"&gt;\n&lt;name&gt;Beviz Elek&lt;/name&gt;\n&lt;email&gt;beviz@elek.com&lt;/email&gt;\n&lt;age&gt;14&lt;/age&gt;\n&lt;/user&gt;\n&lt;/users&gt;\n</code></pre> <p>A beolvas\u00e1shoz haszn\u00e1lhatjuk a k\u00f6vetkez\u0151 f\u00fcgg\u0151s\u00e9get, melyr\u0151l tov\u00e1bbi infomr\u00e1ci\u00f3k el\u00e9rhet\u0151ek itt</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;com.fasterxml.jackson.dataformat&lt;/groupId&gt;\n&lt;artifactId&gt;jackson-dataformat-xml&lt;/artifactId&gt;\n&lt;version&gt;2.10.1&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> Megold\u00e1s <p>User.java:</p> <pre><code>import com.fasterxml.jackson.annotation.JsonProperty;\nimport com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n\n@JacksonXmlRootElement(localName = \"user\")\npublic class User {\nprivate Long id;\nprivate String name;\nprivate String email;\nprivate int age;\n\n@Override\npublic String toString() {\nreturn \"User{\" +\n\"id=\" + id +\n\", name='\" + name + '\\'' +\n\", email='\" + email + '\\'' +\n\", age=\" + age +\n'}';\n}\n\npublic Long getId() {\nreturn id;\n}\n\npublic void setId(Long id) {\nthis.id = id;\n}\n\npublic String getName() {\nreturn name;\n}\n\npublic void setName(String name) {\nthis.name = name;\n}\n\npublic String getEmail() {\nreturn email;\n}\n\npublic void setEmail(String email) {\nthis.email = email;\n}\n\npublic int getAge() {\nreturn age;\n}\n\npublic void setAge(int age) {\nthis.age = age;\n}\n}\n</code></pre> <p>Users.java <pre><code>import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\nimport com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\nimport com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Users {\n@JacksonXmlElementWrapper(useWrapping = false)\n@JacksonXmlProperty(localName = \"user\")\nList&lt;User&gt; users = new ArrayList&lt;&gt;();\n\npublic List&lt;User&gt; getUsers() {\nreturn users;\n}\n\npublic void setUsers(List&lt;User&gt; users) {\nthis.users = users;\n}\n}\n</code></pre></p> <p>Main.java:</p> <pre><code>import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class Main {\n\nprivate static &lt;T&gt; T readXML(String file, Class&lt;T&gt; clazz){\n\nT result = null;\ntry{\nXmlMapper mapper = new XmlMapper();\nString content = new String(Files.readAllBytes(Paths.get(file)));\nresult = mapper.readValue(content, clazz);\n} catch (IOException e) {\ne.printStackTrace();\n}\n\nreturn result;\n}\n\npublic static void main(String[] args) {\n\nif(args.length != 1){\nSystem.out.println(\"XML file path is missing\");\nreturn;\n}\n\nString filepath = args[0];\n\nif(!new File(filepath).exists()){\nSystem.out.println(\"XML file is missing\");\nreturn;\n}\n\nUsers u = readXML(filepath, Users.class);\nSystem.out.println(u.getUsers().size());\n}\n}\n</code></pre> <p>Feladat (04_commandline-maven)</p> <p>Keress\u00fck meg a parancssori Maven parancsok IDE-n bel\u00fcli megfelel\u0151it! Pr\u00f3b\u00e1ljunk ki valamilyen archetype-ot is!</p>"},{"location":"01_gyakorlat/#referenciak","title":"Referenci\u00e1k","text":"<ul> <li>W3Schools - XML Tutorial</li> <li>Maven Homepage</li> </ul>"},{"location":"02_gyakorlat/","title":"2. gyakorlat","text":""},{"location":"02_gyakorlat/#mi-is-az-a-javafx","title":"Mi is az a JavaFX?","text":"<ul> <li>Java GUI-s alkalmaz\u00e1sokhoz egy ide\u00e1lis v\u00e1laszt\u00e1s</li> <li>Tekinthet\u0151 a Swing lesz\u00e1rmazottj\u00e1nak</li> <li>GUI \u00e9p\u00edt\u00e9s k\u00e9tf\u00e9le m\u00f3don:<ul> <li>Java k\u00f3d \u00edr\u00e1s\u00e1val</li> <li>FXML le\u00edr\u00f3 seg\u00edts\u00e9g\u00e9vel (XML alap\u00fa)</li> </ul> </li> </ul>"},{"location":"02_gyakorlat/#a-javafx-komponensei","title":"A JavaFX komponensei","text":"<p>A GUI fel\u00e9p\u00edt\u00e9s\u00e9hez egy \u00fagynevezett Scene Graph hozunk l\u00e9tre. Ez a gr\u00e1f vizu\u00e1lis elemeket tartalmaz, amiket Node-oknak nevez\u00fcnk (<code>javafx.scene.Node</code>). Ezeket a <code>Node</code>-okat a Scene Graph hierarchikus elrendez\u00e9sben t\u00e1rolja. Fontos, hogy ez a hierarchia egy f\u00e1t alkot, azaz nincs benne k\u00f6r. Ez az\u00e9rt tilos, mert p\u00e9ld\u00e1ul ha k\u00e9t t\u00e1rol\u00f3 egym\u00e1st t\u00e1roln\u00e1 direkt vagy indirekt az \u00e9rtelmetlen lenne. Tov\u00e1bb\u00e1 a gr\u00e1fhoz minden elemet csak egyszer adhatunk hozz\u00e1. A Scene Graph-ot a publikus JavaFX API seg\u00edts\u00e9g\u00e9vel tudjuk fel\u00e9p\u00edteni. Egy node lehet p\u00e9ld\u00e1ul egy egyszer\u0171 UI vez\u00e9rl\u0151, p\u00e9ld\u00e1ul egy gomb. Egy p\u00e9lda Scene Graph az al\u00e1bb l\u00e1that\u00f3:</p> Scene Graph p\u00e9lda (Forr\u00e1s: FxDocs) <p>A hierarchia legfels\u0151bb pontj\u00e1n a <code>Stage</code> \u00e1ll, mely egy nat\u00edv ablakot reprezent\u00e1l. A <code>Stage</code> egyszerre csak egy <code>Scene</code>-t tartalmazhat, mely a Scene Graph t\u00e1rol\u00f3ja. A bels\u0151 \u00fagynevezett <code>Branch Node</code>-oknak lehetnek gyerekei, \u00edgy ezek a node-ok <code>Parent</code> t\u00edpus\u00faak. Ennek a reprezent\u00e1ci\u00f3nak az el\u0151nye, hogy tetsz\u0151leges transzform\u00e1ci\u00f3t egy bels\u0151 node-ra alkalmazva, annak gyerekeire is \u00e9rv\u00e9nyesek lesznek azok. P\u00e9ld\u00e1ul, ha eltolunk egy elemet, aminek vannak gyerekei is, akkor azok is el lesznek tolva a megadott transzform\u00e1ci\u00f3 alapj\u00e1n.</p> <p>A Prism egy hardver-gyors\u00edtott grafikus cs\u0151vezet\u00e9k, ami rendereli a Scene Graph-ot.</p> <p>A Glass Windowing Toolkit az oper\u00e1ci\u00f3s rendszert\u0151l f\u00fcgg\u0151en nat\u00edv m\u00f3don ablakoz\u00e1si feladatokat l\u00e1t el. Ezen fel\u00fcl ez a komponens felel\u0151s az esem\u00e9nykezel\u0151 sorok (event queue) kezel\u00e9s\u00e9\u00e9rt. JavaFX-ben az esem\u00e9nyek a f\u0151 threadben ker\u00fclnek kezel\u00e9sre, amely JavaFX-ben az \u00fagynevezett Application Thread. Fontos, hogy a Scene Graph-ot csak ezen a f\u0151 sz\u00e1lon kereszt\u00fcl m\u00f3dos\u00edthatjuk.</p> <p>A Media Engine meglep\u0151 m\u00f3don a m\u00e9dia lej\u00e1tsz\u00e1s\u00e1hoz ad seg\u00edts\u00e9get. Audio \u00e9s Vide\u00f3 lej\u00e1tsz\u00e1si lehet\u0151s\u00e9geket biztos\u00edt a felhaszn\u00e1l\u00f3 sz\u00e1m\u00e1ra.</p> <p>JavaFX-es alkalmaz\u00e1sainkban webes tartalmat is megjelen\u00edthet\u00fcnk, melynek felel\u0151se a web engine (WebKit alap\u00fa).</p> <p>A Quantum toolkit a 4 alacsony szint felett egy absztrakci\u00f3s szint, illetve a 4 alacsony szint k\u00f6z\u00f6tti koordin\u00e1ci\u00f3\u00e9rt is \u0151 a felel\u0151s.</p> <p></p>"},{"location":"02_gyakorlat/#hello-world-javafx-ben","title":"Hello World JavaFX-ben","text":"<p>A k\u00f6vetkez\u0151kben megn\u00e9zz\u00fck, hogy hogyan kell be\u00e1ll\u00edtani a projekt\u00fcnket, hogy k\u00e9pesek legy\u00fcnk JavaFX alkalmaz\u00e1sokat \u00edrni. A projektek buildel\u00e9s\u00e9hez Maven-t fogunk haszn\u00e1lni, \u00edgy erre f\u00f3kusz\u00e1lunk.</p>"},{"location":"02_gyakorlat/#javafx-maven","title":"JavaFX + Maven","text":"<p>Feladat</p> <p>Csin\u00e1ljunk egy teszt projektet az IDE-ben Maven haszn\u00e1lat\u00e1val! JavaFX alkalmaz\u00e1shoz k\u00f6vess\u00fck a hivatalos le\u00edr\u00e1st!</p> Megold\u00e1s <p>A projekt l\u00e9trehoz\u00e1s\u00e1t \u00e9s konfigur\u00e1ci\u00f3j\u00e1t az al\u00e1bbi vide\u00f3 mutatja be:</p> <p></p>"},{"location":"02_gyakorlat/#javafx-sdk","title":"JavaFX SDK","text":"<p>Feladat</p> <p>Pr\u00f3b\u00e1ljuk ki a projekt l\u00e9trehoz\u00e1s\u00e1t a JavaFX SDK haszn\u00e1lat\u00e1val is!</p> Megold\u00e1s <p>A projekt l\u00e9trehoz\u00e1s\u00e1t \u00e9s konfigur\u00e1ci\u00f3j\u00e1t az al\u00e1bbi vide\u00f3 mutatja be:</p> <p></p>"},{"location":"02_gyakorlat/#a-generalt-projekt-felepitese","title":"A gener\u00e1lt projekt fel\u00e9p\u00edt\u00e9se","text":"<p>B\u00e1rmelyik fenti megold\u00e1st is v\u00e1lasztjuk a projekt\u00fcnk l\u00e9trehoz\u00e1s\u00e1hoz, azokban lesznek olyan alkot\u00f3elemek, melyek minden JavaFX alkalmaz\u00e1sban megtal\u00e1lhat\u00f3ak. Ezeket az elemeket a k\u00f6vetkez\u0151 vide\u00f3 mutatja be, illetve lesz r\u00f3luk sz\u00f3 a k\u00f6vetkez\u0151 szekci\u00f3kban is.</p> <p></p>"},{"location":"02_gyakorlat/#csontvaz","title":"Csontv\u00e1z","text":"<p>Minden JavaFX alkalmaz\u00e1snak az Application oszt\u00e1lyb\u00f3l kell sz\u00e1rmaznia, ami a <code>javafx.application</code> csomagban tal\u00e1lhat\u00f3. Teh\u00e1t minden alkalmaz\u00e1s f\u0151 oszt\u00e1lya valahogy \u00edgy n\u00e9z ki:</p> <pre><code>package hu.alkfejl;\nimport javafx.application.Application;\n\npublic class HelloFX extends Application {\n// ide j\u00f6n a tov\u00e1bbi k\u00f3d\n}\n</code></pre> <p>Ez a k\u00f3d ilyen form\u00e1ban m\u00e9g nem lesz futtathat\u00f3. Az <code>Application</code> oszt\u00e1ly egy absztrakt oszt\u00e1ly, melynek van egy <code>start(Stage stage)</code> absztrakt met\u00f3dusa. Az <code>Application</code> oszt\u00e1lyban a k\u00f6vetkez\u0151 m\u00f3don van deklar\u00e1lva a met\u00f3dus:</p> <p><pre><code>public abstract void start(Stage stage) throws java.lang.Exception\n</code></pre> Ez lesz a f\u0151 bel\u00e9p\u00e9si pont, \u00e9s nek\u00fcnk kell kifejten\u00fcnk. Ezzel b\u0151v\u00edtve a k\u00f3dot a k\u00f6vetkez\u0151t kapjuk:</p> <p><pre><code>package hu.alkfejl;\nimport javafx.application.Application;\nimport javafx.stage.Stage;\n\npublic class HelloFX extends Application {\n\n@Override\npublic void start(Stage stage) {\n// Ide j\u00f6n, hogy indul\u00e1skor mi t\u00f6rt\u00e9njen\n}\n}\n</code></pre> A start met\u00f3dus a JavaFX alkalmaz\u00e1s elind\u00edt\u00e1sakor fog megh\u00edv\u00f3dni. Vegy\u00fck \u00e9szre, hogy param\u00e9terk\u00e9nt egy <code>Stage</code>-et kap ez a met\u00f3dus. Ez lesz az \u00fagynevezett primary stage. A stage-re tekints\u00fcnk \u00fagy, mint egy komplett ablakra (c\u00edmsor, minimize, maximize, bez\u00e1r\u00e1s gombokkal egy\u00fctt, \u00e9s maga az ablak tartalma). Az ablak tartalma egy scene lesz, amit majd kicsit k\u00e9s\u0151bb hozz\u00e1 is fogunk adni. A primary stage mindig l\u00e9trej\u00f6n, de ezen fel\u00fcl majd mi magunk is hozhatunk l\u00e9tre tov\u00e1bbi stage-eket (ablakokat).</p> <p>A fenti alkalmaz\u00e1st m\u00e1r le tudjuk ford\u00edtani, de t\u00f6rt\u00e9nni nem fog semmi. N\u00e9zz\u00fck meg mi kell ahhoz, hogy valami l\u00e1that\u00f3t is csin\u00e1ljunk.</p> <p>Teh\u00e1t a primary stage-\u00fcnk tekinthet\u0151 egy scene t\u00e1rol\u00f3j\u00e1nak. A JavaFX \u00e1ltal l\u00e9trehozott primary stage-nek alapb\u00f3l nincs megadva scene-je, azaz \u00fcres ez a kont\u00e9ner (az ablakon bel\u00fcl nincs semmi tartalom). K\u00e9s\u0151bb k\u00e9sz\u00edt\u00fcnk egy saj\u00e1t scene-t amit megadunk majd a primary stage-nek. Egyel\u0151re \u00e1ll\u00edtsuk be a primary stage c\u00edmsor\u00e1t, hogy mutassa a 'Hello JavaFX' sz\u00f6veget. Ahhoz, hogy a stage-et kirajzolja (renderelje a rendszer) meg kell h\u00edvnunk a <code>show()</code> met\u00f3dus\u00e1t.</p> <pre><code>package hu.alkfejl;\nimport javafx.application.Application;\nimport javafx.stage.Stage;\n\npublic class HelloFX extends Application {\n\n@Override\npublic void start(Stage stage) {\nstage.setTitle(\"Hello JavaFX\");\n\nstage.show();\n}\n}\n</code></pre> <p>A fenti k\u00f3d teljesen j\u00f3l m\u0171k\u00f6dik, \u00e1m a szemf\u00fclesek \u00e9szrevehetik, hogy nincsen <code>main</code> met\u00f3dusunk. JavaFX alkalmaz\u00e1s eset\u00e9ben nem is kell, hogy legyen <code>main</code> met\u00f3dusunk. Ha ez valami\u00e9rt m\u00e9gis sz\u00fcks\u00e9ges sz\u00e1munkra (p\u00e9ld\u00e1ul a parancssori argumentumok miatt) akkor m\u00f3dos\u00edtsuk a programunkat a k\u00f6vetkez\u0151k\u00e9ppen.</p> <pre><code>package hu.alkfejl;\nimport javafx.application.Application;\nimport javafx.stage.Stage;\n\npublic class HelloFX extends Application {\n\npublic static void main(String[] args) {\nApplication.launch(args);\n}\n\n@Override\npublic void start(Stage stage) {\nstage.setTitle(\"Hello JavaFX\");\n\nstage.show();\n}\n}\n</code></pre> <p>Az <code>Application</code> statikus <code>launch</code> met\u00f3dusa csin\u00e1l n\u00e9h\u00e1ny munk\u00e1latot a h\u00e1tt\u00e9rben, majd megh\u00edvja a <code>start</code> met\u00f3dust. Ilyen m\u00f3don j\u00f3form\u00e1n becsomagoltuk a JavaFX alkalmaz\u00e1sunkat.</p> <p>Fontos</p> <p>N\u00e9h\u00e1ny IDE eset\u00e9n probl\u00e9m\u00e1t okozhat a <code>main</code> n\u00e9lk\u00fcli oszt\u00e1ly, \u00edgy mi mindig haszn\u00e1lni fogjuk.</p> <p>Tipp</p> <p>A <code>launch</code> met\u00f3dus nem t\u00e9r addig vissza, ameddig minden ablakot be nem z\u00e1runk, vagy meg nem h\u00edvjuk a <code>Platform.exit()</code> met\u00f3dust.</p>"},{"location":"02_gyakorlat/#scene-hozzaadasa","title":"Scene hozz\u00e1ad\u00e1sa","text":"<p>Ahogy azt eml\u00edtett\u00fck kor\u00e1bban a primary stage-\u00fcnk tartalmazhat egy <code>Scene</code>-t, ami pedig a grafikai elemeket tartalmazza egy fa-strukt\u00far\u00e1ban. Ennek a fa hierarchi\u00e1nak a legfels\u0151 pontja az \u00fagynevezett root node. Egy <code>Scene</code>-nek rendelkeznie kell egy root node-al. A k\u00f6vetkez\u0151 p\u00e9ld\u00e1ban <code>VBox</code>-ot haszn\u00e1lunk majd root-k\u00e9nt, amely egy vertik\u00e1lis t\u00e1rol\u00f3.</p> <p>Tipp</p> <p>B\u00e1rmelyik elem ami a <code>javafx.scene.Parent</code> oszt\u00e1lyb\u00f3l sz\u00e1rmazik haszn\u00e1lhat\u00f3 root node-k\u00e9nt. Tipikusan a t\u00e1rol\u00f3k \u00e9s elrendez\u00e9s panelek ilyen elemek. P\u00e9ld\u00e1ul: <code>VBox</code>, <code>HBox</code>, <code>Pane</code>, <code>GridPane</code>, <code>TilePane</code>, <code>FlowPane</code>.</p> <p>\u00cdme egy p\u00e9lda, amiben m\u00e1r scene-t is adunk a stage-hez:</p> <pre><code>package hu.alkfejl;\nimport javafx.application.Application;\nimport javafx.scene.Scene;\nimport javafx.scene.layout.VBox;\nimport javafx.scene.text.Text;\nimport javafx.stage.Stage;\n\npublic class HelloFX extends Application {\n\npublic static void main(String[] args) {\nApplication.launch(args);\n}\n\n@Override\npublic void start(Stage stage) {\nstage.setTitle(\"Hello JavaFX\");\n\nVBox root = new VBox();\nText msg = new Text(\"Hello JavaFX from the Scene\");\nroot.getChildren().add(msg);\n\nScene scene = new Scene(root, 300, 50);\n\nstage.setScene(scene);\nstage.show();\n}\n}\n</code></pre> <p>Vegy\u00fck sorra az \u00faj k\u00f3dot. Ahhoz, hogy a scene root node-j\u00e1t be tudjuk \u00e1ll\u00edtani l\u00e9trehozunk egy <code>VBox</code> objektumot, amely egy vertik\u00e1lis elrendez\u00e9st biztos\u00edt\u00f3 t\u00e1rol\u00f3. Ez azt jelenti, hogy a VBox-hoz hozz\u00e1adott gyermek node-ok egym\u00e1s alatt fognak megjelenni.</p> <pre><code>VBox root = new VBox();\n</code></pre> <p>Ehhez a t\u00e1rol\u00f3hoz most egyetlen gyereket adunk hozz\u00e1, m\u00e9gpedig egy <code>Text</code> t\u00edpus\u00fa objektumot.</p> <pre><code>Text msg = new Text(\"Hello JavaFX from the Scene\");\n</code></pre> <p>Ez egy egyszer\u0171 sz\u00f6veges tartalmat defini\u00e1l JavaFX-ben. A <code>Text</code> oszt\u00e1ly azon konstruktor\u00e1t haszn\u00e1ltuk, melynek egy <code>String</code>-et adhatunk meg. Ezut\u00e1n t\u00e9nylegesen hozz\u00e1 is adjuk a l\u00e9trehozott <code>Text</code> objektumot a t\u00e1rol\u00f3hoz:</p> <p><pre><code>root.getChildren().add(msg);\n</code></pre> A <code>getChildren()</code> met\u00f3dussal lek\u00e9rhet\u0151 az adott t\u00e1rol\u00f3 \u00f6sszes gyereke, ami egy <code>ObservableList&lt;Node&gt;</code> objektumot ad vissza, azaz a gyerekeket egy list\u00e1ban \u00e9rhetj\u00fck el. A fenti p\u00e9ld\u00e1ban egyszer\u0171en ehhez a list\u00e1hoz adjuk hozz\u00e1 az \u00faj elemet, azaz a <code>Text</code> t\u00edpus\u00fa <code>msg</code> objektumot.</p> <p>Tipp</p> <p>Minden <code>Parent</code>-b\u0151l sz\u00e1rmaz\u00f3 elemnek van <code>getChildren()</code> met\u00f3dusa, mivel a <code>Parent</code>-nek lehetnek gyerekei...</p> <p>Az <code>ObservableList</code> egy olyan lista interface, mely biztos\u00edtja azt, hogy a lista v\u00e1ltoz\u00e1sakor a feliratkoz\u00f3k \u00e9rtes\u00edt\u00e9st kapjanak. Ez az\u00e9rt fontos, mert ha fut\u00e1s k\u00f6zben dinamikusan v\u00e1ltoztatjuk egy <code>Parent</code> gyerekeit (pl. hozz\u00e1adunk egy \u00faj gyereket), akkor val\u00f3sz\u00edn\u0171leg \u00fajra ki kell rajzolnia a rendszernek.</p> <p>Miut\u00e1n elk\u00e9sz\u00edtett\u00fck a root node-unkat \u00e9s adtunk hozz\u00e1 tartalmat, l\u00e9trehozzuk a scene-t:</p> <pre><code>Scene scene = new Scene(root, 300, 50);\n</code></pre> <p>A <code>Scene</code> t\u00f6bb konstruktorral is rendelkezik, de a root node-ot meg kell adnunk mindenk\u00e9ppen (ami <code>Parent</code> t\u00edpus\u00fa kell legyen). A p\u00e9ld\u00e1ban megadjuk a scene m\u00e9ret\u00e9t is (sz\u00e9less\u00e9g \u00e9s magass\u00e1g).</p> <p>Ezut\u00e1n a primary stage-nek meg kell mondanunk, hogy az im\u00e9nt l\u00e9trehozott scene-t haszn\u00e1lja, \u00edgy a k\u00f6vetkez\u0151 utas\u00edt\u00e1st is megadjuk: <pre><code>stage.setScene(scene);\n</code></pre></p> <p>Feladat</p> <p>V\u00e1ltoztassuk meg az ablak \"st\u00edlus\u00e1t\" a <code>void initStyle(StageStyle style)</code> met\u00f3dus seg\u00edts\u00e9g\u00e9vel, melyet m\u00e9g a <code>show()</code> el\u0151tt h\u00edvjunk meg! A haszn\u00e1lhat\u00f3 \u00e9rt\u00e9kek:</p> <ul> <li>StageStyle.DECORATED</li> <li>StageStyle.UNDECORATED</li> <li>StageStyle.TRANSPARENT</li> <li>StageStyle.UNIFIED</li> <li>StageStyle.UTILITY</li> </ul> <p>Feladat</p> <p>Tiltsuk le a f\u0151 ablakunk \u00e1tm\u00e9retez\u00e9s\u00e9t a <code>setResizable()</code> met\u00f3dus haszn\u00e1lat\u00e1val!</p> <p>Feladat</p> <p>\u00c1ll\u00edtsuk be az ablakunk minim\u00e1lis, illetve maxim\u00e1lis sz\u00e9less\u00e9g\u00e9t \u00e9s magass\u00e1g\u00e1t a k\u00f6vetkez\u0151k haszn\u00e1lat\u00e1val:</p> <ul> <li><code>setMinWidth()</code></li> <li><code>setMinHeight()</code></li> <li><code>setMaxWidth()</code></li> <li><code>setMaxHeight()</code></li> </ul> <p>Feladat</p> <p>Amikor megjelen\u00edtj\u00fck a f\u0151 ablakunkat, akkor az \"maximized\" \u00e1llapottal rendelkezzen! Haszn\u00e1ljuk a <code>setMaximized()</code> met\u00f3dust, majd vess\u00fck \u00f6ssze a <code>setFullScreen()</code> met\u00f3dussal!</p>"},{"location":"02_gyakorlat/#a-hello-javafx-bovitese","title":"A Hello JavaFX b\u0151v\u00edt\u00e9se","text":"<p>M\u00e9g nagyon keveset l\u00e1ttunk a JavaFX-b\u0151l. A k\u00f6vetkez\u0151 l\u00e9p\u00e9s, hogy hozz\u00e1adunk egy gombot, amit ha megnyom a felhaszn\u00e1l\u00f3, akkor az alkalmaz\u00e1s kil\u00e9p.</p> <p>Amikor a felhaszn\u00e1l\u00f3 megnyomja a gombot, akkor egy <code>ActionEvent</code> esem\u00e9ny keletkezik. Amennyiben kezelni szeretn\u00e9nk a keletkez\u0151 <code>ActionEvent</code>-et, akkor hozz\u00e1 kell adnunk egy <code>ActionEvent</code> handler-t (kezel\u0151t), mert a gomb <code>setOnAction</code> met\u00f3dusa ezt v\u00e1rja, eg\u00e9szen pontosan egy <code>EventHandler&lt;ActionEvent&gt;</code> param\u00e9tert. A saj\u00e1t esem\u00e9nykezel\u0151h\u00f6z ez\u00e9rt a <code>EventHandler&lt;ActionEvent&gt;</code> interf\u00e9szb\u0151l kell sz\u00e1rmaztatni egy saj\u00e1t oszt\u00e1lyt, \u00e9s a <code>void handle(ActionEvent e)</code> met\u00f3dust kell megval\u00f3s\u00edtani, ami az esem\u00e9ny bek\u00f6vetkeztekor fog megh\u00edv\u00f3dni. Erre egy p\u00e9lda a k\u00f6vetkez\u0151:</p> <pre><code>class MyEventHandler implements EventHandler&lt;ActionEvent&gt; {\n@Override\npublic void handle(ActionEvent e) {\nPlatform.exit();\n}\n}\n</code></pre> <p>\u00c9s a haszn\u00e1lata:</p> <pre><code>Button exit = new Button(\"Exit\");\nexit.setOnAction(new MyEventHandler());\n</code></pre> <p>Mivel a k\u00fcl\u00f6nb\u00f6z\u0151 esem\u00e9nyekhez k\u00fcl\u00f6nb\u00f6z\u0151 esem\u00e9nykezel\u0151t haszn\u00e1lunk, \u00e9s \u00e1ltal\u00e1ban egy esem\u00e9nykezel\u0151 oszt\u00e1lyt csak egy helyen haszn\u00e1lunk, ez\u00e9rt ,,felesleges'' az oszt\u00e1lyt l\u00e9trehozni, ezt megval\u00f3s\u00edthatjuk anonymous oszt\u00e1llyal is.</p> <pre><code>Button exit = new Button(\"Exit\");\nexit.setOnAction(new EventHandler&lt;ActionEvent&gt;() {\n\n@Override\npublic void handle(ActionEvent e) {\nPlatform.exit();\n}\n\n});\n</code></pre> <p>Tov\u00e1bb egyszer\u0171s\u00edtve a dolgot haszn\u00e1lhatunk lambda kifejez\u00e9st is.</p> <pre><code>Button exit = new Button(\"Exit\");\nexit.setOnAction(e -&gt; {\nPlatform.exit();\n});\n</code></pre> <p>A gomb haszn\u00e1lat\u00e1t \u00e9s az esem\u00e9nykezel\u00e9s\u00e9t az al\u00e1bbi vide\u00f3 is bemutatja:</p> <p></p> <p>A gombon k\u00edv\u00fcl l\u00e9trehozhatunk egy <code>TextField</code>-et is, amely egy egyszer\u0171 sz\u00f6veges beviteli mez\u0151. A <code>TextField</code>-hez hozz\u00e1adunk egy esem\u00e9nykezel\u0151t, mely figyeli a billenty\u0171 felenged\u00e9seket \u00e9s a kor\u00e1bban l\u00e9trehozott <code>Text</code> t\u00edpus\u00fa msg sz\u00f6veg\u00e9t v\u00e1ltoztatja meg.</p> <pre><code>Text msg = new Text();\nTextField name = new TextField();\n\nname.setOnKeyReleased(e -&gt; {\nmsg.setText(\"Hi \" + name.getText());\n});\n</code></pre> <p>Az \u00faj r\u00e9szek ut\u00e1n a teljes program valahogy \u00edgy n\u00e9z ki:</p> <pre><code>package hu.alkfejl;\nimport javafx.application.Application;\nimport javafx.application.Platform;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.TextField;\nimport javafx.scene.layout.VBox;\nimport javafx.scene.text.Text;\nimport javafx.stage.Stage;\n\npublic class HelloFX extends Application {\n\npublic static void main(String[] args) {\nApplication.launch(args);\n}\n\n@Override\npublic void start(Stage stage) {\nstage.setTitle(\"Hello JavaFX\");\n\nVBox root = new VBox();\nText msg = new Text();\nTextField name = new TextField();\n\nButton exit = new Button(\"Exit\");\nexit.setOnAction(e -&gt; {\nPlatform.exit();\n});\n\nname.setOnKeyReleased(e -&gt; {\nmsg.setText(\"Hi \" + name.getText());\n});\n\nroot.getChildren().addAll(name, msg, exit);\n\nScene scene = new Scene(root, 500, 300);\nstage.setScene(scene);\nstage.show();\n}\n}\n</code></pre> <p>Megjegyz\u00e9s</p> <p>Aki \u00fagy \u00e9rzi, hogy a lambd\u00e1kkal nem b\u00e1nik megfelel\u0151 szinten, az itt elsaj\u00e1t\u00edthatja az alapokat.</p> <p></p> <p>Feladat</p> <p>Amennyiben egy gombnyom\u00e1sra l\u00e9p\u00fcnk ki az alkalmaz\u00e1sb\u00f3l, akkor a bez\u00e1r\u00e1skor triggerelt esem\u00e9nykezel\u0151t \u00e1tj\u00e1tszhatja a felhaszn\u00e1l\u00f3, ha az ablak jobb fels\u0151 sark\u00e1ban a kis \"X\"-re kattint. Pr\u00f3b\u00e1ljuk ki a <code>Stage</code> <code>setOnCloseRequest()</code> met\u00f3dus\u00e1t, mely k\u00e9pes kezelni a <code>CloseRequest</code>-eket. Elegend\u0151, ha egy egyszer\u0171 <code>System.out.println()</code>-t helyez\u00fcnk el benne.</p>"},{"location":"02_gyakorlat/#egy-javafx-application-eletciklusa","title":"Egy JavaFX Application \u00e9letciklusa","text":"<p>K\u00e9t f\u0151 sz\u00e1l j\u00f6n l\u00e9tre egy JavaFX alkalmaz\u00e1s futtat\u00e1sakor (a <code>launch()</code> met\u00f3dus hat\u00e1s\u00e1ra):</p> <ul> <li>JavaFX Launcher</li> <li>JavaFX Application Thread</li> </ul> <p>A JavaFX Runtime az <code>Application</code> oszt\u00e1ly k\u00f6vetkez\u0151 met\u00f3dusait h\u00edvja meg annak \u00e9letciklusa folyam\u00e1n (sorrendben):</p> <ul> <li>Param\u00e9ter n\u00e9lk\u00fcli konstruktor (Ilyennek lennie kell)</li> <li><code>init()</code></li> <li><code>start()</code></li> <li><code>stop()</code></li> </ul> <p>A JavaFX Application Thread p\u00e9ld\u00e1nyos\u00edt egy objektumot az <code>Application</code> lesz\u00e1rmazottj\u00e1b\u00f3l a <code>launch()</code> h\u00edv\u00e1s hat\u00e1s\u00e1ra. Ezut\u00e1n megh\u00edv\u00f3dik az <code>init()</code> met\u00f3dus, ami az <code>Application</code> oszt\u00e1lyban egy \u00fcres met\u00f3dus, de kedv\u00fcnkre fel\u00fcldefini\u00e1lhatjuk a f\u0151 oszt\u00e1lyunkban. <code>Stage</code> \u00e9s <code>Scene</code> l\u00e9trehoz\u00e1sa az <code>init</code>-en bel\u00fcl nem lehets\u00e9ges. Ezut\u00e1n megh\u00edv\u00f3dik a <code>start()</code> met\u00f3dus \u00e9s a <code>launch</code> met\u00f3dus a fut\u00e1s befejez\u00e9s\u00e9re v\u00e1r.  Amikor a fut\u00e1s\u00e1t befejezte az app, akkor megh\u00edv\u00f3dik a <code>stop()</code> met\u00f3dus, ami ugyan\u00fagy egy \u00fcres met\u00f3dus az <code>Application</code> oszt\u00e1lyban, de fel\u00fcldefini\u00e1lhatjuk. A fentiek k\u00f6z\u00fcl az <code>init</code> a Launcher Thread \u00e1ltal h\u00edvott, a t\u00f6bbi az App Thread \u00e1ltal.</p> <p></p>"},{"location":"02_gyakorlat/#javafx-alkalmazasok-debuggolasa","title":"JavaFX alkalmaz\u00e1sok debuggol\u00e1sa","text":"<p>A debug egy kicsit tr\u00fckk\u00f6s \u00edgy, hogy Maven-t haszn\u00e1lunk a futtat\u00e1shoz. A k\u00f6vetkez\u0151t kell a pom.xml-ben elhelyezn\u00fcnk a <code>javafx-maven-compiler</code> plugin al\u00e1:</p> <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.openjfx&lt;/groupId&gt;\n&lt;artifactId&gt;javafx-maven-plugin&lt;/artifactId&gt;\n&lt;version&gt;0.0.4&lt;/version&gt;\n&lt;configuration&gt;\n&lt;mainClass&gt;hu.alkfejl.App&lt;/mainClass&gt;\n&lt;/configuration&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;id&gt;run&lt;/id&gt;\n&lt;configuration&gt;\n&lt;mainClass&gt;hu.alkfejl.App&lt;/mainClass&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n&lt;execution&gt;\n&lt;id&gt;debug&lt;/id&gt;\n&lt;configuration&gt;\n&lt;mainClass&gt;hu.alkfejl.App&lt;/mainClass&gt;\n&lt;options&gt;\n&lt;option&gt;-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:4000&lt;/option&gt;\n&lt;/options&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre> <p>Ezzel k\u00e9t futtat\u00e1si konfigur\u00e1ci\u00f3t csin\u00e1lunk, melyek k\u00f6z\u00fcl a sima run nem v\u00e1ltozik semmit sem, viszont l\u00e9trehozunk egy <code>debug</code> futtat\u00e1si k\u00f6rnyezetet is, ahol az opci\u00f3k seg\u00edts\u00e9g\u00e9vel egy olyan JVM-et ind\u00edtunk, amihez \"t\u00e1volr\u00f3l\" csatlakozhatunk. Erre az\u00e9rt van sz\u00fcks\u00e9g, mert a Maven-b\u0151l ind\u00edtott JavaFX alkalmaz\u00e1s egy k\u00fcl\u00f6n JVM-en fog futni (nem az IntelliJ-t haszn\u00e1ljuk a futtat\u00e1shoz, amiben lenne be\u00e9p\u00edtett debugger is). A JDWP (Java Debug Wire Protocol) pontosan ebben seg\u00edt: <code>agentlib:jdwp</code>, eg\u00e9sz pontosan a JVM \u00e9s a debugger (mely ebben az esetben az IntelliJ-n bel\u00fcl van) k\u00f6z\u00f6tti kapcsolatot teremti meg. Az opci\u00f3k k\u00f6z\u00f6tt a <code>4000</code> a portot adja meg, amin csatlakozhatunk a JVM-hez. Ezt nyilv\u00e1n szabadon \u00e1ll\u00edthatjuk.</p> <p>Tov\u00e1bbi olvasm\u00e1nyt itt tal\u00e1lsz a JDWP-r\u0151l.</p> <p>Miut\u00e1n a plugin-t megfelel\u0151en konfigur\u00e1ltuk a debug futtat\u00e1si m\u00f3dot a k\u00f6vetkez\u0151k\u00e9ppen k\u00e9rhetj\u00fck a Maven-t\u0151l:</p> <pre><code>mvn clean javafx:run@debug\n</code></pre> <p>A parancs kiad\u00e1sa ut\u00e1n az IntelliJ <code>Run</code> konzolj\u00e1n a k\u00f6vetkez\u0151t olvashatjuk:</p> <p><pre><code>Listening for transport dt_socket at address: 4000\n</code></pre> , mely ut\u00e1n az <code>Attach Debugger</code> gombot is megtal\u00e1ljuk. Nincs m\u00e1s dolgunk, mint r\u00e1kattintani erre a gombra \u00e9s m\u00e1ris debug m\u00f3dban l\u00e1tjuk az alkalmaz\u00e1sunkat az IDE-n bel\u00fcl (persze valahova rakjunk egy breakpoint-ot, hogy ezt l\u00e1ssuk is).</p> <p>Nekem nem jelenik meg az <code>Attach Debugger</code> gomb ...</p> <p>Amennyiben az <code>Attach Debugger</code> gombot nem l\u00e1tjuk, akkor pr\u00f3b\u00e1lkozzunk meg a fenti men\u00fcsorban a <code>Run -&gt; Attach to Process...</code>-el, ahol l\u00e1tnunk kell a 4000-es porton fut\u00f3 process-t. Fontos, hogy ebben az esetben is fusson az alkalmaz\u00e1s a fenti <code>mvn</code> paranccsal.</p> <p>A fentieket az al\u00e1bbi vide\u00f3 foglalja \u00f6ssze:</p> <p></p>"},{"location":"02_gyakorlat/#scene-ek-menedzselese","title":"Scene-ek menedzsel\u00e9se","text":"<p>Jelen fejezet megmutatja, hogy hogyan tudunk t\u00f6bb <code>Scene</code> k\u00f6z\u00f6tt v\u00e1ltani. Ez az\u00e9rt fontos, mert egy komplexebb alkalmaz\u00e1sban biztosan t\u00f6bb <code>Scene</code>-t fogunk haszn\u00e1lni az egyes tartalmak megjelen\u00edt\u00e9s\u00e9hez.</p> <p>P\u00e9ld\u00e1ul: Chat alkalmaz\u00e1s</p> <ul> <li>Partner v\u00e1laszt\u00f3 ablak</li> <li>Besz\u00e9lget\u00e9s a partnerrel</li> </ul> <p>A k\u00f6vetkez\u0151 p\u00e9lda megmutatja, hogy hogyan tudunk k\u00e9t egyszer\u0171 scene-t l\u00e9trehozni \u00e9s k\u00f6z\u00f6tt\u00fck navig\u00e1lni.</p> <pre><code>package hu.alkfejl;\n\nimport javafx.application.Application;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.layout.VBox;\nimport javafx.stage.Stage;\n\n\npublic class Main extends Application {\nprivate Stage mainWindow;\nprivate Scene scene1, scene2;\n\n@Override\npublic void start(Stage primaryStage) {\nmainWindow = primaryStage;\n\nconstructScene1();\nconstructScene2();\n\nmainWindow.setScene(scene1);\nmainWindow.setTitle(\"Multiple scenes\");\nmainWindow.show();\n\n}\n\nprivate void constructScene1() {\nLabel lb = new Label(\"Scene 1\");\nButton btn = new Button(\"Go to Scene 2\");\nbtn.setOnAction(e -&gt; {\nmainWindow.setScene(scene2);\n});\n\n//Some layout\nVBox root = new VBox();\nroot.getChildren().addAll(lb, btn);\n\nscene1 = new Scene(root, 300, 300);\n}\n\nprivate void constructScene2() {\nLabel lb = new Label(\"Scene 2\");\nButton btn = new Button(\"Go to Scene 1\");\nbtn.setOnAction(e -&gt; {\nmainWindow.setScene(scene1);\n});\n\n//Some layout\nVBox root = new VBox();\nroot.getChildren().addAll(lb, btn);\n\nscene2 = new Scene(root, 300, 300);\n}\n\npublic static void main(String[] args) {\nlaunch(args);\n}\n}\n</code></pre> <p>A <code>start()</code> met\u00f3dus elej\u00e9n elt\u00e1roljuk egy adattagban a primaryStage-re a referenci\u00e1t, hogy ezen met\u00f3duson k\u00edv\u00fcl is el\u00e9rhess\u00fck a f\u0151 ablakunkat. Ezut\u00e1n egyszer\u0171en megkonstru\u00e1ljuk a k\u00e9t <code>Scene</code>-t, amelyekre egy-egy <code>Label</code> (egyszer\u0171 sz\u00f6veges UI elem), illetve egy-egy <code>Button</code> ker\u00fcl. A gombokhoz hozz\u00e1adtunk egy-egy esem\u00e9nykezel\u0151t is, melyek rendre a m\u00e1sik <code>Scene</code>-t \u00e1ll\u00edtj\u00e1k be a <code>mainWindow</code>-nak, mint aktu\u00e1lis Scene.</p> <p>Feladat (02_scene-manager)</p> <p>Komplexebb alkalmaz\u00e1sokn\u00e1l \u00e9rdemes lehet k\u00e9sz\u00edten\u00fcnk egy <code>SceneManager</code> oszt\u00e1lyt, melynek seg\u00edts\u00e9g\u00e9vel v\u00e9gezz\u00fck el az \u00f6sszes scene v\u00e1lt\u00e1st, vagyis scene-ek k\u00f6z\u00f6tti navig\u00e1l\u00e1st. Pr\u00f3b\u00e1ljuk meg kiszervezni ezt a navig\u00e1ci\u00f3t egy k\u00fcl\u00f6n komponensbe!</p> Megold\u00e1s <p>A SceneManager oszt\u00e1ly valahogy \u00edgy n\u00e9zhet ki:</p> <pre><code>package hu.alkfejl;\n\nimport javafx.scene.Scene;\nimport javafx.stage.Stage;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class SceneManager {\n\nprivate static Stage mainWindow;\n\nprivate static Scene actualScene;\n\nprivate static Map&lt;String, Scene&gt; scenes = new HashMap&lt;&gt;();\n\npublic static void addScene(String sceneId, Scene scene){\nscenes.put(sceneId, scene);\n}\n\npublic static void setActualScene(String sceneId){\nSceneManager.actualScene = scenes.get(sceneId);\nSceneManager.mainWindow.setScene(SceneManager.actualScene);\nSceneManager.mainWindow.setTitle(\"Actual scene: \" + sceneId);\n}\n\npublic static Scene getActualScene() {\nreturn actualScene;\n}\n\npublic static void init(Stage mainWindow){\nSceneManager.mainWindow = mainWindow;\n}\n}\n</code></pre> <p>A haszn\u00e1lata pedig a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9zhet ki:</p> <pre><code>package hu.alkfejl;\n\nimport javafx.application.Application;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.layout.StackPane;\nimport javafx.stage.Stage;\n\n\n/**\n * JavaFX App\n */\npublic class App extends Application {\nScene scene1, scene2;\n\n@Override\npublic void start(Stage stage) {\nSceneManager.init(stage);\n\nButton btn1 = new Button(\"Go To Scene 2\");\nbtn1.setOnAction(event -&gt; SceneManager.setActualScene(\"scene2\"));\nStackPane sp1 = new StackPane(btn1);\nscene1 = new Scene(sp1, 640, 480);\n\nButton btn2 = new Button(\"Go To Scene 1\");\nbtn2.setOnAction(event -&gt; SceneManager.setActualScene(\"scene1\"));\nStackPane sp2 = new StackPane(btn2);\nscene2 = new Scene(sp2, 640, 480);\n\n\nSceneManager.addScene(\"scene1\", scene1);\nSceneManager.addScene(\"scene2\", scene2);\nSceneManager.setActualScene(\"scene1\");\nstage.show();\n}\n\npublic static void main(String[] args) {\nlaunch();\n}\n\n}\n</code></pre>"},{"location":"02_gyakorlat/#egyszeru-gui-elemek","title":"Egyszer\u0171 GUI elemek","text":"<p>A tov\u00e1bbiakban a legegyszer\u0171bb \u00e9s leggyakrabban haszn\u00e1lt <code>Node</code>-okat n\u00e9zz\u00fck meg k\u00f6zelebbr\u0151l.</p>"},{"location":"02_gyakorlat/#combobox","title":"ComboBox","text":"<p>Leny\u00edl\u00f3 lista, melynek elemei k\u00f6z\u00fcl v\u00e1laszthat a felhaszn\u00e1l\u00f3. <pre><code>ObservableList&lt;String&gt; days = FXCollections.observableArrayList(\n\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\");\n\nComboBox&lt;String&gt; combo = new ComboBox&lt;String&gt;();\n\ncombo.setItems(days); //\u00e9rt\u00e9kek be\u00e1ll\u00edt\u00e1sa\ncombo.setValue(\"Friday\"); //default \u00e9rt\u00e9k              \n</code></pre></p> <p>Szerkeszthet\u0151v\u00e9 is tehetj\u00fck: </p> <pre><code>combo.setEditable(true);\n</code></pre> <p>Az \u00e9rt\u00e9k\u00e9t pedig a <code>.getValue()</code>-val k\u00e9rhetj\u00fck el.</p> <pre><code>combo.getValue();\n</code></pre> <p>Megjegyz\u00e9s</p> <p>A <code>ComboBox</code> l\u00e9v\u00e9n egy generikus megval\u00f3s\u00edt\u00e1s, b\u00e1rmilyen t\u00edpus\u00fa objektumokat tartalmazhat. Ilyen esetben a helyes megjelen\u00e9s v\u00e9gett meg kell adnunk a <code>CellFactory</code>-t, vagy haszn\u00e1lhatunk egy <code>StringConverter</code>-t is.</p>"},{"location":"02_gyakorlat/#spinner","title":"Spinner","text":"<p>Hasonl\u00f3 a m\u0171k\u00f6d\u00e9si elve a <code>ComboBox</code>-hoz, valamilyen \u00e9rt\u00e9kk\u00e9szletb\u0151l v\u00e1laszhat a felhaszn\u00e1l\u00f3. Alapvet\u0151en nem szerkeszthet\u0151, csak a nyilakkal lehet l\u00e9pkedni az \u00e9rt\u00e9kek k\u00f6z\u00f6tt, de van lehet\u0151s\u00e9g szerkeszthet\u0151v\u00e9 tenni. <pre><code>Spinner&lt;Integer&gt; spinner = new Spinner&lt;Integer&gt;();\n\nint from = 0;\nint to = 100;\nint initialValue = 3;\n\n// meg kell adni neki valamilyen \u00e9rt\u00e9kk\u00e9szletet amit haszn\u00e1l     \nSpinnerValueFactory&lt;Integer&gt; valueFactory= new SpinnerValueFactory.IntegerSpinnerValueFactory(from, to, initialValue);\n\nspinner.setValueFactory(valueFactory);\n\nspinner.setEditable(true); // ha szeretn\u00e9nk, hogy bele\u00edrni is lehessen\n</code></pre> Ez egyszer\u0171bben: <pre><code>Spinner&lt;Integer&gt; spinner = new Spinner&lt;Integer&gt;(0, 100, 3);\nspinner.setEditable(true);\n</code></pre> Hogy l\u00e1ssuk mi\u00e9rt j\u00f3 nek\u00fcnk az els\u0151 megad\u00e1si m\u00f3d, adjunk meg egy spinnert, amiben a h\u00e9t napjai szerepelnek.</p> <pre><code>ObservableList&lt;String&gt; days = FXCollections.observableArrayList(\n\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\");\n\nSpinner&lt;String&gt; spinner = new Spinner&lt;String&gt;();\n\nSpinnerValueFactory&lt;String&gt; valueFactory =\nnew SpinnerValueFactory.ListSpinnerValueFactory&lt;String&gt;(days);\n\nvalueFactory.setValue(\"Friday\"); // default \u00e9rt\u00e9k be\u00e1ll\u00edt\u00e1sa         \n\nspinner.setValueFactory(valueFactory);\n</code></pre> <p>Az \u00e9rt\u00e9k\u00e9t itt is a <code>.getValue()</code>-vel k\u00e9rhetj\u00fck el.</p> <pre><code>spinner.getValue();\n</code></pre>"},{"location":"02_gyakorlat/#checkbox","title":"CheckBox","text":"<p>Egy egyszer\u0171 bepip\u00e1lhat\u00f3 vez\u00e9rl\u0151.</p> <p>Haszn\u00e1lata:</p> <pre><code>CheckBox box1 = new CheckBox();\nbox1.setText(\"Szeretem a sajtot\"); // c\u00edmke hozz\u00e1ad\u00e1sa\n\n//vagy\nCheckBox box2 = new CheckBox(\"Szeretem a sajtot\");\n\nbox1.setSelected(true); // kipip\u00e1l\u00e1s\n</code></pre> <p>\u00c9rt\u00e9k\u00e9nek elk\u00e9r\u00e9se:</p> <pre><code>box1.isSelected();\n</code></pre>"},{"location":"02_gyakorlat/#radiobutton","title":"RadioButton","text":"<p>Hasonl\u00f3 a <code>CheckBox</code>-hoz, group-ba pakolva az azonos group-on bel\u00fcliekb\u0151l csak egy v\u00e1laszthat\u00f3 ki egyszerre.</p> <p>Ebben a p\u00e9ld\u00e1ban mindkett\u0151t be tudjuk jel\u00f6lni egyszerre. <pre><code>RadioButton button1 = new RadioButton(\"Male\");\nRadioButton button2 = new RadioButton(\"Female\");\n</code></pre></p> <p>Abban az esetben, ha egy groupba pakoljuk \u0151ket, akkor egyidej\u0171leg csak az egyiket tudjuk kiv\u00e1lasztani.</p> <pre><code>ToggleGroup group = new ToggleGroup();\n\nRadioButton button1 = new RadioButton(\"Male\");\nbutton1.setToggleGroup(group);\nbutton1.setSelected(true); // default \u00e9rt\u00e9knek bejel\u00f6lj\u00fck ezt\n\nRadioButton button2 = new RadioButton(\"Female\");\nbutton2.setToggleGroup(group);\n</code></pre> <p>Egy r\u00e1di\u00f3 gomb st\u00e1tusz\u00e1nak lek\u00e9rdez\u00e9se a k\u00f6vetkez\u0151k\u00e9ppen lehets\u00e9ges:</p> <pre><code>button1.isSelected();\n</code></pre> <p>Amennyiben azt szeretn\u00e9nk megtudni, hogy mely gomb van kijel\u00f6lve a csoporton bel\u00fcl, akkor a k\u00f6vetkez\u0151k\u00e9ppen j\u00e1rhatunk el:</p> <pre><code>RadioButton selectedRadioButton = (RadioButton) group.getSelectedToggle();\nString toogleGroupValue = selectedRadioButton.getText();\n</code></pre>"},{"location":"02_gyakorlat/#elrendezesek","title":"Elrendez\u00e9sek","text":"<p>JavaFX-ben a UI elemeknek rendre megmondhatjuk, hogy milyen poz\u00edci\u00f3ban jelenjenek meg. Enn\u00e9l egy jobb megold\u00e1s lehet, ha layout-okat haszn\u00e1lunk, mivel \u00e1tm\u00e9retez\u00e9skor a rendszer automatikus m\u00e9retezi \u00e9s poz\u00edcion\u00e1lja a layout \u00e1ltal tartalmazott UI elemeket is. A be\u00e9p\u00edtett elrendez\u00e9sek mind a <code>javafx.scene.layout.Pane</code> oszt\u00e1lyb\u00f3l sz\u00e1rmaznak (ez\u00e9rt nev\u00fck \u00e1ltal\u00e1ban ...Pane-re v\u00e9gz\u0151dik).</p>"},{"location":"02_gyakorlat/#borderpane","title":"BorderPane","text":"<p>A <code>BorderPane</code> az al\u00e1bbi k\u00e9pen l\u00e1that\u00f3 elrendez\u00e9st biztos\u00edt:</p> <p></p> <p>A <code>BorderPane</code> a legt\u00f6bb alkalmaz\u00e1sban el\u0151fordul, mivel remek lehet\u0151s\u00e9get biztos\u00edt a fels\u0151bb szint\u0171 komponensek elrendez\u00e9s\u00e9hez. Pl: Fenti toolbar, baloldali navig\u00e1ci\u00f3s n\u00e9zet, alulra valamilyen status bar ker\u00fclhet, k\u00f6z\u00e9pen a f\u0151 tartalom jelen\u00edthet\u0151 meg. A k\u00fcl\u00f6nb\u00f6z\u0151 r\u00e9gi\u00f3kat ak\u00e1rhogyan m\u00e9retezhetj\u00fck. Ha p\u00e9ld\u00e1ul nincs sz\u00fcks\u00e9g a jobboldali r\u00e9szre, akkor annak m\u00e9rete lehet 0 is. Ehhez egyszer\u0171en nem kell defini\u00e1lni azt a r\u00e9gi\u00f3t, amire nincs sz\u00fcks\u00e9g.</p> <pre><code>@Override\npublic void start(Stage primaryStage) {\n\nBorderPane root = new BorderPane();\nroot.setTop(new Label(\"Fent\"));\nroot.setLeft(new Label(\"Bal\"));\nroot.setRight(new Label(\"Jobb\"));\nroot.setBottom(new Label(\"Lent\"));\nroot.setCenter(new Label(\"K\u00f6z\u00e9p\"));\n\nScene scene = new Scene(root, 300, 300);\n\nprimaryStage.setScene(scene);\nprimaryStage.setTitle(\"BorderPane demo\");\nprimaryStage.show();\n\n}\n</code></pre>"},{"location":"02_gyakorlat/#hbox","title":"HBox","text":"<p>A <code>HBox</code> egy egyszer\u0171 horizont\u00e1lis elrendez\u00e9st tesz lehet\u0151v\u00e9, ahol az elemek egym\u00e1s mell\u00e9 ker\u00fclnek. A <code>HBox</code>-on bel\u00fcl az elemek k\u00f6z\u00f6tti t\u00e1vols\u00e1got a <code>Spacing</code>-gel adhatjuk meg.</p> <pre><code>HBox root = new HBox();\nroot.getChildren().addAll(new Button(\"Egy\"), new Button(\"Kett\u0151\"), new Button(\"H\u00e1rom\"));\n</code></pre> <p></p> <p>Ugyanez 10-es spacing-gel:</p> <pre><code>HBox root = new HBox();\nroot.setSpacing(10);\nroot.getChildren().addAll(new Button(\"Egy\"), new Button(\"Kett\u0151\"), new Button(\"H\u00e1rom\"));\n</code></pre> <p></p> <p>Ha padding-et is alkalmazunk r\u00e1:</p> <p><pre><code>root.setPadding(new Insets(10,10,10,10));\n</code></pre> </p> <p>Tipp</p> <p>A t\u00e1rol\u00f3k eset\u00e9ben az elrendez\u00e9st adott esetben finom\u00edthatjuk egy <code>Region</code> haszn\u00e1lat\u00e1val. P\u00e9ld\u00e1ul azt szeretn\u00e9nk, hogy egy gomb a <code>HBox</code> bal a m\u00e1sik pedig a jobb oldal\u00e1n legyen, akkor a k\u00f6vetkez\u0151ket is haszn\u00e1lhatjuk:</p> <pre><code>Button btn1 = new Button(\"Left\");\nButton btn2 = new Button(\"Right\");\n\nRegion spacer = new Region();\nHBox.setHgrow(spacer, Priority.ALWAYS);\n\nHBox hbox = new HBox(10, btn1, spacer, btn2);\nhbox.setPadding(new Insets(10));\n</code></pre> <p>A fenti esetben a <code>spacer</code> r\u00e9gi\u00f3 \u00e1tm\u00e9retez\u00e9st\u0151l f\u00fcgg\u0151en n\u00f6vekszik (<code>hgrow</code>), \u00edgy a k\u00e9t gomb a <code>HBox</code> k\u00e9t sz\u00e9l\u00e9n fog elhelyezkedni.</p>"},{"location":"02_gyakorlat/#vbox","title":"VBox","text":"<p>A <code>VBox</code> egy egyszer\u0171 vertik\u00e1lis elrendez\u00e9st tesz lehet\u0151v\u00e9, ahol az elemek egym\u00e1s al\u00e1 ker\u00fclnek. A <code>VBox</code>-on bel\u00fcl az elemek k\u00f6z\u00f6tti t\u00e1vols\u00e1got a <code>Spacing</code>-el adhatjuk meg.</p> <p>A p\u00e9ldak\u00f3d m\u00e1r spacing \u00e9s padding alkalmaz\u00e1s\u00e1t is mutatja.</p> <pre><code>  @Override\npublic void start(Stage primaryStage) {\ntry {\nVBox root = new VBox();\nroot.setSpacing(10);\nroot.setPadding(new Insets(10, 10, 10, 10));\nroot.getChildren().addAll(new Button(\"Egy\"), new Button(\"Kett\u0151\"), new Button(\"H\u00e1rom\"));\nScene scene = new Scene(root, 400, 400);\nprimaryStage.setScene(scene);\nprimaryStage.show();\n} catch (Exception e) {\ne.printStackTrace();\n}\n}\n</code></pre> <p></p>"},{"location":"02_gyakorlat/#stackpane","title":"StackPane","text":"<p>A <code>StackPane</code>, ahogy neve is mutatja, egy stack-et haszn\u00e1l. A hozz\u00e1adott elemek egy stack-be ker\u00fclnek \u00e9s \u00edgy egym\u00e1son jelennek meg. J\u00f3l haszn\u00e1lhat\u00f3 akkor amikor p\u00e9ld\u00e1ul egy k\u00e9pre szeretn\u00e9nk sz\u00f6veget \u00edrni. Amennyiben megv\u00e1ltoztatjuk az elemek pozicion\u00e1l\u00e1s\u00e1t, akkor az az \u00f6sszes belerakott elemre hat\u00e1ssal lesz. </p> <p>L\u00e1ssunk egy p\u00e9ld\u00e1t:</p> <pre><code>  @Override\npublic void start(Stage primaryStage) {\ntry {\nStackPane root = new StackPane();\nRectangle rect = new Rectangle(100.0, 30.0);\n\nText text = new Text(\"Yeah\");\ntext.setFill(Color.WHITE);\n\nroot.getChildren().addAll(rect, text);\nScene scene = new Scene(root, 400, 400);\nprimaryStage.setScene(scene);\nprimaryStage.show();\n} catch (Exception e) {\ne.printStackTrace();\n}\n}\n</code></pre> <p>Ennek az eredm\u00e9nye a k\u00f6vetkez\u0151:</p> <p></p> <p>A p\u00e9ld\u00e1ban a <code>javafx.scene.shape.Rectangle</code> oszt\u00e1lyt haszn\u00e1ltuk egy t\u00e9glalap l\u00e9trehoz\u00e1s\u00e1hoz. Az alap sz\u00edn fekete, \u00edgy ezt ezzel rajzolja ki a rendszer. Ezut\u00e1n l\u00e9trehoztunk egy <code>Text</code> t\u00edpus\u00fa objektumot, melynek a sz\u00edn\u00e9t (<code>setFill</code>) feh\u00e9rre \u00e1ll\u00edtottuk be.</p> <p>Tipp</p> <p>A StackPane alap\u00e9rtelmezetten k\u00f6z\u00e9pre igaz\u00edtja a benne l\u00e9v\u0151 elemeket.</p>"},{"location":"02_gyakorlat/#gridpane","title":"GridPane","text":"<p>R\u00e1csos elrendez\u00e9st lehet\u0151v\u00e9 tev\u0151 elrendez\u00e9s manager. A cellatartalmak <code>Node</code> t\u00edpust esznek meg. Az elrendez\u00e9st kedv\u00fcnkre alak\u00edthatjuk a span-ek (sor vagy oszlop \u00f6sszevon\u00e1sok) haszn\u00e1lat\u00e1val.</p> <p>Tipp</p> <p>J\u00f3l haszn\u00e1lhat\u00f3 p\u00e9ld\u00e1ul formok l\u00e9trehoz\u00e1sakor.</p> <p>A cell\u00e1k k\u00f6z\u00f6tti helyet a <code>HGap</code> \u00e9s <code>VGap</code> adja meg.</p> <p>Egy egyszer\u0171 form \u00f6sszerak\u00e1sa valahogy \u00edgy n\u00e9z ki:</p> <pre><code>@Override\npublic void start(Stage primaryStage) {\ntry {\nGridPane root = new GridPane();\nroot.setVgap(10); //f\u00fcgg\u0151leges helyk\u00f6z a cell\u00e1k k\u00f6z\u00f6tt\nroot.setHgap(30); //v\u00edzszintes helyk\u00f6z a cell\u00e1k k\u00f6z\u00f6tt\n\n//els\u0151 sor hozz\u00e1ad\u00e1sa\nText name = new Text(\"N\u00e9v:\");\nroot.add(name, 0, 0); //add(Node child, int columnIndex, int rowIndex)\nTextField nameTextField = new TextField();\nroot.add(nameTextField, 1, 0);\n\n//m\u00e1sodik sor hozz\u00e1ad\u00e1sa\nText email = new Text(\"Email:\");\nroot.add(email, 0, 1);\nTextField emailTextField = new TextField();\nroot.add(emailTextField, 1, 1);\n\n// A k\u00e9t gombot belerakjuk egy HBox-ba\nButton ok = new Button(\"Ok\");\nButton cancel = new Button(\"M\u00e9gse\");\nHBox hb = new HBox();\nhb.setAlignment(Pos.CENTER); // A hbox-on bel\u00fcl k\u00f6z\u00e9pre igaz\u00edtottak az elemek\nhb.setSpacing(20); // az elemek k\u00f6z\u00f6tti t\u00e1vols\u00e1g\nhb.getChildren().addAll(ok, cancel); // gombok a hbox-hoz\nroot.add(hb, 0, 2, 2, 1); //hbox a grid-hez -&gt; add(Node child, int columnIndex, int rowIndex, int colspan, int rowspan)\n\nroot.setPadding(new Insets(10, 10, 10, 10)); // gridre egy padding\nScene scene = new Scene(root, 400, 400);\nprimaryStage.setScene(scene);\nprimaryStage.show();\n} catch (Exception e) {\ne.printStackTrace();\n}\n}\n</code></pre> <p>Ennek az eredm\u00e9nye:</p> <p></p>"},{"location":"02_gyakorlat/#flowpane","title":"FlowPane","text":"<p>A <code>FlowPane</code> az elemek egym\u00e1s ut\u00e1n helyezi el. Alap\u00e9rtelmezetten horizont\u00e1lisan rakja \u0151ket egym\u00e1s ut\u00e1n, ameddig a sz\u00e9less\u00e9g azt engedi, ut\u00e1na \u00faj sort kezd. Megadhat\u00f3, hogy sor- vagy oszlopfolytonosan dolgozzon (<code>setOrientation()</code>).</p> <p>L\u00e1ssunk egy p\u00e9ld\u00e1t:</p> <pre><code>  @Override\npublic void start(Stage primaryStage) {\ntry {\nFlowPane root = new FlowPane();\nroot.setPadding(new Insets(5, 0, 5, 0)); //Flowpane paddingje\nroot.setVgap(10); //Elemek k\u00f6z\u00f6tti vertik\u00e1lis hely\nroot.setHgap(10); // horizont\u00e1lisan a spacing\nroot.setOrientation(Orientation.VERTICAL); //Orient\u00e1ci\u00f3 be\u00e1ll\u00edt\u00e1sa\n\nroot.getChildren().addAll(new Button(\"1\"), new Button(\"2\"), new Button(\"3\"));\n\nScene scene = new Scene(root,400,400);\nprimaryStage.setScene(scene);\nprimaryStage.show();\n} catch(Exception e) {\ne.printStackTrace();\n}\n}\n</code></pre> <p></p>"},{"location":"02_gyakorlat/#tilepane","title":"TilePane","text":"<p>A <code>TilePane</code> nagyon hasonl\u00f3 a <code>FlowPane</code>-hez, de egy r\u00e1csos elrendez\u00e9st biztos\u00edt az egym\u00e1s ut\u00e1n bepakolt elemekre. Fontos, hogy a cell\u00e1k m\u00e9rete ugyanakkora lesz.</p> <pre><code>TilePane root = new TilePane();\nroot.setPadding(new Insets(10));\nroot.setVgap(10);\nroot.setHgap(10);\n\nButton btn1 = new Button(\"1\");\nbtn1.setPrefWidth(20);\n\nButton btn2 = new Button(\"2\");\nbtn2.setPrefWidth(40);\n\nButton btn3 = new Button(\"3\");\nbtn3.setPrefWidth(100);\n\nroot.getChildren().addAll(btn1, btn2, btn3);\n</code></pre> <p></p> <p>Amennyiben a p\u00e9ld\u00e1ban kicser\u00e9lj\u00fck a <code>TilePane</code>-t <code>FlowPane</code>-re, akkor az elemek k\u00f6z\u00f6tti nagy 'r\u00e9s' megsz\u0171nik, mert a <code>FlowPane</code> nem foglalkozik azzal hogy r\u00e1csos legyen az elrendez\u00e9s, csak pakolja egym\u00e1s ut\u00e1n az elemeket.</p>"},{"location":"02_gyakorlat/#anchorpane","title":"AnchorPane","text":"<p>Az <code>AnchorPane</code> akkor j\u00f6het j\u00f3l, ha az ablak n\u00e9gy sz\u00e9l\u00e9hez viszony\u00edtva valamilyen elemeket fixen akarunk tartani. P\u00e9ld\u00e1ul egy <code>HBox</code>-ban l\u00e9v\u0151 gombokat alulra szeretn\u00e9nk mindig rakni. Ez az \u00e1tm\u00e9retez\u00e9skor is megmarad. Ehhez az kell, hogy a <code>HBox</code>-ra egy horgonyt (anchor-t) \u00e1ll\u00edtsunk be.</p> <p>L\u00e1ssuk a p\u00e9ld\u00e1t:</p> <pre><code>...\nHBox hb = new HBox();\nButton buttonSave = new Button(\"Save\");\nButton buttonCancel = new Button(\"Cancel\");\nhb.setSpacing(20);\nhb.setPadding(new Insets(10));\nhb.getChildren().addAll(buttonSave, buttonCancel);\n\nAnchorPane root = new AnchorPane();         root.getChildren().add(hb);\nAnchorPane.setBottomAnchor(hb, 5.0);            Scene scene = new Scene(root,400,400);\n...\n</code></pre> <p>Fontos, hogy egy node-ra t\u00f6bb anchor-t is alkalmazhatunk. Ha p\u00e9ld\u00e1ul a fenti p\u00e9ld\u00e1ban a <code>HBox</code>-ot nem csak lentre szeretn\u00e9nk horgonyoztatni, hanem jobb oldalra is akkor az <code>AnchorPane.setRightAnchor(hb, 10)</code> h\u00edv\u00e1st is meg kell ejten\u00fcnk.</p> <p>A fenti p\u00e9lda eredm\u00e9nye:</p> <p></p>"},{"location":"02_gyakorlat/#menuk","title":"Men\u00fck","text":"<p>A men\u00fck, <code>Menu</code>, azok a sz\u00f6veges elemek, melyekre az egeret r\u00e1mozgatva leny\u00edl\u00f3 sz\u00f6vegeket tal\u00e1lunk, melyek lehetnek tov\u00e1bbi men\u00fck vagy ak\u00e1r konkr\u00e9t funkcionalit\u00e1st biztos\u00edt\u00f3 elemek, <code>MenuItem</code>. A men\u00fcket gyakran az ablakok tetej\u00e9re helyezz\u00fck el, de ez szabadon v\u00e1laszthat\u00f3 \u00e9s a feljebb felsorolt t\u00e1rol\u00f3k b\u00e1rmelyik\u00e9vel haszn\u00e1lhat\u00f3k, ak\u00e1rcsak b\u00e1rmelyik m\u00e1sik <code>Node</code>.</p> <p>Ahhoz, hogy a men\u00fck egym\u00e1s mellett legyenek alkalmazhatunk egy men\u00fc sort, <code>MenuBar</code>. Ez fogja tartalmazni az \u00f6sszes men\u00fct egym\u00e1s mellett.</p> <pre><code>MenuBar menuBar = new MenuBar();\nMenu fileMenu = new Menu(\"File\"); // Ez lesz a File men\u00fc, a sz\u00f6veget konstruktorban adhatjuk meg.\nMenu helpMenu = new Menu(\"Help\"); // Ez lesz a help men\u00fc\n\nmenuBar.getMenus().addAll(fileMenu, helpMenu); // A men\u00fcket hozz\u00e1 is kell adni a men\u00fc b\u00e1rhoz, k\u00fcl\u00f6nben nem jelen\u00edti meg azokat.\n</code></pre> <p>Eddig nem tartalmaznak elemeket a men\u00fck, csak megjelennek. Ahhoz, hogy leny\u00edl\u00f3 tartalmuk legyen, tov\u00e1bbi elemeket kell adni a men\u00fckh\u00f6z, pl. <code>MenuItem</code>.</p> <pre><code>MenuItem newFileMenuItem = new MenuItem(\"New\");\nMenuItem openFileMenuItem = new MenuItem(\"Open\");\nfileMenu.getItems().addAll(newFileMenuItem, openFileMenuItem);\n\nMenuItem showHelpMenuItem = new MenuItem(\"GeneralHelp\");\nhelpMenu.getItems().add(showHelpMenuItem);\n</code></pre> <p>Ezzel az adott men\u00fckre kattintva el\u0151j\u00f6nnek a megfelel\u0151 elemek, azonban eddig semmi sem t\u00f6rt\u00e9nik, ha r\u00e1kattintunk egy elemre. Ehhez meg kell adnunk, hogy mi t\u00f6rt\u00e9njen az adott elemre kattint\u00e1skor.</p> <pre><code>newFileMenuItem.setOnAction(event -&gt; {\n// Itt adhatjuk meg mi legyen a m\u0171velet ha r\u00e1kattintunk\n});\n</code></pre>"},{"location":"02_gyakorlat/#dailogus-ablakok","title":"Dail\u00f3gus ablakok","text":""},{"location":"02_gyakorlat/#alert","title":"Alert","text":"<p>A JDK 8u40-val a JavaFX-be beker\u00fcltek a dial\u00f3gus ablakokat megval\u00f3s\u00edt\u00f3 API oszt\u00e1lyok. Az egyik ilyen oszt\u00e1ly az <code>Alert</code>.</p> <p>L\u00e1ssunk is egy p\u00e9ld\u00e1t:</p> <pre><code>Alert alert = new Alert(AlertType.INFORMATION);\nalert.setTitle(\"C\u00edm\");\nalert.setHeaderText(\"Az ablak tartalom fels\u0151 header r\u00e9sze\");\nalert.setContentText(\"R\u00e9szletesebb le\u00edr\u00e1s a header text alatt\");\n\nalert.showAndWait();\n</code></pre> <p>Az <code>Alert</code> t\u00f6bbf\u00e9le konstruktorral rendelkezik, de mindegyikn\u00e9l megtal\u00e1lhat\u00f3 az <code>AlertType</code> param\u00e9ter, mellyel megadhatjuk, hogy milyen t\u00edpus\u00fa dial\u00f3gus ablakot szeretn\u00e9nk l\u00e9trehozni. A k\u00f6vetkez\u0151 \u00e9rt\u00e9kek adhat\u00f3k meg:</p> <ul> <li><code>AlertType.INFORMATION</code></li> <li><code>AlertType.WARNING</code></li> <li><code>AlertType.ERROR</code></li> <li><code>AlertType.CONFIRMATION</code></li> <li><code>AlertType.NONE</code></li> </ul> <p>Ezek magukt\u00f3l \u00e9rtet\u0151dnek, de pr\u00f3b\u00e1ljuk ki mindegyiket, hogy l\u00e1ssuk a k\u00fcl\u00f6nbs\u00e9geket. A <code>NONE</code> csak egy csupasz dial\u00f3gus ablakot ad nek\u00fcnk.</p> <p>Egy <code>Alert</code>-nek 3 k\u00fcl\u00f6nb\u00f6z\u0151 sz\u00f6veg\u00e9t \u00e1ll\u00edthatjuk be, melyet a fenti p\u00e9lda is mutat. A dial\u00f3gus ablaknak van egy c\u00edme, egy <code>header</code>-je (kb egy \u00f6sszegz\u0151 sz\u00f6veg), \u00e9s egy r\u00e9szletesebb le\u00edr\u00e1sa (a <code>contentText</code>).</p> <p>Ahogy azt kor\u00e1bban a <code>Stage</code>-n\u00e9l l\u00e1ttuk, meg kell h\u00edvnunk a <code>show()</code> met\u00f3dust, mivel addig a pontig nem l\u00e1tszik az ablak.</p> <p>A dial\u00f3gus ablakainkat \u00e1ltal\u00e1ban mod\u00e1lisk\u00e9nt szeretj\u00fck t\u00e1lalni a felhaszn\u00e1l\u00f3 el\u00e9, teh\u00e1t nem akarjuk, hogy a rendszerben b\u00e1rmi m\u00e1st tudjon csin\u00e1lni a felhaszn\u00e1l\u00f3 ameddig a dial\u00f3gusablakr\u00f3l nem gondoskodott megfelel\u0151en. Ehhez a legegyszer\u0171bb, ha a fent is haszn\u00e1lt <code>showAndWait()</code> met\u00f3dust haszn\u00e1ljuk. Fontos, hogy a <code>showAndWait()</code> vissza is t\u00e9r egy <code>Optional&lt;ButtonType&gt;</code> eredm\u00e9nnyel, amelyb\u0151l megtudhatjuk, hogy a felhaszn\u00e1l\u00f3 melyik gombot nyomta meg, ami fontos lehet p\u00e9ld\u00e1ul egy <code>CONFIRMATION</code> t\u00edpus\u00fa dial\u00f3gusn\u00e1l.</p> <p>N\u00e9zz\u00fcnk egy p\u00e9ld\u00e1t:</p> <pre><code>package application;\n\nimport java.util.Optional;\n\nimport javafx.application.Application;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.Alert.AlertType;\nimport javafx.scene.control.ButtonType;\nimport javafx.stage.Stage;\n\npublic class Main extends Application {\n@Override\npublic void start(Stage primaryStage) {\n\nprimaryStage.setOnCloseRequest(e -&gt; {\nAlert confirm = new Alert(AlertType.CONFIRMATION, null, ButtonType.YES, ButtonType.NO);\nconfirm.setTitle(\"Are you sure you want to exit?\");\nconfirm.setHeaderText(\"Are you sure you want to exit?\");\n\nOptional&lt;ButtonType&gt; answer = confirm.showAndWait();\n\nif (answer.get() == ButtonType.NO) {\ne.consume();\n}\n});\n\nprimaryStage.setWidth(400);\nprimaryStage.setHeight(400);\nprimaryStage.show();\n\n}\n\npublic static void main(String[] args) {\nlaunch(args);\n}\n}\n</code></pre> <p>A p\u00e9ld\u00e1b\u00f3l t\u00f6bb mindent is tanulhatunk, egyr\u00e9szt az <code>Alert</code>-nek van egy olyan konstruktora is, ami a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>Alert(AlertType alertType, String contentText, ButtonType... buttons)\n</code></pre> <p>\u00cdgy egyszer\u0171en megadhatjuk a <code>contentText</code>-et, illetve megadhatjuk, hogy milyen gombokat szeretn\u00e9nk a dial\u00f3gusra rakni. Jelen helyzetben egy Yes \u00e9s egy No felirat\u00fa gombot helyez\u00fcnk el. Amennyiben ezeket megadjuk, akkor az alap\u00e9rtelmezett (OK \u00e9s Cancel) gombok nem lesznek r\u00e1pakolva az ablakra.</p> <p>A dial\u00f3gus akkor jelenik meg, ha megpr\u00f3b\u00e1ljuk bez\u00e1rni a f\u0151 ablakunkat. Ehhez az esem\u00e9nykezel\u0151t a <code>setOnCloseRequest(...)</code> met\u00f3dus seg\u00edts\u00e9g\u00e9vel \u00e1ll\u00edthatjuk be.</p> <p>A <code>showAndWait()</code> visszat\u00e9r\u00e9s\u00e9t elt\u00e1roljuk egy lok\u00e1lis v\u00e1ltoz\u00f3ban, majd meg\u00e1llap\u00edtjuk, hogy a NO gombot nyomta-e meg a felhaszn\u00e1l\u00f3. Ha m\u00e9gsem akar kil\u00e9pni az alkalmaz\u00e1sb\u00f3l, akkor az esem\u00e9nyt elkapjuk \u00e9s nem k\u00fcldj\u00fck tov\u00e1bb (ezt teszi a <code>consume()</code> h\u00edv\u00e1s). Ez azt jelenti, hogy a kil\u00e9p\u00e9si sz\u00e1nd\u00e9kunkat (az esem\u00e9nyt) nem tov\u00e1bb\u00edtjuk.</p> <p>A fenti p\u00e9ld\u00e1ban j\u00f3l l\u00e1that\u00f3, hogy mi magunk v\u00e1laszthatjuk ki, hogy milyen gombok jelenjenek meg a fel\u00fcleten. Ez rendben is van, de mi van akkor, ha magyar felirat\u00fa gombokat szeretn\u00e9nk? A rendszer alapb\u00f3l angol felirat\u00fa gombokat biztos\u00edt. Szerencs\u00e9re a JavaFX API erre is ad lehet\u0151s\u00e9get. Tekints\u00fck a k\u00f6vetkez\u0151 k\u00f3dr\u00e9szletet:</p> <p><code>ButtonType buttonTypeNo = new ButtonType(\"Nem\", ButtonData.NO);</code></p> <p>Ilyen m\u00f3don l\u00e9trehozhatunk egy \u00faj gombt\u00edpust, melynek a felirata a 'Nem' sz\u00f6veg, illetve viselked\u00e9s\u00e9t tekintve megegyezik a <code>ButtonType.NO</code> funkcionalit\u00e1s\u00e1val. Ezeket a viselked\u00e9seket a <code>ButtonData</code> adja meg, mint azt a p\u00e9lda is mutatja. \u00c9rdemes lehet a dokument\u00e1ci\u00f3t megtekinteni az \u00f6sszes lehets\u00e9ges vari\u00e1ns\u00e9rt.</p> <p>Tov\u00e1bbi be\u00e1ll\u00edt\u00e1si lehet\u0151s\u00e9gk\u00e9nt azt is megadhatjuk, hogy az ablak milyen elemekkel rendelkezzen. Ilyen p\u00e9ld\u00e1ul a st\u00edlusa.</p> <p><code>dialog.initStyle(StageStyle.UTILITY);</code></p> <p>Ebben az esetben az ablak csak a bez\u00e1r\u00f3 gombbal fog rendelkezni \u00e9s minimize, maximize gombokkal nem.</p> <p>Fontos lehet a sz\u00fcl\u0151t be\u00e1ll\u00edtani: <code>dialog.initOwner(parentWindow);</code></p> <p>Illetve megadhatjuk a modalit\u00e1s t\u00edpus\u00e1t is: <code>dialog.initModality(Modality.APPLICATION_MODAL);</code> Ennek eredm\u00e9nyek\u00e9ppen az ablakunk a teljes alkalmaz\u00e1sra n\u00e9zve lesz mod\u00e1lis nem pedig csak a sz\u00fcl\u0151re n\u00e9zve.</p>"},{"location":"02_gyakorlat/#tovabbi-dialogus-tipusok","title":"Tov\u00e1bbi dial\u00f3gus t\u00edpusok","text":"<p>Az <code>Alert</code>-en k\u00edv\u00fcl a JavaFX biztos\u00edt m\u00e9g n\u00e9h\u00e1ny tov\u00e1bbi be\u00e9p\u00edtett dial\u00f3gust. Ezeket nem fogjuk r\u00e9szletesen megn\u00e9zni. Haszn\u00e1latuk nagyban hasonl\u00edt az <code>Alert</code>-hoz. Ezek a k\u00f6vetkez\u0151ek:</p> <ul> <li><code>TextInputDialog</code>: egyszer\u0171 sz\u00f6veges input is tal\u00e1lhat\u00f3 a dial\u00f3gusablakon, melynek tartalm\u00e1t a <code>showAndWait()</code> adja vissza eredm\u00e9ny\u00fcl.</li> <li><code>ChoiceDialog</code>: Egy leg\u00f6rd\u00fcl\u0151 mez\u0151t tartalmaz\u00f3 dial\u00f3gus ablak. Amennyiben a felhaszn\u00e1l\u00f3 ad meg \u00e9rt\u00e9ket, akkor az elk\u00e9rhet\u0151 a <code>showAndWait()</code> visszat\u00e9r\u00e9si \u00e9rt\u00e9k\u00e9t\u0151l.</li> <li><code>Dialog</code>: A lehet\u0151 leg\u00e1ltal\u00e1nosabb dial\u00f3gus ablak, melynek minden r\u00e9sz\u00e9t egyedire szabhatunk ahogy csak akarunk.</li> </ul>"},{"location":"02_gyakorlat/#parancssori-parameterek-hasznalata-opcionalis","title":"Parancssori param\u00e9terek haszn\u00e1lata (Opcion\u00e1lis)","text":"<p>A <code>javafx.application.Application</code> oszt\u00e1ly biztos\u00edtja a megfelel\u0151 API h\u00edv\u00e1sokat, hogy a param\u00e9tereket k\u00f6nnyen el\u00e9rhess\u00fck. Ehhez h\u00edvjuk meg a <code>getParamters()</code> met\u00f3dust, amely egy <code>Application.Parameters</code> t\u00edpussal t\u00e9r vissza. Ebb\u0151l kihorg\u00e1szhat\u00f3ak a n\u00e9v n\u00e9lk\u00fcli \u00e9s a neves\u00edtett param\u00e9terek is. N\u00e9v n\u00e9lk\u00fcli lehet p\u00e9ld\u00e1ul: <code>--help</code>, \u00e9s neves\u00edtett p\u00e9ld\u00e1ul a <code>--inputDir=\"/home/valaki/input/\"</code> param\u00e9ter megad\u00e1s. A n\u00e9v n\u00e9lk\u00fcli param\u00e9tereket a <code>getUnnamed()</code> met\u00f3dussal k\u00e9rhetj\u00fck le, mely egy <code>List&lt;String&gt;</code>-et ad vissza az \u00f6sszes n\u00e9vtelen param\u00e9terrel. A n\u00e9vvel rendelkez\u0151 param\u00e9terek a <code>getNamed()</code> met\u00f3dussal kapjuk meg, mely egy <code>Map&lt;String, String&gt;</code> objektummal t\u00e9r vissza. Mivel a parancssori parm\u00e9tereket m\u00e1r nem m\u00f3dos\u00edthatjuk, ez\u00e9rt ezek read-only objektumok, azaz <code>final</code>-\u00f6k.</p> <p>Amennyiben nem szeretn\u00e9nk kett\u00e9v\u00e1lasztani a param\u00e9tereket t\u00edpus szerint (pl.: egy az egyben tov\u00e1bb akarjuk egy 3rd party libnek), akkor haszn\u00e1lhatjuk a <code>List&lt;String&gt; getRaw()</code> met\u00f3dust.</p> <p>Fontos lehet m\u00e9g, hogy a param\u00e9terek el\u00e9r\u00e9se a konstruktorban m\u00e9g nem el\u00e9rhet\u0151, viszont az <code>init()</code> met\u00f3dusban m\u00e1r igen.</p>"},{"location":"02_gyakorlat/#pelda","title":"P\u00e9lda","text":"<p>A JavaFX projekt\u00fcnkben csin\u00e1ljuk a k\u00f6vetkez\u0151ket:</p> <pre><code>@Override\npublic void start(Stage stage) {\n// Get application parameters\nParameters p = this.getParameters();\n\nMap&lt;String, String&gt; namedParams = p.getNamed();\nList&lt;String&gt; unnamedParams = p.getUnnamed();\nList&lt;String&gt; rawParams = p.getRaw();\n\nString paramStr = \"Named Parameters: \" + namedParams + \"\\n\" +\n\"Unnamed Parameters: \" + unnamedParams + \"\\n\" +\n\"Raw Parameters: \" + rawParams;\n\nTextArea ta = new TextArea(paramStr);\nta.setEditable(false);\nGroup root = new Group(ta);\n\nstage.setScene(new Scene(root));\nstage.setTitle(\"Application Parameters\");\nstage.show();\n}\n</code></pre> <p>A fenti k\u00f3d megjelen\u00edti a megadott param\u00e9tereket egy TextArea-ban. Ahhoz, hogy valami \u00e9rtelmeset is l\u00e1ssunk be kell \u00e1ll\u00edtanunk valamilyen command line param\u00e9tereket.</p> <p>JavaFX SDK haszn\u00e1lata eset\u00e9ben ez a szok\u00e1sos m\u00f3don megtehet\u0151 (Run Configurations), Maven-es projekt eset\u00e9ben a <code>javafx-maven-plugin</code>-t haszn\u00e1lva viszont a k\u00f6vetkez\u0151t kell megtenn\u00fcnk, ha p\u00e9ld\u00e1ul a <code>--help --inputDir=\"/home/valaki/input/\"</code> parancssori argumentumokat k\u00edv\u00e1njuk haszn\u00e1lni:</p> <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.openjfx&lt;/groupId&gt;\n&lt;artifactId&gt;javafx-maven-plugin&lt;/artifactId&gt;\n&lt;version&gt;0.0.4&lt;/version&gt;\n&lt;configuration&gt;\n&lt;mainClass&gt;hu.alkfejl.App&lt;/mainClass&gt;\n&lt;commandlineArgs&gt;--help --inputDir\"/home/valaki/input/\"&lt;/commandlineArgs&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre> <p>Futtat\u00e1skor a k\u00f6vetkez\u0151 eredm\u00e9nyt kapjuk:</p> <p></p> <p>Figyelem</p> <p>A <code>javafx-maven-plugin</code> eset\u00e9ben a param\u00e9terek sz\u00e9tv\u00e1laszt\u00e1sa nem megfelel\u0151en m\u0171k\u00f6dik, de a raw parameters mindig j\u00f3l ker\u00fcl \u00e1tad\u00e1sra.</p>"},{"location":"02_gyakorlat/#feladatok","title":"Feladatok","text":"<p>Counter (04_hazi_counter)</p> <p>K\u00e9sz\u00edts\u00fck el a k\u00f6vetkez\u0151h\u00f6z hasonl\u00f3 fel\u00fcletet JavaFX-ben!</p> <p></p> <ul> <li>A fel\u00fclet egy HBox-al dolgozik, melynek legyen valamekkora padding-je \u00e9s az elemek k\u00f6z\u00f6tt maradjon valamennyi hely.</li> <li>A fel\u00fcleten egy label, egy TextField \u00e9s egy gomb legyen megtal\u00e1lhat\u00f3.</li> <li>A TextField \u00e9rt\u00e9k\u00e9t a fel\u00fcleten ne \u00edrhassa be a felhaszn\u00e1l\u00f3 manu\u00e1lisan, annak kezd\u0151\u00e9rt\u00e9ke legyen 0.</li> <li>A count gomb megnyom\u00e1sakor a TextField \u00e9rt\u00e9k\u00e9t olvassuk ki \u00e9s n\u00f6velj\u00fck eggyel</li> </ul> Megold\u00e1s <pre><code>package hu.alkfejl.hazi;\n\nimport javafx.application.Application;\nimport javafx.geometry.Insets;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.TextField;\nimport javafx.scene.layout.HBox;\nimport javafx.scene.layout.StackPane;\nimport javafx.stage.Stage;\n\n/**\n * JavaFX App\n */\npublic class App extends Application {\n\n@Override\npublic void start(Stage stage) {\n\nHBox root = new HBox();\nroot.setPadding(new Insets(20));\nroot.setSpacing(20);\n\nLabel counterLabel = new Label(\"Counter\");\nTextField counterTF = new TextField(\"0\");\ncounterTF.setEditable(false);\n\nButton incBtn = new Button(\"Count\");\nincBtn.setOnAction(actionEvent -&gt; {\nInteger value = Integer.parseInt(counterTF.getText());\nvalue++;\ncounterTF.setText(value.toString());\n});\n\nroot.getChildren().addAll(counterLabel, counterTF, incBtn);\nvar scene = new Scene(root, 640, 480);\nstage.setScene(scene);\nstage.show();\n}\n\npublic static void main(String[] args) {\nlaunch();\n}\n\n}\n</code></pre> <p>Feladat (07_click-counter)</p> <p>\u00cdrjunk egy JavaFX programot, melyben sz\u00e1moljuk, hogy egy gombot h\u00e1nyszor nyomtak meg, illetve hogy \u00f6sszesen az alkalmaz\u00e1son bel\u00fcl h\u00e1ny kattint\u00e1s t\u00f6rt\u00e9nt (gombnyom\u00e1s is belesz\u00e1mol\u00f3dik)! Megfelel\u0151, ha az el\u0151z\u0151 programot terjesztj\u00fck ki az eg\u00e9rkattint\u00e1sokat figyel\u0151 esem\u00e9nykezel\u0151vel.</p> Megold\u00e1s <pre><code>package hu.alkfejl;\n\nimport javafx.application.Application;\nimport javafx.geometry.Pos;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.layout.StackPane;\nimport javafx.scene.layout.VBox;\nimport javafx.stage.Stage;\n\n\npublic class App extends Application {\n\nprivate int totalClicks = 0;\nprivate int buttonClicks = 0;\n\n@Override\npublic void start(Stage stage) {\n\n\n\nLabel totalClicksLabel = new Label(\"Total clicks: \" + totalClicks);\nLabel buttonClicksLabel = new Label(\"Button clicks: \" + buttonClicks);\nButton button = new Button(\"Increment Button Count\");\n\nbutton.setOnAction(actionEvent -&gt; {\nbuttonClicks++;\ntotalClicks++;\nbuttonClicksLabel.setText(\"Button clicks: \" + buttonClicks);\ntotalClicksLabel.setText(\"Total clicks: \" + totalClicks);\n});\n\nVBox vbox = new VBox(totalClicksLabel, buttonClicksLabel, button);\nvbox.setAlignment(Pos.CENTER);\nvbox.setSpacing(20.0);\n\nvar scene = new Scene(new StackPane(vbox), 640, 480);\n\nscene.setOnMouseClicked(mouseEvent -&gt; {\ntotalClicks++;\ntotalClicksLabel.setText(\"Total clicks: \" + totalClicks);\n});\n\nstage.setScene(scene);\nstage.show();\n}\n\npublic static void main(String[] args) {\nlaunch();\n}\n\n}\n</code></pre> <p>Accumulator (05_hazi_accumulator)</p> <p>K\u00e9sz\u00edts\u00fck el k\u00f6vetkez\u0151h\u00f6z hasonl\u00f3 fel\u00fcletet JavaFX-ben!</p> <p></p> <ul> <li>Legyen VBox a root elemem!</li> <li>Ezen bel\u00fcl legyenek HBox-ok!</li> <li>A fentiekre \u00e1ll\u00edtsak be valamilyen spacing-et, illetve a VBox-hoz paddinget is!</li> <li>K\u00e9t label \u00e9s k\u00e9t TextField legyen a fel\u00fcleten!</li> <li>Az els\u0151 TextField-be sz\u00e1mokat \u00edrhatok \u00e9s amennyiben megnyomom az entert, akkor a sum TextField aktu\u00e1lis \u00e9rt\u00e9k\u00e9hez adjam hozz\u00e1 az els\u0151 TextField \u00e9rt\u00e9k\u00e9t!</li> <li>a sum TextField \u00e9rt\u00e9ke 0-r\u00f3l indul \u00e9s nem szerkeszthet\u0151!</li> <li>Figyelj a hibakezel\u00e9sre is! Ha nem sz\u00e1mot \u00edrnak be akkor nem kell hozz\u00e1adni semmit sem a sumhoz!</li> </ul> Megold\u00e1s <pre><code>package hu.alkfejl.hazi;\n\nimport javafx.application.Application;\nimport javafx.geometry.Insets;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.TextField;\nimport javafx.scene.input.KeyCode;\nimport javafx.scene.layout.HBox;\nimport javafx.scene.layout.StackPane;\nimport javafx.scene.layout.VBox;\nimport javafx.stage.Stage;\n\n/**\n * JavaFX App\n */\npublic class App extends Application {\n\n@Override\npublic void start(Stage stage) {\nVBox root = new VBox();\nroot.setSpacing(20);\nroot.setPadding(new Insets(20));\n\nHBox firstRow = new HBox();\nfirstRow.setSpacing(10);\nLabel numLabel = new Label(\"Enter a number\");\nTextField numTF = new TextField();\n\nfirstRow.getChildren().addAll(numLabel, numTF);\n\n// M\u00e1sodik, summ\u00e1z\u00f3s sor\nHBox secondRow = new HBox();\nsecondRow.setSpacing(10);\nLabel accLabel = new Label(\"Accumulated sum\");\nTextField sumTF = new TextField(\"0.0\");\nsumTF.setEditable(false);\n\nsecondRow.getChildren().addAll(accLabel, sumTF);\n\nLabel msg = new Label(\"\");\n\n// Esem\u00e9nykezel\u00e9s\nnumTF.setOnKeyReleased(keyEvent -&gt; {\nif(keyEvent.getCode() == KeyCode.ENTER){\nDouble actSum = Double.parseDouble(sumTF.getText());\n\ntry{\nDouble num = Double.parseDouble(numTF.getText());\nactSum += num;\nsumTF.setText(actSum.toString());\nnumTF.setText(\"\");\nmsg.setText(\"\");\n}catch (NumberFormatException ex){\nmsg.setText(\"Please enter a valid number\");\nmsg.setStyle(\"-fx-text-fill: red\");\n}\n}\n});\n\n\nroot.getChildren().addAll(firstRow, secondRow, msg);\nScene scene = new Scene(root, 640, 480);\n\n\n\nstage.setScene(scene);\nstage.show();\n}\n\npublic static void main(String[] args) {\nlaunch();\n}\n\n}\n</code></pre>"},{"location":"02_gyakorlat/#daily-challange","title":"Daily Challange","text":"<p>Feladat</p> <p>A Chaos Game sor\u00e1n egy h\u00e1romsz\u00f6g (legyen szab\u00e1lyos) cs\u00facspontjai adottak (<code>A</code>, <code>B</code>, <code>C</code>). A 3 cs\u00facs mellett v\u00e1lasztunk egy v\u00e9letlenszer\u0171 pontot a s\u00edkon (<code>D</code>). Ezut\u00e1n egy iterat\u00edv algoritmust futtatunk, melynek minden l\u00e9p\u00e9s\u00e9ben v\u00e9letlenszer\u0171en v\u00e1lasztunk egy cs\u00facsot, majd a v\u00e1lasztott cs\u00facs \u00e9s a <code>D</code> pont \u00e1ltal alkotott szakasz felez\u0151pontj\u00e1t v\u00e1lasztjuk \u00faj <code>D</code> pontnak \u00e9s ki is rajzoljuk. Ezt az iter\u00e1ci\u00f3t a v\u00e9gtelens\u00e9gig folytathatjuk.</p> <p>Amennyiben j\u00f3l dolgoztunk, akkor megkapjuk a Sierpinszky-h\u00e1romsz\u00f6get.</p> <p></p> <p>A feladat sor\u00e1n j\u00f3l j\u00f6hetnek a k\u00f6vetkez\u0151 JavaFX oszt\u00e1lyok:</p> <ul> <li><code>Point2D</code>: k\u00e9t dimenzi\u00f3s pont</li> <li><code>Circle</code>: K\u00f6r\u00f6k kirajzol\u00e1s\u00e1hoz haszn\u00e1lhat\u00f3</li> <li><code>Timeline</code>: Anim\u00e1ci\u00f3 alkalmaz\u00e1s\u00e1hoz</li> </ul> <p>Az implement\u00e1ci\u00f3 sor\u00e1n \u00e1ltal\u00e1nos\u00edthatjuk a megval\u00f3s\u00edt\u00e1st tetsz\u0151leges szab\u00e1lyos soksz\u00f6gre, illetve akkor is m\u00e1s rajzolatokat kapunk, ha egym\u00e1s ut\u00e1n k\u00e9tszer nem v\u00e1laszthatjuk ugyanazt a cs\u00facsot.</p> Megold\u00e1s <pre><code>package hu.alkfejl;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport javafx.animation.KeyFrame;\nimport javafx.animation.Timeline;\nimport javafx.application.Application;\nimport javafx.geometry.Point2D;\nimport javafx.scene.Group;\nimport javafx.scene.Scene;\nimport javafx.scene.shape.Circle;\nimport javafx.stage.Stage;\nimport javafx.util.Duration;\n\npublic class App extends Application {\n\n//Configs\nprivate final double speed = 1;\nprivate final boolean canRepeatVertex = false;\nprivate final int numOfVertices = 5;\nprivate final int height = 600;\nprivate final int width = 600;\nprivate final int padding = 20;\nprivate final double radius = 1.0;\nprivate final double divDistance = 0.5;\n\nprivate List&lt;Point2D&gt; vertices = new ArrayList&lt;&gt;();\nprivate Point2D last; // half point\nprivate Point2D lastChoosenVertex = null;\nprivate Group root = new Group();\n\n@Override\npublic void init() throws Exception {\nsuper.init();\n\ndouble degreeStep = 360 / numOfVertices;\ndouble actDegree = 270;\n\ndouble actX = width / 2;\ndouble actY = padding;\n\nfor (int i = 0; i &lt; numOfVertices; i++) {\nactX = Math.cos(actDegree * Math.PI / 180) * (width / 2 - padding) + width / 2;\nactY = Math.sin(actDegree * Math.PI / 180) * (height / 2 - padding) + height / 2;\n\nPoint2D p = new Point2D(actX, actY);\nvertices.add(p);\n\nactDegree += degreeStep;\n}\n\n// init the starting point\nlast = new Point2D(Math.random() * width, Math.random() * height);\n}\n\nprivate double distance(Point2D p1, Point2D p2) {\nreturn Math.sqrt(Math.pow(p1.getX() - p2.getX(), 2) + Math.pow(p1.getY() - p2.getY(), 2));\n}\n\nprivate Point2D halfPoint(Point2D p1, Point2D p2) {\nreturn new Point2D((p1.getX() + p2.getX()) / 2, (p1.getY() + p2.getY()) / 2);\n}\n\nprivate Point2D newPoint(Point2D p1, Point2D p2) {\nreturn new Point2D((p1.getX() + p2.getX()) / (1 / divDistance), (p1.getY() + p2.getY()) / (1/divDistance) );\n}\n\nprivate void iterate() {\n// Choose the vertex\nint random;\nPoint2D choosenOne;\n\nif(canRepeatVertex) {\nrandom = (int) (Math.random() * numOfVertices);\nchoosenOne = vertices.get(random);\n}else {\ndo {\nrandom = (int) (Math.random() * numOfVertices);\nchoosenOne = vertices.get(random);\n}while(choosenOne == lastChoosenVertex);\n}\n\nPoint2D halfPoint = halfPoint(choosenOne, last);\n\nroot.getChildren().add(new Circle(halfPoint.getX(), halfPoint.getY(), radius));\n\nlast = halfPoint;\nlastChoosenVertex = choosenOne;\n}\n\n@Override\npublic void start(Stage stage) {\n\n// Drawing a Circle\nfor (Point2D p : vertices) {\nCircle circle = new Circle();\ncircle.setCenterX(p.getX());\ncircle.setCenterY(p.getY());\ncircle.setRadius(radius * 3);\nroot.getChildren().add(circle);\n}\n\nTimeline timeline = new Timeline(new KeyFrame(Duration.millis(speed), ae -&gt; iterate() ) );\ntimeline.setCycleCount(Timeline.INDEFINITE);\ntimeline.play();\n\nScene scene = new Scene(root, width, height);\nstage.setTitle(\"Chaos Game\");\nstage.setScene(scene);\nstage.show();\n\n}\n\npublic static void main(String[] args) {\nlaunch(args);\n}\n}\n</code></pre>"},{"location":"02_gyakorlat/#referenciak","title":"Referenci\u00e1k","text":"<ul> <li>FxDocs</li> <li>Oracle Docs Layouts</li> </ul>"},{"location":"03_gyakorlat/","title":"3. gyakorlat","text":"<p>T\u00e1bl\u00e1zatok haszn\u00e1lata a JavaFX-ben A JavaFX grafikus fel\u00fcleti keretrendszer lehet\u0151v\u00e9 teszi, hogy k\u00e9nyelmesen \u00e9s hat\u00e9konyan kezelj\u00fcnk adatt\u00e1bl\u00e1kat. Ebben a leck\u00e9ben megismerked\u00fcnk a TableView haszn\u00e1lat\u00e1val, mely egy rendk\u00edv\u00fcl rugalmas komponens az adatok tabul\u00e1ris megjelen\u00edt\u00e9s\u00e9re.</p>"},{"location":"03_gyakorlat/#tableview-letrehozasa","title":"TableView l\u00e9trehoz\u00e1sa","text":"<p>A <code>TableView</code> l\u00e9trehoz\u00e1sa sor\u00e1n meg kell adnunk egy generikus param\u00e9tert, amely meghat\u00e1rozza, hogy milyen t\u00edpus\u00fa objektumokat fogunk a t\u00e1bl\u00e1zatban t\u00e1rolni. P\u00e9ld\u00e1ul, ha di\u00e1kok list\u00e1j\u00e1t szeretn\u00e9nk megjelen\u00edteni, akkor egy Student t\u00edpus\u00fa objektumot haszn\u00e1lhatunk.</p> <pre><code>TableView&lt;Student&gt; table = new TableView&lt;&gt;();\nObservableList&lt;Student&gt; data = FXCollections.observableArrayList(\nnew Student(\"John Doe\", 20),\nnew Student(\"Jane Doe\", 22)\n);\ntable.setItems(data);\n</code></pre> <p>A t\u00e1bl\u00e1zat adatait egy ObservableList tartalmazza, melyet nek\u00fcnk kell be\u00e1ll\u00edtani, felt\u00f6lteni. Ez megtehet\u0151, pl a <code>setItems()</code> h\u00edv\u00e1ssal.</p> <p>A <code>setItems</code> \u00e9s <code>getItems</code> f\u00fcggv\u00e9nyek seg\u00edts\u00e9g\u00e9vel a t\u00e1bl\u00e1zat adatai friss\u00edthet\u0151ek, pl. sz\u0171r\u00e9s alkalm\u00e1val.</p>"},{"location":"03_gyakorlat/#oszlopok-hozzaadasa","title":"Oszlopok hozz\u00e1ad\u00e1sa","text":"<p>Oszlopok hozz\u00e1ad\u00e1s\u00e1hoz a <code>TableColumn</code> oszt\u00e1lyt haszn\u00e1ljuk, mely szint\u00e9n generikus. Az els\u0151 param\u00e9tere a sor t\u00edpusa (a TableView-ban haszn\u00e1lt t\u00edpus), a m\u00e1sodik a cell\u00e1ban t\u00e1rolt adat t\u00edpusa. Az oszlopok adatforr\u00e1s\u00e1t a <code>setCellValueFactory</code> met\u00f3dussal adjuk meg, ahol a <code>PropertyValueFactory</code> seg\u00edts\u00e9g\u00e9vel automatikusan az adott getter met\u00f3dushoz k\u00f6thetj\u00fck az oszlop \u00e9rt\u00e9k\u00e9t.</p> <pre><code>TableColumn&lt;Student, String&gt; nameColumn = new TableColumn&lt;&gt;(\"N\u00e9v\");\nnameColumn.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\"name\"));\n\nTableColumn&lt;Student, Integer&gt; ageColumn = new TableColumn&lt;&gt;(\"\u00c9letkor\");\nageColumn.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\"age\"));\n\ntable.getColumns().addAll(nameColumn, ageColumn);\n</code></pre>"},{"location":"03_gyakorlat/#jelolonegyzet-hozzaadasa-az-oszlophoz","title":"Jel\u00f6l\u0151n\u00e9gyzet hozz\u00e1ad\u00e1sa az oszlophoz","text":"<p>Boolean t\u00edpus\u00fa adatok megjelen\u00edt\u00e9s\u00e9re jel\u00f6l\u0151n\u00e9gyzetet (<code>CheckBox</code>) haszn\u00e1lhatunk egy oszlopban. Ehhez egy k\u00fcl\u00f6n cella factory-t kell defini\u00e1lnunk:</p> <pre><code>TableColumn&lt;Student, Boolean&gt; consentColumn = new TableColumn&lt;&gt;(\"Hozz\u00e1j\u00e1rul\u00e1s\");\n\nconsentColumn.setCellFactory( CheckBoxTableCell.forTableColumn(consentColumn) );\nconsentColumn.setCellValueFactory(cellData -&gt; {\nStudent item = cellData.getValue();\nSimpleBooleanProperty property = new SimpleBooleanProperty(item.isConsent());\n// kell ez a property, hogy ne csak TRUE/FALSE legyen a tablazat kiiratasa. Az alap PropertyValueFactory TRUE/FALSE-ra rakna\nreturn property;\n});\n</code></pre>"},{"location":"03_gyakorlat/#sorok-egyedi-elkeszitese","title":"Sorok egyedi elk\u00e9sz\u00edt\u00e9se","text":"<p>Lehet\u0151s\u00e9g\u00fcnk van azt is megadni, hogy az egyes sorok hogyan k\u00e9sz\u00fcljenek el, pl. ha egy Listenert szeretn\u00e9nk a sorra k\u00f6tni. Ezt egy RowFactory megad\u00e1s\u00e1val tehetj\u00fck meg.</p> <p>A row factory egy <code>TableRow</code> elemet fog elk\u00e9sz\u00edteni, ugyanolyan generikussal mint az oszlopok els\u0151 param\u00e9tere. Ezut\u00e1n az adott sort tetsz\u00e9s szeriont \u00e1ll\u00edthatjuk be, pl. egy listenert rakhatunk a sorra.</p> <pre><code>table.setRowFactory( tv -&gt; {\nvar row = new TableRow&lt;Student&gt;();\nrow.setOnMouseClicked( click -&gt; {\nvar student = row.getItem(); // elk\u00e9rhet\u0151 a sorban t\u00e1rolt objektum\nDialog&lt;Void&gt; dialog = new Dialog&lt;&gt;();\ndialog.setTitle(\"Eredm\u00e9nyek - \" + student.getNev());\nVBox root = new VBox(new Text(\"Kapcsolodo inform\u00e1ci\u00f3k: todo\"));\ndialog.getDialogPane().setContent(root);\ndialog.getDialogPane().getButtonTypes().add(ButtonType.CLOSE);\ndialog.showAndWait();\n});\nreturn row;\n});\n</code></pre>"},{"location":"04_gyakorlat/","title":"4. gyakorlat","text":"<p>Kor\u00e1bban l\u00e1ttuk, hogy hogyan lehet a JavaFX API-t felhaszn\u00e1lni arra, hogy grafikus felhaszn\u00e1l\u00f3i fel\u00fcleteket hozzunk l\u00e9tre. Ebben a fejezetben azt n\u00e9zz\u00fck meg, hogy hogyan lehet ezt m\u00e1sk\u00e9ppen deklarat\u00edv m\u00f3don megadni, mely\u00e9rt az FXML felel\u0151s.</p>"},{"location":"04_gyakorlat/#fxml","title":"FXML","text":"<p>Az FXML nem m\u00e1s, mint egy XML alap\u00fa le\u00edr\u00f3 nyelv, mely seg\u00edts\u00e9g\u00e9vel JavaFX alkalmaz\u00e1sok eset\u00e9n a felhaszn\u00e1l\u00f3i fel\u00fcletek szerkezete le\u00edrhat\u00f3, az alkalmaz\u00e1s k\u00f3dt\u00f3l teljesen elk\u00fcl\u00f6n\u00edtve, teh\u00e1t az FXML felel\u0151s a mit k\u00e9rd\u00e9sre v\u00e1laszolni, de a viselked\u00e9st m\u00e1r nem itt adjuk meg hanem Java k\u00f3dban.</p> <p>Tekints\u00fck a k\u00f6vetkez\u0151 JavaFX API-val \u00f6sszerakott fel\u00fcletet!</p> <pre><code>import javafx.scene.layout.VBox;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.Button;\n\nVBox root = new VBox();\nroot.getChildren().addAll(new Label(\"FXML is awesome\"), new Button(\"Yeah\"));\n</code></pre> <p>Ennek a fel\u00fcletnek az FXML megfelel\u0151je:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n\n&lt;?import javafx.scene.layout.VBox?&gt;\n&lt;?import javafx.scene.control.Label?&gt;\n&lt;?import javafx.scene.control.Button?&gt;\n\n&lt;VBox&gt;\n&lt;children&gt;\n&lt;Label text=\"FXML is awesome\"/&gt;\n&lt;Button text=\"Yeah\"/&gt;\n&lt;/children&gt;\n&lt;/VBox&gt;\n</code></pre> <p>FXML \u00e1llom\u00e1nyokat a <code>*.fxml</code> kiterjeszt\u00e9s\u0171 f\u00e1jlokban t\u00e1roljuk.</p> <p>Az els\u0151 sort m\u00e1r ismerj\u00fck (prolog sor), mely ut\u00e1n az importok k\u00f6vetkeznek, majd maguk grafikus komponensek.</p> <p>Megjegyz\u00e9s</p> <p>Az FXML \u00e1ltal\u00e1nosabb \u00e9rtelemben is haszn\u00e1lhat\u00f3, mivel az egy szerializ\u00e1l\u00e1si form\u00e1ja a Java objektumoknak, azaz nem csak a JavaFX GUI elemeinek le\u00edr\u00e1s\u00e1ra haszn\u00e1lhat\u00f3, hanem tetsz\u0151leges Java objektumok \u00e1llapot\u00e1nak ment\u00e9s\u00e9re.</p> <p>Amennyiben a fenti XML alap\u00fa f\u00e1jlt manu\u00e1lisan kellene szerkeszten\u00fcnk, akkor nyilv\u00e1n ink\u00e1bb a JavaFX API-t v\u00e1lasztan\u00e1nk nagy t\u00f6bbs\u00e9ggel, ugyanakkor az egyszer\u0171 form\u00e1ja miatt lehet\u0151s\u00e9g van arra, hogy k\u00fcl\u00f6nb\u00f6z\u0151 eszk\u00f6z\u00f6kkel grafikusan \u00e1ll\u00edtsuk el\u0151 a felhaszn\u00e1l\u00f3i interf\u00e9szeket. Erre a c\u00e9lra k\u00e9sz\u00fclt a SceneBuilder, melynek seg\u00edts\u00e9g\u00e9vel \"\u00f6sszeh\u00fazogathatjuk\" a grafikus elemeket (WYSWYG eszk\u00f6z).</p> <p>A SceneBuilder-t az IntelliJ alapb\u00f3l felk\u00edn\u00e1lja az <code>*.fxml</code> kiterjeszt\u00e9s\u0171 f\u00e1jlok szerkeszt\u00e9s\u00e9hez, \u00e1m a telep\u00edtett eszk\u00f6z futtathat\u00f3 f\u00e1jlj\u00e1t be kell \u00e1ll\u00edtani a <code>Settings-&gt;Languages&amp;Frameworks-&gt;JavaFX-&gt;Path to SceneBuilder</code> seg\u00edts\u00e9g\u00e9vel. Ezut\u00e1n tetsz\u0151leges FXML f\u00e1jlon jobb kattint\u00e1s, \u00e9s a legals\u00f3 men\u00fcpont a SceneBuilder, ami megnyitja az \u00e1llom\u00e1nyt a vizu\u00e1lis szerkeszt\u0151vel.</p> <p></p> <p>Megjegyz\u00e9s</p> <p>Az IntelliJ-n bel\u00fcl is lehet haszn\u00e1lni a SceneBuilder-t, mint bundle-t, de ekkor n\u00e9h\u00e1ny funkci\u00f3hoz nem f\u00e9r\u00fcnk hozz\u00e1.</p> <p>Az FXML alapjait egy kis p\u00e9lda feladaton fogjuk bemutatni.</p> <p>Feladat (01_fxml-basic)</p> <p>Hozzuk l\u00e9tre a SceneBuilder seg\u00edts\u00e9g\u00e9vel az al\u00e1bbi felhaszn\u00e1l\u00f3i fel\u00fcletet! A nyom\u00f3gomb megnyom\u00e1s\u00e1ra a sz\u00f6vegmez\u0151ben l\u00e9v\u0151 sz\u00f6veg \u00edr\u00f3djon ki konzolra.</p> <p></p> <p>Feladat l\u00e9p\u00e9sei:</p> <ol> <li>Induljunk ki egy \u00fcres JavaFX projektb\u0151l (amennyiben archetype-b\u00f3l indulunk ki, akkor t\u00f6r\u00f6lj\u00fcnk ki mindent)!</li> <li>Hozzunk l\u00e9tre egy sample.fxml f\u00e1jlt a <code>src/main/resources/hu/alkfejl</code> mapp\u00e1ban!</li> <li>Nyissuk meg SceneBuilder-ben a f\u00e1jlt (jobb klikk az fxml f\u00e1jlon -&gt; Open In SceneBuilder)</li> <li>\u00c1ll\u00edtsuk \u00f6ssze az ablakot (<code>HBox</code>-on bel\u00fcl egy gomb \u00e9s egy <code>TextField</code>)</li> <li>Cser\u00e9lj\u00fck a gomb felirat\u00e1t (Properties f\u00fcl alatt), \u00e9s \u00e1ll\u00edtsunk be <code>fx:id</code>-t az elemeknek (Inspector -&gt; Code)</li> <li>Ments\u00fck el, \u00e9s tanulm\u00e1nyozzuk a gener\u00e1lt fxml-t!</li> <li>Az <code>App.java</code>-ban t\u00f6lts\u00fck be az FXML-et, \u00e9s cser\u00e9lj\u00fck le a SceneGraph-ot a bet\u00f6lt\u00f6ttre</li> <li>Adjuk meg controller-t class-nak a <code>hu.alkfejl.App</code> oszt\u00e1lyt</li> <li>Vegy\u00fcnk fel egy <code>handleEcho</code> esem\u00e9nykezel\u0151t a gombhoz</li> <li>Implement\u00e1ljuk a met\u00f3dust \u00fagy, hogy gombnyom\u00e1s hat\u00e1s\u00e1ra a sz\u00f6vegmez\u0151 tartalma k\u00e9perny\u0151re \u00edr\u00f3djon (FXML dependency <code>pom.xml</code>-be, \u00e9s FXML annot\u00e1ci\u00f3k)</li> </ol> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n\n&lt;?import javafx.scene.control.Button?&gt;\n&lt;?import javafx.scene.control.TextField?&gt;\n&lt;?import javafx.scene.layout.HBox?&gt;\n\n\n&lt;HBox maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"hu.alkfejl.App\"&gt;\n&lt;children&gt;\n&lt;Button fx:id=\"myButton\" mnemonicParsing=\"false\" text=\"Button\" onAction=\"#buttonClick\" /&gt;\n&lt;TextField fx:id=\"myTextF\" /&gt;\n&lt;/children&gt;\n&lt;/HBox&gt;\n</code></pre> <p>Ez a k\u00f3dr\u00e9szlet annak felel meg, mintha l\u00e9trehozn\u00e1nk egy <code>HBox</code>, egy <code>Button</code> \u00e9s egy <code>TextField</code> komponenst, \u00e9s a <code>Buttont</code>-t, valamint a <code>TextField</code>-et hozz\u00e1adn\u00e1nk a <code>HBox</code> gyerekeihez.</p> <p>A gener\u00e1lt FXML el\u00e9gg\u00e9 intuit\u00edv ahhoz, hogy \u00e9rtelmezni lehessen, ugyanakkor n\u00e9h\u00e1ny elemet \u00e9rdemes k\u00f6zelebbr\u0151l megn\u00e9zn\u00fcnk.</p> <p>Az import sorok tervez\u00e9si id\u0151ben inform\u00e1lj\u00e1k a SceneBuilder-t vagy a bet\u00f6lt\u00e9skor az <code>FXMLLoader</code>-t, hogy mely JavaFX oszt\u00e1lyokat kell beh\u00fazni, kv\u00e1zi egyen\u00e9rt\u00e9k\u0171 a sima Java-s importtal.</p> <p>Figyelem</p> <p>Az FXML tartalma nincs s\u00e9ma \u00e1ltal valid\u00e1lva (XSD). A haszn\u00e1lt XML namespace-ekre az\u00e9rt van sz\u00fcks\u00e9g, hogy azok seg\u00edts\u00e9k az FXMLLoader, a SceneBuilder, illetve az IDE-k m\u0171k\u00f6d\u00e9s\u00e9t.</p> <p>A p\u00e9ld\u00e1ban az <code>fx</code> prefixet k\u00e9t helyen haszn\u00e1ljuk:</p> <ul> <li><code>fx:controller</code>: A legfels\u0151 elemen adhatjuk meg, mely fut\u00e1s id\u0151ben inform\u00e1lja az alkalmaz\u00e1sunkat, hogy melyik controller-el m\u0171k\u00f6dik egy\u00fctt ez az FXML \u00e1llom\u00e1ny. Itt tudjuk megadni majd az esem\u00e9nykezel\u0151 met\u00f3dusokat az adott elemekhez, m\u00e1rmint a t\u00e9nyleges met\u00f3dus defin\u00edci\u00f3kat. Fontos, hogy az itt megadott kontroller oszt\u00e1lyt az FXMLLoader p\u00e9ld\u00e1nyos\u00edtja.</li> <li><code>fx:id</code>: Minden elemhez hozz\u00e1rendelhet\u0151, mely egyedileg azonos\u00edtja az FXML-ben megadott Node-ot. Bet\u00f6lt\u00e9s ut\u00e1n a Node-okat ezen a n\u00e9ven \u00e9rhetj\u00fck el (ilyen nev\u0171 field-eket kell majd haszn\u00e1lnunk a controller-ben is, ha szeretn\u00e9nk az adott Node-ot a Java k\u00f3db\u00f3l is haszn\u00e1lni, m\u00e1sk\u00fcl\u00f6nben elhagyhat\u00f3 mind a field, mind az <code>fx:id</code> megad\u00e1s). </li> </ul> <p>Az FXML-ben az esem\u00e9nykezel\u0151ket is megadhatjuk, melyek defin\u00edci\u00f3ja a controller-ben van. A JavaFX API-t\u00f3l elt\u00e9r\u0151en itt a <code>set</code> el\u0151tagot nem kell ki\u00edrnunk. Teh\u00e1t p\u00e9ld\u00e1ul a <code>setOnAction()</code>-b\u0151l csak szimpl\u00e1n <code>onAction</code> attrib\u00fatum lesz az FXML-en bel\u00fcl. Az attrib\u00fatumban az esem\u00e9nykezel\u0151 met\u00f3dus nev\u00e9t kell megadnunk, illetve az el\u00e9 egy <code>#</code> jelet is el kell helyezn\u00fcnk (amennyiben az esem\u00e9nykezel\u0151 defin\u00edci\u00f3ja mag\u00e1ban az FXML-ben van megadva, p\u00e9ld\u00e1ul, <code>fx:script</code> tag-ek k\u00f6z\u00f6tt, akkor nem kell ki\u00edrni a <code>#</code> prefixet).</p> <pre><code>onAction=\"#buttonClick\"\n</code></pre> <p>A megadott met\u00f3dusoknak alapvet\u0151en illeszkedni\u00fck kell az <code>EventHandler&lt;T&gt;</code> interf\u00e9sz <code>void handle(T event)</code> met\u00f3dus\u00e1hoz, ahol a <code>T</code> t\u00edpus az esem\u00e9nynek megfelel\u0151en van megadva (gombnyom\u00e1s eset\u00e9n <code>ActionEvent</code>, eg\u00e9resem\u00e9nyek eset\u00e9n <code>MouseEvent</code>, stb.). Az <code>event</code> param\u00e9ter el is hagyhat\u00f3 abban az esetben, ha nincs r\u00e1 sz\u00fcks\u00e9g\u00fcnk.</p> <p>Megjegyz\u00e9s</p> <p>Az esem\u00e9nykezel\u0151ket nem csak a controllerben tudjuk megadni. Lehet\u0151s\u00e9g van arra is, hogy mag\u00e1ban az FXML-ben adjunk meg esem\u00e9nykezel\u0151ket:</p> <pre><code>&lt;?language JavaScript?&gt;\n&lt;?import javafx.scene.control.Button?&gt;\n\n&lt;fx:script&gt;\nfunction f1() {\n        java.lang.System.out.println(\"f1\");\n    };\n\n    function f2() {\n        java.lang.System.out.println(\"f2\");\n    };\n&lt;/fx:script&gt;\n&lt;Button text=\"Close\" onAction=\"f1();\"/&gt;\n</code></pre>"},{"location":"04_gyakorlat/#controller","title":"Controller","text":"<p>Az FXML-ben \u00f6ssze\u00e1ll\u00edtott user interface elmeivel term\u00e9szetesen tov\u00e1bbra is szeretn\u00e9nk az alkalmaz\u00e1sb\u00f3l kommunik\u00e1lni, de hogyan \u00e9rhetj\u00fck el \u0151ket Java k\u00f3db\u00f3l, ha az elemeket FXML-b\u0151l dinamikusan t\u00f6lti be az FXMLLoader, \u00e9s nem mi hoztuk k\u00e9zzel l\u00e9tre a k\u00f3dban a megfelel\u0151 GUI komponens t\u00edpus\u00fa v\u00e1ltoz\u00f3kat? A megold\u00e1s az <code>@FXML</code> annot\u00e1ci\u00f3 haszn\u00e1lata, mely a field neve alapj\u00e1n \u00e9s az FXML-ben tal\u00e1lhat\u00f3 <code>fx:id</code> alapj\u00e1n kezdem\u00e9nyezi az \u00f6sszek\u00f6ttet\u00e9st. Amennyiben a controller-ben ell\u00e1tunk field-eket/met\u00f3dusokat a <code>@FXML</code> marker annot\u00e1ci\u00f3val, akkor a field-eket/met\u00f3dusokat a SceneBuilder-ben is l\u00e1tni fogjuk \u00e9s megadhatjuk \u0151ket id-k\u00e9nt, illetve esem\u00e9nykezel\u0151k\u00e9nt.</p> <p>Megjegyz\u00e9s</p> <p>Amit a <code>@FXML</code> annot\u00e1ci\u00f3val ell\u00e1tunk nem sz\u00fcks\u00e9ges, hogy <code>public</code> l\u00e1that\u00f3s\u00e1ggal b\u00edrjon. Az annot\u00e1ci\u00f3 alkalmaz\u00e1sa az FXML-ben l\u00e1that\u00f3v\u00e1 teszi ak\u00e1r a private field-eket \u00e9s met\u00f3dusokat is. </p> <pre><code>@FXML\nTextField myTextF;\n...\nmyTextF.getText()\n</code></pre> <p>Az FXML \u00e9s a k\u00f3d k\u00f6zti kapcsolatot az annot\u00e1ci\u00f3 teremti meg, \u00e1m ahhoz hogy automatikusan tudja melyik FXML-ben deklar\u00e1lt <code>TextField</code>-et kell a v\u00e1ltoz\u00f3val \u00f6sszek\u00f6tni, a v\u00e1ltoz\u00f3 nev\u00e9nek meg kell egyeznie az FXML-ben deklar\u00e1lt elem <code>fx:id</code> attrib\u00fatum\u00e1val!</p> <p>Az FXML annot\u00e1ci\u00f3 haszn\u00e1lat\u00e1hoz r\u00e1ad\u00e1sul egy \u00faj f\u00fcgg\u0151s\u00e9get is fel kell venn\u00fcnk a POM.xml-be:</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;org.openjfx&lt;/groupId&gt;\n&lt;artifactId&gt;javafx-fxml&lt;/artifactId&gt;\n&lt;version&gt;11&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"04_gyakorlat/#fxml-betoltes","title":"FXML bet\u00f6lt\u00e9s","text":"<p>Az FXML-ben le\u00edrt user interface-eket be kell t\u00f6lteni az alkalmaz\u00e1s k\u00f3dban, hogy az ott le\u00edrt fel\u00fclet l\u00e9trej\u00f6jj\u00f6n, \u00e9s a <code>SceneGraph</code> el\u0151\u00e1lljon bel\u0151le, amit azt\u00e1n a szok\u00e1sos m\u00f3don meg tudunk jelen\u00edteni egy <code>Stage</code> tartalmak\u00e9nt. Erre a feladatra a Java k\u00f3dban az <code>FXMLLoader</code>-t haszn\u00e1ljuk.</p> <pre><code>FXMLLoader loader = new FXMLLoader(getClass().getResource(\"sample.fxml\"));\nParent root = loader.load();\nScene scene = new Scene(root, 300, 275);\n\nMyController controller = loader.getController();\n\nsetTitle(\"FXML Welcome\");\nsetScene(scene);\nshow();\n</code></pre> <p>Tipp</p> <p>A <code>sample.fxml</code> f\u00e1jlnak el\u00e9rhet\u0151nek kell lennie a class mellett, amit legegyszer\u0171bben \u00fagy tudunk el\u00e9rni, hogy az FXML \u00e1llom\u00e1nyokat az <code>src/main/resources</code> mappa al\u00e1 gy\u0171jtj\u00fck ugyanolyan mappa szerkezetben, amilyenben a bet\u00f6lt\u00e9st v\u00e9gz\u0151 oszt\u00e1ly csomag hierarchi\u00e1ja megk\u00f6vetel.</p> <p>A bet\u00f6lt\u00f6tt FXML tartalmat azt\u00e1n felhaszn\u00e1lhatjuk egy az egyben Scene Graph-k\u00e9nt (mivel, hogy az is) \u00e9s mint ahogyan a fenti p\u00e9ld\u00e1ban ak\u00e1r lehet ez a root node-ja egy <code>Scene</code>-nek, de az is el\u0151fordulhat, hogy csak egy r\u00e9szf\u00e1t t\u00f6lt\u00fcnk be egy FXML-b\u0151l \u00e9s az r\u00e9sze lesz egy komplexebb fel\u00fcletnek (\u00fajrafelhaszn\u00e1l\u00e1sn\u00e1l j\u00f3l j\u00f6het). Fontos, hogy az FXML \u00e1llom\u00e1nyokat fut\u00e1s k\u00f6zben t\u00f6lti be az <code>FXMLLoader</code>, \u00edgy csak ebben a pillanatban tudjuk meg, hogy az adott \u00e1llom\u00e1ny megfelel-e az FXML specifik\u00e1ci\u00f3j\u00e1nak.</p> <p>Az <code>FXMLLoader</code>-nek van statikus <code>load</code> met\u00f3dusa is, de javallott a fent bemutatott m\u00f3don haszn\u00e1lni, azaz p\u00e9ld\u00e1nyos\u00edtani, mivel \u00edgy k\u00e9rhet\u00fcnk referenci\u00e1t a controller-re is, mely sokszor j\u00f3 szolg\u00e1latot tesz. Ez azt is jelenti, hogy direktben nek\u00fcnk nem kell p\u00e9ld\u00e1nyos\u00edtanunk a controller-t, mivel azt elv\u00e9gzi helyett\u00fcnk az <code>FXMLLoader</code>.</p> <p>A haland\u00f3 embereknek \u00e1ltal\u00e1ban el\u00e9g lesz ez a sima konstruktor, mely az FXML \u00e1llom\u00e1nyra v\u00e1rja az URL hivatkoz\u00e1st, de \u00e9rdemes lehet a t\u00f6bbi konstruktort is megn\u00e9zni, mert van p\u00e9ld\u00e1ul, ami k\u00e9pes <code>ResourceBundle</code>-t fogadni, mely a t\u00f6bbnyelv\u0171 alkalmaz\u00e1sok \u00edr\u00e1s\u00e1t t\u00e1mogatja. P\u00e9ld\u00e1ul:</p> <pre><code>Locale locale = new Locale(\"en\");\nResourceBundle bundle = ResourceBundle.getBundle(\"messages\", locale); // messages_en.properties \u00e1llom\u00e1nyt t\u00f6lti be\nFXMLLoader fxmlLoader = new FXMLLoader(App.class.getResource(fxml + \".fxml\"), bundle);\n</code></pre> <p>Ezut\u00e1n az FXML-ben tal\u00e1lhat\u00f3 <code>text</code>-ekn\u00e9l megadhatunk <code>%_msg_id</code> alak\u00fa attrib\u00fatumokat, ahol <code>msg_id</code> a nyelvi f\u00e1jlokban az adott kulcs \u00e9rt\u00e9ke. P\u00e9ld\u00e1ul:</p> <pre><code>&lt;Button fx:id=\"secondaryButton\" text=\"%switch.to.primary\" onAction=\"#switchToPrimary\" /&gt;\n</code></pre> <p>mely sz\u00f6veg megfelel\u0151je a <code>messages_en.properties</code> f\u00e1jlban:</p> <pre><code>switch.to.primary=Switch to Primary View\n</code></pre> <p>A <code>ResourceBundle</code>-on fel\u00fcl megadhatunk a <code>builderFactory</code>-t, melyet az <code>FXMLLoader</code> haszn\u00e1l a k\u00fcl\u00f6nb\u00f6z\u0151 t\u00edpus\u00fa <code>Node</code>-ok l\u00e9trehoz\u00e1sakor, illetve ennek megfelel\u0151en az alap\u00e9rtelmezett callback-et is fel\u00fcl\u00edrhatjuk, mely a controller visszaad\u00e1s\u00e1t val\u00f3s\u00edtja meg (alapvet\u0151en a param\u00e9teres konstruktorral p\u00e9ld\u00e1nyos\u00edtja a controller-t a rendszer, de \u00edgy fel\u00fcl tudjuk ezt is \u00edrni). Ezen fel\u00fcl m\u00e9g az FXML dokumentumok parse-ol\u00e1sakor haszn\u00e1lt karakterk\u00f3dol\u00e1st is megadhatjuk (alap\u00e9rtelmezett UTF-8), tov\u00e1bb\u00e1 a bet\u00f6lt\u00e9shez haszn\u00e1land\u00f3 egy\u00e9b loader-eket. A fenti sorrendben megadott lehets\u00e9ges param\u00e9terekkel a legb\u0151vebb konstruktor a k\u00f6vetkez\u0151 m\u00f3don n\u00e9z ki:</p> <pre><code>FXMLLoader(\nURL location,\nResourceBundle resources,\nBuilderFactory BuilderFactory builderFactory,\nCallback&lt;Class&lt;?&gt;, Object&gt; controllerFactory,\nCharset charset,\nLinkedList&lt;FXMLLoader&gt; loaders\n)\n</code></pre> <p>Az els\u0151 k\u00e9t param\u00e9tert haszn\u00e1ljuk a leggyakrabban, a t\u00f6bbit csak nagyon speci\u00e1lis esetben kell haszn\u00e1lnunk.</p> <p>Az FXMLLoader objektumokon a fenti konstruktor param\u00e9terek alapj\u00e1n getter \u00e9s setter met\u00f3dusok is seg\u00edtik a munk\u00e1t, azaz egy-egy elem k\u00e9s\u0151bb is be\u00e1ll\u00edthat\u00f3 a hozz\u00e1tartoz\u00f3 setter-el (pl.: <code>setLocation(URL url)</code>), illetve k\u00e9s\u0151bb lek\u00e9rhet\u0151 az \u00e9rt\u00e9ke (pl.: <code>getCharset()</code>).</p> <p>Megjegyz\u00e9s</p> <p>Az <code>FXMLLoader</code> <code>load()</code> met\u00f3dusa generikus, mely seg\u00edts\u00e9g\u00e9vel megadhatjuk a root node t\u00edpus\u00e1t. P\u00e9ld\u00e1ul:</p> <pre><code>HBox rootNode = loader.&lt;HBox&gt;load();\n</code></pre> <p>Az FXMLLoader tov\u00e1bb\u00e1 t\u00e1mogatja az <code>InputStream</code>-b\u0151l t\u00f6rt\u00e9n\u0151 beolvas\u00e1st is.</p> <p>Az <code>FXMLLoader</code> haszn\u00e1lata sor\u00e1n, amikor bet\u00f6ltj\u00fck az FXML dokumentumot, akkor sokszor sz\u00fcks\u00e9g lehet arra, hogy az FXML-ben megadott grafikus elemeknek valamilyen kezd\u0151\u00e9rt\u00e9ket adjunk. Amennyiben a konstruktorban pr\u00f3b\u00e1ljuk be\u00e1ll\u00edtani az \u00e9rt\u00e9keket, akkor nagy val\u00f3sz\u00edn\u0171s\u00e9ggel <code>NullPointerException</code>-el tal\u00e1ljuk szembe magunkat, mivel a field injekt\u00e1l\u00e1sok m\u00e9g nem t\u00f6rt\u00e9nnek meg ilyenkor. Szerencs\u00e9re van egy egyszer\u0171 megold\u00e1s erre a probl\u00e9m\u00e1ra, mivel az <code>FXMLLoader</code> automatikusan megh\u00edvja az <code>initialize()</code> met\u00f3dust, akkor amikor a field injekt\u00e1l\u00e1sok megt\u00f6rt\u00e9ntek. Az <code>initailize()</code> met\u00f3dus fel\u00fcldefini\u00e1l\u00e1s\u00e1hoz implement\u00e1ljuk a <code>javafx.fxml.Initializable</code> interf\u00e9szt!</p> <pre><code>public class PrimaryController implements Initializable {\n\n@Override\npublic void initialize(URL location, ResourceBundle resources) {\n// itt lehet a fel\u00fcleti vez\u00e9rl\u0151k inicializ\u00e1l\u00e1s\u00e1t elv\u00e9gezni        \n}\n}\n</code></pre> <p>Feladat</p> <p>Hozzunk l\u00e9tre egy \u00faj projektet IntelliJ-n bel\u00fcl, melynek sor\u00e1n a <code>javafx-archetype-fxml</code>-t adjuk meg mint projekt archetype! Pr\u00f3b\u00e1ljuk meg meg\u00e9rteni a kapott projekt v\u00e1zat!</p> Megold\u00e1s <p></p>"},{"location":"04_gyakorlat/#fxml-nyalanksagok","title":"FXML nyal\u00e1nks\u00e1gok","text":"<p>A k\u00f6vetkez\u0151kben olyan FXML feature-\u00f6k ker\u00fclnek bemutat\u00e1sra, amelyek megk\u00f6nny\u00edthetik a munk\u00e1nkat, de n\u00e9lk\u00fcl\u00fck is teljes \u00e9letet \u00e9lhet\u00fcnk.</p>"},{"location":"04_gyakorlat/#ujrafelhasznalhato-objektumok-megadasa","title":"\u00dajrafelhaszn\u00e1lhat\u00f3 objektumok megad\u00e1sa","text":"<p>Az FXML-ben megadhatunk olyan elemeket, amiket t\u00f6bbsz\u00f6r is szeretn\u00e9nk felhaszn\u00e1lni. Ezeket az <code>fx:define</code> k\u00f6z\u00f6tt kell megadnunk, majd k\u00e9s\u0151bb az <code>fx:id</code>-ban megadott azonos\u00edt\u00f3t haszn\u00e1lhatjuk fel \u00fagy, hogy az el\u00e9 egy <code>$</code> jelet rakunk.</p> <pre><code>&lt;?import javafx.scene.layout.VBox?&gt;\n&lt;?import javafx.scene.control.Label?&gt;\n&lt;?import javafx.scene.control.Button?&gt;\n&lt;?import javafx.geometry.Insets?&gt;\n&lt;?import javafx.scene.control.ToggleGroup?&gt;\n&lt;?import javafx.scene.control.RadioButton?&gt;\n\n&lt;VBox fx:controller=\"hu.alkfejl.Test\" xmlns:fx=\"http://javafx.com/fxml\"&gt;\n&lt;fx:define&gt;\n&lt;Insets fx:id=\"margin\" top=\"5.0\" right=\"5.0\" bottom=\"5.0\" left=\"5.0\"/&gt;\n&lt;ToggleGroup fx:id=\"genderGroup\"/&gt;\n&lt;/fx:define&gt;\n\n&lt;Label text=\"Gender\" VBox.margin=\"$margin\"/&gt;\n&lt;RadioButton text=\"Male\" toggleGroup=\"$genderGroup\"/&gt;\n&lt;RadioButton text=\"Female\" toggleGroup=\"$genderGroup\"/&gt;\n&lt;RadioButton text=\"Unknown\" toggleGroup=\"$genderGroup\" selected=\"true\"/&gt;\n&lt;Button text=\"Close\" VBox.margin=\"$margin\"/&gt;\n&lt;/VBox&gt;\n</code></pre> <p>A <code>$</code>-al kezd\u0151d\u0151 megad\u00e1sokat a rendszer objektum referenciak\u00e9nt kezeli. Amennyiben a <code>$</code> az azonos\u00edt\u00f3 r\u00e9sz\u00e9t k\u00e9pezi akkor escape-elj\u00fck <code>\\$</code>-al!</p>"},{"location":"04_gyakorlat/#location-megadasa","title":"Location megad\u00e1sa","text":"<p>A <code>@</code>-al kezd\u0151d\u0151 attrib\u00fatum \u00e9rt\u00e9kek mindig egy helyre (f\u00e1jlra, pl.: egy k\u00e9pre, vagy FXML \u00e1llom\u00e1nyra) mutatnak. A <code>@/</code>-el kezd\u0151d\u0151 megad\u00e1s a classpath-hoz viszony\u00edtott relat\u00edv megad\u00e1si m\u00f3d. Amennyiben <code>/</code> n\u00e9lk\u00fcl haszn\u00e1ljuk akkor az adott FXML f\u00e1jlhoz viszony\u00edtott relat\u00edv megad\u00e1si m\u00f3dot k\u00f6vet\u00fcnk.</p> <p>A k\u00f6vetkez\u0151 p\u00e9ld\u00e1ban egy <code>ImageView</code>-ban megjelen\u00edteni k\u00edv\u00e1nt k\u00e9p URL-j\u00e9t adjuk meg (classpath-hoz viszony\u00edtva):</p> <pre><code>&lt;ImageView&gt;\n&lt;Image url=\"@/resources/images/logo.jpg\"/&gt;\n&lt;/ImageView&gt;\n</code></pre>"},{"location":"04_gyakorlat/#fxml-include","title":"FXML include","text":"<p>Az FXML dokumentumok k\u00f6z\u00f6tt haszn\u00e1lhatunk include-ot is, azaz az egyik FXML dokumentumb\u00f3l haszn\u00e1lhatunk egy m\u00e1sikat include form\u00e1j\u00e1ban. Ennek form\u00e1ja a k\u00f6vetkez\u0151:</p> <pre><code>&lt;fx:include source=\"other_fxml_doc\"/&gt;\n</code></pre> <p>A szab\u00e1ly az, hogy minden FXML dokumentumnak egy kontrollere lehet. Amikor egym\u00e1sba \u00e1gyazunk FXML dokumentumokat, akkor is mindegyiknek lehet saj\u00e1t kontroller oszt\u00e1lya.</p>"},{"location":"04_gyakorlat/#konstansok-hasznalata","title":"Konstansok haszn\u00e1lata","text":"<p>Az FXML-ben felhaszn\u00e1lhatjuk a Java oszt\u00e1lyokban megadott static final konstansok \u00e9rt\u00e9k\u00e9t. Ezeket az \u00e9rt\u00e9keket az <code>fx:constant</code>-al hivatkozhatjuk. P\u00e9ld\u00e1ul a <code>Long</code> oszt\u00e1ly <code>MAX_VALUE</code> \u00e9rt\u00e9k\u00e9t a k\u00f6vetkez\u0151k\u00e9ppen haszn\u00e1lhatjuk:</p> <pre><code>&lt;Long fx:constant=\"MAX_VALUE\"/&gt;\n</code></pre> <p>Egy nagyobb p\u00e9ldak\u00e9nt tekints\u00fck a k\u00f6vetkez\u0151t:</p> <pre><code>&lt;VBox xmlns:fx=\"http://javafx.com/fxml\"&gt;\n&lt;fx:define&gt;\n&lt;Integer fx:constant=\"MAX_VALUE\" fx:id=\"maxInt\"/&gt;\n&lt;/fx:define&gt;\n&lt;alignment&gt;&lt;Pos fx:constant=\"CENTER\"/&gt;&lt;/alignment&gt;\n\n&lt;TextField text=\"$maxInt\"/&gt;\n&lt;TextField&gt;\n&lt;text&gt;&lt;Long fx:constant=\"MIN_VALUE\"/&gt;&lt;/text&gt;\n&lt;/TextField&gt;\n&lt;/VBox&gt;\n</code></pre> <p>A p\u00e9ld\u00e1ban egy <code>VBox</code>-ban k\u00e9t <code>TextField</code>-et jelen\u00edt\u00fcnk meg, az egyiknek az <code>Integer</code> legkisebb \u00e9rt\u00e9k\u00e9t adjuk sz\u00f6vegk\u00e9nt, m\u00edg a m\u00e1siknak a legnagyobbat. Ezen fel\u00fcl l\u00e1thatunk p\u00e9ld\u00e1t a <code>VBox</code> <code>alignment</code> tulajdons\u00e1g\u00e1nak be\u00e1ll\u00edt\u00e1s\u00e1ra is.</p>"},{"location":"04_gyakorlat/#fxml-elemek-hivatkozasa","title":"FXML elemek hivatkoz\u00e1sa","text":"<p>Egy FXML dokumentumon bel\u00fcl hivatkozhatunk az elemekre az <code>fx:reference</code> elem haszn\u00e1lat\u00e1val.</p> <pre><code>&lt;VBox xmlns:fx=\"http://javafx.com/fxml\"&gt;\n&lt;fx:define&gt;\n&lt;Image url=\"resources/images/test.jpg\" fx:id=\"myImg\"/&gt;\n&lt;/fx:define&gt;\n&lt;ImageView&gt;\n&lt;image&gt;\n&lt;fx:reference source=\"myImg\"/&gt;\n&lt;/image&gt;\n&lt;/ImageView&gt;\n&lt;/VBox&gt;\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban az <code>ImageView</code>-ban megjelen\u00edtend\u0151 k\u00e9pet egy referenci\u00e1val adjuk meg. A fenti k\u00f3d ekvivalens a k\u00f6vetkez\u0151vel:</p> <pre><code>&lt;VBox xmlns:fx=\"http://javafx.com/fxml\"&gt;\n&lt;fx:define&gt;\n&lt;Image url=\"resources/images/test.jpg\" fx:id=\"myImg\"/&gt;\n&lt;/fx:define&gt;\n&lt;ImageView image=\"$myImg\"/&gt;\n&lt;/VBox&gt;\n</code></pre>"},{"location":"04_gyakorlat/#elemek-masolasa","title":"Elemek m\u00e1sol\u00e1sa","text":"<p>El\u0151fordulhat, hogy egy FXML elemet le szeretn\u00e9nk m\u00e1solni az \u00f6sszes attrib\u00fatum\u00e1val egy\u00fctt. Erre az <code>&lt;fx:copy&gt;</code>-t haszn\u00e1lhatjuk.</p> <pre><code>&lt;fx:copy source=\"fx:id of the source object\" /&gt;\n</code></pre> <p>Ahhoz, hogy a <code>copy</code> m\u0171k\u00f6dj\u00f6n az adott oszt\u00e1lynak rendelkeznie kell egy copy konstruktorral, azaz olyan konstruktorral, amely az adott oszt\u00e1ly egy objektum\u00e1t v\u00e1rja. P\u00e9ld\u00e1ul:</p> <pre><code>public class Person {\n\nprivate Long id;\nprivate String name;\n\npublic Person() {\n}\n\n// The copy constructor\npublic Person(Person person) {\nthis.id = person.id + 100;\nthis.name = person.name + \" (Copied)\";\n}\n...\n}\n</code></pre>"},{"location":"04_gyakorlat/#stiluslapok-hasznalata","title":"St\u00edluslapok haszn\u00e1lata","text":"<p>Ahogyan a webes k\u00f6rnyezetben is, JavaFX-ben is lehet\u0151s\u00e9g van, hogy a megjelen\u00e9st, a form\u00e1z\u00e1st szem\u00e9lyre szabjuk \u00e9s ezen szab\u00e1lyok \u00f6sszess\u00e9g\u00e9t lev\u00e1lasszuk magukr\u00f3l a UI elemekr\u0151l \u00e9s egy szepar\u00e1lt helyen adjuk meg \u0151ket. A nagyszer\u0171 az eg\u00e9szben, hogy nem kell egy \u00faj dolgot megtanulni, mivel haszn\u00e1lhatunk CSS st\u00edluslapokat a form\u00e1z\u00e1sok megad\u00e1s\u00e1hoz.</p> <p>Egy p\u00e9lda, amely m\u00e1r JavaFX-ben haszn\u00e1lhat\u00f3 (\u00e9s egy kis eml\u00e9keztet\u0151):</p> <pre><code>.button {\n-fx-background-color: red;\n-fx-text-fill: white;\n}\n</code></pre> <p>A <code>.button</code> az \u00fagynevezett selector, melyhez property-value p\u00e1rosokat adhatunk meg a k\u00edv\u00e1nt form\u00e1z\u00e1sok el\u00e9r\u00e9s\u00e9nek \u00e9rdek\u00e9ben. A f\u0151 k\u00fcl\u00f6nbs\u00e9g, hogy a property-k megad\u00e1s\u00e1n\u00e1l a <code>-fx-</code> prefixet is meg kell adnunk!</p> <p>A fent megadott st\u00edluslapot ments\u00fck el p\u00e9ld\u00e1ul <code>resources/css/style.css</code> n\u00e9ven! Ezut\u00e1n v\u00e1lasszuk ki azt a <code>Scene</code>-t, amelyikre szeretn\u00e9nk az adott CSS-t alkalmazni \u00e9s a k\u00f6vetkez\u0151 k\u00f3ddal tegy\u00fck is ezt meg!</p> <pre><code>scene.getStylesheets().add(\"/css/style.css\");\n</code></pre> <p>A <code>scene.getStylesheets</code> egy <code>ObservableList</code>-et ad vissza, melyhez hozz\u00e1adhatunk egy vagy t\u00f6bb st\u00edluslapot, amit az adott <code>Scene</code>-re \u00e9rtelmezni szeretn\u00e9nk. A st\u00edluslapok <code>Node</code>-okhoz rendel\u00e9se azonban nem korl\u00e1toz\u00f3dik puszt\u00e1n a <code>Scene</code>-re. St\u00edluslapokat rendelhet\u00fcnk a <code>Parent</code> t\u00edpus\u00fa elemekhez is.</p>"},{"location":"04_gyakorlat/#nevkonvenciok","title":"N\u00e9vkonvenci\u00f3k","text":"<p>A JavaFX-ben tal\u00e1lhat\u00f3 oszt\u00e1lyokb\u00f3l haszn\u00e1lt objektumokat (\u00f6sszeset) a class-selectorral tudjuk kiv\u00e1lasztani, de csupa kisbet\u0171vel kell \u00edrnunk az oszt\u00e1ly nev\u00e9t. P\u00e9ld\u00e1ul a <code>Button</code> t\u00edpus\u00fa objektumokat a <code>.button</code>-el.</p> <p>Amikor \u00f6sszetett neve van egy oszt\u00e1lynak (pl.: ComboBox), akkor szint\u00e9n csak kisbet\u0171ket haszn\u00e1lunk, de a szavak k\u00f6z\u00e9 k\u00f6t\u0151jelet \u00edrunk (pl.: combo-box). A Java oszt\u00e1lyok haszn\u00e1lat\u00e1r\u00f3l k\u00e9s\u0151bb m\u00e9g r\u00e9szletesebben \u00edrunk.</p>"},{"location":"04_gyakorlat/#alapertelmezett-stiluslap","title":"Alap\u00e9rtelmezett st\u00edluslap","text":"<p>A JavaFX egy be\u00e9p\u00edtett, alap\u00e9rtelmezett st\u00edluslapot haszn\u00e1l, melyet <code>MODENA</code>-nak h\u00edvnak. Mi magunk is lek\u00e9rhetj\u00fck \u00e9s be\u00e1ll\u00edthatjuk az alap\u00e9rtelmezett st\u00edluslapot, melyet alkalmaz\u00e1sszinten fog haszn\u00e1lni a rendszer.</p> <pre><code>Application.setUserAgentStylesheet(Application.STYLESHEET_CASPIAN); // A Caspian volt a r\u00e9gebbi alap\u00e9rtelmez\u00e9s\nApplication.getUserAgentStylesheet(); // itt csak egy st\u00edluslap adhat\u00f3 meg ez\u00e9rt nem list\u00e1t ad vissza\n</code></pre> <p>A getter adhat vissza <code>null</code>-t is, ami azt jelzi, hogy a rendszer az alap\u00e9rtelmez\u00e9st haszn\u00e1lja.</p>"},{"location":"04_gyakorlat/#inline-stilus","title":"Inline st\u00edlus","text":"<p>Az eddig l\u00e1tottak alapj\u00e1n k\u00fcls\u0151 st\u00edluslapokat tudunk megadni, ugyanakkor a <code>Node</code> t\u00edpus\u00fa objektumok rendelkeznek inline st\u00edlussal is, melyhez a k\u00f6vetkez\u0151 met\u00f3dusok adnak seg\u00edts\u00e9get:</p> <pre><code>setStyle(String inlineStyle)\ngetStyle()\n</code></pre> <p>P\u00e9ld\u00e1ul egy gomb inline form\u00e1z\u00e1s\u00e1nak megad\u00e1s\u00e1hoz:</p> <pre><code>Button btn = new Button(\"Button\");\nbtn.setStyle(\"-fx-text-fill: red; -fx-font-weight: bold;\");\n</code></pre>"},{"location":"04_gyakorlat/#stilusok-prioritasa","title":"St\u00edlusok priorit\u00e1sa","text":"<p>Egy-egy vez\u00e9rl\u0151elemre t\u00f6bb forr\u00e1sb\u00f3l is \u00e9rkezhetnek form\u00e1z\u00e1si szab\u00e1lyok (pl.: egy k\u00fcls\u0151 st\u00edluslapb\u00f3l, a default st\u00edlusb\u00f3l, inline, property-b\u0151l, stb.). Tekints\u00fck az al\u00e1bbi p\u00e9ld\u00e1t:</p> <p><code>style.css</code> <pre><code>.button {\n-fx-font-size: 24px;\n}\n</code></pre></p> <p><code>App.java</code> <pre><code>Button btn = new Button(\"Button\");\nbtn.setStyle(\"-fx-font-size: 16px\"); //inline style\nbtn.setFont(new Font(10)); // property setting\n\nScene scene = new Scene(btn);\nscene.getStylesheets().addAll(\"resources/css/style.css\");\n</code></pre></p> <p>A megadott <code>font-size</code>-ok k\u00f6z\u00fcl melyiket fogja \u00e9rtelmezni a rendszer? A priorit\u00e1s a k\u00f6vetkez\u0151 (legmagasabbt\u00f3l a legalacsonyabb priorit\u00e1sig):</p> <ul> <li>Inline style (legmagasabb, azaz fel\u00fcl\u00edr minden egy\u00e9b helyen megadottat)</li> <li>Sz\u00fcl\u0151 st\u00edluslapja</li> <li>Scene st\u00edluslapja</li> <li>JavaFX API seg\u00edts\u00e9g\u00e9vel be\u00e1ll\u00edtott tulajdons\u00e1gok (<code>btn.setFont(new Font(10));</code>)</li> <li>Alap\u00e9rtelmezett st\u00edluslapok (legkisebb priorit\u00e1s)</li> </ul>"},{"location":"04_gyakorlat/#selector-ok","title":"Selector-ok","text":"<p>JavaFX-ben is haszn\u00e1lhatunk k\u00fcl\u00f6nb\u00f6z\u0151 selector-okat, melyek k\u00f6z\u00fcl a legfontosabbakat vessz\u00fck sorra.</p>"},{"location":"04_gyakorlat/#class-selector","title":"Class selector","text":"<p>Minden <code>Node</code> t\u00edpus\u00fa elem rendelkezik a <code>styleClass</code> v\u00e1ltoz\u00f3val, melynek t\u00edpusa <code>ObservableList&lt;String&gt;</code>, azaz egy <code>Node</code>-ot t\u00f6bb oszt\u00e1lyhoz is hozz\u00e1rendelhet\u00fcnk.</p> <p>Fontos</p> <p>Ne keverj\u00fck \u00f6ssze az objektum oszt\u00e1ly\u00e1t (t\u00edpus\u00e1t), a CSS oszt\u00e1llyal!</p> <p>A class selector hasonl\u00f3an m\u0171k\u00f6dik, mint hagyom\u00e1nyos CSS k\u00f6rnyezetben, azaz a <code>.</code> prefixszel kell ell\u00e1tnunk ezeket a selector-okat a CSS-ben.</p> <p>Kor\u00e1bban l\u00e1ttuk, hogy az \u00f6sszes gombot is kiv\u00e1laszthatjuk ha a <code>.button</code> selector-t haszn\u00e1ljuk. Ennek oka, hogy a JavaFX sok esetben alap\u00e9rtelmezett styleClass-t is megad az elemekhez, mely az adott objektum t\u00edpus\u00e1nak kisbet\u0171s\u00edtett \u00e9s k\u00f6t\u0151jeles\u00edtett v\u00e1ltozata. Fontos megjegyezni, hogy a kont\u00e9ner oszt\u00e1lyokhoz nem rendel hozz\u00e1 alap\u00e9rtelmezett styleClass-t a rendszer.</p> <p>Az alap\u00e9rtelmezett styleClass-ok beleker\u00fclnek az eml\u00edtett <code>ObservableList&lt;String&gt;</code> t\u00edpus\u00fa list\u00e1ba, \u00edgy egy adott elemre lek\u00e9rhetj\u00fck azok list\u00e1j\u00e1t, pl.: <code>btn.getStyleClass()</code>.</p>"},{"location":"04_gyakorlat/#id-selector","title":"id selector","text":"<p>Hasonl\u00f3k\u00e9ppen a hagyom\u00e1nyos CSS-hez, itt is haszn\u00e1lhatunk id alap\u00fa selector-t, melyhez a <code>#</code> prefixet kell haszn\u00e1lnunk! Pl.:</p> <pre><code>#myBtn{\n-fx-font-size: 24px;\n}\n</code></pre> <pre><code>Button btn = new Button(\"Push me\");\nbtn.setId(\"myBtn\"); // FXML-ben az fx:id-val is ugyanezt a hat\u00e1st \u00e9rhetj\u00fck el\n...\n</code></pre>"},{"location":"04_gyakorlat/#egyeb-selector-ok","title":"Egy\u00e9b selector-ok","text":"<ul> <li>JavaFX-ben is haszn\u00e1lhat\u00f3 az univerz\u00e1lis selector, azaz a <code>*</code>, mely minden <code>Node</code>-ra illeszkedik.</li> <li>T\u00f6bb selector csoportos\u00edt\u00e1sakor haszn\u00e1lhat\u00f3 a felsorol\u00e1s, melynek sor\u00e1n a selector-ok k\u00f6z\u00e9 <code>,</code>-t kell tenn\u00fcnk (<code>.hbox, .button</code> -&gt; hbox \u00e9s button st\u00edlusoszt\u00e1llyal rendelkez\u0151 elemek egy\u00fcttes kiv\u00e1laszt\u00e1sa)</li> <li>Lesz\u00e1rmazott kiv\u00e1laszt\u00e1sn\u00e1l a selectorok k\u00f6z\u00e9 space-t kell tenn\u00fcnk (pl.: <code>.hbox .button</code> -&gt; hbox st\u00edlus\u00fa elemeken bel\u00fcli gombok kiv\u00e1laszt\u00e1sa)</li> <li>child selector-t a <code>&gt;</code> haszn\u00e1lat\u00e1val alkalmazhatunk (pl.: <code>.hbox &gt; .button</code> -&gt; hbox-on bel\u00fcli button gyerekek kiv\u00e1laszt\u00e1sa)</li> <li>A testv\u00e9r (sibling) \u00e9s az attrib\u00fatum selector-ok NEM t\u00e1mogatottak JavaFX-ben!</li> <li>\u00e1llapot alap\u00fa selectorok a <code>:</code>-al adhat\u00f3ak meg (pl.: <code>.button:hover</code>)</li> </ul> <p>A selector-okat nem csak a CSS-ben haszn\u00e1lhatjuk fel, arra is j\u00f3k, hogy egy <code>Node</code> keres\u00e9s\u00e9n\u00e9l felhaszn\u00e1ljuk \u0151ket. A <code>Scene</code> \u00e9s maga a <code>Node</code> is rendelkezik egy <code>lookup(String selector)</code> met\u00f3dussal, melynek param\u00e9terk\u00e9nt megadhat\u00f3 tetsz\u0151leges selector, majd a met\u00f3dus ez alapj\u00e1n visszaadja a megtal\u00e1lt <code>Node</code>-ot. A <code>Scene</code> met\u00f3dusa a teljes SceneGraph-ban keres, m\u00edg a <code>Node</code>-ra h\u00edvott az \u00e1ltala tartalmazott <code>Node</code>-ok k\u00f6z\u00f6tt keres (mag\u00e1t is bele\u00e9rtve). Amennyiben t\u00f6bb <code>Node</code>-ot szeretn\u00e9nk egyszerre kiv\u00e1lasztani, akkor haszn\u00e1lhatjuk a <code>lookupAll(String selector)</code> met\u00f3dust, mely <code>Set&lt;Node&gt;</code>-al t\u00e9r vissza. Pl.:</p> <pre><code>Node node = scene.lookup(\"#myBtn\");\nNodes buttons = scene.lookupAll(\".button\");\n</code></pre>"},{"location":"04_gyakorlat/#videok","title":"Vide\u00f3k","text":"<ul> <li>FXML Alapok</li> <li>FXML field injection \u00e9s esem\u00e9nykezel\u00e9s</li> <li>FXMLLoader \u00e9s ResourceBundle haszn\u00e1lata</li> <li>Initializable interf\u00e9sz \u00e9s Node-ok keres\u00e9se</li> <li>FXML archetype</li> <li>St\u00edluslapok haszn\u00e1lata JavaFX-ben</li> </ul>"},{"location":"04_gyakorlat/#referenciak","title":"Referenci\u00e1k","text":"<ul> <li>FXML referencia</li> <li>CSS referencia</li> </ul>"},{"location":"05_gyakorlat/","title":"5. gyakorlat","text":""},{"location":"05_gyakorlat/#mvc-bevezetes","title":"MVC bevezet\u00e9s","text":"<p>Az MVC architektur\u00e1lis model az egyik legegyszer\u0171bb mind k\u00f6z\u00fcl. 3 j\u00f3l elk\u00fcl\u00f6n\u00edthet\u0151 r\u00e9teget defini\u00e1l melyek:</p> <ul> <li>Model (M)</li> <li>View (V)</li> <li>Controller (C)</li> </ul> <p>A r\u00e9tegek k\u00f6z\u00fcl a felhaszn\u00e1l\u00f3 a View-n kereszt\u00fcl kommunik\u00e1l. A felhaszn\u00e1l\u00f3i interakci\u00f3 valamilyen esem\u00e9nyeket gener\u00e1l, melyre a Controller a megfelel\u0151 h\u00edv\u00e1sokat ejtheti meg. A Controller tekinthet\u0151 egy k\u00f6z\u00e9ps\u0151 r\u00e9tegnek, mert a Model r\u00e9teget csak \u0151 k\u00e9pes adatm\u00f3dos\u00edt\u00e1si c\u00e9llal el\u00e9rni. Teh\u00e1t a View-b\u00f3l p\u00e9ld\u00e1ul sosem kezdem\u00e9nyez\u00fcnk adatb\u00e1zis m\u0171veleteket, mert az vesz\u00e9lyes lenne az alkalmaz\u00e1s szempontj\u00e1b\u00f3l, illetve a View-nak nem is kell tudnia arr\u00f3l, hogy az adat honnan j\u00f6n \u00e9s hogyan van t\u00e1rolva. Sz\u00e1m\u00e1ra az a l\u00e9nyeg, hogy tudja hogy milyen adatokat kell megjelen\u00edtenie a felhaszn\u00e1l\u00f3 sz\u00e1m\u00e1ra.</p> <p>A Controller-ben v\u00e9gz\u00fcnk minden \u00fczleti logik\u00e1val kapcsolatos tev\u00e9kenys\u00e9get. P\u00e9ld\u00e1ul bizonyos mez\u0151k \u00e9rt\u00e9ke alapj\u00e1n egy\u00e9b \u00e9rt\u00e9keket \u00e1ll\u00edthatunk be automatikusan, melyet m\u00e1r a felhaszn\u00e1l\u00f3 nem l\u00e1t.</p> <p>A Model r\u00e9teg t\u00f6bb dolgot foglalhat mag\u00e1ban. Egyr\u00e9szt a Bean oszt\u00e1lyainkat rendre itt szoktuk l\u00e9trehozni (A Bean defin\u00edci\u00f3j\u00e1t l\u00e1sd k\u00e9s\u0151bb). M\u00e1sr\u00e9szt az \u00fagynevezett DAO is itt szokott helyet foglalni, mely az adatel\u00e9r\u00e9s\u00e9rt felel\u0151s, legyen az egy adatb\u00e1zisban vagy egy f\u00e1jlban.</p> <p>Ezen fel\u00fcl a View r\u00e9tegnek nyilv\u00e1n sz\u00fcks\u00e9ge lehet magukra a Bean-ekre is, ez\u00e9rt \u0151 haszn\u00e1lhat ilyen jelleg\u0171 olvas\u00e1si m\u0171veleteket k\u00f6zvetlen\u00fcl a Model r\u00e9tegb\u0151l.</p> <p>Az im\u00e9nt le\u00edrtak grafikusan szeml\u00e9ltetve:</p> <p></p>"},{"location":"05_gyakorlat/#model-reteg","title":"Model r\u00e9teg","text":""},{"location":"05_gyakorlat/#bean-osztalyok","title":"Bean oszt\u00e1lyok","text":"<p>3 tulajdons\u00e1ggal kell rendelkeznie egy <code>Bean</code> oszt\u00e1lynak:</p> <ul> <li>Van publikus default konstruktora</li> <li>Minden adattaghoz tartozik publikus getter/setter (m\u00e1sn\u00e9ven accessorok)</li> <li>Az oszt\u00e1lynak szerializ\u00e1lhat\u00f3nak kell lennie</li> </ul> <p>Az els\u0151 kett\u0151t tal\u00e1n nem kell elmagyar\u00e1zni, de mi is az a szerializ\u00e1lhat\u00f3s\u00e1g? A Java rendelkezik az \u00fagynevezett objektum szerializ\u00e1l\u00e1ssal, ami szerint egy objektum reprezent\u00e1lhat\u00f3 egy b\u00e1jt stream-mel, mely tartalmazza az objektum t\u00edpus\u00e1t, illetve hogy maga az objektum milyen t\u00edpus\u00fa fieldekkel rendelkezik, tov\u00e1bb\u00e1 a konkr\u00e9t adatot is ezekhez a fieldekhez. M\u00e1ssz\u00f3val a b\u00e1jtstreamben benne van az objektum aktu\u00e1lis \u00e1llapota (melyik field milyen \u00e9rt\u00e9ket t\u00e1rol). Amennyiben ezt a b\u00e1jtfolyamot valahova elmentj\u00fck ezt nevezz\u00fck szerializ\u00e1ci\u00f3nak. Ez megfelel az objektum aktu\u00e1lis \u00e1llapot\u00e1nak elment\u00e9s\u00e9vel. P\u00e9ld\u00e1ul lementhetj\u00fck egy objektum \u00e1llapot\u00e1t ilyen m\u00f3don egy f\u00e1jlba is, de p\u00e9ld\u00e1ul az is szerializ\u00e1ci\u00f3, amikor egy objektumot JSON form\u00e1ra alak\u00edtunk (k\u00f6zkedvelt keretrendszer a Jackson ennek haszn\u00e1lat\u00e1ra). Amikor az elmentett \u00e1llapotot visszat\u00f6ltj\u00fck (a mem\u00f3ri\u00e1ba), akkor deszerializ\u00e1ci\u00f3r\u00f3l besz\u00e9l\u00fcnk. Ahhoz, hogy egy oszt\u00e1ly objektumai szerializ\u00e1lhat\u00f3ak legyenek egyszer\u0171en meg kell val\u00f3s\u00edtanunk a <code>Serializable</code> interface-t. Eset\u00fcnkben egyel\u0151re nem fogjuk alkalmazni az interf\u00e9szt. Amint sz\u00fcks\u00e9g\u00fcnk lesz r\u00e1, akkor azt \u00fagyis k\u00f6nnyen megtehetj\u00fck.</p>"},{"location":"05_gyakorlat/#data-access-object-dao","title":"Data Access Object (DAO)","text":"<p>Miut\u00e1n elk\u00e9sz\u00fcltek a bean-ek, elkezdhet\u00fcnk dolgozni a DAO-n. A DAO (Data Access Object) az adatel\u00e9r\u00e9si r\u00e9teget adja meg, mely a model r\u00e9tegen bel\u00fclre sorolhat\u00f3. A konkr\u00e9t hozz\u00e1ad\u00e1s \u00e9s list\u00e1z\u00e1s itt t\u00f6rt\u00e9nik (m\u00e1rmint az adatok t\u00e1rol\u00e1sa, legyen az mem\u00f3ria, adatb\u00e1zis, f\u00e1jl vagy b\u00e1rmi egy\u00e9b). A controller r\u00e9teg\u00fcnk majd ezt fogja felhaszn\u00e1lni. Fontos, hogy itt tartsuk mindig szem el\u0151tt, hogy interface m\u00f6g\u00e9 rejts\u00fck az aktu\u00e1lis implement\u00e1ci\u00f3t, mely biztos\u00edtja, hogy k\u00f6nnyen cser\u00e9lhet\u0151 legyen a megval\u00f3s\u00edt\u00e1s.</p> <p>El\u0151sz\u00f6r k\u00e9sz\u00edts\u00fck el a j\u00f3l defini\u00e1lt interface-t! Ehhez k\u00e9sz\u00edts\u00fcnk egy \u00faj interface-t <code>UtazasDAO</code> n\u00e9ven a <code>hu.alkfejl.dao</code> csomagba!</p> <pre><code>public interface UtazasDAO {\nboolean add(Utazas utazas);\nList&lt;Utazas&gt; find(Utazas utazas);\n}\n</code></pre> <p>Els\u0151 k\u00f6rben 2 implement\u00e1land\u00f3 met\u00f3dussal rendelkezik, melyek m\u00e1r felhaszn\u00e1lj\u00e1k ez el\u0151z\u0151leg defini\u00e1lt bean oszt\u00e1lyunkat. A 3 megadott met\u00f3dus lenyomat az \u00f6sszes kontakt list\u00e1z\u00e1s\u00e1hoz, egy kontakt ment\u00e9s\u00e9hez/m\u00f3dos\u00edt\u00e1s\u00e1hoz \u00e9s a t\u00f6rl\u00e9shez lesz majd haszn\u00e1lhat\u00f3. A hozz\u00e1ad\u00e1sn\u00e1l fontos, hogy visszaadunk egy <code>Utazas</code> \u00e9rt\u00e9ket is, melynek szerepe, hogy a controller fel\u00e9 jelezze, hogy sikeresen megt\u00f6rt\u00e9nt a besz\u00far\u00e1s vagy valami hiba v\u00e9gett ez meghi\u00fasult (ebben az esetben adhat vissza <code>null</code>-t is ak\u00e1r). Nyilv\u00e1n nem t\u00fal szofisztik\u00e1lt azt k\u00f6z\u00f6lni a felhaszn\u00e1l\u00f3val, hogy 'Valami hiba t\u00f6rt\u00e9nt', mivel a felhaszn\u00e1l\u00f3 \u00e1ltal\u00e1ban arra is k\u00edv\u00e1ncsi, hogy mi volt a hiba oka. Erre most nem t\u00e9r\u00fcnk ki, de b\u0151v\u00edt\u00e9si lehet\u0151s\u00e9gk\u00e9nt mindenki elk\u00e9sz\u00edtheti saj\u00e1t maga sz\u00e1m\u00e1ra.</p> <p>Miut\u00e1n megvan az interface, el kell k\u00e9sz\u00edten\u00fcnk egy t\u00e9nyleges implement\u00e1ci\u00f3t is hozz\u00e1. Ehhez k\u00e9sz\u00edts\u00fcnk egy oszt\u00e1lyt az interface mell\u00e9 <code>ContactDAOImpl</code> n\u00e9ven. A megval\u00f3s\u00edt\u00e1sunk jelen esetben egy SQLite adatb\u00e1zist fog haszn\u00e1lni, ugyanakkor a konkr\u00e9t adatb\u00e1zis nem jelenik meg a k\u00f3dban, hiszen a JDBC - Java Database Connectivity API-t haszn\u00e1ljuk. A JDBC egys\u00e9ges interf\u00e9szt ad a k\u00fcl\u00f6nb\u00f6z\u0151 adatb\u00e1zisok kezel\u00e9s\u00e9hez, melyeket ak\u00e1r kombin\u00e1lhatjuk is egy alkalmaz\u00e1son bel\u00fcl. A konkr\u00e9t megval\u00f3s\u00edt\u00e1sokat, melyeket az adatb\u00e1zis gy\u00e1rt\u00f3k (vendorok) szolg\u00e1ltatj\u00e1k, a JDBC <code>DriverManager</code> oszt\u00e1ly\u00e1n kereszt\u00fcl regisztr\u00e1lhatjuk. A <code>DriverManager</code> tov\u00e1bb\u00e1 egy <code>Connection</code> factoryk\u00e9nt is funkcion\u00e1l, azaz t\u0151le tudunk adatb\u00e1zis kapcsolati objektumokat k\u00e9rni a <code>getConnection()</code> factory met\u00f3duson kereszt\u00fcl. A JDBC seg\u00edts\u00e9g\u00e9vel mind DDL (Data Definition Language) \u00e9s DML (Data Manipulation Language) parancsokat is kiadhatunk, tov\u00e1bb\u00e1 t\u00e1rolt elj\u00e1r\u00e1sokat is megh\u00edvhatunk. Az SQL utas\u00edt\u00e1sokhoz a JDBC a k\u00f6vetkez\u0151 oszt\u00e1lyokat biztos\u00edtja:</p> <ul> <li>Statement: Egyszer\u0171 param\u00e9ter n\u00e9lk\u00fcli utas\u00edt\u00e1sokhoz. P\u00e9ld\u00e1ul <code>SELECT * FROM CONTACT</code>.</li> <li>PreparedStatement: Param\u00e9teres lek\u00e9rdez\u00e9sekhez. P\u00e9ld\u00e1ul: <code>SELECT * FROM CONTACT WHERE id = ?</code>, ahol az <code>id</code> \u00e9rt\u00e9k\u00e9t a valamilyen tetsz\u0151leges \u00e9rt\u00e9kre \u00e1ll\u00edthatjuk majd be.</li> <li>CallableStatement: T\u00e1rolt elj\u00e1r\u00e1sok haszn\u00e1lat\u00e1hoz/megh\u00edv\u00e1s\u00e1hoz. P\u00e9ld\u00e1ul: <code>{call proc_name(?,?)}</code>.</li> </ul> <p>Ezek k\u00f6z\u00fcl a k\u00e9s\u0151bbiekben az els\u0151 kett\u0151t fogjuk haszn\u00e1lni. A JDBC tov\u00e1bb\u00e1 t\u00e1mogatja a tranzakci\u00f3kezel\u00e9st is, de ezzel a kurzuson nem foglalkozunk.</p> <p>Mag\u00e1hoz a JDBC haszn\u00e1lat\u00e1hoz nem kell semmilyen f\u00fcgg\u0151s\u00e9get sem megadnunk, hiszen a JDBC r\u00e9sz\u00e9t k\u00e9pezi a Java SE-nek, azaz benne van az JDK-ban. Viszont az adott adatb\u00e1zis driver-\u00e9t biztos\u00edtani kell fut\u00e1sk\u00f6zben, \u00edgy adjuk hozz\u00e1 az SQLite drivert a <code>pom.xml</code> f\u00fcgg\u0151s\u00e9geihez!</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;org.xerial&lt;/groupId&gt;\n&lt;artifactId&gt;sqlite-jdbc&lt;/artifactId&gt;\n&lt;version&gt;3.34.0&lt;/version&gt;\n&lt;scope&gt;runtime&lt;/scope&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Miut\u00e1n ezzel megvagyunk, az IntelliJ-n bel\u00fcl a jobb fels\u0151 sarokban a <code>Database</code> f\u00fclre navig\u00e1lva tudjuk l\u00e9trehozni az adatb\u00e1zisunkat (csak az Ultimate verzi\u00f3ban, amihez \u00e9rdemes megig\u00e9nyelni a student license-t a Jetbreains-t\u0151l).</p> <p> </p> <p>Ezut\u00e1n a Database f\u00fcl\u00f6n a bal fels\u0151 sarokban szerepl\u0151 + jelre kattintva egy \u00faj adatb\u00e1zist adathatunk hozz\u00e1. Ehhez v\u00e1lasszuk a leny\u00edl\u00f3 men\u00fcben a <code>Data Source -&gt; SQLite</code> men\u00fcpontot! A Data Source-nak adhatunk egy tetsz\u0151leges nevet, majd a General be\u00e1ll\u00edt\u00e1sokn\u00e1l a f\u00e1jl alatt megadhatjuk, hogy melyik l\u00e9tez\u0151 adatb\u00e1zisf\u00e1jlb\u00f3l dolgozunk. Amennyiben \u00faj \u00e1llom\u00e1nyt szeretn\u00e9nk haszn\u00e1lni, akkor File megad\u00e1sa sor v\u00e9g\u00e9n v\u00e1lasszuk a + jelet \u00e9s adjuk meg az adatb\u00e1zis f\u00e1jl hely\u00e9t. Az URL-t a JDBC-n bel\u00fcl is haszn\u00e1lni fogjuk majd, mivel ezzel az URL-el tudunk kapcsolatot l\u00e9tes\u00edteni az adatb\u00e1zis fel\u00e9. Amennyiben az IntelliJ-n bel\u00fcl nincs m\u00e9g let\u00f6ltve az SQLite Driver, akkor <code>Properties</code> lapon be\u00e1ll\u00edthatjuk (ut\u00f3lag jobb klikk az adatb\u00e1zis kapcsolatra \u00e9s <code>Properties</code> men\u00fcpont kiv\u00e1laszt\u00e1sa). Ezut\u00e1n megjelenik a megfelel\u0151 nev\u0171 adatb\u00e1zis a list\u00e1ban, amelyet lenyitva megtekinthetj\u00fck az adatb\u00e1zishoz tartoz\u00f3 s\u00e9m\u00e1kat. Itt a <code>main</code>-re jobb klikk ut\u00e1n <code>New -&gt; Table</code> men\u00fcpontot v\u00e1lasztva l\u00e9trehozhatjuk a k\u00edv\u00e1nt t\u00e1bl\u00e1kat (k\u00e9s\u0151bb egy t\u00e1bl\u00e1ra jobb klikk, majd <code>Modify Table</code> opci\u00f3val m\u00f3dos\u00edthatjuk annak \u00f6sszet\u00e9tel\u00e9t).</p> <p> </p> <p>Miut\u00e1n l\u00e9trehoztuk a megfelel\u0151 t\u00e1bl\u00e1kat jobb klikk a <code>main</code> s\u00e9m\u00e1ra, majd <code>SQL Scripts -&gt; Generate DDL to Query Console</code>. Itt l\u00e1thatjuk a legener\u00e1lt DDL utas\u00edt\u00e1sokat, mely \u00edgy n\u00e9z ki:</p> <pre><code>create table utazas\n(\nID           integer not null\nconstraint utazas_pk\nprimary key autoincrement,\nNev          TEXT,\nUticel       TEXT,\nFelpanzio    integer,\nVendeg_szam  integer,\nEjszaka_szam integer\n);\n</code></pre> <p>Mivel az adatb\u00e1zis el\u00e9r\u00e9s\u00e9t t\u00f6bbsz\u00f6r is haszn\u00e1lni k\u00edv\u00e1njuk majd, \u00edgy c\u00e9lszer\u0171 ezt az \u00e9rt\u00e9ket kiszervezn\u00fcnk egy \u00e1llom\u00e1nyba. Hozzunk l\u00e9tre a <code>/resources</code> al\u00e1 egy <code>application.properties</code> \u00e1llom\u00e1nyt majd adjuk meg benne az adatb\u00e1zis URL-j\u00e9t (shift + enter, ha nincs meg):</p> <pre><code>db.url=jdbc:sqlite:E:/Oktatas/AF1/23242/gyak04/utazas.db\n</code></pre> <p>Az URL-t mindenki m\u00f3dos\u00edtsa a saj\u00e1t k\u00f6rnyezet\u00e9nek megfelel\u0151en! Ezut\u00e1n k\u00e9sz\u00edts\u00fcnk egy seg\u00e9doszt\u00e1lyt, mely beolvassa ezt a <code>properties</code> \u00e1llom\u00e1nyt, melyben a kulcs-\u00e9rt\u00e9k p\u00e1rokat adjuk meg (itt b\u00e1rmilyen tetsz\u0151leges p\u00e1rokat felvehet\u00fcnk, amit majd k\u00e9s\u0151bb haszn\u00e1lni szeretn\u00e9nk). Erre a c\u00e9lra k\u00e9sz\u00edts\u00fcnk a <code>hu.alkfejl.dao</code> csomag al\u00e1 egy <code>ConfigManager</code> nev\u0171 oszt\u00e1lyt, melynek a tartalma a k\u00f6vetkez\u0151:</p> <pre><code>public class ConfigManager {\nprivate static Properties props = new Properties();\n\nstatic{\ntry {\nprops.load(ConfigManager.class.getResourceAsStream(\"/application.properties\"));\n} catch (IOException e) {\ne.printStackTrace();\n}\n}\n\npublic static String getValue(String key){\nreturn props.getProperty(key);\n}\n}\n</code></pre> <p>Mivel egy statikus met\u00f3dusokat k\u00edn\u00e1l\u00f3 oszt\u00e1lyr\u00f3l lesz sz\u00f3, \u00edgy a statikus init blokkban adjuk meg a properties f\u00e1jl bet\u00f6lt\u00e9s\u00e9t. Ezut\u00e1n a property-ket elt\u00e1roljuk egy lok\u00e1lis v\u00e1ltoz\u00f3ban, melyeket a <code>getValue</code> seg\u00edts\u00e9g\u00e9vel \u00e9rhet\u00fcnk el.</p> <p>Ezut\u00e1n v\u00e9gre elk\u00e9sz\u00edthetj\u00fck a DAO megval\u00f3s\u00edt\u00e1s\u00e1t. El\u0151sz\u00f6r n\u00e9zz\u00fck a field-eket \u00e9s a <code>Singleton</code> tervez\u00e9si minta alkalmaz\u00e1s\u00e1t!</p> <pre><code>public class UtazasDbDAOImpl implements  UtazasDAO{\n\nprivate static String CONN;\nprivate static UtazasDbDAOImpl instance;\n\nprivate  UtazasDbDAOImpl(String conn) {\nCONN = conn;\ntry{\nClass.forName(\"org.sqlite.JDBC\");\n}catch(ClassNotFoundException e){\ne.printStackTrace();\n}\n}\n\npublic static UtazasDbDAOImpl getInstance(String connStr){\nif(instance == null){\nsynchronized (UtazasDbDAOImpl.class){\nif(instance == null){\ninstance = new UtazasDbDAOImpl(connStr);\n}\n}\n}\nreturn instance;\n}\n\nprivate enum Query{\nINSERT(\"INSERT INTO utazas (Nev, Uticel, Felpanzio, Vendeg_szam, Ejszaka_szam) VALUES(?,?,?,?,?);\"),\nSELECT(\"SELECT * FROM utazas;\"),\nFILTER(\"SELECT * FROM utazas WHERE Uticel = ?;\");\n\nprivate String command;\n\nQuery(String command) {\nthis.command = command;\n}\n\npublic String getCommand() {\nreturn command;\n}\n}\n}\n</code></pre> <p>Maga az oszt\u00e1ly k\u00e9t priv\u00e1t, statikus adattagot tartalmaz. A <code>CONN</code>-ba fogjuk bet\u00f6lteni az adatb\u00e1zis el\u00e9r\u00e9si \u00fatvonal\u00e1t, m\u00edg az <code>instance</code> a Singleton mint\u00e1t k\u00f6vetve az egyetlen p\u00e9ld\u00e1ny lesz az osztyunkb\u00f3l. A priv\u00e1t hozz\u00e1f\u00e9r\u00e9s\u0171 konstruktorunk egy param\u00e9tert (a kapcsolati stringet) v\u00e1rja \u00e9s ezt adja \u00e9rt\u00e9k\u00fcl a <code>CONN</code>-nak. Ezt k\u00f6vet\u0151en egy v\u00e9dett blokkban bet\u00f6ltj\u00fck a sz\u00fcks\u00e9ges JDBC drivert a <code>Class</code> oszt\u00e1ly <code>forName</code> met\u00f3dusa seg\u00edts\u00e9g\u00e9vel. A <code>getInstance</code> f\u00fcggv\u00e9ny arra szolg\u00e1l, hogy az els\u0151 h\u00edv\u00e1s alkalm\u00e1val l\u00e9trehozza az egyetlen p\u00e9ld\u00e1nyt az oszt\u00e1lyb\u00f3l, minden tov\u00e1bbi esetben pedig ezen kereszt\u00fcl lehessen lek\u00e9rni. A p\u00e9ld\u00e1ban l\u00e1tott minta el\u0151sz\u00f6r ellen\u0151rzi, hogy null-e az instance \u00e9rt\u00e9ke, \u00e9s ha igen, akkor l\u00e9p tov\u00e1bb. Itt a t\u00f6bbsz\u00e1l\u00fa rendszerek miatt alkalmazunk egy <code>syncronized</code> blokkot, aminek param\u00e9tere az oszt\u00e1lyounk <code>class</code> implicit adattagja. Ezzel el\u00e9rj\u00fck azt, hogy egyszerre csak egy sz\u00e1l f\u00e9rhez hozz\u00e1 a blokk belsej\u00e9hez, m\u00e9gpedig az, aki ezt a class p\u00e9ld\u00e1nyt \u00e9ppen birtokolja. LEgbel\u00fcl ism\u00e9t egy null-checket alkalmazunk, elker\u00fclve ezzel zt, hogy minden sz\u00e1l, aki \u00e9ppen h\u00edvja a getInstance-t fel\u00fcl\u00edrja a singleton p\u00e9ld\u00e1nyt.</p> <p>Mindezek ut\u00e1n hozz\u00e1adjuk az SQL lek\u00e9rdez\u00e9seket is az oszt\u00e1lyunkhoz, amihez egy <code>enum</code>-ot fogunk haszn\u00e1lni. Ezt amiatt tehetj\u00fck meg, hogy b\u00e1r a f\u0151leg arra haszn\u00e1ljuk, hogy felsorol\u00e1sok elemeit defini\u00e1ljuk \u00e1ltaluk, de az enumok is oszt\u00e1lyok, \u00edgy term\u00e9szetesen ugyan\u00fagy tartalmazhatnak adattagokat \u00e9s tagf\u00fcggv\u00e9nyeket, mint b\u00e1rmelyik m\u00e1sik oszt\u00e1ly. Teh\u00e1t nincs m\u00e1s dolgunk, mint az enum-p\u00e9ld\u00e1nyok deifin\u00edci\u00f3ja ut\u00e1n felvenni egy priv\u00e1t String adattagot a  lek\u00e9rdez\u00e9s t\u00e1rol\u00e1s\u00e1ra \u00e9s defini\u00e1lni a megfelel\u0151 konstruktort \u00e9s gettert, hogy a k\u00e9s\u0151bbiekben is hozz\u00e1 lehessen f\u00e9rni.</p> <p>A k\u00f6vetkez\u0151 k\u00f3dr\u00e9szlet a ment\u00e9s opci\u00f3t szolg\u00e1ltatja sz\u00e1munkra. <pre><code>@Override\npublic boolean add(Utazas utazas) {\n\ntry(Connection c = DriverManager.getConnection(CONN);\nPreparedStatement pst = c.prepareStatement(Query.INSERT.command, Statement.RETURN_GENERATED_KEYS))\n{\npst.setString(1,utazas.getNev());\npst.setString(2, utazas.getUticel());\npst.setInt(3, utazas.getFelpanzio() ? 1 : 0 );\npst.setInt(4,utazas.getUtasok());\npst.setInt(5, utazas.getEjszaka());\n\nint affectedRows = pst.executeUpdate();\n\nreturn affectedRows == 1;\n\n}catch(Exception e){\ne.printStackTrace();\n}\n\nreturn false;\n}\n</code></pre></p> <p>Az els\u0151 \u00e9rdekes dolog, hogy itt egy param\u00e9teres lek\u00e9rdez\u00e9s\u00fcnk lesz, \u00edgy egy <code>PreparedStatement</code>-et haszn\u00e1lunk. Ez arra szolg\u00e1l, hogy a lek\u00e9rdez\u00e9s \u00f6sszeszerkeszt\u00e9sekor a param\u00e9terek hely\u00e9re ker\u00fcl\u0151 \u00e9rt\u00e9keket olyan m\u00f3don alak\u00edtsuk \u00e1t, hogy azt az adatb\u00e1zis ne tudja \u00f6nmag\u00e1ban utas\u00edt\u00e1sk\u00e9nt \u00e9rtelmezni, \u00edgy elker\u00fclhetj\u00fck az SQL-injection-t. A k\u00f6vetkez\u0151 \u00e9rdekes momentum, hogy \u00faj kontakt l\u00e9trehoz\u00e1sakor a <code>c.prepareStatement(Query.INSERT.command, Statement.RETURN_GENERATED_KEYS)</code> lek\u00e9rdez\u00e9st adjuk meg, melyben vegy\u00fck \u00e9szre a <code>RETURN_GENERATED_KEYS</code> megad\u00e1st. Az <code>executeUpdate</code> met\u00f3dus azt adja vissza, hogy h\u00e1ny sor m\u00f3dosult az SQL utas\u00edt\u00e1s hat\u00e1s\u00e1ra, mely eset\u00fcnkben 1 kell hogy legyen, ha siker\u00fclt, egy\u00e9b esetekben 0, m\u00e1sk\u00fcl\u00f6nben valamit nagyon rosszul csin\u00e1ltunk.</p> <p>A list\u00e1z\u00e1shoz tartoz\u00f3 f\u00fcggv\u00e9ny sokban hasonl\u00edt a besz\u00far\u00e1sra, de az els\u0151 amit \u00e9szrevesz\u00fcnk, hogy a try-with-resources-ban imm\u00e1r a <code>Statement stmt = c.createStatement(); ResultSet rs = stmt.executeQuery(Query.SELECT.command)</code> utas\u00edt\u00e1sok szerepelnek. Ebb\u0151l k\u00e9t dolog der\u00fclhet ki. Egyfel\u0151l, mivel az ehhez a f\u00fcggv\u00e9nyhez haszn\u00e1lt SQL-lek\u00e9rdez\u00e9sben nincsenek behelyettes\u00edtend\u0151 param\u00e9terek, \u00edgy nincs sz\u00fcks\u00e9g arra, hogy \u00e1talak\u00edtsuk a tartalm\u00e1t, m\u00e1sfel\u0151l itt viszont szeretn\u00e9nk t\u00e9nylegesen felhaszn\u00e1lni azokat a rekordokat, amiket \u00e9rint az utas\u00edt\u00e1s v\u00e9grehajt\u00e1sa, \u00edgy  a <code>ResultSet</code> ezeket fogja tartalmazni. Az elemek kinyer\u00e9s\u00e9hez a <code>ResultSet</code> oszt\u00e1ly <code>next</code> f\u00fcggv\u00e9ny\u00e9t haszn\u00e1ljuk, amely egyr\u00e9szt egy logikai \u00e9rt\u00e9kkel jelzi sz\u00e1munkra, hogy van-e m\u00e9g elem a halmazban, m\u00e1sr\u00e9szt \u00e1t\u00e1ll\u00edtja az aktu\u00e1lis elemet, \u00edgy az az az al\u00e1bb l\u00e1that\u00f3 m\u00f3don kinyerhet\u0151 (megjegyzend\u0151, hogy a <code>ResultSet</code> getXXX f\u00fcggv\u00e9nyei <code>int</code> param\u00e9teres v\u00e1ltozatban is l\u00e9teznek, ahol a k\u00edv\u00e1nt oszlop indexe adhat\u00f3 meg). V\u00e9g\u00fcl a t\u00e1bla tartalm\u00e1b\u00f3l kiv\u00e1logatjuk a nek\u00fcnk l\u00e9nyeges elemeket az\u00e1ltal, hogy a param\u00e9terben kapott objektum \u00e9rt\u00e9keire sz\u0171rj\u00fck a list\u00e1nkat a <code>Stream api</code> seg\u00edts\u00e9g\u00e9vel. <pre><code>@Override\npublic List&lt;Utazas&gt; find(Utazas filter) {\n\nList&lt;Utazas&gt; result = new ArrayList&lt;&gt;();\n\ntry(Connection c = DriverManager.getConnection(CONN);\nStatement stmt = c.createStatement();\nResultSet rs = stmt.executeQuery(Query.SELECT.command))\n{\nwhile(rs.next()){\nUtazas utazas = new Utazas();\nutazas.setNev(rs.getString(\"Nev\"));\nutazas.setUticel(rs.getString(\"Uticel\"));\nutazas.setFelpanzio((1 == rs.getInt(\"Felpanzio\")));\nutazas.setUtasok(rs.getInt(\"Vendeg_szam\"));\nutazas.setEjszaka(rs.getInt(\"Ejszaka_szam\"));\n\nresult.add(utazas);\n}\n}catch(Exception e){\ne.printStackTrace();\n}\nreturn result.stream()\n.filter(utazas -&gt; filter.getNev() == null || utazas.getNev().equals(filter.getNev()))\n.filter(utazas -&gt; filter.getUticel() == null || utazas.getUticel().equals(filter.getUticel()))\n.filter(utazas -&gt; filter.getUtasok() == 0 || utazas.getUtasok() == filter.getUtasok())\n.filter(utazas -&gt; filter.getEjszaka() == 0 || utazas.getEjszaka() == filter.getEjszaka())\n.filter(utazas -&gt; filter.getLeiras() == null || utazas.getLeiras().equals(filter.getLeiras()))\n.collect(Collectors.toList());\n}\n</code></pre> Ugyanez a <code>find</code> m\u0171velet megval\u00f3s\u00edthat\u00f3 a <code>FILTER</code> enum konstanssal is az al\u00e1bbi m\u00f3don p\u00e9ld\u00e1ul az \u00fatic\u00e9l szerint (ez esetben a sz\u0171r\u00e9st m\u00e1r az adatb\u00e1zis-oldalon elv\u00e9gezz\u00fck): <pre><code>@Override\npublic List&lt;Utazas&gt; find() {\n\nList&lt;Utazas&gt; result = new ArrayList&lt;&gt;();\n\ntry(Connection c = DriverManager.getConnection(CONN);\nPreparedStatement pst = c.prepareStatement(Query.INSERT.command);\nResultSet rs = stmt.executeQuery())\n{\nwhile(rs.next()){\nUtazas utazas = new Utazas();\nutazas.setNev(rs.getString(\"Nev\"));\nutazas.setUticel(rs.getString(\"Uticel\"));\nutazas.setFelpanzio((1 == rs.getInt(\"Felpanzio\")));\nutazas.setUtasok(rs.getInt(\"Vendeg_szam\"));\nutazas.setEjszaka(rs.getInt(\"Ejszaka_szam\"));\n\nresult.add(utazas);\n}\n}catch(Exception e){\ne.printStackTrace();\n}\nreturn result;\n}\n</code></pre></p>"},{"location":"05_gyakorlat/#view-reteg","title":"View r\u00e9teg","text":"<p>A megjelen\u00edt\u00e9si r\u00e9teg tartalmazza azokat az oszt\u00e1lyokat, amikkel a felhaszn\u00e1l\u00f3 k\u00f6zvetlen\u00fcl kapcsolatot teremt, vagyis a grafikus fel\u00fclet elemeit. A r\u00e9teg elemei a controllerek seg\u00edts\u00e9g\u00e9vel m\u00f3dos\u00edtj\u00e1k az adatb\u00e1zis tartalm\u00e1t, de fontos, hogy azt k\u00f6zvetlen\u00fcl nem \u00e9rhetik el.</p>"},{"location":"05_gyakorlat/#videok","title":"Vide\u00f3k","text":"<ul> <li>Aktu\u00e1lis lej\u00e1tsz\u00e1si lista</li> </ul>"},{"location":"05_gyakorlat/#referenciak","title":"Referenci\u00e1k","text":"<ul> <li>Oracle JDBC Tutorial</li> </ul>"},{"location":"06_gyakorlat/","title":"6. gyakorlat","text":""},{"location":"06_gyakorlat/#contact-alkalmazas-folytatasa","title":"Contact alkalmaz\u00e1s folytat\u00e1sa","text":"<p>Az el\u0151z\u0151 \u00f3ra v\u00e9g\u00e9n a list\u00e1b\u00f3l a kontaktok t\u00f6rl\u00e9s\u00e9t megval\u00f3s\u00edtottuk. Miel\u0151tt a m\u00f3dos\u00edt\u00e1st megcsin\u00e1ln\u00e1nk elk\u00e9sz\u00edtj\u00fck a f\u0151 ablak men\u00fcj\u00e9ben a <code>Close</code> men\u00fcpont esem\u00e9nykezel\u00e9s\u00e9t.</p> <pre><code>public class MainWindowController {\n...\n\n@FXML\npublic void onExit(){\nPlatform.exit();\n}\n}\n</code></pre> <p>Az FXML-ben a k\u00f6vetkez\u0151nek kell szerepelnie, melyet a SceneBuilder-rel is megadhatunk (<code>Code -&gt; onAction</code>):</p> <pre><code>&lt;MenuItem mnemonicParsing=\"false\" text=\"Close\" onAction=\"#onExit\"/&gt;\n</code></pre> <p>Ezzel meg is vagyunk, \u00edgy n\u00e9zz\u00fck az <code>editContact</code> met\u00f3dust! Mivel a szerkeszt\u00e9shez egy \u00faj ablakra lesz sz\u00fcks\u00e9g\u00fcnk, ahol mag\u00e1t a kontaktot szerkeszteni tudjuk, \u00edgy l\u00e9tre is fogunk hozni egyet <code>/fxml/add_edit_contact.fxml</code> n\u00e9ven a <code>resources</code> mappa alatt \u00e9s ezt az FXML \u00e1llom\u00e1nyt fogjuk bet\u00f6lteni. Ezt a formot majd a hozz\u00e1ad\u00e1sn\u00e1l is haszn\u00e1lhatjuk, \u00edgy ilyen szeml\u00e9lettel alak\u00edtjuk ki a fel\u00fcletet, illetve a neve is ezt t\u00fckr\u00f6zi.</p> <pre><code>private void editContact(Contact c) {\nFXMLLoader fxmlLoader = App.loadFXML((\"/fxml/add_edit_contact.fxml\"));\nAddEditContactController controller = fxmlLoader.getController();\ncontroller.setContact(c);\n}\n\n@FXML\npublic void onAddNewContact(){ // k\u00f6ss\u00fck be az Edit/Add al\u00e1\nFXMLLoader fxmlLoader = App.loadFXML((\"/fxml/add_edit_contact.fxml\"));\nAddEditContactController controller = fxmlLoader.getController();\ncontroller.setContact(new Contact()); // ennyi a k\u00fcl\u00f6nbs\u00e9g\n}\n</code></pre> <p>Mivel a form-on szeretn\u00e9nk majd megjelen\u00edteni a szerkeszteni k\u00edv\u00e1nt kontakt inform\u00e1ci\u00f3it, \u00edgy ezt \u00e1t fogjuk adni a controller sz\u00e1m\u00e1ra. Hozzuk is l\u00e9tre az FXML \u00e1llom\u00e1nyt \u00e9s a hozz\u00e1 tartoz\u00f3 AddEditContactController-t! K\u00e9sz\u00edts\u00fck el a fel\u00fcletet mely a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki a SceneBuilder-ben: A bal oldalon l\u00e1that\u00f3 TreeView seg\u00edts\u00e9get ny\u00fajt a pontos elrendez\u00e9s kialak\u00edt\u00e1s\u00e1ban</p> <p></p> <p>Az elemek pontos tulajdons\u00e1g\u00e1n\u00e1l seg\u00edts\u00e9get ny\u00fajt az FXML k\u00f3d, melyb\u0151l l\u00e1thatjuk a megadott <code>fx:id</code>-kat \u00e9s az esem\u00e9nykezel\u0151ket is:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n\n&lt;?import javafx.geometry.*?&gt;\n&lt;?import javafx.scene.control.*?&gt;\n&lt;?import javafx.scene.layout.*?&gt;\n&lt;?import javafx.scene.text.*?&gt;\n\n&lt;GridPane prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"hu.alkfejl.controller.AddEditContactController\"&gt;\n&lt;rowConstraints&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints maxHeight=\"60.0\" minHeight=\"10.0\" percentHeight=\"36.0\" prefHeight=\"33.0\" /&gt;\n&lt;RowConstraints maxHeight=\"28.0\" minHeight=\"0.0\" percentHeight=\"8.0\" prefHeight=\"27.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;/rowConstraints&gt;\n&lt;columnConstraints&gt;\n&lt;ColumnConstraints minWidth=\"10.0\" percentWidth=\"30.0\" prefWidth=\"100.0\" /&gt;\n&lt;ColumnConstraints minWidth=\"10.0\" percentWidth=\"70.0\" prefWidth=\"100.0\" /&gt;\n&lt;ColumnConstraints minWidth=\"10.0\" percentWidth=\"70.0\" prefWidth=\"100.0\" /&gt;\n&lt;/columnConstraints&gt;\n&lt;children&gt;\n&lt;StackPane prefHeight=\"150.0\" prefWidth=\"200.0\" GridPane.columnSpan=\"2\"&gt;\n&lt;children&gt;\n&lt;Label text=\"Add or Edit Contact\"&gt;\n&lt;font&gt;\n&lt;Font size=\"20.0\" /&gt;\n&lt;/font&gt;\n&lt;/Label&gt;\n&lt;/children&gt;\n&lt;/StackPane&gt;\n&lt;Label text=\"Name\" GridPane.rowIndex=\"1\" /&gt;\n&lt;Label text=\"Email\" GridPane.rowIndex=\"2\" /&gt;\n&lt;Label text=\"Phone Numbers\" GridPane.rowIndex=\"3\" /&gt;\n&lt;Label text=\"Address\" GridPane.rowIndex=\"4\" /&gt;\n&lt;Label text=\"Date of Birth\" GridPane.rowIndex=\"5\" /&gt;\n&lt;Label text=\"Company\" GridPane.rowIndex=\"6\" /&gt;\n&lt;Label text=\"Position\" GridPane.rowIndex=\"7\" /&gt;\n&lt;HBox alignment=\"CENTER\" prefHeight=\"100.0\" prefWidth=\"200.0\" spacing=\"10.0\" GridPane.columnSpan=\"2\" GridPane.rowIndex=\"8\"&gt;\n&lt;children&gt;\n&lt;Button fx:id=\"saveBtn\" mnemonicParsing=\"false\" onAction=\"#onSave\" text=\"Save\" /&gt;\n&lt;Button mnemonicParsing=\"false\" onAction=\"#onCancel\" text=\"Cancel\" /&gt;\n&lt;/children&gt;\n&lt;padding&gt;\n&lt;Insets bottom=\"10.0\" left=\"10.0\" right=\"10.0\" top=\"10.0\" /&gt;\n&lt;/padding&gt;\n&lt;/HBox&gt;\n&lt;TextField fx:id=\"name\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"1\" /&gt;\n&lt;TextField fx:id=\"email\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"2\" /&gt;\n&lt;TextField fx:id=\"address\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"4\" /&gt;\n&lt;TextField fx:id=\"company\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"6\" /&gt;\n&lt;TextField fx:id=\"position\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"7\" /&gt;\n&lt;DatePicker fx:id=\"dateOfBirth\" prefHeight=\"25.0\" prefWidth=\"421.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"5\" /&gt;\n&lt;VBox prefHeight=\"200.0\" prefWidth=\"100.0\" spacing=\"10.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"3\"&gt;\n&lt;children&gt;\n&lt;ListView fx:id=\"phones\" prefHeight=\"200.0\" prefWidth=\"200.0\" /&gt;\n&lt;Button mnemonicParsing=\"false\" onAction=\"#addNewPhone\" text=\"Add\"&gt;\n&lt;VBox.margin&gt;\n&lt;Insets bottom=\"5.0\" /&gt;\n&lt;/VBox.margin&gt;\n&lt;/Button&gt;\n&lt;/children&gt;\n&lt;/VBox&gt;\n&lt;Label fx:id=\"nameErrors\" textFill=\"RED\" GridPane.columnIndex=\"2\" GridPane.rowIndex=\"1\" /&gt;\n&lt;Label fx:id=\"emailErrors\" textFill=\"RED\" GridPane.columnIndex=\"2\" GridPane.rowIndex=\"2\" /&gt;\n&lt;/children&gt;\n&lt;/GridPane&gt;\n</code></pre> <p>Ezen a ponton ellen\u0151rizz\u00fck, hogy az edit contact gomb megnyom\u00e1sa eset\u00e9n siker\u00fcl-e bet\u00f6lteni az FXML \u00e1llom\u00e1nyt, de ehhez el\u0151sz\u00f6r sz\u00fcks\u00e9g\u00fcnk van a <code>setContact</code> met\u00f3dus defin\u00edci\u00f3j\u00e1ra.</p> <pre><code>public class AddEditContactController {\n\nprivate Contact contact;\n\npublic void setContact(Contact c) {\nthis.contact = c;\n}\n}\n</code></pre> <p>Fejlessz\u00fck tov\u00e1bb az <code>AddEditContactController</code>-t \u00fagy, hogy az FXML-ben megadott vez\u00e9rl\u0151ket injekt\u00e1ljuk a controller-be:</p> <pre><code>public class AddEditContactController {\n...\n@FXML\nprivate Button saveBtn;\n\n@FXML\nprivate TextField name;\n@FXML\nprivate TextField email;\n\n@FXML\nListView&lt;Phone&gt; phones;\n\n@FXML\nprivate TextField address;\n@FXML\nprivate DatePicker dateOfBirth;\n@FXML\nprivate TextField company;\n@FXML\nprivate TextField position;\n</code></pre> <p>Ezut\u00e1n a fel\u00fcleti vez\u00e9rl\u0151k \u00e9rt\u00e9k\u00e9t (a fent injekt\u00e1lt elemek) be szeretn\u00e9m \u00e1ll\u00edtani a megkapott contact megfelel\u0151 property \u00e9rt\u00e9keire. \u00cdgy itt k\u00f6t\u00e9seket fogok alkalmazni, melyet akkor hozok l\u00e9tre, amikor a <code>setContact</code>-ot megh\u00edvja valaki (azaz \u00faj kontakt ker\u00fcl a fel\u00fclethez). A <code>setContact</code> ennek megfelel\u0151en a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>public void setContact(Contact c) {\nthis.contact = c;\n\nList&lt;Phone&gt; phonesList = phoneDAO.findAllByContactId(c.getId());\ncontact.setPhones(FXCollections.observableArrayList(phonesList));\n\nname.textProperty().bindBidirectional(contact.nameProperty());\nemail.textProperty().bindBidirectional(contact.emailProperty());\nphones.itemsProperty().bindBidirectional(contact.phonesProperty());\naddress.textProperty().bindBidirectional(contact.addressProperty());\ndateOfBirth.valueProperty().bindBidirectional(contact.dateOfBirthProperty());\ncompany.textProperty().bindBidirectional(contact.companyProperty());\nposition.textProperty().bindBidirectional(contact.positionProperty());\n\n}\n</code></pre> <p>Mivel a contact alapvet\u0151en nem tud a hozz\u00e1 tartoz\u00f3 phone-okr\u00f3l, \u00edgy ezt a phoneDAO-t\u00f3l k\u00e9rj\u00fck le, melyet field-k\u00e9nt adjunk is meg a controller-ben:</p> <pre><code>private PhoneDAO phoneDAO = new PhoneDAOImpl();\n</code></pre> <p>A <code>ListView</code> minket \u00e9rdekl\u0151 property-je az <code>itemsProperty</code>, mely a benne l\u00e9v\u0151 elemeket adja meg <code>ObjectProperty &lt;ObservableList &lt;T&gt;&gt;</code> form\u00e1j\u00e1ban, ahol a <code>T</code> t\u00edpusparam\u00e9ter jelen esetben nyilv\u00e1n <code>Phone</code>. A <code>Contact</code> bean-ben nem v\u00e9letlen\u00fcl ilyen m\u00f3don adjuk meg a telefonokat (<code>ObjectProperty&lt;ObservableList&lt;Phone&gt;&gt;</code>). A <code>dateOfBirth</code> vez\u00e9rl\u0151 egy <code>valueProperty</code>-vel rendelkezik, mely visszaad egy <code>ObjectProperty&lt;T&gt;</code> property-t, ahol <code>T</code> jelenleg <code>LocalDate</code>, melyet szint\u00e9n ilyen m\u00f3don adtunk meg a <code>Contact</code> oszt\u00e1lyban.</p> <p>A k\u00e9tir\u00e1ny\u00fa k\u00f6t\u00e9s inicializ\u00e1l\u00e1sa fontos, m\u00e9gpedig olyan szempontb\u00f3l, hogy az \u00e9rt\u00e9keket szinkronba fogjuk hozni \u00e9s \u00edgy az egyik property elveszti a jelenlegi \u00e9rt\u00e9k\u00e9t. Ha vessz\u00fck p\u00e9ld\u00e1ul a <code>name</code> property k\u00f6t\u00e9s\u00e9t, akkor a <code>name</code> fel\u00fcleti vez\u00e9rl\u0151 \u00e9rt\u00e9k\u00e9t k\u00f6tj\u00fck hozz\u00e1 a <code>contact</code> <code>nameProperty</code>-j\u00e9hez, azaz a <code>contact</code> \u00e9rt\u00e9ke m\u00e1sol\u00f3dik a <code>name</code> fel\u00fcleti vez\u00e9rl\u0151 property-j\u00e9be. Ford\u00edtott esetben, azaz: <code>contact.nameProperty().bindBidirectional(name.textProperty());</code> eset\u00e9ben a <code>contact</code> objektumunk elvesztette volna az aktu\u00e1lis \u00e9rt\u00e9k\u00e9t \u00e9s a fel\u00fcleten sem jelenne meg semmilyen \u00e9rt\u00e9k.</p> <p>Ezen a ponton ellen\u0151rizz\u00fck, hogy a megadott elemek megjelennek-e a fel\u00fcleten (Az adatb\u00e1zisban adjunk meg ).</p> <p>A telefonok list\u00e1j\u00e1ban, azaz a <code>ListView&lt;Phone&gt;</code> elemben az egy cell\u00e1ban megjelen\u0151 elemekre alapb\u00f3l a <code>toString()</code>-et h\u00edvja a rendszer \u00e9s ezt \u00edrja ki a cell\u00e1ba, ez\u00e9rt l\u00e1thatunk rosszul megjelen\u0151 (<code>Object oszt\u00e1ly toString()</code> alap\u00fa) adatokat. Nincs m\u00e1s teend\u0151, mint a <code>Phone</code> oszt\u00e1ly <code>toString</code> met\u00f3dus\u00e1t elk\u00e9sz\u00edteni:</p> <pre><code>public class Phone {\n...\n\n@Override\npublic String toString() {\nreturn number.getValue() + \" (\"+ phoneType.getValue() + \")\";\n}\n}\n</code></pre> <p>Ha ezekkel megvagyunk akkor j\u00f6het a t\u00e9nyleges ment\u00e9s, de el\u0151tte implement\u00e1ljuk a Cancel gomb esem\u00e9nykezel\u00e9s\u00e9t, mely szimpl\u00e1n annyit tesz, hogy visszat\u00f6lti a f\u0151 ablakot.</p> <pre><code>@FXML\npublic void onCancel(){\nApp.loadFXML(\"/fxml/main_window.fxml\");\n}\n</code></pre> <p>A ment\u00e9shez sz\u00fcks\u00e9g\u00fcnk lesz egy <code>ContactDAO</code>-ra, \u00edgy a k\u00f6vetkez\u0151 field megad\u00e1st is haszn\u00e1ljuk:</p> <pre><code>private ContactDAO contactDAO = new ContactDAOImpl();\n</code></pre> <p>Maga a ment\u00e9s a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>@FXML\npublic void onSave(){\ncontact = contactDAO.save(contact);\nphoneDAO.deleteAll(contact.getId());\ncontact.getPhones().forEach(phone -&gt; {\nphone.setId(0);\nphoneDAO.save(phone, contact.getId());\n});\nApp.loadFXML(\"/fxml/main_window.fxml\");\n}\n</code></pre> <p>Els\u0151re fur\u00e1n n\u00e9zhet ki a telefonsz\u00e1mok t\u00f6rl\u00e9se, majd l\u00e9trehoz\u00e1sa. Ezt az\u00e9rt csin\u00e1ljuk ilyen m\u00f3don, mert majd a telefonsz\u00e1mokat is m\u00f3dos\u00edtani szeretn\u00e9nk, ugyanakkor azokat egyb\u0151l nem szeretn\u00e9nk menteni, csak akkor amikor a kontakt szerkeszt\u00e9s/hozz\u00e1ad\u00e1s fel\u00fcleten megnyomjuk a Save gombot. Mivel kicsit nehezebb \u00edgy sz\u00e1montartani, hogy mi v\u00e1ltozott, a legegyszer\u0171bb az, ha minden sz\u00e1mot kit\u00f6rl\u00fcnk \u00e9s \u00fajra hozz\u00e1adjuk \u0151ket (lehet, hogy nem is v\u00e1ltozott semmi, de ett\u0151l m\u00e9g m\u0171k\u00f6dni fog a fenti k\u00f3dr\u00e9szlet csak kis plusz mel\u00f3t v\u00e9gez).</p> <p>A <code>deleteAll</code> <code>phoneDAO</code> met\u00f3dus m\u00e9g nem l\u00e9tezik, de azt nagyon k\u00f6nnyen implement\u00e1lhatjuk (nyilv\u00e1n adjuk hozz\u00e1 az interface-hez is a met\u00f3dus fejl\u00e9c\u00e9t):</p> <pre><code>@Override\npublic void deleteAll(int contactId) {\nfindAllByContactId(contactId).forEach(this::delete);\n}\n</code></pre> <p>Miut\u00e1n elmentett\u00fck a <code>contact</code>-ot \u00e9s a telefonsz\u00e1mokat, ebben az esetben is visszat\u00e9r\u00fcnk a f\u0151 ablakhoz.</p> <p>A telefonok list\u00e1j\u00e1n\u00e1l v\u00e9gigvihetj\u00fck a kontakt t\u00e1bl\u00e1zatban l\u00e1tott megval\u00f3s\u00edt\u00e1st is, amikor az <code>Edit</code> \u00e9s a <code>Delete</code> gombokat hozz\u00e1adtuk egy k\u00fcl\u00f6n oszlopban. A <code>ListView</code>-n\u00e1l ez annyiban k\u00fcl\u00f6nb\u00f6zne, hogy valamilyen <code>Label</code>-t is hozz\u00e1adn\u00e1nk, melyen mag\u00e1t a telefonsz\u00e1mot adjuk meg, tov\u00e1bb\u00e1 a k\u00e9t gombot is. Ez az\u00e9rt kell mert a <code>ListView</code> csak elemek sora, azaz olyan mintha egy egy oszlopos <code>TableView</code>-nk lenne. Annak \u00e9rdek\u00e9ben, hogy egy \u00fajabb lehet\u0151s\u00e9get ismerj\u00fcnk meg, \u00edgy egy <code>ContextMenu</code> fogunk k\u00e9sz\u00edteni (jobb klikk az adott <code>ListView</code> elemen), melyben az <code>Edit</code> \u00e9s a <code>Delete</code> men\u00fcpontokat fogjuk elhelyezni. Ehhez sz\u00fcks\u00e9g\u00fcnk lesz az <code>initialize</code> met\u00f3dusra, \u00edgy a controllert implement\u00e1lja az <code>Initializable</code> interface-t! Maga az <code>initialize</code> a k\u00f6vetkez\u0151k\u00e9ppen alakul:</p> <pre><code>@Override\npublic void initialize(URL location, ResourceBundle resources) {\nphones.setCellFactory(param -&gt; {\nListCell&lt;Phone&gt; cell = new ListCell&lt;&gt;();\nContextMenu contextMenu = new ContextMenu();\n\nMenuItem editItem = new MenuItem(\"Edit\");\nMenuItem deleteItem = new MenuItem(\"Delete\");\n\ncontextMenu.getItems().addAll(editItem, deleteItem);\n\neditItem.setOnAction(event -&gt; {\n...\n});\ndeleteItem.setOnAction(event -&gt; {\n...\n});\n\nStringBinding cellTextBinding = new When(cell.itemProperty().isNotNull()).then(cell.itemProperty().asString()).otherwise(\"\");\ncell.textProperty().bind(cellTextBinding);\n\ncell.emptyProperty().addListener((observable, wasEmpty, isNowEmpty) -&gt; {\nif(isNowEmpty){\ncell.setContextMenu(null);\n} else{\ncell.setContextMenu(contextMenu);\n}\n\n});\nreturn cell;\n\n});\n}\n</code></pre> <p>A <code>setCellFactory\u200b(Callback &lt;ListView&lt;T&gt;,\u200bListCell&lt;T&gt;&gt; value)</code>-ban megadott <code>CAllback</code> egy <code>ListCell&lt;T&gt;</code> ad vissza. Ezt a cell\u00e1t l\u00e9tre is hozzuk \u00e9s k\u00e9s\u0151bb fel is haszn\u00e1ljuk, el\u0151tte azonban l\u00e9trehozzuk a <code>ContextMenu</code>-t \u00e9s hozz\u00e1adjuk a k\u00e9t <code>MenuItem</code> objektumot, amelyeket szint\u00e9n itt hoztunk l\u00e9tre. A gombok viselked\u00e9s\u00e9t k\u00e9s\u0151bb n\u00e9zz\u00fck meg, most el\u00e9g a t\u00f6bbi r\u00e9szt \u00e9rtelmezn\u00fcnk, ahhoz, hogy a context men\u00fct meg tudjuk jelen\u00edteni. Mivel egy <code>ListView</code> tartalmazhat t\u00f6bb sort, mint amennyi t\u00e9nyleges <code>Phone</code> van benne \u00edgy kezeln\u00fcnk kell azt az esetet, ha az adott sor \u00fcres. A cella sz\u00f6veg\u00e9t ett\u0151l tessz\u00fck f\u00fcgg\u0151v\u00e9 a <code>new When(cell.itemProperty().isNotNull()).then(cell.itemProperty().asString()).otherwise(\"\");</code> k\u00f6t\u00e9s l\u00e9trehoz\u00e1s\u00e1val, mely k\u00f6t\u00e9s aktu\u00e1lis \u00e9rt\u00e9k\u00e9t hozz\u00e1k\u00f6tj\u00fck a cella <code>textProperty-k\u00e9hez</code>.</p> <p>Ezen fel\u00fcl csin\u00e1lunk egy <code>ChangeListener</code>-t is, mely azt figyeli, hogy ha az adott cella \u00e9rt\u00e9ke \u00fcres lesz akkor nem ad hozz\u00e1 context men\u00fct (<code>cell.setContextMenu(null);</code>), illetve ha van \u00e9rt\u00e9k a sorban, akkor hozz\u00e1adja a context men\u00fct.</p> <p>V\u00e9g\u00fcl visszaadjuk mag\u00e1t a <code>cell</code>-t.</p> <p>Ezut\u00e1n n\u00e9zz\u00fck az esem\u00e9nykezel\u0151ket! A legfontosabb, hogy tudnunk kell, hogy melyik soron kattintottunk a kontextus men\u00fc elemekre (melyik <code>Phone</code> objektumot szeretn\u00e9nk m\u00f3dos\u00edtani vagy t\u00f6r\u00f6lni). Ehhez a <code>cell.getItem()</code> met\u00f3dus ad seg\u00edts\u00e9get, mely visszaadja a cell\u00e1hoz rendelt <code>Phone</code> objektumot. Kezdj\u00fck a t\u00f6rl\u00e9ssel, mert az egyszer\u0171bb:</p> <pre><code>deleteItem.setOnAction(event -&gt; {\ncontact.getPhones().remove(cell.getItem());\n});\n</code></pre> <p>Mivel a <code>contact</code> ment\u00e9s\u00e9n\u00e9l t\u00f6rl\u00fcnk minden az adott contact-hoz rendelt <code>Phone</code>-t, majd ut\u00e1na a k\u00f6vetkez\u0151k\u00e9ppen mentj\u00fck a telefonsz\u00e1mokat: <code>contact.getPhones().forEach(...)</code>, \u00edgy elegend\u0151, ha a <code>contact.getPhones()</code> list\u00e1b\u00f3l kit\u00f6r\u00f6lj\u00fck azt a <code>Phone</code>-t, amelynek cell\u00e1j\u00e1ban a context men\u00fc t\u00f6rl\u00e9st kiv\u00e1lasztottuk. Fontos l\u00e1tni, hogy ezen a ponton az adatb\u00e1zisban semmit sem matattunk.</p> <p>A m\u00f3dos\u00edt\u00e1shoz sz\u00fcks\u00e9g lesz egy form-ra, melyet egy mod\u00e1lis ablakban (nem lehet bel\u0151le kikattintani) szeretn\u00e9nk megjelen\u00edteni. Ez\u00e9rt itt h\u00edvjuk meg a <code>showPhoneDialog</code> met\u00f3dust az adott <code>Phone</code> t\u00edpus\u00fa param\u00e9terrel!</p> <pre><code>editItem.setOnAction(event -&gt; {\nPhone item = cell.getItem();\nshowPhoneDialog(item);\n});\n</code></pre> <p>Maga a <code>showPhoneDialog</code> a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>private void showPhoneDialog(Phone phone) {\nStage stage = new Stage();\nstage.initModality(Modality.APPLICATION_MODAL);\n\nFXMLLoader loader = new FXMLLoader(getClass().getResource(\"/fxml/add_edit_phone.fxml\"));\n\ntry {\nParent root = loader.load();\nAddEditPhoneController controller = loader.getController();\ncontroller.init(stage, phone, contact);\nstage.setScene(new Scene(root));\nstage.showAndWait();\n\n} catch (IOException e) {\ne.printStackTrace();\n}\n}\n</code></pre> <p>A k\u00f3d nagy r\u00e9sze megegyezik azzal amit az <code>App.loadFXML</code>-en bel\u00fcl megcsin\u00e1ltunk. Itt egy saj\u00e1t <code>Stage</code>-be szeretn\u00e9m belerakni a tartalmat, \u00edgy a fenti megk\u00f6zel\u00edt\u00e9st alkalmazom. Ami fontos, hogy a kontrolleren be\u00e1ll\u00edtjuk a <code>stage</code>, <code>phone</code> \u00e9s <code>contact</code> objektumokat, mivel ezekre sz\u00fcks\u00e9g lesz (k\u00e9s\u0151bb l\u00e1tjuk).</p> <p>Challenge</p> <p>Oldjuk meg \u00fagy, hogy az eddigi h\u00edv\u00e1sokat ne kelljen \u00e1t\u00edrnunk, viszont legyen lehet\u0151s\u00e9g arra is, hogy a fenti probl\u00e9m\u00e1t kik\u00fcsz\u00f6b\u00f6lj\u00fck. Az egyik probl\u00e9ma az, hogy van olyan eset, amikor m\u0171veleteket is szeretn\u00e9nk elv\u00e9gezni a controller-en, a m\u00e1sik egyszer\u0171bb probl\u00e9ma, hogy mi legyen a <code>Stage</code>-el.</p> Megold\u00e1s <p>Az <code>App.java</code> a k\u00f6vetkez\u0151k\u00e9ppen v\u00e1ltozik:</p> <pre><code>public static FXMLLoader loadFXML(String fxml){\nreturn loadFXML(fxml, stage, o -&gt; {});\n}\n\npublic static &lt;T&gt; FXMLLoader loadFXML(String fxml, Stage stage, Consumer&lt;T&gt; controllerOps){\nFXMLLoader loader = new FXMLLoader(App.class.getResource(fxml));\nScene scene = null;\ntry {\nParent root = loader.load();\ncontrollerOps.accept(loader.getController());\nscene = new Scene(root);\nstage.setScene(scene);\n} catch (IOException e) {\ne.printStackTrace();\n}\n\nreturn loader;\n\n}\n</code></pre> <p>Ilyen m\u00f3don sehol nem kell v\u00e1ltoztatnunk a megl\u00e9v\u0151 <code>loadFXML</code> h\u00edv\u00e1sokon, azonban a <code>showPhoneDialog</code>-on bel\u00fcl tudjuk a k\u00f6vetkez\u0151t csin\u00e1lni:</p> <pre><code>Stage stage = new Stage();\nstage.initModality(Modality.APPLICATION_MODAL);\nApp.&lt;AddEditPhoneController&gt;loadFXML(\"/fxml/add_edit_phone.fxml\", stage, (controller) -&gt; {\ncontroller.init(stage, phone, contact);\n});\nstage.showAndWait();\n</code></pre> <p>K\u00f6ss\u00fck be az Add gombhoz is a <code>showPhoneDialog</code>-ot (<code>onAction</code> legyen be\u00e1ll\u00edtva a gombon):</p> <pre><code>...\n@FXML\npublic void addNewPhone(){\nshowPhoneDialog();\n}\n\nprivate void showPhoneDialog(){\nshowPhoneDialog(new Phone());\n}\n...\n</code></pre> <p>Ezut\u00e1n hozzuk l\u00e9tre az <code>/fxml/add_edit_phone.fxml</code> \u00e1llom\u00e1nyt, illetve a hozz\u00e1 tartoz\u00f3 <code>AddEditPhoneController</code>-t. Hozzuk is l\u00e9tre a controller-ben az init met\u00f3dust:</p> <pre><code>public class AddEditPhoneController implements Initializable {\n\nprivate Stage stage;\nprivate Phone phone;\nprivate Contact contact;\n\npublic void init(Stage stage, Phone phone, Contact contact) {\nthis.stage = stage;\nthis.phone = phone;\nthis.contact = contact;\n}\n}\n</code></pre> <p>Miut\u00e1n ezzel megvagyunk, alak\u00edtsuk ki a k\u00f6vetkez\u0151 fel\u00fcletet a SceneBuilder seg\u00edts\u00e9g\u00e9vel (itt is seg\u00edt a bal oldali tree view):</p> <p></p> <p>Az FXML-hez tartoz\u00f3, gener\u00e1lt FXML k\u00f3d a k\u00f6vetket\u0151:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n\n&lt;?import javafx.geometry.*?&gt;\n&lt;?import javafx.scene.control.*?&gt;\n&lt;?import javafx.scene.layout.*?&gt;\n\n&lt;GridPane prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"hu.alkfejl.controller.AddEditPhoneController\"&gt;\n&lt;rowConstraints&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"10.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"10.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"10.0\" prefHeight=\"30.0\" /&gt;\n&lt;/rowConstraints&gt;\n&lt;columnConstraints&gt;\n&lt;ColumnConstraints minWidth=\"10.0\" percentWidth=\"50.0\" prefWidth=\"100.0\" /&gt;\n&lt;ColumnConstraints minWidth=\"10.0\" percentWidth=\"50.0\" prefWidth=\"100.0\" /&gt;\n&lt;/columnConstraints&gt;\n&lt;children&gt;\n&lt;Label text=\"Number\" /&gt;\n&lt;Label text=\"PhoneType\" GridPane.rowIndex=\"1\" /&gt;\n&lt;HBox alignment=\"CENTER\" prefHeight=\"100.0\" prefWidth=\"200.0\" spacing=\"10.0\" GridPane.columnSpan=\"2\" GridPane.rowIndex=\"2\"&gt;\n&lt;children&gt;\n&lt;Button mnemonicParsing=\"false\" onAction=\"#onSave\" text=\"Save\" /&gt;\n&lt;Button mnemonicParsing=\"false\" onAction=\"#onCancel\" text=\"Cancel\" /&gt;\n&lt;/children&gt;\n&lt;/HBox&gt;\n&lt;TextField fx:id=\"number\" GridPane.columnIndex=\"1\" /&gt;\n&lt;ComboBox fx:id=\"phoneType\" prefHeight=\"25.0\" prefWidth=\"298.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"1\" /&gt;\n&lt;/children&gt;\n&lt;padding&gt;\n&lt;Insets bottom=\"10.0\" left=\"10.0\" right=\"10.0\" top=\"10.0\" /&gt;\n&lt;/padding&gt;\n&lt;/GridPane&gt;\n</code></pre> <p>Az egyetlen \u00faj vez\u00e9rl\u0151 a <code>ComboBox</code>, melyet a <code>PhoneType</code>-n\u00e1l alkalmazunk. Ezen a ponton ellen\u0151rizhetj\u00fck, hogy megfelel\u0151en bet\u00f6lti-e az oldalt az alkalmaz\u00e1s (mind az Add \u00e9s mind az Edit eset\u00e9n).</p> <p>Ezut\u00e1n a controllerbe injekt\u00e1ljuk a sz\u00fcks\u00e9ges grafikus vez\u00e9rl\u0151 elemeket:</p> <pre><code>@FXML\nprivate TextField number;\n\n@FXML\nprivate ComboBox&lt;Phone.PhoneType&gt; phoneType;\n</code></pre> <p>A <code>ComboBox</code> v\u00e1laszthat\u00f3 elemeinek a megad\u00e1s\u00e1hoz haszn\u00e1ljuk az <code>Initializable</code> interface <code>initialize</code> met\u00f3dus\u00e1t:</p> <pre><code>phoneType.getItems().setAll(Phone.PhoneType.values());\n</code></pre> <p>Itt lek\u00e9rj\u00fck az \u00f6sszes lehets\u00e9ges enum \u00e9rt\u00e9ket \u00e9s ezt \u00e1ll\u00edtjuk be leny\u00edl\u00f3 doboznak.</p> <p>A kor\u00e1bban meg\u00edrt <code>init</code> met\u00f3dusban ezut\u00e1n a kapott <code>Phone</code> tulajdons\u00e1gok alapj\u00e1n hozzuk l\u00e9tre a fel\u00fcleti k\u00f6t\u00e9seket, hasonl\u00f3an mint ahogy azt a <code>Contact</code> eset\u00e9ben is megtett\u00fck:</p> <pre><code>public void init(Stage stage, Phone phone, Contact contact) {\nthis.stage = stage;\nthis.phone = phone;\nthis.contact = contact;\n\nnumber.textProperty().bindBidirectional(this.phone.numberProperty());\nphoneType.valueProperty().bindBidirectional(this.phone.phoneTypeProperty());\n\nif(phoneType.getSelectionModel().isEmpty()){\nphoneType.getSelectionModel().selectFirst(); }\n}\n</code></pre> <p>A k\u00f6t\u00e9sek l\u00e9trehoz\u00e1sa ut\u00e1n megvizsg\u00e1ljuk, hogy az adott <code>Phone</code>-hoz tartozik-e <code>phoneType</code> (k\u00f6t\u00e9s miatt ezt l\u00e1tjuk m\u00e1r), amennyiben nem akkor egy \u00faj telefonr\u00f3l van sz\u00f3 \u00e9s ilyen esetben az els\u0151 lehets\u00e9ges opci\u00f3t v\u00e1lasztjuk ki az enum \u00e9rt\u00e9kei k\u00f6z\u00fcl.</p> <p>A fel\u00fcleten elhelyezett <code>Cancel</code> gomb hat\u00e1s\u00e1ra az init-ben be\u00e1ll\u00edtott stage-et fogom bez\u00e1rni:</p> <pre><code>@FXML\npublic void onCancel(){\nstage.close();\n}\n</code></pre> <p>A <code>Save</code> egy kicsit fura fel\u00e9p\u00edt\u00e9s\u0171 lesz:</p> <pre><code>@FXML\npublic void onSave(){\ncontact.getPhones().remove(phone);\ncontact.getPhones().add(phone);\nstage.close();\n}\n</code></pre> <p>A t\u00f6rl\u00e9s \u00e9s ut\u00e1na hozz\u00e1ad\u00e1s ugyanarra az objektumra redund\u00e1nsnak t\u0171nik, de mivel ez felel\u0151s a hozz\u00e1ad\u00e1s \u00e9s a m\u00f3dos\u00edt\u00e1s\u00e9rt is, \u00edgy van l\u00e9tjogosults\u00e1ga (\u00faj elem eset\u00e9n nyilv\u00e1n nem tudja kit\u00f6r\u00f6lni, csak hozz\u00e1adni).</p>"},{"location":"06_gyakorlat/#ellenorzesek-es-kiegeszitesek","title":"Ellen\u0151rz\u00e9sek \u00e9s kieg\u00e9sz\u00edt\u00e9sek","text":"<p>Az els\u0151 egy apr\u00f3 kieg\u00e9sz\u00edt\u00e9s a kontakt t\u00f6rl\u00e9shez, mivel a kontakthoz rendelt telefonsz\u00e1mokat nem t\u00f6r\u00f6lt\u00fck ki. A meger\u0151s\u00edt\u00e9s ut\u00e1n ezt megtehetj\u00fck a k\u00f6vetkez\u0151k\u00e9ppen:</p> <pre><code>private void deleteContact(Contact c) {\nAlert confirm = new Alert(Alert.AlertType.CONFIRMATION, \"Are you sure you want to delete contact: \" + c.getName(), ButtonType.YES, ButtonType.NO);\nconfirm.showAndWait().ifPresent(buttonType -&gt; {\nif(buttonType.equals(ButtonType.YES)){\nphoneDAO.deleteAll(c.getId());  // hozzuk l\u00e9tre a phoneDAO fieldet is!\ndao.delete(c);\n}\n});\n}\n</code></pre>"},{"location":"06_gyakorlat/#contact-ellenorzesek","title":"Contact ellen\u0151rz\u00e9sek","text":"<p>Ezut\u00e1n v\u00e9gezz\u00fcnk el a k\u00f6telez\u0151 elemek megad\u00e1s\u00e1nak ellen\u0151rz\u00e9s\u00e9t az <code>AddEditContactController</code>-ben: El\u0151sz\u00f6r is le szeretn\u00e9nk tiltani a gombot (nem lehet megnyomni), addig am\u00edg van \u00e9rv\u00e9nytelen adat. Helyezz\u00fck el a k\u00e9t <code>Label</code>-t a fel\u00fcleten, ahova a hiba\u00fczeneteket fogjuk \u00edrni, illetve injekt\u00e1ljuk is ezeket a controllerbe:</p> <pre><code>@FXML\nprivate Button saveBtn;\n\n@FXML\nprivate Label nameErrors;\n\n@FXML\nprivate Label emailErrors;\n</code></pre> <p>Az <code>initialize</code> met\u00f3dust ezut\u00e1n a k\u00f6vetkez\u0151k\u00e9ppen m\u00f3dos\u00edtjuk:</p> <pre><code>saveBtn.disableProperty().bind(name.textProperty().isEmpty()\n.or(email.textProperty().isEmpty()\n.or(dateOfBirth.valueProperty().isNull())));\n\nname.textProperty().addListener((observable, oldValue, newValue) -&gt; {\nif(newValue != null &amp;&amp; newValue.isEmpty()){\nnameErrors.setText(\"Name is required\");\n}\nelse{\nnameErrors.setText(\"\");\n}\n});\n\nemail.textProperty().addListener((observable, oldValue, newValue) -&gt; {\nif(newValue != null &amp;&amp; newValue.isEmpty()){\nemailErrors.setText(\"Email is required\");\n} else{\nemailErrors.setText(\"\");\n}\n});      </code></pre> <p>\u00cdgy, a gomb eg\u00e9szen addig <code>disabled</code> \u00e1llapotban lesz, ameddig vagy a name vagy az email vagy a sz\u00fclet\u00e9si d\u00e1tum \u00fcres/null. Az egyes hibajelz\u0151 <code>Label</code>-ek \u00e9rt\u00e9k\u00e9t <code>ChangeListener</code>-ek alapj\u00e1n \u00e1ll\u00edtjuk be.</p>"},{"location":"06_gyakorlat/#kereses-a-kontaktok-listajaban","title":"Keres\u00e9s a kontaktok list\u00e1j\u00e1ban","text":"<p>El\u0151sz\u00f6r alak\u00edtsuk ki a fel\u00fcleti vez\u00e9rl\u0151ket a <code>main_window.fxml</code> oldalon. A <code>BorderPane</code> bal oldali elem\u00e9hez adjuk hozz\u00e1 a k\u00f6vetkez\u0151ket:</p> <pre><code>&lt;BorderPane prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"hu.alkfejl.controller.MainWindowController\"&gt;\n...\n   &lt;left&gt;\n&lt;VBox spacing=\"10.0\" prefHeight=\"200.0\" prefWidth=\"100.0\" BorderPane.alignment=\"CENTER\"&gt;\n&lt;children&gt;\n&lt;Label text=\"Search by Name\" /&gt;\n&lt;TextField fx:id=\"nameSearch\" onKeyReleased=\"#onSearch\" /&gt;\n&lt;Label text=\"Search by Email\" /&gt;\n&lt;TextField fx:id=\"emailSearch\" onKeyReleased=\"#onSearch\" /&gt;\n&lt;/children&gt;&lt;/VBox&gt;\n&lt;/left&gt;\n&lt;/BorderPane&gt;\n</code></pre> <p>A <code>MainWindowController</code>-en bel\u00fcl injekt\u00e1ljuk a k\u00e9t <code>TextField</code> objektumot, majd k\u00e9sz\u00edts\u00fck el az <code>onSearch</code> met\u00f3dust. Jelen esetben nem adat\u00e1zism\u0171veletk\u00e9nt val\u00f3s\u00edtjuk meg a keres\u00e9st (b\u00e1r val\u00f3s k\u00f6rnyezetben \u00edgy volna sz\u00e9p), hanem a lek\u00e9rt teljes list\u00e1t filterezz\u00fck. Emiatt a <code>refreshTable</code>-t m\u00f3dos\u00edtjuk \u00fagy, hogy a kontaktok list\u00e1j\u00e1t egy field-ben \u00e1lt\u00e1roljuk.</p> <pre><code>private List&lt;Contact&gt; all;\n\n@FXML\nprivate TextField nameSearch;\n\n@FXML\nprivate TextField emailSearch;\n\nprivate void refreshTable() {\nall = dao.findAll();\ncontactTable.getItems().setAll(all);\n}\n\n@FXML\npublic void onSearch(){\nList&lt;Contact&gt; filtered = all.stream().filter(contact -&gt; contact.getName().contains(nameSearch.getText()) &amp;&amp; contact.getEmail().contains(emailSearch.getText())).collect(Collectors.toList());\ncontactTable.getItems().setAll(filtered);\n}\n</code></pre> <p>Az <code>onSearch</code>-\u00f6n bel\u00fcl Stream API-t haszn\u00e1lunk az elemek sz\u0171r\u00e9s\u00e9hez, majd ezt \u00e1ll\u00edtjuk be a t\u00e1bl\u00e1zat elemeik\u00e9nt.</p>"},{"location":"06_gyakorlat/#videok","title":"Vide\u00f3k","text":"<ul> <li>Contacts projekt 3.</li> <li>Contacts projekt 4.</li> </ul>"},{"location":"06_gyakorlat/#gyakorlo-projekt-pizzazas","title":"Gyakorl\u00f3 Projekt - Pizz\u00e1z\u00e1s","text":"<p>A feladat egy pizzanyilv\u00e1ntart\u00f3 program elk\u00e9sz\u00edt\u00e9se Java nyelven, amely k\u00f6veti az MVC modellt. A programnak a k\u00f6vetkez\u0151 funkcionalit\u00e1sokat kell t\u00e1mogatnia.</p>"},{"location":"06_gyakorlat/#pizza-felvetele","title":"Pizza felv\u00e9tele","text":"<p>A programnak t\u00e1mogatnia kell a pizza felv\u00e9tel\u00e9t, ahol a k\u00f6vetkez\u0151 adatokat kell felvennie:</p> <ul> <li>Pizza neve, ami sz\u00f6vegesen adhat\u00f3 meg</li> <li>Pizza le\u00edr\u00e1sa, ami tartalmazza, hogy milyen \u00f6sszetev\u0151i vannak a pizz\u00e1nak</li> <li>Veget\u00e1ri\u00e1nus jelz\u0151 (Checkbox)</li> <li>\u00c9s v\u00e9g\u00fcl az \u00e1ra, ami egy eg\u00e9sz sz\u00e1m (Spinner, Slider)</li> </ul> <p>Megszor\u00edt\u00e1sok, k\u00f6vetelm\u00e9nyek:</p> <ul> <li>A pizza besz\u00far\u00e1sakor kapjon egy egyedi azonos\u00edt\u00f3t.</li> <li>A sikeres besz\u00far\u00e1skor egy ablak jelenjen meg, amely megmondja a besz\u00fart pizza sorsz\u00e1m\u00e1t.</li> <li>A rendszer nem t\u00e1rolhat k\u00e9t ugyanolyan nev\u0171 pizz\u00e1t. Ha ugyanolyan nev\u0171 pizz\u00e1t akarunk besz\u00farni, akkor a rendszer adjon hiba\u00fczenetet (de ne z\u00e1rja be a beviteli ablakot).</li> </ul> <p></p> <p></p>"},{"location":"06_gyakorlat/#pizzak-listazasa","title":"Pizz\u00e1k list\u00e1z\u00e1sa","text":"<p>A programnak t\u00e1mogatnia kell a pizz\u00e1k list\u00e1z\u00e1s\u00e1t. Nem kell, hogy automatikusan t\u00f6rt\u00e9njen, elegend\u0151 valamilyen funkcionalit\u00e1st biztos\u00edtani erre.</p> <p></p>"},{"location":"06_gyakorlat/#pizza-rendeles","title":"Pizza rendel\u00e9s","text":"<p>A programnak t\u00e1mogatni kell a pizza rendel\u00e9st is. Ez azt jelenti, hogy a felhaszn\u00e1l\u00f3 kiv\u00e1laszthatja, hogy milyen pizz\u00e1t szeretne rendelni, mekkora m\u00e9ret\u0171t, h\u00e1ny darabot, \u00e9s akkor megrendelheti.</p> <ul> <li>A pizz\u00e1t kiv\u00e1lasztani a leg\u00f6rd\u00fcl\u0151 men\u00fc seg\u00edts\u00e9g\u00e9vel lehet, ahol az \u00f6sszes el\u00e9rhet\u0151 pizza k\u00f6z\u00fcl lehet v\u00e1lasztani.<ul> <li>A kiv\u00e1lasztott pizza tulajdons\u00e1gai jelenjen meg alatta.</li> </ul> </li> <li>A kicsi pizza 20%-kal olcs\u00f3bb, mint a norm\u00e1l m\u00e9ret\u0171, m\u00edg a nagy 20%-kal dr\u00e1g\u00e1bb.</li> </ul> <p></p>"},{"location":"06_gyakorlat/#tipushibak","title":"T\u00edpushib\u00e1k","text":""},{"location":"06_gyakorlat/#forditasi-hibak","title":"Ford\u00edt\u00e1si hib\u00e1k","text":"<ul> <li>Nem implement\u00e1lt \u00f6r\u00f6k\u00f6lt met\u00f3dus</li> <li>Absztrakt oszt\u00e1ly p\u00e9ld\u00e1nyos\u00edt\u00e1sa</li> <li>FXML<ul> <li>Rossz oszt\u00e1ly van megadva</li> <li>@FXML annot\u00e1ci\u00f3 hi\u00e1nya</li> <li>Rossz az FXML f\u00e1jl \u00fatvonala</li> </ul> </li> <li>Rossz import: <code>javafx.valami</code> helyett  p\u00e9ld\u00e1ul <code>java.awt.valami</code></li> <li>\u00d6r\u00f6k\u00f6lt met\u00f3dus l\u00e1that\u00f3s\u00e1ga cs\u00f6kken</li> </ul>"},{"location":"06_gyakorlat/#futasi-hibak","title":"Fut\u00e1si hib\u00e1k","text":""},{"location":"06_gyakorlat/#adatbazis-dao","title":"Adatb\u00e1zis, DAO","text":"<ul> <li>Rossz az SQL parancs, ami l\u00e9trehozza a kapcsolatot az adatb\u00e1zis fel\u00e9</li> <li><code>getConnection(\"jdbc:sqlite:\" + DBFILE);</code> helyett<ul> <li><code>getConnection(\"jdbc:sqlite\" + DBFILE);</code></li> <li><code>getConnection(\"jdbc:sqlite: + DBFILE\");</code></li> <li><code>getConnection(\"jdbc.sqlite:\" + DBFILE);</code></li> </ul> </li> <li><code>INSERT INTO Pizza (Nev, Leiras, Vega, Ar) VALUES (?, ?, ?, ?)</code> hib\u00e1s<ul> <li>Hib\u00e1s t\u00e1blan\u00e9v, mez\u0151v\u00e9s</li> <li><code>VALUES</code> helyett <code>VALUE</code></li> </ul> </li> <li><code>PreparedStatement</code> eset\u00e9ben a <code>setXXX</code> eset\u00e9ben az indexel\u00e9snek 1-t\u0151l kell indulnia, \u00e9s nem 0-t\u00f3l</li> <li>A DAO-ban Adatb\u00e1zis f\u00e1jl rosszul van megadva</li> </ul>"},{"location":"06_gyakorlat/#view","title":"View","text":"<ul> <li>Rosszul \u00f6sszerakott GUI</li> <li>Egy elem k\u00e9tszer is el\u0151fordul a f\u00e1ban</li> </ul>"},{"location":"06_gyakorlat/#logikai-hibak","title":"Logikai hib\u00e1k","text":"<p>Olyan hib\u00e1k, amelyek nem vezetnek fut\u00e1si hib\u00e1hoz, de nem j\u00f3l m\u0171k\u00f6dik a program</p> <ul> <li>A DAO vagy Controller eset\u00e9ben az interf\u00e9sznek kell lennie a statikus t\u00edpusnak, \u00e9s a konkr\u00e9t megval\u00f3s\u00edt\u00e1s a dinamikus t\u00edpus</li> <li>DAO-ban a list eset\u00e9ben nem t\u00f6r\u00f6lj\u00fck a list\u00e1t, miel\u0151tt ism\u00e9t felt\u00f6lten\u00e9nk</li> <li><code>ConstructTable</code> t\u00f6bbsz\u00f6ri megh\u00edv\u00e1sa (plusz oszlopok lesznek minden h\u00edv\u00e1sn\u00e1l)</li> <li>Rossz k\u00e9pletek, inicializ\u00e1latlan \u00e9rt\u00e9kek, objektumok</li> </ul>"},{"location":"06_kivonat/","title":"Web tananyag kivonat","text":""},{"location":"06_kivonat/#servlet-letrehozas","title":"Servlet l\u00e9trehoz\u00e1s","text":"<p>A servlet egy Java oszt\u00e1ly ami megfelel\u0151 \u0151ssel rendelkezik (HttpServlet)</p> <pre><code>public class PeldaServlet extends HttpServlet {}\n</code></pre>"},{"location":"06_kivonat/#vegpont-meghatarozasa","title":"V\u00e9gpont meghat\u00e1roz\u00e1sa","text":"<p>A v\u00e9gpont az az \u00fatvonal amit be\u00edrva eljutunk a szervlet\u00fcnkh\u00f6z. Egy szerveren t\u00f6bb v\u00e9gpont szokott lenni, \u00edgy az adott szervlethez meg kell adni, melyik v\u00e9gponthoz k\u00f6thet\u0151. Ezt a WebServlet annot\u00e1ci\u00f3val tehetj\u00fck meg.</p> <pre><code>@WebServlet(\"/vegpont/utvonal/megadasa\")\npublic class PeldaServlet extends HttpServlet {}\n</code></pre>"},{"location":"06_kivonat/#tobb-utvonal-egy-servletre","title":"T\u00f6bb \u00fatvonal egy servletre","text":"<p>Ebben az esetben t\u00f6bb \u00fatvonal is k\u00f6thet\u0151 egy szervletre. Ez nem probl\u00e9ma, hiszen mindig fix, melyik oszt\u00e1ly kell kezelje a k\u00e9r\u00e9st. T\u00f6bb oszt\u00e1ly azonos \u00fatvonallal nem annot\u00e1lhat\u00f3, hiszen nem tudn\u00e1 a rendszer melyik kezelje a k\u00e9r\u00e9st.</p> <pre><code>@WebServlet(urlPatterns = {\"/path1\", \"/path2/p\u0151erlda\"})\npublic class PeldaServlet extends HttpServlet {}\n</code></pre> <p>Ha az \u00fatvonal elej\u00e9t akarjuk fixre \u00e9s a v\u00e9ge b\u00e1rmi lehet, akkor haszn\u00e1lhatunk '*'-t.</p> <p><pre><code>@WebServlet(\"/path/fix/*\")\npublic class PeldaServlet extends HttpServlet {}\n</code></pre> Ekkor a * helyett b\u00e1rmi \u00e1llhat, ezt le tudjuk majd k\u00e9rni.</p>"},{"location":"06_kivonat/#keresek-feldolgozasa","title":"K\u00e9r\u00e9sek feldolgoz\u00e1sa","text":"<p>A k\u00e9r\u00e9seknek van t\u00edpusa, pl. GET, POST, DELETE, PUT stb. Ezeket \u00fagy tudjuk kezelni, hogy a megfelel\u0151 met\u00f3dus\u00e1t defini\u00e1ljuk fel\u00fcl az \u0151soszt\u00e1lynak: doMETHODNAME.</p> <pre><code>@WebServlet(\"/vegpont/get/keres\")\npublic class PeldaServlet extends HttpServlet {\ndoGet(HttpServletRequest req, HttpServletResponse resp) throws IOException {}\n}\n</code></pre> <pre><code>@WebServlet(\"/vegpont/post/keres\")\npublic class PeldaServlet extends HttpServlet {\ndoPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {}\n}\n</code></pre> <pre><code>@WebServlet(\"/vegpont/multi/keres\")\npublic class PeldaServlet extends HttpServlet {\ndoGet(HttpServletRequest req, HttpServletResponse resp) throws IOException {}\ndoPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {}\n}\n</code></pre>"},{"location":"06_kivonat/#valasz-objektum-irasa","title":"V\u00e1lasz objektum \u00edr\u00e1sa","text":"<p>A v\u00e1lasz objektum tartalmaz mindent amit a kliensnek szeretn\u00e9nk k\u00fcldeni, legyen az header vagy a v\u00e1lasz t\u00f6rzse maga.</p> <pre><code>@WebServlet(\"/vegpont/get/keres\")\npublic class PeldaServlet extends HttpServlet {\ndoGet(HttpServletRequest req, HttpServletResponse resp) throws IOException {\n\nvar writer = resp.getWriter();\n// writer objektum a v\u00e1lasz t\u00f6rzs\u00e9t \u00edrja, pl. egy JSON itt megadhat\u00f3\n\nresp.setStatus(200);\n// st\u00e1tuszk\u00f3d be\u00e1ll\u00edt\u00e1sa\n}\n}\n</code></pre>"},{"location":"06_kivonat/#keres-objektum-olvasasa","title":"K\u00e9r\u00e9s objektum olvas\u00e1sa","text":"<p>Minden a klienst\u0151l kapott inform\u00e1ci\u00f3 a request objektumban \u00e9rhet\u0151 el, \u00edgy pl. a k\u00e9r\u00e9s param\u00e9terei, t\u00f6rzse esetleg az \u00fatvonal is.</p> <pre><code>@WebServlet(\"/vegpont/get/keres/*\")\npublic class PeldaServlet extends HttpServlet {\ndoPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {\n\nvar reader = req.getReader();\n// ezzel a k\u00e9r\u00e9s t\u00f6rzs\u00e9t olvashatjuk ki\n\nString paramName = req.getParameter(\"paramName\");\n// k\u00e9r\u00e9s param\u00e9terei kiolvashat\u00f3k n\u00e9v alapj\u00e1n. Ha az adott n\u00e9vhez nincs rendelve, akkor null.\n\nString vegpontPath = req.getPathInfo();\nString utolsoUtvonalResz = vegpontPath.substring(1);\n// *-hoz k\u00f6thet\u0151, am\u00edg nem tartalmaz /-t a csillagos r\u00e9sz.\n}\n}\n</code></pre>"},{"location":"06_kivonat/#cookie-kezeles","title":"Cookie kezel\u00e9s","text":"<p>Cookie-kat a k\u00e9r\u00e9sb\u0151l olvashatunk \u00e9s a v\u00e1laszba \u00edrhatunk. Egy cookie-t a neve azonos\u00edt egy adott \u00fatvonalhoz van rendelve, ez lehet a root (/) is.</p> <pre><code>@WebServlet(\"/vegpont/cookie\")\npublic class PeldaServlet extends HttpServlet {\ndoPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {\n\nCookie[] keresCookies = req.getCookies();\n// vagy van cookie vagy nincs -&gt; ez null is lehet\nif ( keresCookies != null ) {\nfor ( var cookie : keresCookies ) {\n// cookie feldolgoz\u00e1s pl. n\u00e9v alapj\u00e1n\n}\n}\n\nvar cookie = new Cookie(\"nev\", \"ertek\");\ncookie.setPath(\"/\");\n// cookie specifikus tulajdons\u00e1gok\n\nresp.addCookie(cookie); // hozz\u00e1adjuk a v\u00e1laszhoz. Csak ez lesz benne.\n}\n}\n</code></pre>"},{"location":"06_webapi/","title":"6. gyakorlat - WEB API","text":"<p>A k\u00f6vetkez\u0151 anyagr\u00e9szek sor\u00e1n Java servletekkel ismerkedhet\u00fcnk meg. Itt fogunk n\u00e9mi betekint\u00e9st nyerni abba, hogy hogyan is rakhatunk \u00f6ssze egy egyszer\u0171bb webes API-t. Modernebb rendszerek haszn\u00e1lata eset\u00e9n, mint pl. egy Spring Boot Web MVC Framework, m\u00e1r sok itt l\u00e1tott dolog automatiz\u00e1lhat\u00f3, \u00e9s nem kell foglalkozzunk vele, azonban ahhoz, hogy nagyj\u00e1b\u00f3l meg\u00e9rthess\u00fck mi t\u00f6rt\u00e9nik ott, ahhoz nem \u00e1rt egy kicsit alacsonyabb szint\u0171 rendszerekkel is foglalkozni egy r\u00f6vid ideig.</p> <p>Eddigi projekt\u00fcnket k\u00f6vetve egy utaz\u00e1sok \u00e9s l\u00e1tnival\u00f3k felv\u00e9tel\u00e9re k\u00e9sz\u00fclt alkalmaz\u00e1s fogunk elk\u00e9sz\u00edteni.</p>"},{"location":"06_webapi/#packing","title":"Packing","text":"<p>Webes alkalmaz\u00e1s eset\u00e9n \u00fcgyelj\u00fcnk r\u00e1, hogy az alkalmaz\u00e1sunk <code>war</code> csomagol\u00e1si kiterjeszt\u00e9s\u0171 legyen. Ezt a projekt\u00fcnk pom f\u00e1jlj\u00e1ban adhatjuk meg a k\u00f6vetkez\u0151 m\u00f3don:</p> <pre><code>&lt;packaging&gt;war&lt;/packaging&gt;\n</code></pre> <p>ahol war = Web Application Archive.</p> <p>Mivel jelenlegi alkalmaz\u00e1sunk egy annak megfelel\u0151 servlet kont\u00e9nerben fog futni, \u00edgy ennek megfelel\u0151 csomagol\u00e1st v\u00e1lasztunk neki, ez a war.</p> <p>A  tag-et ugyanarra a szintre kell elhelyezz\u00fck, mint ak\u00e1r a <code>&lt;groupId/&gt;</code>-t, vagy az <code>&lt;artifactId&gt;</code>-t. Tov\u00e1bbi referenci\u00e1k\u00e9rt b\u00e1tran l\u00e1togassunk el a https://maven.apache.org/pom.html oldalra.</p>"},{"location":"06_webapi/#projekt-kezdese","title":"Projekt kezd\u00e9se","text":"<p>T\u00f6bb mint val\u00f3sz\u00edn\u0171, hogy sok-sok kiindul\u00e1si template k\u00f6z\u00fcl v\u00e1laszthatn\u00e1nk, mikor \u00faj webes projektet kezd\u00fcnk, viszont ezek t\u00f6bbs\u00e9ge m\u00e1ra m\u00e1r sajnos vagy f\u00fcgg\u0151s\u00e9g, vagy webtechnol\u00f3gia szintj\u00e9n elavultabb\u00e1 v\u00e1lt, \u00edgy itt most egyiket sem fogjuk v\u00e1lasztani, \u00f6sszeszedj\u00fck magunknak, ami kell.</p> <p>Webes applik\u00e1ci\u00f3nkhoz k\u00e9sz\u00edts\u00fcnk egy lehet\u0151leg elk\u00fcl\u00f6n\u00fcl\u0151 modult a k\u00f6vetkez\u0151k\u00e9ppen:</p> <p></p> <p>Fontos, hogy v\u00e1lasszuk ki a megfelel\u0151 <code>Parent</code> attrib\u00fatumot, valamint a <code>groupId</code>-t is \u00fagy v\u00e1lasszuk meg, hogy az egyezzen a sz\u00fcl\u0151 package group azonos\u00edt\u00f3j\u00e1val (ha j\u00f3t akarunk).</p>"},{"location":"06_webapi/#servlet-kontener","title":"Servlet kont\u00e9ner","text":"<p>Jelen haszn\u00e1lt servlet kont\u00e9ner\u00fcnk egy egyszer\u0171 Apache Tomcat lesz. R\u00f6viden, egy olyan szoftverr\u0151l van sz\u00f3, amely a Jakarta EE platform \u00e1ltal specifik\u00e1lt eszk\u00f6zhalmaz egy minim\u00e1lis r\u00e9sz\u00e9t implement\u00e1lja/tartalmazza. Erre majd a k\u00e9s\u0151bbiek sor\u00e1n vissza t\u00e9r\u00fcnk egy r\u00f6vid pillanatra, de most elegend\u0151 egy r\u00f6vid kit\u00e9r\u0151k\u00e9nt tekinteni erre.</p> <p>Fontosak lehetnek azonban a fenti linken tal\u00e1lhat\u00f3 verzi\u00f3z\u00e1sok! Ha fejleszt\u00e9s sor\u00e1n olyan hib\u00e1kkal tal\u00e1lkozunk futtat\u00e1s k\u00f6zben, mint pl. egy <code>ClassNotFoundException</code>, akkor gondolhatunk arra, hogy tal\u00e1n elcs\u00fasztunk a verzi\u00f3kkal. Nagyon er\u0151s indik\u00e1tor lehet erre a hib\u00e1ra, amennyiben implement\u00e1ci\u00f3nk <code>javax.*</code> csomagokat haszn\u00e1l, mik\u00f6zben a <code>tomcat</code> verzi\u00f3nk pl. <code>==10.x</code>. Ebben az esetben ugyanis a tomcat implement\u00e1ci\u00f3 m\u00e1r <code>jakarta.*</code> \u00e9s NEM <code>javax.*</code> csomagokat keres. De err\u0151l a fenti linkeken t\u00f6bbet olvashatunk.</p> Servlet Spec JSP Spec EL Spec WebSocket Spec Authentication (JASPIC) Spec Apache Tomcat Version Latest Released Version Supported Java Versions 6.1 4.0 6.0 2.2 3.1 11.0.x 11.0.0-M18 (alpha) 17 and later 6.0 3.1 5.0 2.1 3.0 10.1.x 10.1.20 11 and later 5.0 3.0 4.0 2.0 2.0 10.0.x (superseded) 10.0.27 (superseded) 8 and later 4.0 2.3 3.0 1.1 1.1 9.0.x 9.0.87 8 and later 3.1 2.3 3.0 1.1 1.1 8.5.x 8.5.100 7 and later 3.1 2.3 3.0 1.1 N/A 8.0.x (superseded) 8.0.53 (superseded) 7 and later 3.0 2.2 2.2 1.1 N/A 7.0.x (archived) 7.0.109 (archived) 6 and later (7 and later for WebSocket) 2.5 2.1 2.1 N/A N/A 6.0.x (archived) 6.0.53 (archived) 5 and later 2.4 2.0 N/A N/A N/A 5.5.x (archived) 5.5.36 (archived) 1.4 and later 2.3 1.2 N/A N/A N/A 4.1.x (archived) 4.1.40 (archived) 1.3 and later 2.2 1.1 N/A N/A N/A 3.3.x (archived) 3.3.2 (archived) 1.1 and later <p>A felhaszn\u00e1lhat\u00f3s\u00e1g kedv\u00e9\u00e9rt a linken tal\u00e1lhat\u00f3 t\u00e1bl\u00e1zat itt is megjelenik, \u00e1m ezt csak \u00f3vatosan haszn\u00e1ljuk! Az \u00edr\u00e1s pillanat\u00e1ban a <code>Tomcat 11.x</code>-es szoftver m\u00e9g er\u0151sen fejleszt\u00e9s alatt \u00e1ll, ez\u00e9rt a specifik\u00e1ci\u00f3k v\u00e1ltozhatnak, m\u00edg az itt tal\u00e1lhat\u00f3 t\u00e1bl\u00e1zat nem felt\u00e9tlen\u00fcl fog!</p> <p>Ahhoz, hogy legyen egy ilyen kont\u00e9ner\u00fcnk, t\u00f6bbf\u00e9lek\u00e9ppen is elj\u00e1rhatunk. R\u00e9gebbi gyakorlatokhoz hasonl\u00f3an seg\u00edthet ebben egy el\u00e9g sz\u00e9lesk\u00f6r\u0171en haszn\u00e1lt plugin, amely egy be\u00e1gyazott <code>tomcat</code> szervert fog futtatni sz\u00e1munkra.</p> <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.codehaus.cargo&lt;/groupId&gt;\n&lt;artifactId&gt;cargo-maven3-plugin&lt;/artifactId&gt;\n&lt;configuration&gt;\n&lt;!-- most egy be\u00e1gyazott, v10 tomcat-et haszn\u00e1lunk --&gt;\n&lt;container&gt;\n&lt;containerId&gt;tomcat10x&lt;/containerId&gt;\n&lt;type&gt;embedded&lt;/type&gt;\n&lt;/container&gt;\n&lt;configuration&gt;\n&lt;properties&gt;\n&lt;!-- fusson a 8080-as porton! --&gt;\n&lt;cargo.servlet.port&gt;8080&lt;/cargo.servlet.port&gt;\n&lt;!-- low, medium vagy high --&gt;\n&lt;cargo.logging&gt;medium&lt;/cargo.logging&gt;\n&lt;/properties&gt;\n&lt;/configuration&gt;\n&lt;deployables&gt;\n&lt;deployable&gt;\n&lt;groupId&gt;${project.groupId}&lt;/groupId&gt;\n&lt;artifactId&gt;${project.artifactId}&lt;/artifactId&gt;\n&lt;type&gt;${project.packaging}&lt;/type&gt;\n&lt;properties&gt;\n&lt;!-- ez az\u00e9rt j\u00f3, mert \u00edgy nem lesz mindenf\u00e9le default \u00fatvonal be\u00e1ll\u00edtva --&gt;\n&lt;context&gt;/&lt;/context&gt;\n&lt;/properties&gt;\n&lt;/deployable&gt;\n&lt;/deployables&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre> <p>Nincs sz\u00fcks\u00e9g k\u00fcl\u00f6n tomcat szerver telep\u00edt\u00e9s\u00e9re, m\u00e1ra m\u00e1r teljesen j\u00f3 \u00e9s kij\u00e1rt utak vannak standalone webservice-k k\u00e9sz\u00edt\u00e9s\u00e9re. A gyakorlat sor\u00e1n val\u00f3sz\u00edn\u0171leg ez elegend\u0151, \u00e9s k\u00e9nyelmesebb is lehet. Amennyiben \u00e9letutunk sor\u00e1n sz\u00fcks\u00e9g\u00fcnk lenne egy k\u00fcls\u0151 szerverre val\u00f3 alkalmaz\u00e1s deploy-ra, \u00fagy ell\u00e1togathatunk a r\u00e9gi gyakorlati r\u00e9szekhez.</p> <p>Pluginok haszn\u00e1lat\u00e1ra m\u00e1r l\u00e1ttunk p\u00e9ld\u00e1t, evvel is hasonl\u00f3k\u00e9pp futtathatjuk alkalmaz\u00e1sunkat, mint egy <code>javafx</code> alkalmaz\u00e1s eset\u00e9n.</p> <pre><code>./mvnw cargo:run\n</code></pre> <p>avagy a projekten bel\u00fcl:</p> <pre><code>./mvnw install &amp;&amp; ./mvnw cargo:run -pl webapi\n</code></pre> <p>parancs seg\u00edts\u00e9g\u00e9vel futtathatjuk.</p> <p>T\u00e9rj\u00fcnk r\u00e1 ezut\u00e1n egy k\u00f6nnyebb \u00fatra, az alkalmaz\u00e1sunk ind\u00edt\u00e1s\u00e1hoz. Itt megjegyezz\u00fck, hogy ezen gyakorlatnak nem c\u00e9lja megismertetni a Spring Framework-\u00f6t, \u00e9s annak csod\u00e1it, viszont a webapplik\u00e1ci\u00f3nk ind\u00edt\u00e1s\u00e1hoz egy igen kellemes eszk\u00f6z lehet.</p> <pre><code>@ServletComponentScan\n@SpringBootApplication\npublic class App {\n\npublic static void main(String[] args) {\nnew SpringApplication(App.class).run(args);\n}\n}\n</code></pre> <p>Egy ilyen - effekt\u00edve egy soros - <code>Main</code> class seg\u00edts\u00e9g\u00e9vel b\u00e1rmely sz\u00e1munkra kedves IDE haszn\u00e1lat\u00e1val is ind\u00edthatjuk alkalmaz\u00e1sunkat.</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n&lt;version&gt;3.2.4&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.tomcat.embed&lt;/groupId&gt;\n&lt;artifactId&gt;tomcat-embed-core&lt;/artifactId&gt;\n&lt;version&gt;10.1.20&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Ehhez erre a k\u00e9t f\u00fcgg\u0151s\u00e9gre van sz\u00fcks\u00e9g\u00fcnk. Az els\u0151re a Spring Boot miatt, a m\u00e1sodikra a be\u00e1gyazott Tomcat szerver miatt, melyet a keretrendszer\u00fcnk ebben az esetben elind\u00edt sz\u00e1munkra. Egy be\u00e1gyazott Tomcat szerver ind\u00edt\u00e1sa nem t\u00fal vesz\u00e9lyes feladat, viszont jelenlegi gyakorlati anyagunk erre most nem terjed ki, \u00edgy marad a plugin, vagy egy Spring Boot.</p>"},{"location":"06_webapi/#modellek","title":"Modellek","text":"<p>A teljess\u00e9g ig\u00e9nye n\u00e9lk\u00fcl, itt most megjelen\u00edt\u00fcnk egy p\u00e1r megval\u00f3s\u00edt\u00e1s szempontj\u00e1b\u00f3l fontosabb modell oszt\u00e1lyt, melyek sz\u00fcks\u00e9gesek lehetnek az API pontokkal val\u00f3 kommunik\u00e1ci\u00f3hoz.</p> <p>A konkr\u00e9t utaz\u00e1sok reprezent\u00e1ci\u00f3j\u00e1ra szolg\u00e1l\u00f3 objektumok:</p> <pre><code>@NoArgsConstructor\n@AllArgsConstructor\n@Getter\n@Setter\n@ToString\npublic class Sight {\n\nprivate Long id;\nprivate String name;\nprivate BigDecimal price;\nprivate Integer openingHour;\nprivate Integer closingHour;\nprivate String description;\nprivate Integer popularity;\n}\n</code></pre> <p>Egy create oper\u00e1ci\u00f3 ut\u00e1n adott v\u00e1lasz form\u00e1tuma:</p> <pre><code>public record InsertId(Object id) {\n}\n</code></pre> <p>Ebben az esetben az <code>Object</code>, mint ID minden esetben <code>Long</code> t\u00edpus\u00fa lesz, de meghagytuk a lehet\u0151s\u00e9get esetlegesen m\u00e1s t\u00edpus\u00fa els\u0151dleges kulcsoknak is.</p> <p>Adatb\u00e1zis m\u00f3dos\u00edt\u00e1s ut\u00e1n adott v\u00e1lasz (Update, vagy Delete).</p> <pre><code>public record ModifiedRows(int affectedRows) {\n}\n</code></pre> <p>Egyes preferenci\u00e1k be\u00e1ll\u00edt\u00e1s\u00e1ra szolg\u00e1l\u00f3 k\u00e9r\u00e9s form\u00e1tuma.</p> <pre><code>public record Preferences(\nBigDecimal minPrice,\nBigDecimal maxPrice,\nInteger minPopularity) implements Serializable {\n}\n</code></pre> <pre><code>public record Message(String message) {\n}\n</code></pre>"},{"location":"06_webapi/#servletek","title":"Servletek","text":"<p>A Java Servletek valamilyen f\u00e9le alkalmaz\u00e1s-szerveren fut\u00f3 programok, melyeket egy k\u00f6ztes r\u00e9tegk\u00e9nt k\u00e9pzelhet\u00fcnk el kliensek k\u00e9r\u00e9sei (pl. HTTP), valamint alkalmaz\u00e1sunk/alkalmaz\u00e1saink k\u00f6z\u00f6tt.</p> <p>Servleteink sor\u00e1n a k\u00f6vetkez\u0151 <code>import</code>-okat szinte biztosan haszn\u00e1lni fogjuk:</p> <pre><code>import jakarta.servlet.ServletConfig;\nimport jakarta.servlet.annotation.WebServlet;\nimport jakarta.servlet.http.HttpServlet;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\n</code></pre> <p>\u0150k a k\u00f6vetkez\u0151 f\u00fcgg\u0151s\u00e9gt\u0151l sz\u00e1rmaznak:</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;jakarta.servlet&lt;/groupId&gt;\n&lt;artifactId&gt;jakarta.servlet-api&lt;/artifactId&gt;\n&lt;version&gt;6.0.0&lt;/version&gt;\n&lt;!-- Figyelj\u00fck meg a f\u00fcgg\u0151s\u00e9g scope-j\u00e1t! --&gt;\n&lt;scope&gt;provided&lt;/scope&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Enn\u00e9l a pontn\u00e1l kalandozzunk vissza az el\u0151z\u0151 r\u00e9szek tartalm\u00e1hoz. Eml\u00edtett\u00fck, hogy az alkalmaz\u00e1sunkat futtat\u00f3 servlet kont\u00e9ner (jelenleg Tomcat) implement\u00e1l bizonyos specifik\u00e1ci\u00f3kat. Adott kont\u00e9ner kiv\u00e1laszt\u00e1sa eset\u00e9n a fejleszt\u0151 felel\u0151ss\u00e9ge, hogy ut\u00e1naj\u00e1rjon annak, hogy a Jakarta EE specifik\u00e1ci\u00f3k k\u00f6z\u00fcl melyek azok, amelyeket tartalmaz a v\u00e1lasztott szoftver. A provided scope annyit mond most itt nek\u00fcnk, hogy az evvel j\u00e1r\u00f3 csomagokat elegend\u0151 ford\u00edt\u00e1si id\u0151ben beh\u00fazni, ugyanis ez majd a fut\u00e1s sor\u00e1n valahonnan el\u00e9rhet\u0151 lesz. Ez a valahonnan jelenleg a Tomcat szoftvert\u0151l lesz, \u0151 fogja biztos\u00edtani nek\u00fcnk a sz\u00fcks\u00e9ges jakarta oszt\u00e1lyokat.</p> <p>Kezdetben vegy\u00fck p\u00e9ld\u00e1ul egy egyszer\u0171 servlet elk\u00e9sz\u00edt\u00e9s\u00e9t.</p>"},{"location":"06_webapi/#teapot","title":"Teapot","text":"<p>Egy te\u00e1s kanna!</p> <pre><code>// Ez egy fontos annot\u00e1ci\u00f3, ugyanis ennek seg\u00edts\u00e9g\u00e9vel\n// specifik\u00e1lhatjuk, hogy milyen \u00fatvonalon fog \u00e9lni az\n// adott servlet\u00fcnk. Ha a HOST ut\u00e1n, (b\u00e1rmely kedvenc\n// http kliens\u00fcnket (vagy itt most \u00e9pp ak\u00e1r b\u00f6ng\u00e9sz\u0151nket)\n// haszn\u00e1lva) az itt le\u00edrt \u00fatvonalat adjuk meg, akkor ez\n// a servlet fog reag\u00e1lni a k\u00e9r\u00e9seinkre.\n@WebServlet(urlPatterns = \"/teapot\")\n// Az is nagyon fontos tov\u00e1bb\u00e1, hogy oszt\u00e1lyunk a HttpServlet\n// class-b\u00f3l \u00f6r\u00f6kl\u0151dj\u00f6n.\npublic class TeapotServlet extends HttpServlet {\n\n// Itt a GET k\u00e9r\u00e9sekre val\u00f3 reag\u00e1l\u00e1si hajlam\u00e1t adhatjuk meg\n@Override\nprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws IOException {\n// Megadjuk a v\u00e1lasz form\u00e1tum\u00e1t. Most pl. text/html, de\n// ebben az esetben lehetne text/plain is. Van m\u00e9g j\u00f3 sok,\n// n\u00e9zz\u00fck meg \u0151ket!\nresp.setContentType(ContentType.TEXT_HTML.getMimeType());\n// Nem k\u00f6telez\u0151, de specifik\u00e1lhatjuk a karakter k\u00f3dol\u00e1st is.\nresp.setCharacterEncoding(StandardCharsets.UTF_8.name());\n\n// Itt ez most egy teapot status. \u00c1ltal\u00e1ban OK == 200,\n// vagy hasonl\u00f3kat fogunk ink\u00e1bb l\u00e1tni.\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/418\nresp.setStatus(418);  // Nincs be\u00e9p\u00edtett teapot v\u00e1lasz :(\n// megfogjuk a response writer-t\n// azt\u00e1n \u00edrunk vele valami v\u00e1laszt\n// most csak annyit, hogy teapot vagyok\nresp.getWriter().println(\"I am a teapot\");\n}\n}\n</code></pre> <p>A gyakorlat sor\u00e1n f\u0151k\u00e9nt POST k\u00e9r\u00e9sekkel fogunk foglalkozni. Bizonyos esetekben ak\u00e1r haszn\u00e1lhatn\u00e1nk GET k\u00e9r\u00e9seket is, azonban nem igaz\u00e1n akarunk olyan k\u00e9r\u00e9seket tervezni, melyeknek fontos lenne a cache-el\u00e9se, tov\u00e1bb\u00e1 amennyiben kieg\u00e9sz\u00edten\u00e9nk az alkalmaz\u00e1sunkat olyan m\u00f3don, hogy az valamilyen f\u00e9le autentik\u00e1ci\u00f3t is tartalmazzon, \u00fagy megint csak oda jutn\u00e1nk, hogy az egyes API endpoint-okat <code>POST</code> k\u00e9r\u00e9sekkel kellene megval\u00f3s\u00edtsuk.</p> <p>Ilyen m\u00f3don diplomatikusabb teh\u00e1t, ha maradunk a <code>POST</code> k\u00e9r\u00e9sekn\u00e9l. A fenti egyszer\u0171 esetben viszont, mivel olyanf\u00e9le view adatokat k\u00f6zl\u00fcnk a klienssel, \u00edgy m\u00e1r ink\u00e1bb indokolt egy <code>GET</code> request haszn\u00e1lata.</p>"},{"location":"06_webapi/#request","title":"Request","text":"<p>\u00c9s hogy ezt hogyan is \u00e9rj\u00fck el? Pr\u00f3b\u00e1ljuk ki el\u0151sz\u00f6r egy kiss\u00e9 fapados m\u00f3don! A k\u00f6vetkez\u0151kben, \u00e9s itt is felt\u00e9telezz\u00fck, hogy az alkalmaz\u00e1sunk a 8080-as porton fut.</p> <p>P\u00e9lda cURL seg\u00edts\u00e9g\u00e9vel a teapot servlet-hez:</p> <pre><code>curl http://localhost:8080/teapot\n</code></pre> <p>ugyanez fetch api haszn\u00e1lat\u00e1val:</p> <pre><code>fetch(\"http://localhost:8080/teapot\"\n).then(resp =&gt; {\nreturn resp.text();\n}).then(data =&gt; {\nconsole.log(data);\n})\n</code></pre>"},{"location":"06_webapi/#read","title":"Read","text":"<p>K\u00e9sz\u00edts\u00fck el els\u0151re a feladatunkhoz tartoz\u00f3 els\u0151 servletk\u00e9nt, a read servletet. \u0150t arra fogjuk haszn\u00e1lni, hogy az \u00e9ppen megval\u00f3s\u00edtott perzisztens t\u00e1rhelyt\u0151l adatokat k\u00e9rj\u00fcnk le. Mint a t\u00f6bbi servlet megval\u00f3s\u00edt\u00e1s\u00e1t, ezt is \u00e9rdemes egy k\u00fcl\u00f6n, pl. <code>servlet</code> csomag al\u00e1 helyezni.</p> <pre><code>// Jelen servlet\u00fcnk t\u00f6bb URL-t is elfogad, read \u00e9s list alias alatt is h\u00edvhatjuk.\n@WebServlet(urlPatterns = {\"/api/sight/read\", \"/api/sight/list\"})\npublic class SightReadServlet extends HttpServlet {\n\n// data access object, mellyel az utaz\u00e1sainkat kezelhetj\u00fck\nprivate Dao&lt;Long, Sight&gt; dao;\n// opcion\u00e1lis\n// valid\u00e1ci\u00f3ra szolg\u00e1l\u00f3 factory, mely valid\u00e1ci\u00f3t k\u00e9zzel is elv\u00e9gezhet\u00fcnk\nprivate ValidatorFactory validatorFactory;\n// egy opcion\u00e1lis logger\n// nem felt\u00e9tele egy m\u0171k\u00f6d\u0151 servletnek\nprivate final Logger logger = LoggerFactory.getLogger(getClass());\n\n// Az init met\u00f3dus most nek\u00fcnk csak a DataSource beszerz\u00e9se miatt fontos,\n// azonban ebben a p\u00e9ld\u00e1ban itt most tal\u00e1lhat\u00f3 egy valid\u00e1tor is.\n@Override\npublic void init(ServletConfig config) {\n// Honnan j\u00f6n ez itt??? K\u00e9s\u0151bb l\u00e1tni fogjuk!\n// Itt term\u00e9szetesen elegend\u0151 lehetne egy singleton-t\u00f3l elk\u00e9rni ezt,\n// de ha hossz\u00fat\u00e1von j\u00f3t akarunk magunknak, akkor singleton-t csak akkor\n// alkalmazunk ha abszol\u00fat musz\u00e1j, vagy indokolt.\nvar dataSource = (DataSource) config.getServletContext().getAttribute(\"ds\");\ndao = new SightJooqDao(dataSource, SQLDialect.SQLITE);\nvalidatorFactory = (ValidatorFactory) config.getServletContext().getAttribute(\"val\");\n}\n\n@Override\nprotected void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {\n// Adott met\u00f3dusaink bel\u00e9p\u00e9sekor r\u00f6gt\u00f6n specifik\u00e1lhatjuk is a v\u00e1laszunk form\u00e1tum\u00e1t!\nresp.setContentType(ContentType.APPLICATION_JSON.getMimeType());\n// \u00e1ll\u00edthatunk karakter k\u00f3dol\u00e1st is --&gt; pl. UTF-8\nresp.setCharacterEncoding(StandardCharsets.UTF_8.name());\n// Az alap st\u00e1tusz k\u00f3dunk egy OK (200) lesz.\nresp.setStatus(HttpStatus.SC_OK);\n\n// k\u00e9r\u00fcnk egy json szerializ\u00e1l\u00f3 p\u00e9ld\u00e1nyt\nvar gson = JsonSupport.create();\n// beolvassuk a request body-t\nvar reqModel = gson.fromJson(req.getReader(), ReadSightReq.class);\nvar validator = validatorFactory.getValidator();\nSet&lt;ConstraintViolation&lt;ReadSightReq&gt;&gt; valResult = new HashSet&lt;&gt;();\n// amennyiben van request model, \u00fagy valid\u00e1ljuk azt\nif (reqModel != null) {\nvalResult = validator.validate(reqModel);\n}\n\n// opcion\u00e1lis: logol\u00e1s\nvalResult.forEach(el -&gt; logger.error(ValidationLog.createLog(el)));\n// Amennyiben a valid\u00e1ci\u00f3 hib\u00e1ba, vagy hib\u00e1kba \u00fctk\u00f6z\u00f6tt, abban az esetben\n// szeretn\u00e9nk ha a servlet pl. egy BAD_REQUEST (400) hibak\u00f3ddal jelezn\u00e9\n// probl\u00e9m\u00e1j\u00e1t. Amennyiben m\u00f3dunk van r\u00e1 adhatunk n\u00e9mi inform\u00e1ci\u00f3t is evvel\n// kapcsolatban, pl. egy error message form\u00e1j\u00e1ban.\nif (!valResult.isEmpty()) {\nresp.setStatus(HttpStatus.SC_BAD_REQUEST);\nresp.getWriter().println(gson.toJson(new Error(valResult.stream()\n.map(ValidationLog::createLog)\n.collect(Collectors.joining(\"\\n\")))));\nreturn;\n}\n\n// Ha a k\u00e9r\u00e9s \u00fcres volt, akkor csak szimpl\u00e1n lek\u00e9rj\u00fck az \u00f6sszes rekordot,\nIterable&lt;Sight&gt; models;\nif (reqModel == null) {\nmodels = dao.findAll();\n}\n// m\u00e1sk\u00fcl\u00f6nben pedig sz\u0171r\u00fcnk az adott k\u00e9r\u00e9sben szerepl\u0151 modell szerint.\nelse {\nmodels = dao.findAllByCrit(ConversionSupport.toModel(reqModel));\n}\nvar modelList = StreamSupport.stream(models.spliterator(), false).toList();\nresp.getWriter().println(gson.toJson(modelList));\n}\n}\n</code></pre> <p>Megval\u00f3s\u00edtott servleteink eset\u00e9n tal\u00e1n az egyik legfontosabb l\u00e9p\u00e9s a v\u00e1lasz \u00edr\u00e1sa. Itt \u00e9s a k\u00f6vetkez\u0151kben egy egyszer\u0171en haszn\u00e1lhat\u00f3, \u00e9s n\u00e9pszer\u0171 json parser csomagot haszn\u00e1lunk: gson</p> <p>Tov\u00e1bbi inf\u00f3k\u00e9rt n\u00e9zz\u00fck meg a JSON szekci\u00f3t.</p> <p>Ezen k\u00edv\u00fcl l\u00e1that\u00f3 egy <code>ContentType</code>, egy <code>HttpStatus</code>, valamint egy <code>StandardCharsets</code> be\u00e1ll\u00edt\u00e1s is. Az els\u0151 kett\u0151 esetben a</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;\n&lt;artifactId&gt;httpcore&lt;/artifactId&gt;\n&lt;version&gt;4.4.16&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>csomagot haszn\u00e1ltuk fel. A <code>HttpStatus</code> eset\u00e9ben haszn\u00e1lhat\u00f3 a <code>jakarta.servlet-api</code> \u00e1ltal szolg\u00e1ltatott <code>HttpServletResponse</code> is. Haszn\u00e1latukat tekintve, a jelenlegi szempontjaink alapj\u00e1n egyez\u0151nek tekinthet\u0151k, azonban megjegyezz\u00fck, jelenleg csup\u00e1n a kellemesebb olvashat\u00f3s\u00e1got seg\u00edtik el\u0151 (no magic variables), de \u00e9rdemben ekvivalensek egy be\u00e9getett sz\u00e1mmal/stringgel.</p>"},{"location":"06_webapi/#note","title":"! Note !","text":"<p> Itt nem gy\u0151zz\u00fck hangs\u00falyozni, hogy a k\u00e9rt v\u00e1laszok form\u00e1tuma nagyon fontos API tervez\u00e9se eset\u00e9n. Amennyiben ez elt\u00e9r a megrendel\u00e9st\u0151l, \u00fagy a r\u00e1\u00e9p\u00fcl\u0151 applik\u00e1ci\u00f3k egyike sem fogja \u00e9rteni a szerver \u00e1ltal k\u00fcld\u00f6tt v\u00e1laszokat, itt nincs \"pardon\". Ha egy adott API endpoint egy <code>alma</code> \u00e9s egy <code>kukac</code> mez\u0151kkel rendelkez\u0151 JSON-t v\u00e1r, pl. <code>String</code> \u00e9s <code>Integer</code> t\u00edpusokat felt\u00e9telezve, akkor amennyiben nem olvashat\u00f3 az adott v\u00e1lasz ebben az adott form\u00e1tumban, \u00fagy az eg\u00e9sz mehet a levesbe!</p>"},{"location":"06_webapi/#request_1","title":"Request","text":"<p>P\u00e9lda az \u00f6sszes rekord lek\u00e9r\u00e9s\u00e9re:</p> <pre><code>curl --request POST http://localhost:8080/api/sight/list\n</code></pre> <p>Ugyanez sz\u0171r\u00e9ssel:</p> <pre><code>curl --header \"Content-Type: application/json\" --data '{\"id\": 3}' --request POST http://localhost:8080/api/sight/list\n</code></pre> <p>Fetch API:</p> <pre><code>fetch(\"http://localhost:8080/api/sight/list\", {\n\"method\": \"post\",\n\"body\": JSON.stringify({\"name\": \"a\"}),\n\"headers\": { \"Content-Type\": \"application/json\" }\n}).then(\nresp =&gt; resp.json()\n).then(data =&gt; {\nconsole.log(data);\n})\n</code></pre>"},{"location":"06_webapi/#create","title":"Create","text":"<p>A create servlet\u00fcnk nagyon hasonl\u00f3 alapokra \u00e9p\u00fcl, mint ak\u00e1r a read, csup\u00e1n a <code>doPost</code> megval\u00f3s\u00edt\u00e1s\u00e1ban lesznek elt\u00e9r\u00e9sek. Ezen k\u00edv\u00fcl term\u00e9szetesen az is k\u00fcl\u00f6nb\u00f6z\u0151 lesz, hogy milyen url-pattern alatt fogjuk el\u00e9rni, melyet ne feledj\u00fcnk el a megfelel\u0151 annot\u00e1ci\u00f3 seg\u00edts\u00e9g\u00e9vel be\u00e1ll\u00edtani. Ezen URL-ek eset\u00fcnkben pl. lehetnek a k\u00f6vetkez\u0151k: <code>\"/api/sight/create\"</code>, <code>\"/api/sight/insert\"</code>, <code>\"/api/sight/add\"</code></p> <pre><code>@Override\nprivate void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {\nresp.setContentType(ContentType.APPLICATION_JSON.getMimeType());\nresp.setCharacterEncoding(StandardCharsets.UTF_8.name());\nresp.setStatus(HttpStatus.SC_CREATED);\n\nvar gson = JsonSupport.create();\n// els\u0151 k\u00fcl\u00f6nbs\u00e9g az elfogadott k\u00e9r\u00e9s t\u00edpus\u00e1ban\nvar reqModel = gson.fromJson(req.getReader(), NewSightReq.class);\nvar validator = validatorFactory.getValidator();\nvar valResult = validator.validate(reqModel);\n\nvalResult.forEach(el -&gt; logger.error(ValidationLog.createLog(el)));\nif (!valResult.isEmpty()) {\nresp.setStatus(HttpStatus.SC_BAD_REQUEST);\nresp.getWriter().println(gson.toJson(new Error(valResult.stream()\n.map(ValidationLog::createLog)\n.collect(Collectors.joining(\"\\n\")))));\nreturn;\n}\n// request modell \u00e1talak\u00edt\u00e1sa t\u00e9nyleges db modell\u00e9\n// gyakorlatilag a mez\u0151k megfelel\u0151 \u00e9rt\u00e9keinek m\u00e1sol\u00e1sa t\u00f6rt\u00e9nik\nvar dbModel = ConversionSupport.toModel(reqModel);\n// adott model t\u00e9nyleges ment\u00e9se az adatb\u00e1zisba\ndao.save(dbModel);\n// json konvert\u00e1l\u00e1s -&gt; \"{\"id\": dbModel::id}\"\nresp.getWriter().println(gson.toJson(new InsertId(dbModel.getId())));\n}\n</code></pre> <p>Adott esetben ak\u00e1r be is olvashatn\u00e1nk minden k\u00e9r\u00e9st egy adott oszt\u00e1lyba, eset\u00fcnkben a <code>Sight</code> oszt\u00e1lyba, azonban vegy\u00fck \u00e9szre, hogy itt most egy <code>NewSightReq</code> t\u00edpust haszn\u00e1lunk arra, hogy a kliens k\u00e9r\u00e9s\u00e9t beolvassuk. Ez az oszt\u00e1ly pl. a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9zhet ki:</p> <pre><code>@NoArgsConstructor\n@AllArgsConstructor\n@Getter\n@Setter\n@ToString\npublic class NewSightReq {\n\n@NotBlank\nprivate String name;\n@PositiveOrZero\n@NotNull\nprivate BigDecimal price;\n@Min(0)\n@Max(23)\n@NotNull\nprivate Integer openingHour;\n@Min(0)\n@Max(24)\n@NotNull\nprivate Integer closingHour;\nprivate String description;\n@Min(0)\n@Max(10)\n@NotNull\nprivate Integer popularity;\n}\n</code></pre> <p>Itt a <code>jakarta.validation-api</code>-t haszn\u00e1ljuk, mint f\u00fcgg\u0151s\u00e9g.</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;jakarta.validation&lt;/groupId&gt;\n&lt;artifactId&gt;jakarta.validation-api&lt;/artifactId&gt;\n&lt;version&gt;3.0.2&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>T\u00e1rol\u00e1sra \u00e9s k\u00e9r\u00e9sre alkalmas oszt\u00e1lyainkat nagyon sok esetben \u00e9rdemes lehet sz\u00e9tv\u00e1lasztani. M\u00e1r csak az\u00e9rt is, mert egy k\u00e9r\u00e9s sor\u00e1n (mint itt is) nem felt\u00e9tlen\u00fcl v\u00e1rjuk el ugyanazon param\u00e9tereket. Tov\u00e1bb\u00e1 a valid\u00e1ci\u00f3ja is elk\u00fcl\u00f6n\u00fclhet annak, hogy mit tekint\u00fcnk valid inputnak, valamint annak is, hogy adatb\u00e1zis ment\u00e9skor mit tekint\u00fcnk egy \u00e9rv\u00e9nyes rekordnak. Gondoljunk p\u00e9ld\u00e1ul csak bele a <code>UNIQUE</code> megk\u00f6t\u00e9sekre. Ezt bevitelkor nem tudjuk, \u00e9s nem is akarjuk ellen\u0151rizni, csup\u00e1n a t\u00e9nyleges adatb\u00e1zisba val\u00f3 ment\u00e9s l\u00e9p\u00e9sekor.</p>"},{"location":"06_webapi/#request_2","title":"Request","text":"<p>P\u00e9lda egy create k\u00e9r\u00e9sre cURL haszn\u00e1lat\u00e1val:</p> <pre><code>curl -header \"Content-Type: application/json\" --data '{\"name\": \"sth new\", \"price\": 93.15, \"openingHour\": 6, \"closingHour\": 18, \"description\": \"A long description to show you how good this sight is.\\nBe prepared!\"; \"popularity\": 7}' --request POST http://localhost:8080/api/sight/create\n</code></pre>"},{"location":"06_webapi/#update","title":"Update","text":"<p>Update eset\u00e9n szinte ugyanaz t\u00f6rt\u00e9nik, mint egy create eset\u00e9n, csup\u00e1n arra kell figyelj\u00fcnk, hogy a megengedett URL-eket ennek a servletnek megfelel\u0151en adjuk meg. Pl. <code>api/sight/update</code>, \u00e9s/vagy <code>api/sight/refresh</code> legyen. Ezen k\u00edv\u00fcl term\u00e9szetesen egy kicsit m\u00e1s, de nagyon hasonl\u00f3 a beolvasott k\u00e9r\u00e9s form\u00e1tuma is, amely itt most t\u00e9nylegesen csak annyiban k\u00fcl\u00f6nb\u00f6zik, hogy az <code>UpdateSightReq</code> class tartalmaz egy <code>id</code> mez\u0151t is. Tov\u00e1bb\u00e1 sz\u00fcks\u00e9ges m\u00e9g a megfelel\u0151 <code>dao::updateById</code> met\u00f3dus\u00e1t is megh\u00edvni. V\u00e1laszunk pedig egy <code>affectedRows</code> nev\u0171 mez\u0151t tartalmaz, mely a m\u00f3dos\u00edtott rekordok sz\u00e1moss\u00e1g\u00e1t hivatott jel\u00f6lni.</p> <pre><code>@Override\nprivate void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {\nresp.setContentType(ContentType.APPLICATION_JSON.getMimeType());\nresp.setCharacterEncoding(StandardCharsets.UTF_8.name());\nresp.setStatus(HttpStatus.SC_OK);\n\nvar gson = JsonSupport.create();\n// update request beolvas\u00e1sa\nvar reqModel = gson.fromJson(req.getReader(), UpdateSightReq.class);\nvar validator = validatorFactory.getValidator();\nvar valResult = validator.validate(reqModel);\n\nvalResult.forEach(el -&gt; logger.error(ValidationLog.createLog(el)));\nif (!valResult.isEmpty()) {\nresp.setStatus(HttpStatus.SC_BAD_REQUEST);\nresp.getWriter().println(gson.toJson(new Error(valResult.stream()\n.map(ValidationLog::createLog)\n.collect(Collectors.joining(\"\\n\")))));\nreturn;\n}\n// request modell \u00e1talak\u00edt\u00e1sa t\u00e9nyleges db modell\u00e9\n// gyakorlatilag a mez\u0151k megfelel\u0151 \u00e9rt\u00e9keinek m\u00e1sol\u00e1sa t\u00f6rt\u00e9nik\nvar dbModel = ConversionSupport.toModel(reqModel);\n// db update\nvar affectedRows = dao.updateById(reqModel.getId(), dbModel);\n// majd v\u00e1lasz \u00edr\u00e1sa\nresp.getWriter().println(gson.toJson(new ModifiedRows(affectedRows)));\n}\n</code></pre> <p>L\u00e1thatjuk, hogy gondosabban megtervezett servletek eset\u00e9n nagyon minim\u00e1lis v\u00e1ltoztat\u00e1s is el\u00e9g lehet k\u00fcl\u00f6nb\u00f6z\u0151 funkci\u00f3k megval\u00f3s\u00edt\u00e1s\u00e1hoz. Ugyanakkor, ez jelen pillanatban m\u00e1sra is adhat utal\u00e1st. Vegy\u00fck \u00e9szre, hogy ez a servlet, \u00e9s az el\u0151z\u0151ek eset\u00e9n is igaz, hogy nagyon kev\u00e9s t\u00e9nyleges funkcionalit\u00e1ssal rendelkeznek egy ilyen egyszer\u0171 esetben. Ha nagyon fapadosak akarunk lenni, akkor az eg\u00e9sz <code>doPost</code> reduk\u00e1lhat\u00f3 lenne a k\u00f6vetkez\u0151 l\u00e9nyegi sorokra:</p> <pre><code>@Override\nprivate void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {\nvar reqModel = new Gson().fromJson(req.getReader(), UpdateSightReq.class);\nresp.getWriter().println(new Gson().toJson(new ModifiedRows(\ndao.updateById(reqModel.getId(), ConversionSupport.toModel(reqModel)))));\n}\n</code></pre> <p>Ez elmondhat\u00f3 a t\u00f6bbi servlet\u00fcnkr\u0151l is. Term\u00e9szetesen fontos a valid\u00e1ci\u00f3, de ha esetleg hajlamot \u00e9rezn\u00e9nk a r\u00e9szletekben val\u00f3 elvesz\u00e9shez, akkor gondoljunk csak a fenti megval\u00f3s\u00edt\u00e1sra.</p> <p>Gyakorl\u00e1sk\u00e9ppen, \u00e9s egy teljesen ide\u00e1lis vil\u00e1got felt\u00e9telezve, \u00edrjuk \u00e1t az \u00f6sszes eddigi servletet ilyen m\u00f3don!</p>"},{"location":"06_webapi/#request_3","title":"Request","text":"<pre><code>curl -header \"Content-Type: application/json\" --data '{\"id\": 3, \"name\": \"change me\", \"price\": 24.42, \"openingHour\": 12, \"closingHour\": 20, \"description\": \"Come here kind Sir!\"; \"popularity\": 8}' --request POST http://localhost:8080/api/sight/update\n</code></pre>"},{"location":"06_webapi/#delete","title":"Delete","text":"<p>Delete eset\u00e9ben nem is id\u0151z\u00fcnk m\u00e1r sokat, \u0151 m\u00e1r t\u00e9nyleg szinte ugyanaz, mint egy update.</p> <pre><code>@Override\nprivate void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {\nresp.setContentType(ContentType.APPLICATION_JSON.getMimeType());\nresp.setCharacterEncoding(StandardCharsets.UTF_8.name());\nresp.setStatus(HttpStatus.SC_OK);\n\nvar gson = JsonSupport.create();\nvar reqModel = gson.fromJson(req.getReader(), DeleteSightReq.class);\nvar validator = validatorFactory.getValidator();\nvar valResult = validator.validate(reqModel);\n\nvalResult.forEach(el -&gt; logger.error(ValidationLog.createLog(el)));\nif (!valResult.isEmpty()) {\nresp.setStatus(HttpStatus.SC_BAD_REQUEST);\nresp.getWriter().println(gson.toJson(new Error(valResult.stream()\n.map(ValidationLog::createLog)\n.collect(Collectors.joining(\"\\n\")))));\nreturn;\n}\nvar affectedRows = dao.deleteById(reqModel.getId());\nresp.getWriter().println(gson.toJson(new ModifiedRows(affectedRows)));\n}\n</code></pre>"},{"location":"06_webapi/#request_4","title":"Request","text":"<pre><code>curl -header \"Content-Type: application/json\" --data '{\"id\": 3}' --request POST http://localhost:8080/api/sight/delete\n</code></pre>"},{"location":"06_webapi/#servlet-context","title":"Servlet context","text":"<p>T\u00f6rt\u00e9net\u00fcnk elej\u00e9n l\u00e1thattuk, hogy kaptunk egy p\u00e1r ingyen <code>DataSource</code>, valamint <code>ValidatorFactory</code> objektumot is. De honnan is j\u00f6ttek ezek? Applik\u00e1ci\u00f3nk indul\u00e1sakor van egy fontos event, melyre listener-t is k\u00f6thet\u00fcnk Ez pedig a ServletContextListener::contextInitialized event. Egy\u00e9b event listenerekkel a gyakorlat sor\u00e1n val\u00f3sz\u00edn\u0171leg nem fogunk tal\u00e1lkozni, de r\u00f6viden feladatuk annyiban ki is mer\u00fcl, hogy megfelel\u0151 eventekre specifik\u00e1lhatunk vel\u00fck egy adott munkav\u00e9gz\u00e9si folyamatot. Azaz, \"ha j\u00f6n egy ilyen event, akkor hajtsd v\u00e9gre ezt az action-t\".</p> <p>Egy ilyen listener-t p\u00e9ld\u00e1ul a k\u00f6vetkez\u0151k\u00e9ppen implement\u00e1lhatunk:</p> <pre><code>@WebListener\npublic class ContextListener implements ServletContextListener {\n\n// \u0151 lesz majd a DataSource objektumunk az alkalmaz\u00e1sunk pusztul\u00e1s\u00e1ig\nprivate final DataSource dataSource;\n// szint\u00e9n az alkalmaz\u00e1sunk v\u00e9g\u00e9ig \u00e9l, \u00e9s a requestek valid\u00e1l\u00e1s\u00e1\u00e9rt szolg\u00e1l\nprivate final ValidatorFactory validatorFactory;\n\npublic ContextListener() {\n// final mez\u0151k l\u00e9trehoz\u00e1sa\ndataSource = new DataSourceFactory().getDataSource();\nvalidatorFactory = Validation.buildDefaultValidatorFactory();\n}\n\n@Override\npublic void contextInitialized(ServletContextEvent sce) {\nvar dbSupport = new SqlDbSupport(dataSource);\n//var authSupport = new CookieAuthSupport(new AuthService(new UserJooqDao(dataSource, SQLDialect.SQLITE)), null, null);\nvar authSupport = new NopAuthenticator();\n// inicializ\u00e1lunk minden \"glob\u00e1lis\" v\u00e1ltoz\u00f3t, ami csak kell\n// ezeket majd B\u00c1RMELY servlet-b\u0151l el\u00e9rhetj\u00fck\nsce.getServletContext().setAttribute(\"ds\", dataSource);\nsce.getServletContext().setAttribute(\"auth\", authSupport);\nsce.getServletContext().setAttribute(\"val\", validatorFactory);\n// memory db init\ndbSupport.createTablesIfNotExist();\ndbSupport.insertIntoTables();\n}\n\n@Override\npublic void contextDestroyed(ServletContextEvent sce) {\n// amennyiben a DataSource closable, \u00fagy z\u00e1rjuk azt be\nif (dataSource != null &amp;&amp; dataSource instanceof AutoCloseable) {\ntry {\n((AutoCloseable) dataSource).close();\n} catch (Exception e) {\n// micsoda??? valami el\u00e9gg\u00e9 f\u00e9lrement\nthrow new RuntimeException(e);\n}\n}\nif (validatorFactory != null) {\nvalidatorFactory.close();\n}\n}\n}\n</code></pre> <p>Ez a class pedig mehet is egy <code>listener</code> package al\u00e1.</p>"},{"location":"06_webapi/#json-string-kezeles","title":"JSON string kezel\u00e9s","text":"<p>Ahhoz, hogy haszn\u00e1lhassuk a kiszemelt csomagunkat, el\u0151sz\u00f6r szeretn\u00e9nk beh\u00fazni azt, mint f\u00fcgg\u0151s\u00e9g.</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;\n&lt;artifactId&gt;gson&lt;/artifactId&gt;\n&lt;version&gt;2.10.1&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>A gson package seg\u00edts\u00e9g\u00e9vel objektumokat fogunk tudni eg\u00e9szen egyszer\u0171 m\u00f3don JSON kompatibilis stringekk\u00e9 konvert\u00e1lni.</p> <p>P\u00e9ld\u00e1ul:</p> <pre><code>class Message {\npublic final String msg;\n}\n\n...\n\nnew Gson().toJson(new Message(\"hello there\"));\n// &gt;&gt;\n// \"{\\\"msg\\\": \\\"hello there\\\"}\"\n</code></pre> <p>Term\u00e9szetesen el\u0151fordulhat, hogy olyan objektumokat is kell szerializ\u00e1lni, melyeket alapb\u00f3l nem ismer a gson package. Ekkor lehet\u0151s\u00e9g\u00fcnk van l\u00e9trehozni saj\u00e1t oszt\u00e1lyokat, melyek adott objektumok beolvas\u00e1s\u00e1t, illetve ki\u00edr\u00e1s\u00e1t v\u00e9gzik.</p> <p>L\u00e1ssunk erre p\u00e9ld\u00e1t al\u00e1bb egy egyszer\u0171 LocalDate eset\u00e9n.</p> <pre><code>// Seg\u00edts\u00e9g\u00e9vel LocalDate objektumot fogunk egy egyszer\u0171 string\u00e9 alak\u00edtani.\n// Az interface fel\u00fcl\u00edrand\u00f3 met\u00f3dusa a `serialize` lesz.\nclass LocalDateSerializer implements JsonSerializer&lt;LocalDate&gt; {\n\n@Override\npublic JsonElement serialize(LocalDate date, Type typeOfSrc, JsonSerializationContext context) {\n// a datetime stringek k\u00f6ves\u00e9k az ISO form\u00e1tumot!\nreturn new JsonPrimitive(date.format(DateTimeFormatter.ISO_LOCAL_DATE));\n}\n}\n\n// Seg\u00edts\u00e9g\u00e9vel LocalDate objektumot fogunk parsolni egy stringb\u0151l.\n// Az interface fel\u00fcl\u00edrand\u00f3 met\u00f3dusa a `deserialize`.\nclass LocalDateDeserializer implements JsonDeserializer&lt;LocalDate&gt; {\n\n@Override\npublic LocalDate deserialize(JsonElement jsonElement, Type type, JsonDeserializationContext context) throws JsonParseException {\n// json elem beolvas\u00e1sa stringk\u00e9nt\nString string = jsonElement.getAsString();\n\nif (string.length() &gt; 20) {\n// a datetime string tartalmaz id\u0151z\u00f3na inform\u00e1ci\u00f3t is\nZonedDateTime zonedDateTime = ZonedDateTime.parse(string);\nreturn zonedDateTime.toLocalDate();\n}\n\n// egyszer\u0171 string parse\nreturn LocalDate.parse(string);\n}\n}\n\n...\n\n// Ezt pl. elhelyezhetj\u00fck egy saj\u00e1t utility class-ban.\n// L\u00e9nyeg\u00e9ben \u0151 egy kieg\u00e9sz\u00edtett k\u00e9pess\u00e9gekkel rendelkez\u0151 Gson objektumot fog l\u00e9trehozni.\n\nnew GsonBuilder()\n.setPrettyPrinting()\n.registerTypeAdapter(LocalDate .class, new LocalDateSerializer())\n.registerTypeAdapter(LocalDate .class, new LocalDateDeserializer())\n.create();\n</code></pre>"},{"location":"06_webapi/#viszonykovetes-sutik","title":"Viszonyk\u00f6vet\u00e9s, s\u00fctik","text":"<p>Egy \u00fajabb fontosabb, \u00e9s jelenleg tal\u00e1n utols\u00f3 t\u00e9mak\u00f6r\u00fcnk valamilyen f\u00e9le viszonyk\u00f6vet\u00e9s. Val\u00f3sz\u00edn\u0171leg mindenkinek ismer\u0151sek lehetnek m\u00e1r a <code>cookie</code>-k, melyeket most felhaszn\u00e1l\u00f3i preferenci\u00e1k t\u00e1rol\u00e1s\u00e1ra fogunk haszn\u00e1lni. A cookie-k \u00fagy \u00e1ltal\u00e1ban is jellemz\u0151en valamif\u00e9le felhaszn\u00e1l\u00f3i inform\u00e1ci\u00f3t tartalmaznak, melyeket adott webszerver k\u00e9sz\u00edt el egy kliens sz\u00e1m\u00e1ra, melyek azt\u00e1n kliens oldalon t\u00e1rol\u00f3dnak! Egy <code>session</code>-el ellent\u00e9tben ez egy fontos k\u00fcl\u00f6nbs\u00e9g, ugyanis session-t haszn\u00e1lva a szerver\u00fcnk megsz\u0171nne szigor\u00fa \u00e9rtelemben vett RESTful API-nak lenni. REST eset\u00e9n ui. egy kit\u00e9tel\u00fcnk, hogy a webszerver \u00fagymond \u00e1llapott\u00f3l mentes (stateless) legyen, azaz szerveroldalon ne t\u00e1roljon semmif\u00e9le inform\u00e1ci\u00f3t el\u0151z\u0151 k\u00e9r\u00e9sekr\u0151l/v\u00e1laszokr\u00f3l. Minden k\u00e9r\u00e9s \u00f6nmag\u00e1ban is v\u00e9grehajthat\u00f3 kell legyen, rendelkeznie kell a k\u00e9r\u00e9s elv\u00e9gz\u00e9s\u00e9hez sz\u00fcks\u00e9ges \u00f6sszes inform\u00e1ci\u00f3val (pl. user adatok). A cookie-k kliens oldalon t\u00e1rol\u00f3dnak, \u00edgy ezt a k\u00e9rd\u00e9sk\u00f6rt meg is oldj\u00e1k.</p> <p>A s\u00fctiken k\u00edv\u00fcl term\u00e9szetesen l\u00e9teznek ennek megold\u00e1s\u00e1ra egy\u00e9b webtechnol\u00f3gi\u00e1k is, de itt most egyszer\u0171s\u00e9g\u00fckn\u00e9l fogva a cookie-kat v\u00e1lasztjuk.</p> <p>L\u00e1ssuk hogyan is k\u00e9sz\u00edthet\u00fcnk egy cookie gy\u00e1rt\u00f3 servletet!</p> <pre><code>// urlPatterns --&gt; /api/pref, /api/preferences\n@Override\nprivate void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\nresp.setContentType(ContentType.TEXT_PLAIN.getMimeType());\nresp.setStatus(HttpStatus.SC_NO_CONTENT);\n\nvar gson = new Gson();\nvar pref = gson.fromJson(req.getReader(), Preferences.class);\nvar validator = validatorFactory.getValidator();\nvar valResult = validator.validate(pref);\n\nvalResult.forEach(el -&gt; logger.error(ValidationLog.createLog(el)));\nif (!valResult.isEmpty()) {\nresp.setStatus(HttpStatus.SC_BAD_REQUEST);\nresp.getWriter().println(gson.toJson(new Error(valResult.stream()\n.map(ValidationLog::createLog)\n.collect(Collectors.joining(\"\\n\")))));\nreturn;\n}\n\n// cookie = new Cookie(\"preferences\", someValue)\nvar cookie = CookieBin.wrapCookie(ManagedCookies.PREFERENCES.toString(), pref);\n// mindenki sz\u00e1m\u00e1ra l\u00e1that\u00f3v\u00e1 tessz\u00fck a cookie-t adott host alatt\ncookie.setPath(\"/\");\n// a cookie eg\u00e9szen az adott kliens bez\u00e1r\u00e1s\u00e1ig maradjon \u00e9letben\ncookie.setMaxAge(-1);\n// hozz\u00e1adjuk a s\u00fctit a v\u00e1laszhoz, hogy kliens\u00fcnk elt\u00e1rolhassa\nresp.addCookie(cookie);\n}\n</code></pre> <p>A <code>ManagedCookies</code> egy egyszer\u0171 enum, ahol a kezelt s\u00fctijeink nev\u00e9t t\u00e1roljuk:</p> <pre><code>public enum ManagedCookies {\nPREFERENCES {\n@Override\npublic String toString() {\nreturn PREFERENCES.name().toLowerCase();\n}\n},\n}\n</code></pre> <p>A fenti servletben a user preferenci\u00e1k szerializ\u00e1l\u00e1s\u00e1t is megfigyelhetj\u00fck <code>CookieBin::wrapCookie</code>, ahol a k\u00f6vetkez\u0151 megfontol\u00e1sok ment\u00e9n j\u00e1runk el:</p> <ul> <li>vannak user adataink, most preferenci\u00e1k, amit egy\u00fctteset szeretn\u00e9nk kezelni</li> <li><code>HttpServlet</code> haszn\u00e1lata eset\u00e9n a cookie management kicsit limit\u00e1lt olyan tekintetben,   hogy csak sz\u00f6veges kulcsok alatt, sz\u00f6veges \u00e9rt\u00e9keket t\u00e1rolhatunk.</li> <li>\u00edgy teh\u00e1t szeretn\u00e9nk a kezelt objektumokat egy egy\u00e9rtelm\u0171 string form\u00e1tumm\u00e1 alak\u00edtani</li> </ul> <p>Mindezek felold\u00e1s\u00e1ra egyszer\u0171en megk\u00f6vetelj\u00fck, hogy az adott cookie egy szerializ\u00e1lhat\u00f3 objektum legyen. Ezt megtehetj\u00fck p\u00e9ld\u00e1ul a k\u00f6vetkez\u0151 m\u00f3don:</p> <pre><code>// El\u0151sz\u00f6r egy SerializationUtils.serialize(cookie) seg\u00edts\u00e9g\u00e9vel az adott objektumot\n// egy megfelel\u0151 byte[] k\u00f3dd\u00e1 alak\u00edtjuk, majd ezt k\u00f3doljuk egy standard base64 string form\u00e1tumba.\nnew Cookie(\"some key\", Base64.getEncoder().encodeToString(SerializationUtils.serialize(cookie)));\n</code></pre> <p>A fenti m\u00f3don adott kulcs alatt tudunk t\u00e1rolni b\u00e1rmilyen szerializ\u00e1lhat\u00f3 objektumot. Al\u00e1bb pedig l\u00e1ssuk, hogy hogyan deszerializ\u00e1ljuk ugyanezt az objektumot.</p> <pre><code>// El\u0151sz\u00f6r dek\u00f3doljuk a base64 string-et, majd deszerializ\u00e1ljuk az oszt\u00e1junkat,\n// hogy visszakapjuk a preferenci\u00e1kat (vagy egyebet) tartalmaz\u00f3 oszt\u00e1lyunkat.\nSerializationUtils.deserialize(Base64.getDecoder().decode(cookie.getValue()));\n</code></pre> <p>Az implement\u00e1ci\u00f3ban felhaszn\u00e1ltuk a <code>org.apache.commons.lang3.SerializationUtils</code> oszt\u00e1lyt.</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;org.apache.commons&lt;/groupId&gt;\n&lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;\n&lt;version&gt;3.14.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Tegy\u00fck hozz\u00e1 ezt a funckionalit\u00e1st a read servlethez, hogy val\u00f3ban csak a user \u00e1ltal be\u00e1ll\u00edtott preferenci\u00e1k, mint sz\u0171r\u00e9si felt\u00e9tel alapj\u00e1n t\u00f6rt\u00e9njek objektumot lek\u00e9r\u00e9se.</p> <pre><code>@Override\nprivate void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {\nresp.setContentType(ContentType.APPLICATION_JSON.getMimeType());\nresp.setCharacterEncoding(StandardCharsets.UTF_8.name());\nresp.setStatus(HttpStatus.SC_OK);\n\nvar gson = JsonSupport.create();\nvar reqModel = gson.fromJson(req.getReader(), ReadSightReq.class);\nvar validator = validatorFactory.getValidator();\nSet&lt;ConstraintViolation&lt;ReadSightReq&gt;&gt; valResult = new HashSet&lt;&gt;();\nif (reqModel != null) {\nvalResult = validator.validate(reqModel);\n}\n\nvalResult.forEach(el -&gt; logger.error(ValidationLog.createLog(el)));\nif (!valResult.isEmpty()) {\nresp.setStatus(HttpStatus.SC_BAD_REQUEST);\nresp.getWriter().println(gson.toJson(new Error(valResult.stream()\n.map(ValidationLog::createLog)\n.collect(Collectors.joining(\"\\n\")))));\nreturn;\n}\nIterable&lt;Sight&gt; models;\nif (reqModel == null) {\nmodels = dao.findAll();\n} else {\nmodels = dao.findAllByCrit(ConversionSupport.toModel(reqModel));\n}\nvar modelList = StreamSupport.stream(models.spliterator(), false);\n\n// Itt pl. van egy \u00faj\u00edt\u00e1s, ahol is az adott k\u00e9r\u00e9st\u0151l elkapjuk a s\u00fctiket.\nvar jar = req.getCookies();\n// Amennyiben nincsenek s\u00fctik :(,\n// \u00fagy egyszer\u0171en visszaadjuk sz\u0171r\u00e9s n\u00e9lk\u00fcli modelljeinket.\nif (jar == null) {\nresp.getWriter().println(gson.toJson(modelList.toList()));\nreturn;\n}\n\n// Sz\u0171r\u00fcnk egyet a preferencia kulcs alatt tal\u00e1lhat\u00f3 s\u00fctikre.\nvar prefCookies = Arrays.stream(jar).filter(c -&gt; Objects.equals(c.getName(), ManagedCookies.PREFERENCES.toString())).toList();\n// Amennyiben ez \u00fcres, \u00fagy nem t\u00f6rt\u00e9nik semmi, ha pedig nem, akkor megt\u00f6rt\u00e9nik a sz\u0171r\u00e9s.\nif (!prefCookies.isEmpty()) {\nvar pref = CookieBin.unwrapCookie(prefCookies.get(0), Preferences.class);\n// sz\u0171r\u00e9s minimum \u00e1r alapj\u00e1n\nif (pref.minPrice() != null &amp;&amp; pref.minPrice().doubleValue() &gt; 0) {\nmodelList = modelList.filter(el -&gt; el.getPrice().compareTo(pref.minPrice()) &gt;= 0);\n}\n// sz\u0171r\u00e9s maximum \u00e1r alapj\u00e1n\nif (pref.maxPrice() != null &amp;&amp; pref.maxPrice().doubleValue() &gt; 0) {\nmodelList = modelList.filter(el -&gt; el.getPrice().compareTo(pref.maxPrice()) &lt;= 0);\n}\n// sz\u0171r\u00e9s n\u00e9pszer\u0171s\u00e9g alapj\u00e1n\nif (pref.minPopularity() != null &amp;&amp; pref.minPopularity() &gt; 0) {\nmodelList = modelList.filter(el -&gt; el.getPopularity() &gt;= pref.minPopularity());\n}\n}\n\nresp.getWriter().println(gson.toJson(modelList.toList()));\n}\n</code></pre> <p>Evvel a <code>doPost</code> m\u00f3dos\u00edt\u00e1ssal k\u00e9szen is lenn\u00e9nk egy egyszer\u0171bb viszonyk\u00f6vet\u00e9ssel, \u00e9s annak egy lehets\u00e9ges haszn\u00e1lat\u00e1nak bemutat\u00e1s\u00e1val.</p>"},{"location":"06_webapi/#core","title":"Core","text":""},{"location":"06_webapi/#dao","title":"DAO","text":"<p>DAO megval\u00f3s\u00edt\u00e1saink sor\u00e1n egy jobb alternat\u00edva lehet, ha Data Access Object-jeink adatb\u00e1zis implement\u00e1ci\u00f3t\u00f3l f\u00fcggetlenek. Vagy legal\u00e1bbis azon forr\u00e1st ne cipelj\u00e9k magukkal, hogy honnan is szedik a <code>Connection</code> \u00e1ltal reprezent\u00e1lt adatb\u00e1zis csatlakoz\u00e1sukat.</p> <p>Erre egy j\u00f3 megold\u00e1s, ha a DAO egyes implement\u00e1ci\u00f3i t\u00f6bbek k\u00f6z\u00f6tt rendelkeznek evvel a konstruktor param\u00e9terrel. Azaz:</p> <pre><code>// Saj\u00e1t DAO implement\u00e1ci\u00f3, avagy mire is j\u00f3 egy oszt\u00e1ly\nclass MyDaoImpl {\n...\n\n// DataSource k\u00edv\u00fclr\u0151l fog j\u00f6nni, nek\u00fcnk csup\u00e1n\n// p\u00e9ld\u00e1nyos\u00edt\u00e1skor kell eld\u00f6nten\u00fcnk, hogy ki legyen az.\npublic MyDaoImpl(DataSource dataSource) {\nthis.dataSource = dataSource;\n}\n...\n}\n</code></pre> <p>Egy <code>DataSource</code>-nak k\u00f6teless\u00e9ge megval\u00f3s\u00edtani a <code>getConnection</code> met\u00f3dust, \u00edgy egy be\u00e9getett <code>DriverManager::getConnection</code> helyett k\u00f6nnyed\u00e9n haszn\u00e1lhatjuk ak\u00e1r saj\u00e1t <code>DataSource</code> implement\u00e1ci\u00f3nkat is, melyhez nem k\u00f6tj\u00fck hozz\u00e1 szigor\u00faan az adott DAO implement\u00e1ci\u00f3nkat.</p> <p>Egy <code>DataSource</code> kiszolg\u00e1l\u00e1s\u00e1t elint\u00e9zhet\u00fcnk t\u00f6bb m\u00f3don is, de l\u00e1ssunk p\u00e9ldak\u00e9nt egy Factory, \u00e9s egy Singleton megval\u00f3s\u00edt\u00e1s egy\u00fcttes\u00e9t. Ezek term\u00e9szetesen egym\u00e1st\u00f3l f\u00fcggetlen\u00fcl is haszn\u00e1lhat\u00f3k.</p> <pre><code>public class SingletonSQLiteJDBCDataSource implements DSService {\n\nprivate final SQLiteDataSource dataSource;\nprivate final KeepAliveConnection keepAlive;\n\nprivate SingletonSQLiteJDBCDataSource() {\nkeepAlive = new KeepAliveConnection();\ndataSource = new SQLiteDataSourceFactory().getDataSource();\n}\n\npublic static SingletonSQLiteJDBCDataSource getInstance() {\nreturn Instance.INSTANCE;\n}\n\n// Ezt a met\u00f3dust kellene majd haszn\u00e1lni, mikor egy DAO p\u00e9ld\u00e1nyos\u00edt\u00e1sa t\u00f6rt\u00e9nik.\npublic DataSource getDataSource() {\nreturn dataSource;\n}\n\nprivate static final class Instance {\nprivate static final SingletonSQLiteJDBCDataSource INSTANCE = new SingletonSQLiteJDBCDataSource();\n}\n\n@Override\npublic void close() throws Exception {\ntry {\nDSService.super.close();\n}\ncatch (Exception e) {\nkeepAlive.close();\nthrow e;\n}\n}\n}\n</code></pre> <p>amely megval\u00f3s\u00edt\u00e1sban a DSService a k\u00f6vetkez\u0151 interface-nek felel meg:</p> <pre><code>public interface DSService extends AutoCloseable {\n// szeretn\u00e9nk ha biztosan rendelkezne egy ilyen met\u00f3dussal,\n// hiszen ez az ok, ami\u00e9rt k\u00e9sz\u00fcl\nDataSource getDataSource();\n\n// amennyiben a ds objektumunk rendelkezik close met\u00f3dussal,\n// \u00fagy bez\u00e1rjuk azt\n@Override\ndefault void close() throws Exception {\nif (this.getDataSource() != null &amp;&amp; this.getDataSource() instanceof AutoCloseable) {\n((AutoCloseable) this.getDataSource()).close();\n}\n}\n}\n</code></pre> <p>A keepAlive connection eset\u00fcnkben pedig eg\u00e9szen egyszer\u0171en az\u00e9rt felel\u0151s, hogy adatb\u00e1zisunk (amennyiben mem\u00f3ri\u00e1ban \u00e9l) biztosan rendelkezz\u00e9k legal\u00e1bb egy \u00e9l\u0151 session-el. Erre az\u00e9rt van sz\u00fcks\u00e9g, mert egy memory-db eset\u00e9n az utols\u00f3 connection elz\u00e1r\u00e1sakor az adatb\u00e1zis t\u00f6rl\u0151dni fog! Ez van, hogy kellemes tulajdons\u00e1g, azonban jelenleg ez egy nem k\u00edv\u00e1natos mell\u00e9khat\u00e1sa lenne egy mem\u00f3ria adatb\u00e1zisnak. Tegy\u00fcnk h\u00e1t ez ellen!</p> <pre><code>public class KeepAliveConnection implements AutoCloseable {\n\nprivate final Connection connection;\n\n// K\u00e9r\u00fcnk egy connection-t, melyet majd ahol kell \u00e9letben tartunk.\npublic KeepAliveConnection() {\ntry {\nconnection = DriverManager.getConnection(ConfigSupport.getDbUrl());\n} catch (SQLException e) {\nthrow new RuntimeException(e);\n}\n}\n\n@Override\npublic void close() throws Exception {\nconnection.close();\n}\n}\n</code></pre> <p>A factory oszt\u00e1lyunk pedig jelenleg a k\u00f6vetkez\u0151:</p> <pre><code>public class SQLiteDataSourceFactory {\n\nprivate final SQLiteConfig config;\nprivate final String url;\n\npublic SQLiteDataSourceFactory() {\nthis(ConfigSupport.getDbUrl(), new SQLiteConfig());\n}\n\npublic SQLiteDataSourceFactory(SQLiteConfig cfg) {\nthis(ConfigSupport.getDbUrl(), cfg);\n}\n\npublic SQLiteDataSourceFactory(String conn) {\nthis(conn, null);\n}\n\npublic SQLiteDataSourceFactory(String conn, SQLiteConfig cfg) {\nurl = conn;\nconfig = cfg;\n}\n\n// itt k\u00e9sz\u00fcl el a datasource\npublic SQLiteDataSource getDataSource() {\nvar ds = new SQLiteDataSource(config);\nif (url != null) {\nds.setUrl(url);\n}\nreturn ds;\n}\n}\n</code></pre> <p>A datasource kre\u00e1l\u00e1sa egy robusztusabb haszn\u00e1lat \u00e9rdek\u00e9ben el van szepar\u00e1lva, azonban teljesen mindegy, hogy ilyen m\u00f3don k\u00e9sz\u00edtj\u00fck el a <code>DataSource</code> objektumunkat, avagy egyszer\u0171en csak singleton oszt\u00e1lyunkban l\u00e9trehozunk egyet valamif\u00e9le alapbe\u00e1ll\u00edt\u00e1ssal, eredm\u00e9ny\u00fcnk haszn\u00e1latt\u00f3l f\u00fcgg\u0151en ugyanaz lehet.</p> <p>Egy sqlite data source elk\u00e9sz\u00edt\u00e9se csup\u00e1n a k\u00f6vetkez\u0151ket ig\u00e9nyli:</p> <pre><code>var ds = new SQLiteDataSource();\nds.setUrl(\"jdbc:sqlite:some connection string\");\n</code></pre>"},{"location":"06_webapi/#jooq","title":"jOOQ","text":"<p>jOOQ csomag haszn\u00e1lat\u00e1val</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;org.jooq&lt;/groupId&gt;\n&lt;artifactId&gt;jooq&lt;/artifactId&gt;\n&lt;version&gt;3.19.6&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>m\u00e1r val\u00f3ban SQL dialektust\u00f3l f\u00fcggetlen DAO implement\u00e1ci\u00f3kat k\u00e9sz\u00edthet\u00fcnk! Ehhez csup\u00e1n meg kell adjunk egy el\u00e9rhet\u0151s\u00e9get adatb\u00e1zisunkhoz, valamint azt, hogy milyen <code>dialect</code> az, amit haszn\u00e1lni szeretn\u00e9nk. A jOOQ szinte b\u00e1rmely elk\u00e9pzelhet\u0151 SQL parancsok l\u00e9trehoz\u00e1s\u00e1ban seg\u00edthet nek\u00fcnk:</p> <ul> <li>SQLITE</li> <li>H2</li> <li>MYSQL</li> <li>POSTGRES</li> <li>ORACLE</li> <li>MARIADB</li> </ul> <p>\u00e9s m\u00e9g sok m\u00e1s!</p> <p>Egy lehets\u00e9ges megval\u00f3s\u00edt\u00e1s a fenti megfontol\u00e1sok figyelembev\u00e9tel\u00e9vel a k\u00f6vetkez\u0151 lehet, p\u00e9ld\u00e1ul a l\u00e1tnival\u00f3k eset\u00e9n.</p> <pre><code>public class SightJooqDao implements Dao&lt;Long, Sight&gt; {\n\n// A t\u00e1bla neve, amelyet haszn\u00e1lunk\nprivate final static String TABLE = \"sight\";\n// Szeretn\u00e9nk majd kapni egy ds-t, amit itt t\u00e1rolunk\nprivate final DataSource dataSource;\n// Szeretn\u00e9nk kapni egy sql-dialect-et is\nprivate final SQLDialect sqlDialect;  // = SQLDialect.SQLITE\n\n// Egy nek\u00fcnk megfelel\u0151 konstruktor\npublic SightJooqDao(DataSource ds, SQLDialect dialect) {\ndataSource = ds;\nsqlDialect = dialect;\n}\n\n// Record oszt\u00e1lyb\u00f3l beolvassuk a megfelel\u0151 mez\u0151ket.\nprivate Sight readRecord(Record record) {\nreturn new Sight(\nrecord.get(\"id\", Long.class),\nrecord.get(\"name\", String.class),\nrecord.get(\"price\", BigDecimal.class),\nrecord.get(\"opening\", Integer.class),\nrecord.get(\"closing\", Integer.class),\nrecord.get(\"description\", String.class),\nrecord.get(\"popularity\", Integer.class));\n}\n\n// K\u00e9sz\u00edt\u00fcnk egy Map-ot megfelel\u0151 mez\u0151kkel, melyeknek\n// megadjuk, hogy amennyiben l\u00e9teznek az objektum \u00e1ltal\n// reprezent\u00e1lt mez\u0151k alatti \u00e9rt\u00e9kek, \u00fagy adatb\u00e1zis\n// szinten is szeretn\u00e9nk ezeket be\u00e1ll\u00edtani.\nprivate Map&lt;Field&lt;?&gt;, Object&gt; getSetValues(Sight model) {\nvar set = new HashMap&lt;Field&lt;?&gt;, Object&gt;();\nif (model.getName() != null) {\nset.put(field(name(\"name\")), model.getName());\n}\nif (model.getPrice() != null) {\nset.put(field(name(\"price\")), model.getPrice());\n}\nif (model.getOpeningHour() != null) {\nset.put(field(name(\"opening\")), model.getOpeningHour());\n}\nif (model.getClosingHour() != null) {\nset.put(field(name(\"closing\")), model.getClosingHour());\n}\nif (model.getDescription() != null) {\nset.put(field(name(\"description\")), model.getDescription());\n}\nif (model.getPopularity() != null) {\nset.put(field(name(\"popularity\")), model.getPopularity());\n}\nreturn set;\n}\n\n@Override\npublic void save(Sight model) {\nassert model != null;\n// felsoroljuk a mez\u0151ket melyeknek \u00e9rt\u00e9keket szeretn\u00e9nk majd adni\nvar columns = List.of(\nfield(name(\"name\")),\nfield(name(\"price\")),\nfield(name(\"opening\")),\nfield(name(\"closing\")),\nfield(name(\"description\")),\nfield(name(\"popularity\")));\n// felsoroljuk a be\u00e1ll\u00edtand\u00f3 \u00e9rt\u00e9keket\nvar values = List.of(\nmodel.getName(),\nmodel.getPrice(),\nmodel.getOpeningHour(),\nmodel.getClosingHour(),\nmodel.getDescription(),\nmodel.getPopularity());\n\n// ment\u00e9s, \u00e9s utols\u00f3 beillesztett ID lek\u00e9r\u00e9se\nvar id = DSL.using(dataSource, sqlDialect)\n.insertInto(table(name(TABLE)))  // szeretn\u00e9k rekordot hozz\u00e1adni\n.columns(columns)  // ezen oszlopok felhaszn\u00e1l\u00e1s\u00e1val\n.values(values)  // ezen \u00e9rt\u00e9kekkel\n.returningResult(field(name(\"id\")))  // add vissza az id-t\n.fetchOne(field(name(\"id\")), Long.class);  // query\nmodel.setId(id);\n}\n\n@Override\npublic Optional&lt;Sight&gt; findById(Long id) {\nassert id != null;\n// lek\u00e9r\u00fcnk egy darab rekordot\nreturn Optional.ofNullable(DSL.using(dataSource, sqlDialect)\n.select()\n.from(TABLE)\n.where(field(name(\"id\")).eq(id))\n.fetchOne(this::readRecord));\n}\n\n@Override\npublic Iterable&lt;Sight&gt; findAll() {\nreturn DSL.using(dataSource, sqlDialect)\n.select()\n.from(TABLE)\n.fetch(this::readRecord);\n}\n\n@Override\npublic Iterable&lt;Sight&gt; findAllByIds(Iterable&lt;Long&gt; ids) {\nassert ids != null;\nvar where = StreamSupport.stream(ids.spliterator(), false)\n.map(id -&gt; field(name(\"id\")).eq(id))\n.toList();\nreturn DSL.using(dataSource, sqlDialect)\n.select()  // select statement\n.from(TABLE)  // honnan szeretn\u00e9m?\n.where(or(where))  // milyen felt\u00e9telekkel?\n.fetch(this::readRecord);  // query\n}\n\n@Override\npublic Iterable&lt;Sight&gt; findAllByCrit(Sight model) {\nassert model != null;\nvar where = new ArrayList&lt;Condition&gt;();\n\nif (model.getId() != null) {\nwhere.add(field(name(\"id\")).eq(model.getId()));\n}\nif (model.getName() != null) {\nwhere.add(field(name(\"name\")).likeIgnoreCase(\"%\" + model.getName().replace(\"%\", \"\\\\%\") + \"%\").escape('\\\\'));\n}\nif (model.getPrice() != null) {\nwhere.add(field(name(\"price\")).eq(model.getPrice()));\n}\nif (model.getOpeningHour() != null) {\nwhere.add(field(name(\"opening\")).eq(model.getOpeningHour()));\n}\nif (model.getClosingHour() != null) {\nwhere.add(field(name(\"closing\")).eq(model.getClosingHour()));\n}\nif (model.getDescription() != null) {\nwhere.add(field(name(\"description\")).likeIgnoreCase(\"%\" + model.getDescription().replace(\"%\", \"\\\\%\") + \"%\").escape('\\\\'));\n}\nif (model.getPopularity() != null) {\nwhere.add(field(name(\"popularity\")).eq(model.getPopularity()));\n}\n\nreturn DSL.using(dataSource, sqlDialect)\n.select()\n.from(TABLE)\n.where(and(where))\n.fetch(this::readRecord);\n}\n\n@Override\npublic int deleteById(Long id) {\nassert id != null;\nreturn DSL.using(dataSource, sqlDialect)\n.deleteFrom(table(name(TABLE)))  // szeretn\u00e9k t\u00f6r\u00f6lni\n.where(field(name(\"id\")).eq(id))  // ezen felt\u00e9tellel\n.execute();  // dew it!\n}\n\n@Override\npublic int deleteAllByIds(Iterable&lt;Long&gt; ids) {\nassert ids != null;\nvar where = StreamSupport.stream(ids.spliterator(), false)\n.map(id -&gt; field(name(\"id\")).eq(id))\n.toList();\nreturn DSL.using(dataSource, sqlDialect)\n.deleteFrom(table(name(TABLE)))\n.where(or(where))\n.execute();\n}\n\n@Override\npublic int updateById(Long id, Sight model) {\nassert id != null;\n\n// ez egy field -&gt; value map\nvar set = getSetValues(model);\nif (set.isEmpty()) {\nreturn 0;\n}\nreturn DSL.using(dataSource, sqlDialect)\n.update(table(name(TABLE)))  // csin\u00e1lj egy update statementet\n.set(set)  // ezeket szeretn\u00e9m setelni\n.where(field(name(\"id\")).eq(id))  // ezen felt\u00e9tel mellett\n.execute();  // dew it!\n}\n\n@Override\npublic int updateAllByIds(Iterable&lt;Long&gt; ids, Sight model) {\nassert ids != null;\n\nvar set = getSetValues(model);\nif (set.isEmpty()) {\nreturn 0;\n}\n\nvar where = StreamSupport.stream(ids.spliterator(), false)\n.map(id -&gt; field(name(\"id\")).eq(id))\n.toList();\n// By design choice if there are no conditions, we update all records\nif (where.isEmpty()) {\nwhere = List.of(noCondition());\n}\n\nreturn DSL.using(dataSource, sqlDialect)\n.update(table(name(TABLE)))\n.set(set)\n.where(or(where))\n.execute();\n}\n\n// db puszt\u00edt\u00e1s\n@Override\npublic int prune() {\n// pusztuljon el mindenki!\nreturn DSL.using(dataSource, sqlDialect)\n.deleteFrom(table(name(TABLE))).execute();\n}\n\n// rekord sz\u00e1ml\u00e1l\u00e1s\n@Override\npublic int count() {\n// h\u00e1nyan gy\u0171lt\u00fcnk itt \u00f6ssze?\nreturn DSL.using(dataSource, sqlDialect)\n.fetchCount(table(name(TABLE)));\n}\n}\n</code></pre> <p>A DAO pedig, ebben az esetben egy ennek megfelel\u0151 interface:</p> <pre><code>public interface Dao&lt;ID, T&gt; {\n// itt b\u00fajnak a fent megval\u00f3s\u00edtott met\u00f3dusok.\n...\n}\n</code></pre> <p>jOOQ eset\u00e9n \u00e1ltal\u00e1ban elmondhat\u00f3, hogy akkor haszn\u00e1ljuk megfelel\u0151en a k\u00f6nyvt\u00e1rat, ha egyetlen egy, l\u00e1ncolhat\u00f3 DSL utas\u00edt\u00e1ssal hajtjuk v\u00e9gre a k\u00edv\u00e1nt lek\u00e9rdez\u00e9st. Legyen ez a CRUD b\u00e1rmely eleme is.</p> <p>Pl., amit ne csin\u00e1ljunk: how, and how not to do</p> <pre><code>var dsl = DSL.using(dataSource, sqlDialect);\nvar sel = dsl.select(field(name(\"id\"))).from(TABLE);\nvar cond = sel.where(noCondition());\nfor (var id : ids) {\ncond = cond.or(field(name(\"id\")).eq(id));\n}\nvar res = cond.fetch();\n</code></pre> <p>Igaz, hogy az api \u00fagy n\u00e9z ki, mintha m\u00e9g szeretn\u00e9 is ezt, de nem. Ne k\u00ednozzuk se magunkat, se m\u00e1st. Nyugodtan alak\u00edtsuk csak ki a fenti condition-t k\u00fcl\u00f6n. K\u00f6nnyed\u00e9n \u00f6ssze lehet f\u0171zni azt ut\u00f3lag.</p> <pre><code>var where = ids.stream().map(id -&gt; field(name(\"id\")).eq(id))\n.toList();\nvar record = DSL.using(dataSource, sqlDialect)\n.select()\n.from(TABLE)\n.where(or(where))  // Na \u00edgy m\u00e1r sokkal szebb, \u00e9s nem is k\u00ednl\u00f3dtunk annyit.\n.fetch();\n</code></pre>"},{"location":"06_webapi/#system","title":"System","text":"Version Java 17 Maven 3.9.6"},{"location":"07_gyakorlat/","title":"7. gyakorlat","text":""},{"location":"07_gyakorlat/#parhuzamositas","title":"P\u00e1rhuzamos\u00edt\u00e1s","text":"<p>Az eddig bemutatott projektek eset\u00e9n a programok egy sz\u00e1lon futottak szekvenci\u00e1lisan. Ez azt jelenti, hogy a v\u00e9grehajt\u00e1s \"sorr\u00f3l sorra\" t\u00f6rt\u00e9nik (a ford\u00edt\u00e1s optimaliz\u00e1ci\u00f3it \u00e9s a JVM tr\u00fckkjeit figyelmen k\u00edv\u00fcl hagyva).</p> <p>A Java nyelv egy t\u00f6bbsz\u00e1l\u00fa programoz\u00e1si nyelv, ami azt jelenti, hogy olyan programok k\u00e9sz\u00edthet\u0151k a seg\u00edts\u00e9g\u00e9vel, melyek egyszerre t\u00f6bb sz\u00e1lon futnak. Mivel a legt\u00f6bb mai sz\u00e1m\u00edt\u00f3g\u00e9p (m\u00e9g a be\u00e1gyazott rendszerek is) t\u00e1mogatja ezt a futtat\u00e1si m\u00f3dszert, \u00edgy kihaszn\u00e1lhat\u00f3 a nyelv adta lehet\u0151s\u00e9g.</p> <p>A p\u00e1rhuzamos programoz\u00e1s t\u00f6bb k\u00e9rd\u00e9st vet fel, melyek egy r\u00e9sze a k\u00f6z\u00f6s er\u0151forr\u00e1s haszn\u00e1lat\u00e1r\u00f3l \u00e9s a sz\u00e1lak k\u00f6z\u00f6tti szinkroniz\u00e1ci\u00f3r\u00f3l sz\u00f3lnak. Ezek egy r\u00e9sz\u00e9vel a kurzus el\u0151ad\u00e1s\u00e1n \u00e9s Oper\u00e1ci\u00f3s rendszerek kurzuson tal\u00e1lkoztak a hallgat\u00f3k. Jelen gyakorlat f\u0151leg a JavaFX-ben alkalmazhat\u00f3 megold\u00e1sokkal foglalkozik.</p>"},{"location":"07_gyakorlat/#maximumkereses-parhuzamositasa","title":"Maximumkeres\u00e9s p\u00e1rhuzamos\u00edt\u00e1sa","text":"<p>A k\u00f6vetkez\u0151 p\u00e9lda szeml\u00e9lteti a naiv maximumkeres\u00e9st egy konzolos alkalmaz\u00e1sban.</p> <p>Az alkalmaz\u00e1s l\u00e9trehoz\u00e1sa (Programoz\u00e1s-I ism\u00e9tl\u00e9s):</p> <ol> <li>IntelliJ IDEA: File - New Project</li> <li>Java (nem kell kiv\u00e1lasztani semmilyen frameworkot) - Next</li> <li>Create project from template - Command Line App</li> <li>A projekt helye \u00e9s a csomag tetsz\u0151leges (pl. Asztal, <code>hu.alkfejl.max</code>)</li> </ol> <p>Amennyiben a fenti l\u00e9p\u00e9sek alapj\u00e1n nem siker\u00fclt l\u00e9trehozni a projektet, az IntelliJ honlapj\u00e1n k\u00e9pekkel illusztr\u00e1lva ugyanez a le\u00edr\u00e1s megtal\u00e1lhat\u00f3.</p> <p>A k\u00f6vetkez\u0151 k\u00f3dr\u00e9szlet k\u00e9sz\u00edt egy <code>ARRAY_SIZE</code> m\u00e9ret\u0171 t\u00f6mb\u00f6t \u00e9s felt\u00f6lti v\u00e9letlenszer\u0171en gener\u00e1lt adatokkal. A t\u00f6mb\u00f6n v\u00e9gig kell iter\u00e1lni \u00e9s meghat\u00e1rozni a maxim\u00e1lis \u00e9rt\u00e9k\u0171 elem\u00e9t.</p> <pre><code>  int ARRAY_SIZE = 500000000;\n\ndouble[] arr = new double[ARRAY_SIZE];\nfor (int i = 0; i &lt; arr.length; i++) {\narr[i] = Math.random();\n}\n</code></pre> <p>A c\u00e9l az, hogy az algoritmus fut\u00e1si idej\u00e9t m\u00e9rj\u00fck \u00e9s \u00f6sszehasonl\u00edtsuk a p\u00e1rhuzamos futtat\u00e1s eredm\u00e9ny\u00e9vel. Ezt a <code>System.nanoTime()</code> h\u00edv\u00e1sok seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg az al\u00e1bbi form\u00e1ban.</p> <pre><code>  long singleThreadStart = System.nanoTime();\ndouble max = Double.MIN_VALUE;\nfor (double value : arr) {\nif (value &gt; max)\nmax = value;\n}\nlong singleThreadTime = (System.nanoTime() - singleThreadStart) / 1000000;\n</code></pre> <p>Az \u00edgy el\u0151\u00e1llt programot futtatva \u00e9s ki\u00edratva a <code>max</code> \u00e9s a <code>singleThreadTime</code> \u00e9rt\u00e9keit az al\u00e1bbi kimenetet kapjuk:</p> <pre><code>Maximum value: 0.9999999940819203\nSingle thread execution time: 398 ms\n</code></pre> <p>A fut\u00e1sid\u0151 a haszn\u00e1lt sz\u00e1m\u00edt\u00f3g\u00e9p er\u0151forr\u00e1sait\u00f3l f\u00fcgg\u0151en v\u00e1ltozhat (\u00e9s minden futtat\u00e1s sor\u00e1n egy kicsit v\u00e1ltozik is), de ez az \u00e9rt\u00e9k tekintend\u0151 alapvonalnak, amihez k\u00e9pest a p\u00e1rhuzamos megval\u00f3s\u00edt\u00e1s \"j\u00f3s\u00e1g\u00e1t\" vizsg\u00e1ljuk.</p> <p>Az az \u00f6tlet\u00fcnk t\u00e1madhat, hogy a nagy elemsz\u00e1m\u00fa t\u00f6mb\u00f6t t\u00f6bb kis r\u00e9szre osztjuk (teoretikusan, m\u00e1sol\u00e1s n\u00e9lk\u00fcl) \u00e9s a kis r\u00e9szeken egyszerre kellene v\u00e9grehajtani a maximumkeres\u00e9st. Az egyes lok\u00e1lis maximumokat megv\u00e1rva azok k\u00f6z\u00fcl kiv\u00e1laszthat\u00f3 a t\u00e9nyleges, glob\u00e1lis maximum \u00e9rt\u00e9ke.</p> <p>Ahhoz, hogy a maximumkeres\u00e9s t\u00f6bb sz\u00e1lon legyen v\u00e9grehajtva, egy \u00faj oszt\u00e1lyt kell l\u00e9trehozni, mely a <code>Thread</code> oszt\u00e1lyb\u00f3l \u00f6r\u00f6kl\u0151dik \u00e9s a <code>run()</code> met\u00f3dust fel\u00fcldefini\u00e1lja. Az oszt\u00e1ly a k\u00f6vetkez\u0151k\u00e9ppen \u00e9p\u00fcl fel.</p> <pre><code>public class MaxSearchThread extends Thread {\ndouble localMaximum = Double.MIN_VALUE;\nint fromIndex;\nint toIndex;\nfinal double[] array;\n\npublic MaxSearchThread(double[] array, int fromIndex, int toIndex) {\nthis.fromIndex = fromIndex;\nthis.toIndex = toIndex;\nthis.array = array;\n}\n\n@Override\npublic void run() {\nfor (int i = fromIndex; i &lt; toIndex; i++) {\nif (array[i] &gt; localMaximum)\nlocalMaximum = array[i];\n}\n}\n}\n</code></pre> <p>A konstruktorban \u00e1t kell adni a vizsg\u00e1land\u00f3 t\u00f6mb\u00f6t \u00e9s azt, hogy a t\u00f6mb melyik r\u00e9sz\u00e9n v\u00e9gezze el a keres\u00e9st. Az, hogy h\u00e1ny r\u00e9szre van osztva a keres\u00e9si t\u00e9r a sz\u00e1lak sz\u00e1m\u00e1t\u00f3l f\u00fcgg.</p> <pre><code>int NUMBER_OF_THREADS = 4;\nArrayList&lt;MaxSearchThread&gt; threads = new ArrayList&lt;&gt;();\n\nfor (int i = 0; i &lt; NUMBER_OF_THREADS; i++) {\nint from = i * (arr.length / NUMBER_OF_THREADS);\nint to = (i + 1) * (arr.length / NUMBER_OF_THREADS);\n\nMaxSearchThread thread = new MaxSearchThread(arr, from, to);\nthreads.add(thread);\nthread.start();\n}\n</code></pre> <p>A sz\u00e1lak sz\u00e1m\u00e1t\u00f3l f\u00fcgg\u0151en feldaraboljuk a t\u00f6mb\u00f6t, 4 sz\u00e1l eset\u00e9n 4 r\u00e9szre \u00e9s mindegyik sz\u00e1l az egyiken dolgozik. A <code>threads</code> lista sz\u00fcks\u00e9ges ahhoz, hogy a sz\u00e1lak \u00e1ltal produk\u00e1lt eredm\u00e9nyeket el\u00e9rj\u00fck. A <code>thread.start()</code> h\u00edv\u00e1s ut\u00e1n a program fut\u00e1sa \u00fagymond \"kett\u00e9v\u00e1lik\", a <code>for</code> ciklus is folytat\u00f3dik, illetve a <code>thread</code> objektum fut\u00e1sa egy k\u00fcl\u00f6n sz\u00e1lon megkezd\u0151dik.</p> <p>A p\u00e9ld\u00e1ban 4 db sz\u00e1l k\u00fcl\u00f6n \u00e9letet \u00e9l, viszont a <code>main</code> f\u00fcggv\u00e9nyben szeretn\u00e9nk a lok\u00e1lis maximum\u00e9rt\u00e9keiket megszerezni. Ahhoz hogy megv\u00e1rjuk egy sz\u00e1l fut\u00e1s\u00e1nak v\u00e9g\u00e9t, a <code>.join()</code> h\u00edv\u00e1ssal blokkolhat\u00f3 a f\u0151 sz\u00e1l am\u00edg a k\u00edv\u00e1nt sz\u00e1l <code>run</code> met\u00f3dusa v\u00e9get nem \u00e9r.</p> <pre><code>double multipleThreadsMax = Double.MIN_VALUE;\nfor (MaxSearchThread findMaxThread : threads) {\ntry {\nfindMaxThread.join();\nif (findMaxThread.localMaximum &gt; multipleThreadsMax)\nmultipleThreadsMax = findMaxThread.localMaximum;\n} catch (InterruptedException e) { e.printStackTrace(); }\n}\n</code></pre> <p>A <code>join()</code> met\u00f3dus <code>InterruptedException</code> kiv\u00e9telt dobhat, \u00edgy <code>try-catch</code> blokkba kell tenni \u00e9s lekezelni az esetlegesen dobott kiv\u00e9telt.</p> <p>A sz\u00e1lak l\u00e9trehoz\u00e1sa el\u00e9 \u00e9s a glob\u00e1lis maximum\u00e9rt\u00e9k meghat\u00e1roz\u00e1sa m\u00f6g\u00e9 besz\u00farva <code>System.nanoTime()</code> h\u00edv\u00e1sokat, lem\u00e9rhet\u0151 a p\u00e1rhuzamos megval\u00f3s\u00edt\u00e1s fut\u00e1sideje.</p> <pre><code>Single thread max:   0.9999999982963121\nMultiple thread max: 0.9999999982963121\n\nSingle thread time:   409 ms\nMultiple thread time: 246 ms\n</code></pre> <p>L\u00e1that\u00f3, hogy ugyanazt a maximum\u00e9rt\u00e9ket tal\u00e1lt\u00e1k meg (elv\u00e1rt viselked\u00e9s), illetve a p\u00e1rhuzamos fut\u00e1s 163 ms-sel gyorsabban v\u00e9gzett. A sz\u00e1lak menedzsel\u00e9se \u00e9s a kontextusv\u00e1lt\u00e1sok plusz terhet jelentenek a JVM sz\u00e1m\u00e1ra, \u00edgy t\u00fal sok sz\u00e1lat ind\u00edtani nem \u00e9rdemes, illetve kis adaton (kis t\u00f6mbm\u00e9ret eset\u00e9n) nem fog t\u00fal sok javul\u00e1st hozni.</p> <p>Ha a <code>MaxSearchThread::call</code> \u00e9s a <code>main</code> met\u00f3dusokban elhelyezz\u00fck a <code>System.out.println(Thread.currentThread().getName());</code> sort, akkor a konzolon k\u00f6vethet\u0151, hogy milyen nev\u0171 threadek lettek l\u00e9trehozva, illetve melyik fut.</p> <pre><code>main\nThread-0\nThread-1\nThread-2\nThread-3\n</code></pre> <p>Feladat</p> <ol> <li> <p>M\u00f3dos\u00edtsuk az <code>ARRAY_SIZE</code> \u00e9rt\u00e9k\u00e9t: pr\u00f3b\u00e1ljuk ki milyen fut\u00e1sid\u0151k sz\u00fcletnek, amennyiben sokkal kisebb, vagy sokkal nagyobb t\u00f6mb\u00f6n kell keresni. Esetleg sz\u00fcks\u00e9ges lehet a <code>heap</code> m\u00e9ret\u00e9t megn\u00f6velni, melyhez itt tal\u00e1lhat\u00f3 le\u00edr\u00e1s.</p> </li> <li> <p>M\u00f3dos\u00edtsuk a <code>NUMBER_OF_THREADS</code> \u00e9rt\u00e9k\u00e9t: kevesebb vagy t\u00f6bb sz\u00e1l futtat\u00e1sa eset\u00e9n milyen eredm\u00e9nyek sz\u00fcletnek?</p> </li> </ol> <p>A megval\u00f3s\u00edtott projekt megtal\u00e1lhat\u00f3 <code>pub/Alkalmaz\u00e1sfejleszt\u00e9s-I/07</code> mapp\u00e1ban,  01_ParallelCommandLine n\u00e9ven.</p>"},{"location":"07_gyakorlat/#javafx","title":"JavaFX","text":"<p>Felhaszn\u00e1l\u00f3i fel\u00fcletek eset\u00e9n is fontos szerepe van a p\u00e1rhuzamos\u00edt\u00e1snak. Az eddigi gyakorlatok sor\u00e1n minden esetben egy helyi SQLite adatb\u00e1zishoz kapcsol\u00f3dott az alkalmaz\u00e1s, \u00edgy nem tapasztaltunk k\u00e9sleltet\u00e9st. Amennyiben az adatb\u00e1zis egy szerveren van, a szerver terhelts\u00e9ge \u00e9s h\u00e1l\u00f3zati k\u00e9sleltet\u00e9s f\u00fcggv\u00e9ny\u00e9ben ak\u00e1r m\u00e1sodperceket is v\u00e1rhatunk a v\u00e1laszra. A v\u00e1rakoz\u00e1s sor\u00e1n a felhaszn\u00e1l\u00f3i fel\u00fclet teljesen le van fagyva.</p> <p>A modern kor felhaszn\u00e1l\u00f3ja nem tud v\u00e1rni, b\u00e1rmi t\u00f6rt\u00e9nik reszponz\u00edv kell maradjon az alkalmaz\u00e1s: g\u00f6rgetni, nyomkodni lehessen. Ez el\u00e9rhet\u0151 olyan form\u00e1ban, hogy a potenci\u00e1lisan hosszan tart\u00f3 folyamatokat k\u00fcl\u00f6n sz\u00e1l v\u00e9gzi el, mely \"vissza sz\u00f3l\" a UI-nak, ha k\u00e9sz van.</p> <p>JavaFX eset\u00e9ben van egy kit\u00fcntetett sz\u00e1l, amin az \u00f6sszes UI esem\u00e9ny feldolgoz\u00e1sa zajlik. Ezt a sz\u00e1lat h\u00edvj\u00e1k JavaFX Application Thread-nek. A SceneGraph Node-jai nem Thread-safe-ek, azaz t\u00f6bb sz\u00e1lon t\u00f6rt\u00e9n\u0151 hozz\u00e1f\u00e9r\u00e9s\u00fck nem enged\u00e9lyezett. Ennek el\u0151nye, hogy gyorsabb, mert nem kell szinkron blokkokkal oper\u00e1lni, ugyanakkor nem tudjuk csak egy sz\u00e1lr\u00f3l haszn\u00e1lni \u0151ket. A UI elemekhez csak az Application Thread-r\u0151l f\u00e9rhet\u00fcnk hozz\u00e1. Ennek eredm\u00e9nyek\u00e9ppen aj\u00e1nlatos a hosszan fut\u00f3 feladatokat elker\u00fclni a fel\u00fcleten, mivel az Application Thread addig blokkolva lesz \u00e9s \u00edgy egy nem reszponz\u00edv fel\u00fcletet kapunk.</p> <p>N\u00e9zz\u00fcnk egy egyszer\u0171 p\u00e9ld\u00e1t:</p> <pre><code>public class App extends Application {\n\nprivate Label label = new Label(\"Initial state\");\nprivate Button goBtn = new Button(\"Go\");\nprivate Button exitBtn = new Button(\"Exit\");\n\n@Override\npublic void start(Stage stage) {\ngoBtn.setOnAction(e -&gt; runTask());\nexitBtn.setOnAction(e -&gt; Platform.exit());\n\nHBox buttons = new HBox(10, goBtn, exitBtn);\n\nVBox root = new VBox(10, label, buttons);\n\nvar scene = new Scene(root, 640, 480);\nstage.setScene(scene);\nstage.show();\n}\n\nprivate void runTask() {\nint maxIter = 5;\nfor(int i = 0; i &lt; maxIter; i++) {\ntry {\nString status = \"Processing \" + (i+1)  + \" of \" + maxIter;\nSystem.out.println(status);\nlabel.setText(status);\nThread.sleep(2000);\n}\ncatch (InterruptedException e) {\ne.printStackTrace();\n}\n}\n}\n\npublic static void main(String[] args) {\nlaunch();\n}\n\n}\n</code></pre> <p>Amikor a <code>Go</code> gombot megnyomja a felhaszn\u00e1l\u00f3 akkor a konzolon l\u00e1tszik, hogy hanyadik iter\u00e1ci\u00f3ban tart a program (<code>Processing 5 of 5</code>), ugyanakkor a UI-on eg\u00e9szen addig az <code>Initial state</code> sz\u00f6veg l\u00e1tsz\u00f3dik a <code>Label</code>-en, ameddig mind az 5 iter\u00e1ci\u00f3 le nem ment, azaz addig blokkolva van a UI. Mik\u00f6zben fut a <code>Go</code>, pr\u00f3b\u00e1ljuk megnyomni az <code>Exit</code> gombot. Azt tapasztaljuk, hogy ez csak akkor fog lefutni, azaz akkor l\u00e9p ki az alkalmaz\u00e1sb\u00f3l, amikor a <code>runTask</code> lefutott. </p> <p>A fenti probl\u00e9ma megold\u00e1sa, hogy ne futtassunk hossz\u00fa feladatokat az esem\u00e9nykezel\u0151kben, pontosabban azokat egy k\u00fcl\u00f6n sz\u00e1lon ind\u00edtsuk el a h\u00e1tt\u00e9rben, ne pedig az Application Thread-et blokkoljuk ezzel.</p> <p>Els\u0151k\u00e9nt l\u00e1ssunk egy rossz p\u00e9ld\u00e1t, melynek sor\u00e1n egy k\u00fcl\u00f6n thread-ben ind\u00edtjuk a <code>runTask</code>-ot. A <code>start</code>-on bel\u00fcl csak az esem\u00e9nykezel\u0151t \u00edrjuk \u00e1t a k\u00f6vetkez\u0151k\u00e9ppen:</p> <p><pre><code>@Override\npublic void start(Stage stage) {\ngoBtn.setOnAction(e -&gt; startTaskOnThread());\n...\n}\n\nprivate void startTaskOnThread() {\nRunnable task = () -&gt; runTask();\nThread longRunningThread = new Thread(task);\n\nlongRunningThread.setDaemon(true); // ha meg\u00e1l\u00edtjuk az alkalmaz\u00e1sunkat, akkor vele hal ez a sz\u00e1l is\nlongRunningThread.start();\n}\n</code></pre> A megold\u00e1s a k\u00f6vetkez\u0151 hib\u00e1t fogja eredm\u00e9nyezni:</p> <pre><code>java.lang.IllegalStateException: Not on FX application thread; currentThread = Thread-3`\n</code></pre> <p>, mely a <code>label.setText(status);</code> utas\u00edt\u00e1son keletkezik. A JavaFX Runtime ellen\u0151rzi, hogy UI-t befoly\u00e1sol\u00f3 utas\u00edt\u00e1sokat csak az Application Thread-r\u0151l adhatunk ki.</p> <p>A helyes megold\u00e1s csak kicsiben k\u00fcl\u00f6nb\u00f6zik a fentit\u0151l. A sima <code>label.setText(status)</code> h\u00edv\u00e1s helyett a k\u00f6vetkez\u0151t kell haszn\u00e1lni:</p> <pre><code>Platform.runLater(() -&gt; label.setText(status));\n</code></pre> <p>A <code>Platform.runLater</code> a param\u00e9terben megadott <code>Runnable</code>-t futtatja valamikor a j\u00f6v\u0151ben az Application Thread-en, \u00edgy nem okoz olyan probl\u00e9m\u00e1t, mint amit az el\u0151z\u0151 esetben tapasztaltunk.</p> <p>A fenitek csak idealiz\u00e1lt k\u00f6rnyezetben alkalmazhat\u00f3k, illetve van egy szab\u00e1ly, amit m\u00e1r meg is s\u00e9rt\u00fcnk, hiszen k\u00fcl\u00f6n sz\u00e1lb\u00f3l visszasz\u00f3lunk az Application Thread-nek, hogy friss\u00edtse a <code>label</code> sz\u00f6veg\u00e9t, ami kor\u00e1ntsem eleg\u00e1ns. Ezen fel\u00fcl ebben a k\u00f6rnyezetben a task nem tud visszaadni eredm\u00e9nyt, nincs megb\u00edzhat\u00f3 kiv\u00e9telkezel\u00e9s, nem tudunk megb\u00edzhat\u00f3an le\u00e1ll\u00edtani, \u00fajraind\u00edtani \u00e9s \u00fctemezni task futtat\u00e1sokat. A k\u00f6vetkez\u0151kben ezeket a probl\u00e9m\u00e1kat oldjuk meg a JavaFX Concurrency API seg\u00edts\u00e9g\u00e9vel.</p>"},{"location":"07_gyakorlat/#javafx-concurrency-api","title":"JavaFX Concurrency API","text":"<p>A JavaFX Concurrency API a hagyom\u00e1nyos concurrency API-ra \u00e9p\u00edt, azaz a <code>java.util.concurrent</code> csomag alatt tal\u00e1lhat\u00f3 elemekre. Maga a JavaFX Concurrency API egy\u00e1ltal\u00e1n nem terjedelmes, viszont ann\u00e1l hasznosabb kieg\u00e9sz\u00edt\u00e9seket tartalmaz a GUI alkalmaz\u00e1sok t\u00f6bbsz\u00e1l\u00fas\u00edt\u00e1s\u00e1hoz.</p> <p>Az egyik k\u00f6zponti elem a <code>Worker&lt;V&gt;</code> interface, mely egy feladatot (task-ot) reprezent\u00e1l, amit egy vagy t\u00f6bb h\u00e1tt\u00e9rsz\u00e1lon kell v\u00e9grehajtani. Ami nagyon fontos, hogy a <code>Worker</code> st\u00e1tusz\u00e1t az Application Thread k\u00f6vetni tudja. A <code>Worker</code> h\u00e1rom implement\u00e1ci\u00f3j\u00e1t is megkapjuk, melyek a k\u00f6vetkez\u0151 absztrakt oszt\u00e1lyok:</p> <ul> <li><code>Task&lt;V&gt;</code>: \"Egyszer haszn\u00e1latos\" feladat futtat\u00e1s\u00e1hoz.</li> <li><code>Service&lt;V&gt;</code>: T\u00f6bbsz\u00f6r is futtathat\u00f3 feladat futtat\u00e1s\u00e1hoz</li> <li><code>ScheduledService&lt;V&gt;</code>: A <code>Service</code> kiterjeszt\u00e9se \u00fagy, hogy meghat\u00e1rozott id\u0151intervallumonk\u00e9nt futtatja a rendszer.</li> </ul> <p>A fenti oszt\u00e1lyok generikus param\u00e9tere a <code>Worker</code> visszat\u00e9r\u00e9si t\u00edpus\u00e1t adja meg. Amennyiben egy <code>Worker</code> nem ad vissza eredm\u00e9nyt, \u00fagy haszn\u00e1ljuk a <code>Void</code> megad\u00e1st!</p>"},{"location":"07_gyakorlat/#worker-allapotai","title":"Worker \u00e1llapotai","text":"<p>Egy <code>Worker</code> a k\u00f6vetkez\u0151 \u00e1llapotok egyik\u00e9ben lehet, melyet a <code>Worker.State</code> enum \u00edr le:</p> <ul> <li><code>READY</code></li> <li><code>SCHEDULED</code></li> <li><code>RUNNING</code></li> <li><code>SUCCEEDED</code></li> <li><code>CANCELLED</code></li> <li><code>FAILED</code></li> </ul> <p>Az \u00e1llapotok k\u00f6z\u00f6tti lehets\u00e9ges \u00e1tmeteket a k\u00f6vetkez\u0151 \u00e1bra mutatja be.</p> <p> </p> <p>Amikor egy <code>Worker</code>-t l\u00e9trehozunk, akkor a <code>READY</code> \u00e1llapotba ker\u00fcl. A v\u00e9grehajt\u00e1s el\u0151tt \u00fctemezett, azaz <code>SCHEDULED</code> \u00e1llapotba ker\u00fcl, melyb\u0151l a fut\u00f3 (<code>RUNNING</code>) \u00e1llapotba ker\u00fclhet. Ezut\u00e1n 3 f\u00e9le forgat\u00f3k\u00f6nyv l\u00e9tezik:</p> <ul> <li>Fut\u00e1s k\u00f6zben kezeletlen kiv\u00e9tel keletkezik -&gt; <code>FAILED</code></li> <li><code>cancel()</code> met\u00f3dus h\u00edv\u00e1s eredm\u00e9nyek\u00e9ppen <code>CANCELLED</code> \u00e1llapotba ker\u00fcl. Mivel b\u00e1rmikor d\u00f6nthet\u00fcnk \u00fagy, hogy m\u00e9gsem szeretn\u00e9nk futtatni a <code>Worker</code>-t, \u00edgy nem csak a <code>RUNNING</code>, hanem a <code>READY</code> \u00e9s <code>SCHEDULED</code> \u00e1llapotokb\u00f3l is \u00e1tker\u00fclhet\u00fcnk <code>CANCELLED</code> \u00e1llapotba</li> <li>Emellett nyilv\u00e1n sikeresen is lefuthat egy <code>Worker</code>, melynek eredm\u00e9nyek\u00e9ppen a <code>SUCCEEDED</code> \u00e1llapotba ker\u00fcl</li> </ul> <p>A Service-ek ezen 3 \u00e1llapotb\u00f3l visszaker\u00fclnek a READY \u00e1llapotba, hogy a futtat\u00e1s megism\u00e9telhet\u0151 legyen (az \u00e1br\u00e1n ezt a szaggatott vonalak jelzik).</p> <p>Az \u00e1llapotok k\u00f6z\u00f6tti v\u00e1lt\u00e1sok <code>WorkerStateEvent</code> esem\u00e9nyeket is gener\u00e1lnak, \u00edgy k\u00f6nnyen kezelhetj\u00fck, azt hogy p\u00e9ld\u00e1ul mi t\u00f6rt\u00e9njen hiba eset\u00e9n (pl.: n\u00e9h\u00e1nyszor pr\u00f3b\u00e1lkozunk m\u00e9g az \u00fajrafuttat\u00e1ssal ut\u00e1na viszont jelezz\u00fck a probl\u00e9m\u00e1t).</p>"},{"location":"07_gyakorlat/#worker-property-jei","title":"Worker property-jei","text":"<p>Minden <code>Worker</code> a k\u00f6vetkez\u0151 property-kkel rendelkezik, melyeket a l\u00e9trehoz\u00e1skor lehet\u0151s\u00e9g\u00fcnk van megadni:</p> <ul> <li><code>title</code>: a task neve</li> <li><code>message</code>: visszajelz\u00e9sek k\u00fcld\u00e9s\u00e9re haszn\u00e1latos (pl.: <code>Processed 1 out of 10</code>)</li> <li><code>running</code>: megmondja, hogy a feladat \u00e9ppen fut-e (<code>SCHEDULED</code> is m\u00e1r igazat ad vissza)</li> <li><code>state</code>: az el\u0151z\u0151 fejezetben bemutatott \u00e1llapotok k\u00f6z\u00fcl adja vissza az \u00e9ppen aktu\u00e1lisat</li> <li><code>workDone, totalWork, progress</code>: a feladat k\u00e9sz\u00fclts\u00e9g\u00e9t lehet jelezni vele</li> <li><code>value</code>: A <code>Worker</code> eredm\u00e9ny\u00e9t adja vissza</li> <li><code>exception</code>: Amennyiben a <code>Worker</code> <code>FAILED</code> \u00e1llapotba ker\u00fclt, akkor a kiv\u00e9tel ide ker\u00fcl, mely <code>Throwable</code> t\u00edpus\u00fa, azaz tov\u00e1bb is dobhatjuk az Application Thread-en, ha \u00fagy tartja kedv\u00fcnk</li> </ul> <p>Ha a fut\u00f3 <code>Worker</code> \u00e1llapot\u00e1r\u00f3l szeretn\u00e9nk inform\u00e1ci\u00f3kat megjelen\u00edteni, akkor nyugodtan k\u00f6ss\u00fcnk vez\u00e9rl\u0151ket ezekhez a property-khez, illetve haszn\u00e1lhatunk <code>Invalidation</code>- \u00e9s <code>ChangeListener</code>-eket is, melyekben UI elemeket hivatkozunk.</p> <p>N\u00e9zz\u00fck, hogyan lehet <code>Task</code> haszn\u00e1lata mellett elv\u00e9gezni az el\u0151z\u0151 feladatokat:</p> <pre><code>public class App extends Application {\n\nprivate Label label = new Label(\"Initial state\");\nprivate Label progressLabel = new Label(\"Progress: 0%\");\nprivate Label valueLabel = new Label(\"Current Value: \");\nprivate Label stateLabel = new Label(\"Current State: \");\nprivate Button goBtn = new Button(\"Go\");\nprivate Button cancelBtn = new Button(\"Cancel Task\");\nprivate Button exitBtn = new Button(\"Exit\");\nTask&lt;Integer&gt; task = new Task&lt;&gt;() {\n{\nthis.setOnSucceeded(event -&gt; {\nupdateProgress(1,1); // set progress to done (100%)\n});\n}\n\n@Override\nprotected Integer call() throws Exception {\nint i, maxIter = 5;\nfor(i = 0; i &lt; maxIter; i++) {\ntry {\nString status = \"Processing \" + (i+1)  + \" of \" + maxIter;\nthis.updateMessage(status);\nthis.updateValue(i);\nthis.updateProgress(i, maxIter);\nThread.sleep(2000);\n}\ncatch (InterruptedException e) {\nif(this.isCancelled()) {\nbreak;\n}\n}\n}\nreturn i;\n}\n};\n\n@Override\npublic void start(Stage stage) {\ngoBtn.setOnAction(event -&gt; startTaskOnThread());\ncancelBtn.setOnAction(event -&gt; task.cancel());\nexitBtn.setOnAction(event -&gt; Platform.exit());\n\n//bindings\nlabel.textProperty().bind(task.messageProperty());\nprogressLabel.textProperty().bind(Bindings.concat(\"Progress: \", task.progressProperty().multiply(100).asString().concat(\"%\")));\nvalueLabel.textProperty().bind(Bindings.concat(\"Current Value: \", task.valueProperty().asString()));\nstateLabel.textProperty().bind(Bindings.concat(\"Current State: \", task.stateProperty().asString()));\n\ngoBtn.disableProperty().bind(task.stateProperty().isNotEqualTo(Worker.State.READY));\ncancelBtn.disableProperty().bind(task.stateProperty().isNotEqualTo(Worker.State.RUNNING));\n\n\nHBox buttons = new HBox(10, goBtn, cancelBtn, exitBtn);\n\nVBox root = new VBox(10, label, progressLabel, valueLabel, stateLabel, buttons);\n\nvar scene = new Scene(root, 640, 480);\nstage.setScene(scene);\nstage.show();\n}\n\nprivate void startTaskOnThread() {\nThread longRunningThread = new Thread(task);\n\nlongRunningThread.setDaemon(true);\nlongRunningThread.start();\n}\n\npublic static void main(String[] args) {\nlaunch();\n}\n}\n</code></pre> <p>Az els\u0151 \u00e9s legfontosabb, hogy a feladatot egy <code>Task</code> form\u00e1j\u00e1ban adjuk meg, melyet egy field-ben el is t\u00e1rolunk. Az init blokkban megadunk egy esem\u00e9nykezel\u0151t is, mely akkor fut le, ha a task <code>SUCCEEDED</code> \u00e1llapotba ker\u00fcl. Hasonl\u00f3 esem\u00e9nykezel\u0151ket tal\u00e1lhatunk a k\u00fcl\u00f6nb\u00f6z\u0151 \u00e1llapotokhoz, illetve van egy \u00e1ltal\u00e1nos esem\u00e9nykezel\u0151 is, melynek meg lehet adni az esem\u00e9ny t\u00edpus\u00e1t:</p> <pre><code>task.addEventHandler(WorkerStateEvent.WORKER_STATE_SUCCEEDED, event -&gt; {\nSystem.out.println(\"Success\");\n});\n</code></pre> <p>Az absztrakt <code>call</code> met\u00f3dus kifejt\u00e9s\u00e9ben annyi v\u00e1ltozik, hogy a property-k \u00e9rt\u00e9k\u00e9t friss\u00edtj\u00fck az <code>updateXXX</code> met\u00f3dusok haszn\u00e1lat\u00e1val, \u00edgy a folyamatr\u00f3l a UI-on is megjelen\u00edthet\u00fcnk inform\u00e1ci\u00f3kat, ahogy azt meg is tessz\u00fck majd jelen esetben. Amennyiben <code>InterruptedException</code>-t kapunk, akkor le\u00e1ll\u00edtjuk a for ciklus fut\u00e1s\u00e1t \u00e9s visszat\u00e9r\u00fcnk az aktu\u00e1lis i \u00e9rt\u00e9kkel (ilyenkor vizsg\u00e1ljuk, hogy az\u00e9rt kaptunk-e ilyen kiv\u00e9telt, mert valaki a <code>cancel()</code>-t megh\u00edvta-e).</p> <p>Ezut\u00e1n a fel\u00fcletre kivezet\u00fcnk n\u00e9h\u00e1ny property-t (binding-ok seg\u00edts\u00e9g\u00e9vel), hogy k\u00f6vetni tudjuk a h\u00e1tt\u00e9rben fut\u00f3 feladat \u00e1llapot\u00e1t.</p> <p>Megjegyz\u00e9s</p> <p>A <code>Service</code> oszt\u00e1ly bel\u00fcl egy <code>Task</code>-ot tartalmaz, illetve haszn\u00e1lata nagyban megegyezik a <code>Task</code> haszn\u00e1lat\u00e1val. Itt nem fogjuk bemutatni r\u00e9szletesen sem a <code>Service</code> sem pedig a <code>ScheduledService</code> haszn\u00e1lat\u00e1t.</p>"},{"location":"07_gyakorlat/#kontakt-alkalmazas-tovabbfejlesztese","title":"Kontakt alkalmaz\u00e1s tov\u00e1bbfejleszt\u00e9se","text":"<p>A kiindul\u00f3 projekt megtal\u00e1lhat\u00f3 a <code>pub/Alkalmaz\u00e1sfejleszt\u00e9s-I/06/01_contacts_final</code> mapp\u00e1ban.</p> <p>Figyelem</p> <p>Ne felejts\u00fck el \u00e1t\u00edrni az <code>application.properties</code> f\u00e1jlban az adatb\u00e1zis el\u00e9r\u00e9s\u00e9t!</p> <p>A t\u00e1bl\u00e1zat jobb oldal\u00e1n, minden sorban tal\u00e1lhat\u00f3 egy \"Delete\" \u00e9s egy \"Edit\" gomb. Tegy\u00fck fel, hogy ezek hat\u00e1s\u00e1ra egy lass\u00fa h\u00e1l\u00f3zati kommunik\u00e1ci\u00f3n kereszt\u00fcli akci\u00f3 fut le, ami blokkolja a UI fel\u00fcletet \u00e9s nem lehet g\u00f6rgetni m\u00e9g be nem fejez\u0151dik. Ennek imit\u00e1l\u00e1s\u00e1hoz egy 5 m\u00e1sodperces v\u00e1rakoz\u00e1st tegy\u00fcnk be a DAO megval\u00f3s\u00edt\u00e1s\u00e1ba.</p> <pre><code>@Override\npublic void delete(Contact contact) {\n\ntry(Connection c = DriverManager.getConnection(connectionURL);\nPreparedStatement stmt = c.prepareStatement(DELETE_CONTACT);\n) {\nstmt.setInt(1, contact.getId());\nTimeUnit.SECONDS.sleep(5);\nstmt.executeUpdate();\n\n} catch (SQLException | InterruptedException throwables) {\nthrowables.printStackTrace();\n}\n\n}\n</code></pre> <p>Ami a kontextusban v\u00e1ltozott: a <code>stmt.executeUpdate();</code> el\u00e9 ker\u00fclt egy sleep. A v\u00e1rakoz\u00e1st jelent\u0151 f\u00fcggv\u00e9nyh\u00edv\u00e1s is dobhat <code>InterruptedException</code> kiv\u00e9telt, amit le kell kezelni! A <code>catch</code> \u00e1g k\u00e9pes arra, hogy t\u00f6bb kiv\u00e9teloszt\u00e1lyt is elkapjon egyszerre, \u00e9s az oszt\u00e1lyokat <code>|</code> (vagy) jellel kell elv\u00e1lasztani. Ugyanez a m\u00f3dos\u00edt\u00e1s ker\u00fclj\u00f6n bele az \u00f6sszes Contact DAO met\u00f3dusba, kiv\u00e9ve a <code>findAll</code>-t.</p> <p>A m\u00f3dosult met\u00f3dusok: <code>save</code>, <code>delete</code>.</p> <p>A futtat\u00e1s ut\u00e1ni elv\u00e1rt eredm\u00e9ny, hogy az alkalmaz\u00e1s indul\u00e1sa ut\u00e1n minden m\u0171velet sok\u00e1ig tart \u00e9s addig a t\u00e1bl\u00e1zat nem g\u00f6rgethet\u0151, hozz\u00e1ad\u00e1s ablak kifagy.</p> <p>Ahhoz hogy reszponz\u00edv maradjon a UI, am\u00edg a back-end fut, a k\u00f6vetkez\u0151 v\u00e1ltoztat\u00e1sok sz\u00fcks\u00e9gesek.</p>"},{"location":"07_gyakorlat/#mainwindowscontroller","title":"MainWindowsController","text":"<p>A <code>hu.alkfejl.controller</code> csomagban tal\u00e1lhat\u00f3 <code>MainWindowController</code> oszt\u00e1ly <code>deleteContact</code> met\u00f3dus\u00e1t kell felokos\u00edtani ahhoz, hogy a <code>PersonController.getInstance().delete(p);</code> met\u00f3dush\u00edv\u00e1s ne legyen blokkol\u00f3. Ehhez az el\u0151bb ismertetett Thread-eket kell alkalmazni.</p> <pre><code>private void deleteContact(Contact c) {\nAlert confirm = new Alert(Alert.AlertType.CONFIRMATION, \"Are you sure you want to delete contact: \" + c.getName(), ButtonType.YES, ButtonType.NO);\nconfirm.showAndWait().ifPresent(buttonType -&gt; {\nif(buttonType.equals(ButtonType.YES)){\n\nTask&lt;Void&gt; task = new Task&lt;&gt;() {\n@Override\nprotected Void call() throws Exception {\nphoneDAO.deleteAll(c.getId());\ndao.delete(c);\nreturn null;\n}\n};\n\ntask.setOnSucceeded(event1 -&gt; refreshTable());\n\nThread deleteThread = new Thread(task);\ndeleteThread.start();\n\n}\n});\n}\n</code></pre> <p>Amikor a felhaszn\u00e1l\u00f3 meger\u0151s\u00edti, hogy t\u00e9nylegesen ki akarja t\u00f6r\u00f6lni a kiv\u00e1lasztott sort, akkor egy <code>Task</code> (<code>javafx.concurrent.Task</code>) objektumot hozunk l\u00e9tre. Az IDEA legener\u00e1lja a sz\u00fcks\u00e9ges k\u00f3dr\u00e9szletet, \u00e9s a call met\u00f3dust kell megval\u00f3s\u00edtani. Jelen esetben ez csak tov\u00e1bb h\u00edv a DAO-ba (eddig is ezt csin\u00e1lta az itt tal\u00e1lt k\u00f3dr\u00e9szlet).</p> <p>Mint ahogy azt m\u00e1r l\u00e1ttuk, a <code>Task</code> objektum \u00f6nmag\u00e1ban nem futtathat\u00f3, egy <code>Thread</code>-et kell l\u00e9trehozni bel\u0151le, ami tudja futtatni. Az esem\u00e9nykezel\u0151 feladata, hogy friss\u00edtse a t\u00e1bl\u00e1zatot a <code>Task</code> fut\u00e1s\u00e1nak v\u00e9gezt\u00e9vel (elv\u00e1rhat\u00f3, hogy a t\u00f6r\u00f6lt sor nem jelenik meg \u00fajra).</p>"},{"location":"07_gyakorlat/#addeditcontactcontroller","title":"AddEditContactController","text":"<p>\u00daj kontakt hozz\u00e1ad\u00e1s\u00e1n\u00e1l \u00e9s a m\u00f3dos\u00edt\u00e1s\u00e1n\u00e1l is a <code>onSave</code> met\u00f3dus fut le. Ami elt\u00e9r az el\u0151z\u0151 fejezett\u0151l az az,hogy most kellene tudnunk azt is, hogy milyen eredm\u00e9nnyel futott le a m\u00f3dos\u00edt\u00e1s \u00e9s ennek f\u00fcggv\u00e9ny\u00e9ben jelezni a felhaszn\u00e1l\u00f3 fel\u00e9, hogy sikeres-e a m\u0171velet. Az al\u00e1bbi k\u00f3dr\u00e9szlet a <code>onSave</code> f\u00fcggv\u00e9nyt taglalja.</p> <pre><code>@FXML\npublic void onSave(){\nTask&lt;Boolean&gt; task = new Task&lt;&gt;() {\n@Override\nprotected Boolean call() throws Exception {\ncontact = contactDAO.save(contact);\nif(contact == null){\nreturn false;\n}\nphoneDAO.deleteAll(contact.getId());\n\ncontact.getPhones().forEach(phone -&gt; {\nphone.setId(0);\nphoneDAO.save(phone, contact.getId());\n});\nreturn true;\n}\n};\n\nThread updateThread = new Thread(task);\nupdateThread.start();\n\nApp.&lt;MainWindowController&gt;loadFXML(\"/fxml/main_window.fxml\", App.getStage(), mainWindowController -&gt; {\ntask.setOnSucceeded(event -&gt; {\nBoolean result = task.getValue();\nif(result) {\nAlert alert = new Alert(Alert.AlertType.INFORMATION, \"Saving contact was successful\", ButtonType.OK);\nalert.showAndWait();\nmainWindowController.refreshTable();\n\n} else {\nAlert alert = new Alert(Alert.AlertType.ERROR, \"Saving contact failed\", ButtonType.OK);\nalert.showAndWait();\n}\n});\n});\n}\n</code></pre> <p>A <code>call</code> nem sokban k\u00fcl\u00f6nb\u00f6zik az el\u0151z\u0151t\u0151l. Ut\u00e1na viszont haszn\u00e1t vessz\u00fck a meg\u00edrt <code>loadFXML</code> met\u00f3dusnak, mivel friss\u00edten\u00fcnk kell majd a t\u00e1bl\u00e1zatunkat a f\u0151 ablakon. A <code>refreshTable</code> met\u00f3dust publikusra kellett m\u00f3dos\u00edtanunk, de ez rendben van, hiszen mi\u00e9rt ne friss\u00edthetn\u00e9nk a t\u00e1bl\u00e1zatot egy-egy k\u00e9r\u00e9s alkalm\u00e1val.</p> <p>A m\u00f3dos\u00edt\u00e1sok ut\u00e1n a UI reszponz\u00edv marad, de 5 m\u00e1sodperc ut\u00e1n ad visszajelz\u00e9st, a k\u00e9rt esem\u00e9ny lefut\u00e1sa ut\u00e1n.</p>"},{"location":"07_gyakorlat/#videok","title":"Vide\u00f3k","text":"<ul> <li>Sz\u00e1lak Bevezet\u00e9s</li> <li>JavaFX sz\u00e1lak bevezet\u00e9s</li> <li>JavaFX Worker sz\u00e1lak (JavaFX Concurrency API)</li> <li>Contacts alkalmaz\u00e1s sz\u00e1lakkal</li> </ul>"},{"location":"07_gyakorlat/#referenciak","title":"Referenci\u00e1k","text":"<ul> <li>P\u00e1rhuzamos programoz\u00e1s jegyzet - A. Kert\u00e9sz, L. Schrettner, /pub</li> <li>Java Multithreading, TutorialsPoint</li> <li>Concurrency in JavaFX</li> </ul>"},{"location":"08_gyakorlat/","title":"8. gyakorlat","text":""},{"location":"08_gyakorlat/#servletek","title":"Servletek","text":""},{"location":"08_gyakorlat/#mik-azok-a-servletek","title":"Mik azok a servletek?","text":"<p>A servletek egy Web- vagy Alkalmaz\u00e1sszerveren programok, melyek egyfajta k\u00f6ztes r\u00e9tegk\u00e9nt szolg\u00e1lnak a k\u00e9r\u00e9sek (HTTP k\u00e9r\u00e9sek) \u00e9s az adatb\u00e1zis \u00e9s/vagy m\u00e1s alkalmaz\u00e1sok k\u00f6z\u00f6tt.</p> <p>A servletek seg\u00edts\u00e9g\u00e9vel elk\u00fcldhet\u00fcnk a szervernek user form adatokat, adatokat mutathatunk webes fel\u00fcleten a felhaszn\u00e1l\u00f3nak, melyek az adatb\u00e1zisb\u00f3l \u00e9rkeznek, tov\u00e1bb\u00e1 a statikus HTML tartalmak mellett dinamikusan \u00e1ll\u00edthatunk el\u0151 HTML tartalmakat. Innen a n\u00e9v: Java Dinamikus Web.</p> <p>A Java servleteket Java oszt\u00e1lyok seg\u00edts\u00e9g\u00e9vel val\u00f3s\u00edthatjuk meg, melyek a k\u00f6vetkez\u0151 package-ekben tal\u00e1lhat\u00f3ak meg:</p> <ul> <li><code>javax.servlet</code></li> <li><code>javax.servlet.http</code></li> </ul> <p>A servleteket ugyan\u00fagy le kell ford\u00edtani, mint b\u00e1rmelyik m\u00e1sik Java oszt\u00e1lyt.</p>"},{"location":"08_gyakorlat/#hello-world-servlet","title":"Hello World Servlet","text":"<p>A servletek fejleszt\u00e9s\u00e9hez sz\u00fcks\u00e9g\u00fcnk van n\u00e9h\u00e1ny eszk\u00f6zre. Mint azt m\u00e1r fent olvashattuk kell egy szerver, amin majd fut az alkalmaz\u00e1sunk. Eset\u00fcnkben az Apache Tomcat alkalmaz\u00e1sszervert fogjuk haszn\u00e1lni.</p> <p>Az \u00e1ltalunk haszn\u00e1lt verzi\u00f3 a 9-es, melyet let\u00f6lthet\u00fcnk innen.</p> <p>\u00c9n csak a zip-et mutatom meg, mivel ezt egys\u00e9gesen lehet kezelni minden platformon. Teh\u00e1t t\u00f6lts\u00fck le a zippelt verzi\u00f3t! Ezut\u00e1n csomagoljuk ki egy kellemes helyre (p\u00e9ld\u00e1ul <code>C:\\apps\\apache-tomcat-9.0.31</code>). Az alverzi\u00f3ban lehetnek elt\u00e9r\u00e9sek, de ez n\u00e1lunk nem fog semmit sem befoly\u00e1solni.</p> <p>Ezut\u00e1n ind\u00edtsuk el az IntelliJ-t \u00e9s k\u00e9sz\u00edts\u00fcnk egy \u00faj Maven\u00a0projektet!</p> <p></p> <p>Java 11-et fogunk haszn\u00e1lni, \u00edgy az legyen let\u00f6ltve, illetve be\u00e1ll\u00edtva a <code>$Path</code> \u00e9s a <code>$JAVA_HOME</code> k\u00f6rnyezeti v\u00e1ltoz\u00f3kban. A projekt SDK-j\u00e1t is 11-re \u00e1ll\u00edtjuk, mint ahogy a k\u00e9pen ez l\u00e1tszik is. Nyomjuk meg a Next-et! A project nev\u00e9hez adjuk meg a <code>HelloWorld</code>-\u00f6t! Az Artifact Coordinates alatt adjuk meg a groupId-t (pl: <code>hu.alkfejl</code>), majd Next \u00e9s Finish.</p> <p>Eredm\u00e9nyk\u00e9ppen a projekt strukt\u00far\u00e1ja valahogy \u00edgy kell kin\u00e9zzen:</p> <p></p> <p>Ha ezzel megvagyunk, akkor a jobb fels\u0151 sarokban adjunk hozz\u00e1 egy \u00faj konfigur\u00e1ci\u00f3t, itt fogjuk megadni, hogy a Tomcat szerveren futassa az alkalmaz\u00e1sunkat a rendszer.</p> <p></p> <p>A felugr\u00f3 ablakban a bal oldalon a V\u00e1lasszuk ki a Template-ek k\u00f6z\u00fcl a Tomcat Server/Local men\u00fcpontot! Ezut\u00e1n a jobb oldalon a Server f\u00fcl alatt az Application Server-n\u00e9l nyomjuk a Configure... gombra! A felugr\u00f3 ablakon adjuk meg a Tomcat server mapp\u00e1j\u00e1t (pl: <code>C:\\apps\\apache-tomcat-9.0.31</code>)! Nyomjuk meg az Ok gombot! A Server f\u00fcl t\u00f6bbi eleme maradhat alap\u00e9rtelmezetten, tal\u00e1n a legfels\u0151 <code>Name</code> sort \u00e9rdemes lehet \u00e1t\u00edrni Tomcat-re. A jobb fels\u0151 sarokban, ha r\u00e1nyomunk a create configuration-re, akkor ezt a szerverbe\u00e1llt\u00e1st m\u00e1s alkalmaz\u00e1sokn\u00e1l is haszn\u00e1lhatjuk majd, \u00edgy \u00e9rdemes lehet erre kattintani. Ekkor viszont alul ki\u00edrja a <code>Warning: No artifacts marked for deployment</code> sz\u00f6veget a rendszer. Kattintsunk a fix-re gombra \u00e9s v\u00e1lasszuk ki az <code>&lt;alkalmaz\u00e1sunk neve&gt;:war</code> elemet (Pl: <code>Test:war</code>)! Ezut\u00e1n Apply \u00e9s Ok!</p> <p>Ha ezekkel megvagyunk, akkor mehet a z\u00f6ld play gomb. Miut\u00e1n elinul a Tomcat server, akkor automatikusan felrakja az alkalmaz\u00e1sunkat a rendszer a Tomcat-re \u00e9s egy b\u00f6ng\u00e9sz\u0151ben elind\u00edtja azt.</p> <p>Vide\u00f3 a folyamatr\u00f3l: </p> <p>Ha a fentiekkel megvagyunk akkor l\u00e9tre is hozhatunk egy t\u00e9nyleges servletet. Az eddigi egy statikus HTML oldallal m\u00e9g nem dinamikus web. A maven archetype alapb\u00f3l nem gener\u00e1l nek\u00fcnk java forr\u00e1st, \u00edgy jobb klikk a main-re a project strukt\u00far\u00e1n bel\u00fcl, majd <code>New</code>-&gt;<code>Directiory</code>&gt;<code>java</code>. Eut\u00e1n ebbe a k\u00f6nyvt\u00e1rba hozzunk l\u00e9tre egy \u00faj oszt\u00e1lyt. Class name-nek adjuk meg a <code>HelloWorldServlet</code>-et! \u00cdrjuk bele az al\u00e1bbiakat a f\u00e1jlba! <pre><code>import java.io.IOException;\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@WebServlet(\"/HelloWorldServlet\")\npublic class HelloWorldServlet extends HttpServlet {\n\nprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nresponse.getWriter().append(\"Served at: \").append(request.getContextPath());\n}\n\n}\n</code></pre> A fenti k\u00f3dot nem tudja \u00e9rtelmezni a rendszer, hiszen hi\u00e1nyzik egy fontos maven dependency. Tegy\u00fck be a k\u00f6vetkez\u0151 maven dependency-t a pom.xml-be! <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n&lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;\n&lt;version&gt;4.0.1&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre></p> <p>Figyelem</p> <p>10-es Tomcat eset\u00e9ben t\u00f6bb dolgot m\u00e1sk\u00e9ppen kell csin\u00e1lnunk, mivel breaking change-ek l\u00e9ptek fel. P\u00e9ld\u00e1ul a fenti f\u00fcgg\u0151s\u00e9g m\u00e1r nem megfelel\u0151, mivel a 10-es Tomcat m\u00e1r nem a <code>javax.servlet-api</code>-t haszn\u00e1lja, hanem a <code>jakarta.servlet-api</code>-t, melyhez tartoz\u00f3 Maven dependency:</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;jakarta.servlet&lt;/groupId&gt;\n&lt;artifactId&gt;jakarta.servlet-api&lt;/artifactId&gt;\n&lt;version&gt;5.0.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Emiatt az \u00f6sszes helyen, ahol a f\u00fcgg\u0151s\u00e9g oszt\u00e1lyait haszn\u00e1ljuk, az importokat is meg kell v\u00e1ltoztatni. A <code>servlet-api</code> mellett a JSP is megv\u00e1ltozott <code>javax.servlet.jsp</code>-r\u00f3l <code>jakarta.servlet.jsp</code>-re, tov\u00e1bb\u00e1 a k\u00e9s\u0151bb haszn\u00e1lni k\u00edv\u00e1nt EL (Expression Language) f\u00fcgg\u0151s\u00e9g is megv\u00e1ltozott a <code>javax.el</code>-r\u0151l <code>jakarta.el</code>-re.</p> <p>A v\u00e1ltoz\u00e1sok teljes list\u00e1ja megtal\u00e1lhat\u00f3 itt.</p> <p>A fenti v\u00e1ltoztat\u00e1sok miatt a Tomcat 9.x.x verzi\u00f3j\u00e1t javasoljuk haszn\u00e1lni, mivel a p\u00e9ldak\u00f3dok mind ezzel k\u00e9sz\u00fcltek.</p> <p>A kis z\u00f6ld play gomb helyett most egy \u00fajraj\u00e1tsz\u00e1s gomb van (amennyiben m\u00e9g fut a Tomcat), melyre ha r\u00e1nyomunk \u00e9s a redeploy-t v\u00e1lasztjuk, akkor a Tomcat szerverre \u00fajrat\u00f6lti az alkalmaz\u00e1sunkat a rendszer, azaz \u00fajra leford\u00edtja egy war-r\u00e1 (ez a jar webes megfelel\u0151je: Web Archive-b\u00f3l j\u00f6n a n\u00e9v) \u00e9s beletolja az alkalmaz\u00e1sszerverbe. Ugyanezt a lenti a Server-&gt;Deployment-&gt;Deploy all gombra kattintva is megtehetj\u00fck.</p> <p>Ezzel meg is van a minta projekt\u00fcnk. A tov\u00e1bbiakban k\u00f6zelebbr\u0151l is megn\u00e9zz\u00fck a gener\u00e1lt projektet \u00e9s a gener\u00e1lt f\u00e1jlok tartalm\u00e1t.</p> <p>Vide\u00f3 az els\u0151 szervlet l\u00e9trehoz\u00e1s\u00e1r\u00f3l: </p>"},{"location":"08_gyakorlat/#servletek-eletciklusa","title":"Servletek \u00e9letciklusa","text":"<p>A servletek \u00e9letciklusa 3 f\u0151 r\u00e9szre oszthat\u00f3:</p> <ul> <li><code>init()</code>: a servlet l\u00e9trej\u00f6ttekor h\u00edv\u00f3dik meg (csak egyszer). \u00c1ltal\u00e1ban egy servlet akkor j\u00f6n l\u00e9tre, amikor el\u0151sz\u00f6r k\u00e9r hozz\u00e1f\u00e9r\u00e9st egy felhaszn\u00e1l\u00f3, de rendelkezhet\u00fcnk m\u00e1sk\u00e9ppen is (pl. a szerver ind\u00edt\u00e1sakor t\u00f6lt\u0151dj\u00f6n be a servlet is).</li> <li><code>service()</code>: a felhaszn\u00e1l\u00f3i k\u00e9r\u00e9seket (eset\u00fcnkben HTTP k\u00e9r\u00e9sek) a service szolg\u00e1lja ki</li> <li><code>destroy()</code>: a servlet megsemmis\u00edt\u00e9sekor h\u00edv\u00f3dik</li> </ul> <p>A fenti met\u00f3dusokat a szervlet kont\u00e9ner h\u00edvja meg. </p> <p>A servlet l\u00e9trehoz\u00e1sa ut\u00e1n, amikor a felhaszn\u00e1l\u00f3 k\u00e9r\u00e9st k\u00fcld egy szervernek, akkor a servletb\u0151l egy p\u00e9ld\u00e1ny l\u00e9tezik \u00e9s a k\u00e9r\u00e9seket k\u00fcl\u00f6n sz\u00e1lak kezelik. Ezeket a k\u00e9r\u00e9seket a servlet <code>service()</code> met\u00f3dusa kezeli (mindet k\u00fcl\u00f6n sz\u00e1lon). A service met\u00f3dus bel\u00fcl \"sz\u00e9tv\u00e1logatja\" a k\u00e9r\u00e9sek t\u00edpus\u00e1t \u00e9s megh\u00edvja, a <code>doGet(...)</code>, <code>doPost(...)</code>, stb. met\u00f3dusokat. A fenti p\u00e9ld\u00e1ban csak a GET k\u00e9r\u00e9seket kezelj\u00fck. GET k\u00e9r\u00e9s p\u00e9ld\u00e1ul, ha az URL-re navig\u00e1lunk. A doGet-nek, ahogyan minden doXXX met\u00f3dusnak k\u00e9t param\u00e9tere van melyek igen fontosak, hiszen \u00edgy tudhatunk meg inform\u00e1ci\u00f3kat a k\u00e9r\u00e9s pontos mivolt\u00e1r\u00f3l, illetve a v\u00e1laszba \u00edgy helyezhet\u00fcnk el inform\u00e1ci\u00f3kat (v\u00e1lasz st\u00e1tusz k\u00f3dja, v\u00e1lasz header-\u00f6k, cookie-k, stb). A k\u00e9t param\u00e9ter t\u00edpusa:</p> <ul> <li><code>HttpServletRequest</code>: a k\u00e9r\u00e9s t\u00edpusa</li> <li><code>HttpServletResponse</code>: a v\u00e1lasz t\u00edpusa</li> </ul> <p></p>"},{"location":"08_gyakorlat/#adatok-kuldese-a-szervernek","title":"Adatok k\u00fcld\u00e9se a szervernek","text":"<p>Az alkalmaz\u00e1sunk m\u0171k\u00f6d\u00e9sekor biztosan sz\u00fcks\u00e9g\u00fcnk lesz valamilyen inform\u00e1ci\u00f3kra, melyet a felhaszn\u00e1l\u00f3 k\u00fcld az alkalmaz\u00e1sszervernek. A GET \u00e9s a POST eset\u00e9ben elt\u00e9r\u0151 opci\u00f3ink vannak.</p> <p>A GET eset\u00e9ben az \u00fagynevezett queryString-ben szok\u00e1s k\u00fcldeni inform\u00e1ci\u00f3kat. Pl.:</p> <p>http://www.test.com/hello?key1=value1&amp;key2=value2</p> <p>Az adatokat az URL-ben k\u00fcldj\u00fck el a szervernek. Az URL-ben a query string kezdet\u00e9t a '?' jelzi, majd ut\u00e1na <code>key=value</code> form\u00e1ban adhatjuk meg az adatokat, melyeket '&amp;' v\u00e1laszt el egym\u00e1st\u00f3l. Ezeket a param\u00e9terek a servlet megkapja \u00e9s ezt fel tudjuk majd haszn\u00e1lni.</p> <p>POST eset\u00e9ben is haszn\u00e1lhatunk queryString-et, de a POST k\u00e9r\u00e9s rendelkezik t\u00f6rzzsel is. Szerencs\u00e9re a t\u00f6rzsben \u00e9s a queryString-ben \u00e9rkez\u0151 param\u00e9tereket egys\u00e9gesen \u00e9rhetj\u00fck el, nem kell k\u00fcl\u00f6n-k\u00fcl\u00f6n vizsg\u00e1lnunk \u0151ket.</p> <p>Az adatok kinyer\u00e9s\u00e9re a servletben 4 f\u0151 met\u00f3dus haszn\u00e1lhat\u00f3:</p> <ul> <li><code>getParameter()</code></li> <li><code>getParameterValues()</code></li> <li><code>getParameterNames()</code></li> <li><code>getParameterMap()</code></li> </ul> <p>N\u00e9zz\u00fcnk erre egy p\u00e9ld\u00e1t! Az el\u0151z\u0151 p\u00e9ld\u00e1t m\u00f3dos\u00edthatjuk egyel\u0151re:</p> <pre><code>import java.io.IOException;\nimport java.io.PrintWriter;\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@WebServlet(\"/HelloWorldServlet\")\npublic class HelloWorldServlet extends HttpServlet {\n\npublic void doGet(HttpServletRequest request, HttpServletResponse response)\nthrows ServletException, IOException {\n\n// Be\u00e1ll\u00edtjuk, hogy milyen mime t\u00edpus\u00fa v\u00e1laszunk lesz\nresponse.setContentType(\"text/html\");\n\nPrintWriter out = response.getWriter(); // \u00edgy tudunk majd a v\u00e1lasz objektumba t\u00f6rzs\u00e9be \u00edrni\n\nout.println(\n\"&lt;html&gt;\\n\" +\n\"&lt;head&gt;&lt;title&gt;Param\u00e9terek haszn\u00e1lata&lt;/title&gt;&lt;/head&gt;\\n\" +\n\"&lt;body&gt;\\n\" +\n\"&lt;ul&gt;\\n\" +\n\"  &lt;li&gt;First Name: \"\n+ request.getParameter(\"first_name\") + \"\\n\" +\n\"  &lt;li&gt;Last Name: \"\n+ request.getParameter(\"last_name\") + \"\\n\" +\n\"&lt;/ul&gt;\\n\" +\n\"&lt;/body&gt;\" +\n\"&lt;/html&gt;\"\n);\n}\n\n}\n</code></pre> <p>A p\u00e9ld\u00e1ban csak a doGet met\u00f3dust defini\u00e1ljuk, melyben a v\u00e1lasznak be\u00e1ll\u00edtjuk a tartalom t\u00edpus\u00e1t (mime type), majd a response objektum-hoz lek\u00e9rj\u00fck a <code>PrintWriter</code>-t \u00e9s ezen kereszt\u00fcl fogjuk \u00edrni a v\u00e1laszt. A v\u00e1laszba egy HTML-t gener\u00e1lunk, melybe belerakjuk az el\u0151zetesen elk\u00fcld\u00f6tt <code>first_name</code> \u00e9s <code>last_name</code> param\u00e9tereket.</p> <p>Miut\u00e1n elk\u00e9sz\u00edtett\u00fck a servlet\u00fcnket \u00e9s futtatjuk azt a Tomcat server\u00fcnk\u00f6n, \u00edrjuk be a k\u00f6vetkez\u0151t a b\u00f6ng\u00e9sz\u0151 c\u00edmsor\u00e1ba:</p> <pre><code>http://localhost:8080/HelloWorld/HelloWorldServlet?first_name=John&amp;last_name=Doe\n</code></pre> <p>A szerver \u00e1ltal k\u00fcld\u00f6tt v\u00e1laszba \u00edgy beleker\u00fclnek az elk\u00fcld\u00f6tt adatok.</p> <p></p> <p>Most n\u00e9zz\u00fck meg ugyanezt egy form haszn\u00e1lat\u00e1val! Ehhez k\u00e9sz\u00edts\u00fcnk egy HTML \u00e1llom\u00e1nyt! Az is megfelel\u0151 ha az index.jsp-t \u00edrjuk \u00e1t:</p> <pre><code>&lt;html&gt;\n   &lt;body&gt;\n      &lt;form action = \"HelloWorldServlet\" method = \"GET\"&gt;\n         First Name: &lt;input type = \"text\" name = \"first_name\"&gt;\n         &lt;br /&gt;\n         Last Name: &lt;input type = \"text\" name = \"last_name\" /&gt;\n         &lt;input type = \"submit\" value = \"Submit\" /&gt;\n      &lt;/form&gt;\n   &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Amit nagyon fontos \u00e9szrevenni, hogy a <code>form</code> rendelkezik egy <code>action</code> \u00e9s egy <code>method</code> attrib\u00fatummal. Az <code>action</code>-ben mondhatjuk meg, hogy ki fogja kezelni a k\u00e9r\u00e9st, melynek t\u00edpus\u00e1t pedig a <code>method</code>-ban adhatjuk meg (jelenleg GET).</p> <p>A fenti servlet-et egy az egyben haszn\u00e1lhatjuk. Miut\u00e1n megnyomjuk a submit gombot egy GET k\u00e9r\u00e9st k\u00fcld\u00fcnk a <code>HelloWorldServlet</code>-nek, ami az el\u0151z\u0151vel megegyez\u0151 kimenetet adja, ha a formba ugyanazokat az adatokat \u00edrjuk, mint amit a queryString-ben megadtunk. A form-on bel\u00fcl fontos az input elemeknek a <code>name</code> attrib\u00fatuma, mivel a servlet ilyen n\u00e9ven fogja el\u00e9rni ezeket a param\u00e9tereket. Azt is fontos l\u00e1tni, hogy a form nem a query stringben k\u00fcldi a param\u00e9tereket, hanem a form data-ban, viszont a szerver oldalon (a szervletben) egys\u00e9gesen tudjuk a param\u00e9tereket kiolvasni \u00e9s nem kell azzal foglalkoznunk, hogy azt hol adt\u00e1k meg.</p> <p>A fenti p\u00e9ld\u00e1ban, ha \u00e1t\u00edrjuk az index.jsp-ben, hogy GET helyett POST-ot haszn\u00e1ljunk, akkor nem fog m\u0171k\u00f6dni a t\u00f6rt\u00e9net, de nagyon egyszer\u0171en megoldhat\u00f3. A servletben hozzunk l\u00e9tre egy <code>doPost(...)</code> met\u00f3dust is, mely a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>@Override\npublic void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\ndoGet(req, resp);\n}\n</code></pre> <p>A fenti k\u00f3dr\u00e9szlet nemes egyszer\u0171s\u00e9ggel tov\u00e1bbadja a doGet-nek a feladatot (tov\u00e1bb\u00edtja a k\u00e9r\u00e9s \u00e9s a v\u00e1lasz objektumokat is). Az eredm\u00e9ny pedig ugyanaz lesz, de ezennel POST k\u00e9r\u00e9st\u00edpust haszn\u00e1ltunk.</p> <p>A k\u00f6vetkez\u0151 p\u00e9ld\u00e1ban az \u00f6sszes elk\u00fcld\u00f6tt param\u00e9tert ki\u00edrjuk a v\u00e1laszban.</p> <pre><code>public void doGet(HttpServletRequest request, HttpServletResponse response)\nthrows ServletException, IOException {\n\nresponse.setContentType(\"text/html\");\n\nPrintWriter out = response.getWriter();\nout.append(\n\"&lt;html&gt;\\n\" +\n\"&lt;head&gt;&lt;title&gt;Param\u00e9terek&lt;/title&gt;&lt;/head&gt;\\n\" +\n\"&lt;body&gt;\\n\" +\n\"&lt;table&gt;\\n\"\n);\n\nEnumeration&lt;String&gt; params = request.getParameterNames();\n\nwhile(params.hasMoreElements()) {\nString p = params.nextElement();\n\nout.append(\"&lt;tr&gt;\"\n+ \"&lt;td&gt;\" + p + \"&lt;/td&gt;\"\n+ \"&lt;td&gt;\" + request.getParameter(p) + \"&lt;/td&gt;\"\n+ \"&lt;/tr&gt;\");\n\n}\n\nout.append(\"&lt;/table&gt;\\n\" +\n\"&lt;/body&gt;\" +\n\"&lt;/html&gt;\");\n}\n</code></pre> <p></p> <p>Feladat</p> <p>K\u00e9sz\u00edts\u00fck el a fenti p\u00e9ld\u00e1t \u00fagy, hogy a <code>getParameterMap()</code> met\u00f3dust haszn\u00e1ljuk a param\u00e9terek kinyer\u00e9s\u00e9hez! Arra figyelj\u00fcnk, hogy lehetnek olyan param\u00e9terek, melyekhez t\u00f6bb \u00e9rt\u00e9k tartozik. Ez\u00e9rt ad vissza a getParameterMap() egy String -&gt; String[] map-et.</p>"},{"location":"08_gyakorlat/#status-codes","title":"Status codes","text":"<p>A v\u00e1laszban a szerver be\u00e1ll\u00edthat egy status code-ot, melyet azt\u00e1n a kliens oldalon k\u00fcl\u00f6nb\u00f6z\u0151 c\u00e9lokra haszn\u00e1lhatunk. N\u00e9h\u00e1ny gyakori HTTP status code:</p> <ul> <li>200: OK (minden rendben van)</li> <li>400: Bad Request (a szerver nem \u00e9rti, hogy mit szeretne a kliens a k\u00e9r\u00e9s\u00e9vel)</li> <li>401: Unauthorized (nincs joga a felhaszn\u00e1l\u00f3nak, pl.: csak admin k\u00e9rdezhet ilyet t\u0151lem...)</li> <li>404: Not Found (nem tal\u00e1lom azt az er\u0151forr\u00e1st amire sz\u00fcks\u00e9ged van. Pl.: olyan HTML oldalt keresek ami nem l\u00e9tezik a szerveren)</li> <li>500: Internal Server Error: A szerveren valami nem v\u00e1rt hiba t\u00f6rt\u00e9nt</li> </ul> <p>Ezeken fel\u00fcl m\u00e9g rengeteg f\u00e9le HTTP status code van, de ezekkel m\u00e1r b\u0151ven el lehet indulni.</p> <p>\u00c1ll\u00edtsunk be status code-ot a v\u00e1laszban!</p> <pre><code>public void doGet(HttpServletRequest request, HttpServletResponse response)\nthrows ServletException, IOException {\n\n// Set error code and reason.\nresponse.setStatus(200);\n}\n</code></pre> <p>Ha a b\u00f6ng\u00e9sz\u0151ben (pl.: Chrome-ban) a <code>http://localhost:8080/HelloWorld/HelloWorldServlet</code> helyre l\u00e1togatunk \u00e9s el\u0151szedj\u00fck a fejleszt\u0151i eszk\u00f6z\u00f6ket (Chrome-ban F12), ott v\u00e1lasszuk ki a network f\u00fclet! Itt l\u00e1thatjuk, hogy t\u00f6rt\u00e9nt egy k\u00e9r\u00e9s a HelloWorldServlet-re, melynek a status code-ja 200-at adott vissza.</p> <p></p> <p>Mag\u00e1t a HelloWorldServlet k\u00e9r\u00e9st is kiv\u00e1laszthatjuk, ha r\u00e1kattintunk, \u00e9s ekkor t\u00f6bb inform\u00e1ci\u00f3t l\u00e1thatunk az adott k\u00e9r\u00e9sr\u0151l.</p> <p>Feladat</p> <p>Pr\u00f3b\u00e1ljuk ki, hogy \u00e1t\u00edrjuk a status code-ot mondjuk 404-re vagy valamilyen hibajelz\u0151 status code-ra! Pr\u00f3b\u00e1ljuk ki, a k\u00f6vetkez\u0151t is: <code>response.sendError(401, \"Need auth\");</code></p> <p>Feladat</p> <p>Az el\u0151z\u0151 t\u00e9m\u00e1ban meg\u00edrt form-os p\u00e9ld\u00e1t eg\u00e9sz\u00edts\u00fck ki \u00fagy, hogy amennyiben a param\u00e9terek k\u00f6z\u00f6tt nem szerepel valamelyik elv\u00e1rt \u00e9rt\u00e9k (last_name vagy first_name), akkor 400-as hibak\u00f3dot adunk vissza.</p>"},{"location":"08_gyakorlat/#webxml","title":"web.xml","text":"<p>Itt az ideje, hogy megvizsg\u00e1ljuk a <code>web.xml</code> \u00e1llom\u00e1nyt, melyet legener\u00e1ltattunk a rendszerrel! A <code>web.xml</code> egy \u00fagynevezett deployment descriptor, melyet a deploy-ol\u00e1s sor\u00e1n haszn\u00e1l a rendszer (azaz akkor amikor a legy\u00e1rtott war-t belerakjuk az alkalmaz\u00e1sszerverbe \u00e9s ott elindul az alkalmaz\u00e1s).</p> <p>A deployment descriptor egy \u00e1ltal\u00e1nos elnevez\u00e9se az olyan konfigur\u00e1ci\u00f3s f\u00e1jloknak, melyek egy alkalmaz\u00e1s, webes t\u00e1rol\u00f3ba t\u00f6rt\u00e9n\u0151 telep\u00edt\u00e9s\u00e9nek m\u00f3dj\u00e1t defini\u00e1lj\u00e1k, struktur\u00e1lt form\u00e1ban.</p> <p>A Java Platform, Enterprise Edition le\u00edr\u00f3i megadj\u00e1k, hogyan legyenek telep\u00edtve a modulok \u00e9s komponensek. Ilyen komponensek lehetnek p\u00e9ld\u00e1ul webalkalmaz\u00e1sok. Ez a le\u00edr\u00f3 f\u00e1jl tartalmazza az utas\u00edt\u00e1sokat a webalkalmaz\u00e1s telep\u00edt\u00e9s\u00e9hez, melyet \"deployment tool\" fog \u00e9rtelmezni. Ez a be\u00e1ll\u00edt\u00e1sok alapj\u00e1n, k\u00fcl\u00f6nf\u00e9le kont\u00e9ner \u00e9s biztons\u00e1gi be\u00e1ll\u00edt\u00e1st v\u00e9gez el, valamint speci\u00e1lis k\u00f6rnyezeti be\u00e1ll\u00edt\u00e1sokat alkalmazhat. A szervleteket az alkalmaz\u00e1sszerver az \u00fagynevezett servlet kont\u00e9nerbe t\u00f6lti be \u00e9s itt fognak futni ezek a szervletek.</p> <p>Webalkalmaz\u00e1sokn\u00e1l a telep\u00edt\u00e9si le\u00edr\u00f3kat <code>web.xml</code>-nek h\u00edvj\u00e1k, \u00e9s a projekt mappaszerkezet\u00e9ben a <code>WEB-INF</code> mapp\u00e1ban tal\u00e1lhat\u00f3. A <code>web.xml</code>-ben is megadhat\u00f3ak p\u00e9ld\u00e1ul a servlet elnevez\u00e9sek \u00e9s az URL lek\u00e9pez\u00e9sek.</p>"},{"location":"08_gyakorlat/#servletek-es-url-ek","title":"Servletek \u00e9s URL-ek","text":"<p>A <code>web.xml</code> egy kapcsolatot defini\u00e1l URL c\u00edmek \u00e9s a szervletek k\u00f6z\u00f6tt, melyek a k\u00e9r\u00e9seket szolg\u00e1lj\u00e1k ki. A Webkiszolg\u00e1l\u00f3 arra haszn\u00e1lja ezt a konfigur\u00e1ci\u00f3s f\u00e1jlt, hogy megkeresse az adott URL-hez tartoz\u00f3 szervletet, \u00e9s megh\u00edvja a k\u00e9r\u00e9shez tartoz\u00f3 oszt\u00e1ly megfelel\u0151 met\u00f3dus\u00e1t. (pl. a doGet() met\u00f3dust a HTTP GET k\u00e9r\u00e9sek eset\u00e9n).</p> <p>Egy URL-t egy szervlethez a k\u00f6vetkez\u0151 m\u00f3don lehet kapcsolni. A <code>&lt;servlet&gt;</code> kulcssz\u00f3val deklar\u00e1ljuk a szervletet, majd megadjuk a kapcsolatot egy URL c\u00edmmel. Ezt a <code>&lt;servlet-mapping&gt;</code> kulcssz\u00f3val tehetj\u00fck meg.</p> <p>A <code>&lt;servlet&gt;</code> elem megad\u00e1s\u00e1hoz defini\u00e1lnunk kell a nev\u00e9t, az oszt\u00e1ly\u00e1t \u00e9s a kezdeti param\u00e9tereit (ha vannak ilyenek). Az oszt\u00e1ly tag arra a Java oszt\u00e1lyra hivatkozik, amely a szervlethez befut\u00f3 k\u00e9r\u00e9sek kezel\u00e9s\u00e9t val\u00f3s\u00edtja meg. T\u00f6bbsz\u00f6r is deklar\u00e1lhat\u00f3 ugyanaz az oszt\u00e1ly, ha a kiindul\u00e1si param\u00e9terei k\u00fcl\u00f6nb\u00f6z\u0151ek, azonban a n\u00e9vnek egyedinek kell lennie a teljes f\u00e1jlban.</p> <pre><code>&lt;servlet&gt;\n&lt;servlet-name&gt;HelloWorldServlet&lt;/servlet-name&gt;\n&lt;servlet-class&gt;HelloWorldServlet&lt;/servlet-class&gt;\n&lt;/servlet&gt;\n\n&lt;servlet-mapping&gt;\n&lt;servlet-name&gt;HelloWorldServlet&lt;/servlet-name&gt;\n&lt;url-pattern&gt;/HelloWorldServlet&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban defini\u00e1lunk egy Servlet-et, melynek neve <code>HelloWorldServlet</code> lesz. A hozz\u00e1 tartoz\u00f3 oszt\u00e1ly ugyanerre a n\u00e9vre hallgat. Ezut\u00e1n a <code>&lt;servlet-mapping&gt;</code>-ben megadhatjuk, hogy az el\u0151zetesen <code>HelloWorldServlet</code> n\u00e9vre keresztelt servlet az \u00f6sszes olyan k\u00e9r\u00e9st szolg\u00e1lja ki, amely a <code>/HelloWorldServlet</code> URL-re t\u00f6rt\u00e9nik. Ha minden k\u00e9r\u00e9st ezzel a servlettel szeretn\u00e9nk kiszolg\u00e1lni, akkor \u00edrhatn\u00e1nk ezt is:</p> <pre><code>&lt;servlet-mapping&gt;\n&lt;servlet-name&gt;HelloWorldServlet&lt;/servlet-name&gt;\n&lt;url-pattern&gt;/*&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n</code></pre> <p>Az alkalmaz\u00e1sunkban, ha megtekintj\u00fck a <code>web.xml</code> \u00e1llom\u00e1nyt, akkor m\u00e9gsem l\u00e1tunk ilyen servlet megad\u00e1st. Ez az\u00e9rt van, mert a 3.0-\u00e1s servlet standardba beker\u00fclt egy \u00faj elem, melynek seg\u00edts\u00e9g\u00e9vel k\u00f6nnyebben megadhatjuk a fenti URL lek\u00e9pez\u00e9st. Ehhez vizsg\u00e1ljuk, meg a <code>HelloWorldServlet</code> oszt\u00e1lyt! Vegy\u00fck \u00e9szre az al\u00e1bbi annot\u00e1ci\u00f3t az oszt\u00e1lyon!</p> <pre><code>@WebServlet(\"/HelloWorldServlet\")\n</code></pre> <p>Ez pontosan azt mondja meg a rendszernek, hogy ez az oszt\u00e1ly egy servlet, mely a <code>/HelloWorldServlet</code> URL-re \u00e9rkez\u0151 k\u00e9r\u00e9seket fogja kiszolg\u00e1lni. Ebben az esetben a servlet neve megegyezik az oszt\u00e1ly nev\u00e9vel. Amennyiben m\u00e1shogy szeretn\u00e9nk rendelkezni akkor az annot\u00e1ci\u00f3nak megadhatunk tov\u00e1bbi param\u00e9tereket is. P\u00e9ld\u00e1k:</p> <pre><code>// Servlet nev\u00e9nek megad\u00e1sa\n@WebServlet(name=\"HelloWorldServlet\", urlPatterns=\"/HelloWorldServlet\")\n\n// t\u00f6bb url pattern megad\u00e1sa\n@WebServlet(urlPatterns = {\"/HelloWorldServlet\", \"/HelloWorld\"})\n\n//init-paramok megad\u00e1sa\n@WebServlet(\nurlPatterns = \"/HelloWorldServlet\",\ninitParams =\n{\n@WebInitParam(name = \"saveDir\", value = \"D:/FileUpload\"),\n@WebInitParam(name = \"allowedTypes\", value = \"jpg,jpeg,gif,png\")\n}\n)\n</code></pre> <p>A teljes list\u00e1t l\u00e1sd itt.</p>"},{"location":"08_gyakorlat/#welcome-file-lista","title":"Welcome File Lista","text":"<p>Amikor egy URL nem egy f\u00e1jlra, hanem a szerveren tal\u00e1lhat\u00f3 valamely almapp\u00e1ra hivatkozik, akkor lehet\u0151s\u00e9g van megadni egy sor alap\u00e9rtelmezett oldalt, amik kezelik a k\u00e9r\u00e9st. A welcome file list\u00e1t a <code>web.xml</code>-en bel\u00fcl kell megadnunk.</p> <pre><code>&lt;welcome-file-list&gt;\n&lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;\n&lt;welcome-file&gt;index.html&lt;/welcome-file&gt;\n&lt;/welcome-file-list&gt;\n</code></pre> <p>Ebben az esetben, ha ell\u00e1togatunk a <code>localhost/&lt;alkalmaz\u00e1sunk neve&gt;</code> helyre, akkor a rendszer els\u0151k\u00e9nt egy <code>index.jsp</code>-t fog keresni \u00e9s ezt k\u00fcldi vissza v\u00e1laszk\u00e9nt, ha ilyet nem tal\u00e1l, akkor megpr\u00f3b\u00e1lja ugyanezt az <code>index.html</code>-el.</p>"},{"location":"08_gyakorlat/#servletek-egyuttmukodese","title":"Servletek egy\u00fcttm\u0171k\u00f6d\u00e9se","text":"<p>A <code>RequestDispatcher</code> oszt\u00e1ly ny\u00fajt ehhez t\u00e1mogat\u00e1st, melynek seg\u00edts\u00e9g\u00e9vel a k\u00e9r\u00e9st egy m\u00e1sik er\u0151forr\u00e1shoz (HTML, servlet, JSP) juttathatjuk el. Haszn\u00e1lhatjuk arra is, hogy egy m\u00e1sik er\u0151forr\u00e1s (HTML, servlet, JSP) v\u00e1lasz\u00e1t elhelyezz\u00fck az eredeti k\u00e9r\u00e9st kiszolg\u00e1l\u00f3 servlet v\u00e1lasz\u00e1ba (igaz\u00e1b\u00f3l t\u00f6bb er\u0151forr\u00e1s j\u00e1tszik szerepet a v\u00e1lasz l\u00e9trehoz\u00e1s\u00e1ban).</p> <p>A <code>RequestDispatcher</code> k\u00e9t met\u00f3dust ad erre:</p> <ul> <li><code>public void forward(ServletRequest request,ServletResponse response)throws ServletException,java.io.IOException</code></li> <li><code>public void include(ServletRequest request,ServletResponse response)throws ServletException,java.io.IOException</code></li> </ul> <p>A k\u00f6vetkez\u0151 \u00e1br\u00e1n a <code>forward</code> l\u00e1that\u00f3:</p> <p> </p> <p>A felhaszn\u00e1l\u00f3 k\u00fcld egy k\u00e9r\u00e9st, melyre a Servlet1 ad valamilyen v\u00e1laszt (a response-ban b\u00e1rmit \u00e1ll\u00edthatunk), pl bele\u00edrja az output stream-be, hogy cica (de m\u00e9g nem k\u00fcldi a v\u00e1laszt vissza a kliensnek!!!). Ezut\u00e1n tov\u00e1bb\u00edtjuk a Servlet2-h\u00f6z a RequestDispatcher seg\u00edts\u00e9g\u00e9vel. A Servlet2 elhelyezi a v\u00e1laszban a saj\u00e1t eredm\u00e9nyeit (pl bele\u00edrja, hogy macska). Ezut\u00e1n m\u00e1r nem forwardolunk, hanem a v\u00e1laszt visszak\u00fcldj\u00fck a kliensnek, mely \u00edgy tartalmazza a Servlet1 \u00e9s a Servlet2 v\u00e1laszait is. Az is el\u0151fordulhat, hogy a Servlet1 nem helyezett el semmilyen konkr\u00e9t elemet a v\u00e1laszban, viszont mondjuk \u0151 \u00e1ll\u00edt be automatikusan egy sz\u00fcks\u00e9ges param\u00e9tert Servlet2 sz\u00e1m\u00e1ra.</p> <p>Ehhez k\u00e9pest az include egy picit m\u00e1sk\u00e9ppen m\u0171k\u00f6dik, ahogy azt az al\u00e1bbi \u00e1bra j\u00f3l mutatja:</p> <p> </p> <p>A Servlet1 include-olja a Servlet2-t, mely elk\u00e9sz\u00edti a v\u00e1lasz\u00e1t \u00e9s azt a Servlet1 v\u00e1lasz\u00e1ba is belerakjuk.</p> <p>A RequestDispatcher-re az al\u00e1bbi m\u00f3don szerezhet\u00fcnk referenci\u00e1t:</p> <pre><code>RequestDispatcher rd=request.getRequestDispatcher(\"Servlet2\");\nrd.forward(request, response); // a k\u00e9r\u00e9s \u00e9s v\u00e1lasz tov\u00e1bb\u00edt\u00e1sa Servlet2-nek\n</code></pre>"},{"location":"08_gyakorlat/#bejelentkezes-pelda","title":"Bejelentkez\u00e9s p\u00e9lda","text":"<p>index.html <pre><code>&lt;form action=\"servlet1\" method=\"post\"&gt;  \n  Name:&lt;input type=\"text\" name=\"userName\"/&gt;&lt;br/&gt;  \n  Password:&lt;input type=\"password\" name=\"userPass\"/&gt;&lt;br/&gt;  \n  &lt;input type=\"submit\" value=\"login\"/&gt;  \n&lt;/form&gt;\n</code></pre></p> <p>Login.java <pre><code>...\n@WebServlet(\"/servlet1\")\npublic class Login extends HttpServlet {  public void doPost(HttpServletRequest request, HttpServletResponse response)  throws ServletException, IOException {  response.setContentType(\"text/html\");  PrintWriter out = response.getWriter();  String n=request.getParameter(\"userName\");  String p=request.getParameter(\"userPass\");  if(p.equals(\"servlet\"){  RequestDispatcher rd=request.getRequestDispatcher(\"servlet2\");  rd.forward(request, response);  }  else{  out.print(\"Sorry UserName or Password Error!\");  RequestDispatcher rd=request.getRequestDispatcher(\"/index.html\");  rd.include(request, response);  }  }  }  </code></pre></p> <p>WelcomeServlet.java: <pre><code>@WebServlet(\"/servlet2\")\npublic class WelcomeServlet extends HttpServlet {  public void doPost(HttpServletRequest request, HttpServletResponse response)  throws ServletException, IOException {  response.setContentType(\"text/html\");  PrintWriter out = response.getWriter();  String n=request.getParameter(\"userName\");  out.print(\"Welcome \"+n);  }  }  </code></pre></p> <p>A fenti p\u00e9lda puszt\u00e1n a szervletek egy\u00fcttm\u0171k\u00f6d\u00e9s\u00e9t mutatja be, production k\u00f3dba ne haszn\u00e1ljunk ilyen logint!!!</p>"},{"location":"08_gyakorlat/#atiranyitas","title":"\u00c1tir\u00e1ny\u00edt\u00e1s","text":"<p>Az include-hoz \u00e9s a forward-hoz hasonl\u00f3 a <code>sendRedirect</code> met\u00f3dus, de fontos k\u00fcl\u00f6nbs\u00e9gek vannak, melynek meg\u00e9rt\u00e9s\u00e9t az al\u00e1bbi \u00e1bra mutatja:</p> <p> </p> <p>Ebben az esetben a Servlet1 v\u00e1laszban annyit k\u00fcld, hogy neked kliens fiam, valahova m\u00e1shova kell menned, hogy megkapd a megfelel\u0151 v\u00e1laszt. Ezt vissza is k\u00fcldi a kliensnek, majd Servlet2-h\u00f6z megy el a kliens \u00e9s \u0151 fogja a v\u00e9geredm\u00e9nyt el\u00e9t\u00e1rni. P\u00e9lda: Amennyiben siker\u00fclt bejelentkezni egy rendszerbe (servlet1 v\u00e9gzi az autentik\u00e1ci\u00f3t), akkor az alkalmaz\u00e1sszerver tov\u00e1bbir\u00e1ny\u00edtja a felhaszn\u00e1l\u00f3t valamilyen kezd\u0151k\u00e9perny\u0151re, mondjuk a profilj\u00e1ra.</p> <p>P\u00e9lda: <pre><code>response.sendRedirect(\"http://www.inf.u-szeged.hu\");  </code></pre></p>"},{"location":"08_gyakorlat/#servletconfig","title":"ServletConfig","text":"<p>A web kont\u00e9ner minden szervlet sz\u00e1m\u00e1ra k\u00e9sz\u00edt egy ServletConfig obkjektumot, mely lehet\u0151v\u00e9 teszi a servletek konfigur\u00e1ci\u00f3j\u00e1t, param\u00e9terez\u00e9s\u00e9t.</p> <p>P\u00e9lda:</p> <p>web.xml <pre><code>&lt;web-app&gt;  &lt;servlet&gt;  &lt;servlet-name&gt;DemoServlet&lt;/servlet-name&gt;  &lt;servlet-class&gt;DemoServlet&lt;/servlet-class&gt;  &lt;init-param&gt;  &lt;param-name&gt;driver&lt;/param-name&gt;  &lt;param-value&gt;org.sqlite.JDBC&lt;/param-value&gt;  &lt;/init-param&gt;  &lt;/servlet&gt;  &lt;servlet-mapping&gt;  &lt;servlet-name&gt;DemoServlet&lt;/servlet-name&gt;  &lt;url-pattern&gt;/servlet1&lt;/url-pattern&gt;  &lt;/servlet-mapping&gt;  &lt;/web-app&gt;  </code></pre></p> <p>DemoServlet: <pre><code>...\npublic class DemoServlet extends HttpServlet {  public void doGet(HttpServletRequest request, HttpServletResponse response)  throws ServletException, IOException {  response.setContentType(\"text/html\");  PrintWriter out = response.getWriter();  ServletConfig config=getServletConfig();  String driver=config.getInitParameter(\"driver\");  out.print(\"Driver is: \"+driver);  out.close();  }  }  </code></pre></p> <p>Fontos</p> <p>A param\u00e9ter csak az adott servletben lesz el\u00e9rhet\u0151!!! Amennyiben alkalmaz\u00e1s szint\u0171 'glob\u00e1lis' param\u00e9terre van sz\u00fcks\u00e9g\u00fcnk, akkor haszn\u00e1ljuk a ServletContext-et!</p> <p>A request-ben elhelyezett param\u00e9terekhez hasonl\u00f3an itt is lek\u00e9rhet\u0151 az \u00f6sszes inicializ\u00e1l\u00f3 param\u00e9ter: <pre><code>    ...\nPrintWriter out = response.getWriter();  ServletConfig config=getServletConfig();  Enumeration&lt;String&gt; e=config.getInitParameterNames();  String str=\"\";  while(e.hasMoreElements()){  str=e.nextElement();  out.print(\"&lt;br&gt;Name: \"+str);  out.print(\" value: \"+config.getInitParameter(str));  }\n...\n</code></pre></p>"},{"location":"08_gyakorlat/#servletcontext","title":"ServletContext","text":"<p>A web kont\u00e9ner a szervletekhez k\u00e9sz\u00edt egy-egy k\u00fcl\u00f6n\u00e1ll\u00f3 Config objektumot, melyet az el\u0151z\u0151 fejezetben l\u00e1ttunk, azonban ezen fel\u00fcl k\u00e9sz\u00edt egy glob\u00e1lis l\u00e1that\u00f3s\u00e1g\u00fa <code>ServletContext</code> objektumot is, melyet minden szervletb\u0151l el\u00e9rhet\u00fcnk. A glob\u00e1lis l\u00e1that\u00f3s\u00e1g\u00fa, t\u00f6bb szervletb\u0151l is haszn\u00e1lni k\u00edv\u00e1nt param\u00e9tereket a context-ben \u00e1ll\u00edtsuk be!</p> <p>A <code>ServletContext</code> objektumot a servlett\u0151l, a request, \u00e9s a ServletConfig-t\u00f3l is elk\u00e9rhetj\u00fck. <pre><code>ServletContext application = getServletContext();  //servlett\u0151l\n\nServletContext application = request.getServletContext(); //request-t\u0151l\n\nServletContext application = getServletConfig().getServletContext();// configt\u00f3l\n</code></pre></p> <p>A web.xml-ben a k\u00f6vetkez\u0151k\u00e9ppen adhatunk meg param\u00e9tert: <pre><code>&lt;web-app&gt;  ......  &lt;context-param&gt;  &lt;param-name&gt;parametername&lt;/param-name&gt;  &lt;param-value&gt;parametervalue&lt;/param-value&gt;  &lt;/context-param&gt;  ......  &lt;/web-app&gt;  </code></pre></p> <p>A Context-b\u0151l is lehet\u0151s\u00e9g\u00fcnk van lek\u00e9rni az \u00f6sszes init param\u00e9tert: <pre><code>  ServletContext context=getServletContext();\nEnumeration&lt;String&gt; e=context.getInitParameterNames();\n</code></pre></p>"},{"location":"08_gyakorlat/#attributumok","title":"Attrib\u00fatumok","text":"<p>Az attrib\u00fatumokat t\u00f6bb scope-ban is be\u00e1ll\u00edthatjuk. Tekinthet\u00fcnk r\u00e1juk \u00fagy, mint k\u00fcl\u00f6nb\u00f6z\u0151 scope-ban defini\u00e1lt v\u00e1ltoz\u00f3kra. A scope-ok a k\u00f6vetkez\u0151ek lehetnek:</p> <ul> <li>request scope -&gt; <code>HttpServletRequest</code></li> <li>session scope -&gt; HttpSession</li> <li>application scope (context scope) -&gt; ServletContext</li> </ul> <p>Az \u00f6sszes scope-ban a k\u00f6vetkez\u0151 met\u00f3dusokat haszn\u00e1lhatjuk:</p> <ul> <li><code>public void setAttribute(String name,Object object)</code></li> <li><code>public Object getAttribute(String name)</code></li> <li><code>public void removeAttribute(String name)</code></li> </ul> <p>P\u00e9lda, amiben az application (context) scope-ot haszn\u00e1ljuk egy attrib\u00fatum be\u00e1ll\u00edt\u00e1s\u00e1ra, majd azt a m\u00e1sik servletben kiolvassuk <pre><code>...\npublic class DemoServlet1 extends HttpServlet{  public void doGet(HttpServletRequest req,HttpServletResponse res)  {  try {  res.setContentType(\"text/html\");  PrintWriter out = res.getWriter();  ServletContext context = getServletContext();  context.setAttribute(\"company\",\"IBM\");  out.println(\"Welcome to first servlet\");  out.println(\"&lt;a href='servlet2'&gt;visit&lt;/a&gt;\");  out.close();  } catch(Exception e){\nout.println(e);\n}  }\n}  </code></pre></p> <p>DemoServlet2: <pre><code>public class DemoServlet2 extends HttpServlet{  public void doGet(HttpServletRequest req,HttpServletResponse res)  {  try{  res.setContentType(\"text/html\");  PrintWriter out = res.getWriter();  ServletContext context = getServletContext();  String n = (String)context.getAttribute(\"company\");  out.println(\"Welcome to \" + n);  out.close();  } catch(Exception e){\nout.println(e);\n}  }\n}\n</code></pre></p>"},{"location":"08_gyakorlat/#munkamenet-kezelese-session-management","title":"Munkamenet kezel\u00e9se (session management)","text":"<p>Mivel a HTTP protokoll egy \u00e1llapotmentes protokoll, azaz a k\u00e9r\u00e9sek k\u00f6z\u00f6tt nincs \u00e1llapotment\u00e9s, az\u00e9rt valamilyen megold\u00e1sra sz\u00fcks\u00e9g van, hogy ezt a hi\u00e1nyoss\u00e1got kik\u00fcsz\u00f6b\u00f6lj\u00fck.</p> <p>A munkamentek k\u00f6vet\u00e9s\u00e9re lehet\u0151s\u00e9get ny\u00fajtanak a k\u00f6vetkez\u0151k:</p> <ul> <li>Cookies</li> <li>Hidden Form Field</li> <li>URL \u00fajra\u00edr\u00e1s</li> <li>HttpSession</li> </ul>"},{"location":"08_gyakorlat/#cookies","title":"Cookies","text":"<p>A Cookie egy kicsi inform\u00e1ci\u00f3szelet, mely meg\u0151rz\u0151dik a k\u00e9r\u00e9sek k\u00f6z\u00f6tt. Egy cookie-nak van neve, \u00e9rt\u00e9ke, \u00e9s tov\u00e1bbi opcion\u00e1lis attrib\u00fatuimai (comment, verzi\u00f3sz\u00e1m, maximum kor)</p> <p>Egy \u00faj k\u00e9r\u00e9sn\u00e9l a v\u00e1laszhoz hozz\u00e1adhatjuk a cookie-t \u00e9s innent\u0151l kezdve a kliens az \u00f6sszes k\u00e9r\u00e9sben elk\u00fcldi az \u00e1ltalunk a szerverr\u0151l visszak\u00fcld\u00f6tt cookie-t. A cookie alapvet\u0151en a kliens b\u00f6ng\u00e9sz\u0151j\u00e9nek cache-ben t\u00e1rol\u00f3dik.</p> <p>K\u00e9t t\u00edpusa:</p> <ul> <li>Non-persistent: egy session alatt \u00e9l, amikor a felhaszn\u00e1l\u00f3 becsukja a b\u00f6ng\u00e9sz\u0151t akkor a cookie t\u00f6rl\u0151dik</li> <li>persistent: t\u00f6bb session-\u00f6n kereszt\u00fcl \u00e9l, csak akkor t\u00f6r\u00f6lj\u00fck a cookie-t, ha a felhaszn\u00e1l\u00f3 kil\u00e9p.</li> </ul> <p>H\u00e1rt\u00e1nya, hogy ha a kliens nem enged\u00e9lyezi a cookie-k haszn\u00e1lat\u00e1t, akkor az eg\u00e9sz session tracking nem fog m\u0171k\u00f6dni, tov\u00e1bb\u00e1 a cookie-ban csak sz\u00f6veges inform\u00e1ci\u00f3t tarthatunk (sz\u00e1mot sz\u00f6vegk\u00e9nt tudunk t\u00e1rolni, de bin\u00e1ris infot m\u00e1r nem).</p> <p>A cookie-k haszn\u00e1lat\u00e1hoz a <code>Cookie</code> oszt\u00e1ly ad seg\u00edts\u00e9get.</p> <p>P\u00e9lda egy cookie hozz\u00e1ad\u00e1s\u00e1ra: <pre><code>Cookie cookie = new Cookie(\"user\",\"Bela\");\nresponse.addCookie(cookie);\n</code></pre></p> <p>Figyelem</p> <p>A Tomcat 8.5 ut\u00e1ni verzi\u00f3ja m\u00e1r az RFC 6265 szabv\u00e1nyt haszn\u00e1lja a Cookie-k tekintet\u00e9ben, ami nem engedi meg a whitespace-ek haszn\u00e1lat\u00e1t a cookie-kban.</p> <p>Mivel a cookie kliens oldalon t\u00e1rolt, \u00edgy t\u00f6rl\u00e9se kicsit tr\u00fckk\u00f6sebb: <pre><code>Cookie ck=new Cookie(\"user\",\"\"); // vagy lehet nullra is \u00e1ll\u00edtani\nck.setMaxAge(0); // fontos, hogy a \u00e9rv\u00e9nyess\u00e9g r\u00f6gt\u00f6n le is j\u00e1r\nresponse.addCookie(ck); // \u00edgy friss\u00edteni, fogja a cookie-t a b\u00f6ng\u00e9sz\u0151\n</code></pre></p> <p>A cookie-k lek\u00e9r\u00e9se: <pre><code>Cookie ck[]=request.getCookies(); for(int i = 0; i &lt; ck.length; i++){  out.print(\"&lt;br&gt;\" + ck[i].getName() + \" \" + ck[i].getValue());\n}  </code></pre></p>"},{"location":"08_gyakorlat/#httpsession","title":"HttpSession","text":"<p>A munkamenet k\u00f6vet\u00e9s\u00e9nek egyik lehets\u00e9ges megold\u00e1sak\u00e9nt a session szolg\u00e1l, mely egy-egy felhaszn\u00e1l\u00f3hoz k\u00fcl\u00f6n-k\u00fcl\u00f6n biztos\u00edt egy ilyen scope-ot, azaz a felhaszn\u00e1l\u00f3 munkamenet\u00e9hez adhatunk hozz\u00e1/olvashatunk ki adatokat. A web kont\u00e9ner minden felhaszn\u00e1l\u00f3hoz egy egyedi session id-t rendel, mellyel azt\u00e1n azonos\u00edtja a felhaszn\u00e1l\u00f3i munkamenetet.</p> <p>Session lek\u00e9r\u00e9se: <pre><code>public HttpSession getSession()\npublic HttpSession getSession(boolean create)\n</code></pre> A param\u00e9ter n\u00e9k\u00fcli v\u00e1ltozat l\u00e9trehozza a felhaszn\u00e1l\u00f3hoz a session-t ha az m\u00e9g nem l\u00e9tezik. A m\u00e1sodik, param\u00e9teres met\u00f3dusban viszont mi magunk adhatjuk meg, hogy a Session-t l\u00e9trehozzuk-e vagy sem abban az esetben, ha az m\u00e9g nem l\u00e9tezett.</p> <p>Hasznos met\u00f3dusok: <pre><code>public String getId() // a session azonos\u00edt\u00f3j\u00e1t adja vissza, mely egyedi\npublic long getCreationTime() //millisecben a l\u00e9trehoz\u00e1s d\u00e1tuma (1970. jan. 1-t\u0151l eltelt millisec)\npublic long getLastAccessedTime() // az az id\u0151 szint\u00e9n millisec-ben, amikor a kliens legutolj\u00e1ra k\u00fcld\u00f6tt k\u00e9r\u00e9st, mely ehhez a sessionh\u00f6z tartozott\npublic void invalidate() // a session \u00e9rv\u00e9nytelen\u00edt\u00e9se. Minden belepakolt adatot eldobunk\n</code></pre></p> <p>Attrib\u00fatum be\u00e1ll\u00edt\u00e1sa: <pre><code>HttpSession session=request.getSession();  session.setAttribute(\"username\", \"Gipsz Jakab\");\n</code></pre></p> <p>Attrib\u00fatim lek\u00e9r\u00e9se: <pre><code>HttpSession session=request.getSession();\nString name=(String)session.getAttribute(\"username\");\n</code></pre></p>"},{"location":"08_gyakorlat/#filterek","title":"Filterek","text":"<p>A filter egy olyan objektum, melynek utas\u00edt\u00e1sai k\u00f6zvetlen\u00fcl a k\u00e9r\u00e9s kiszolg\u00e1l\u00e1sa el\u0151tt (pre-process) vagy k\u00f6zvetlen\u00fcl a v\u00e1lasz el\u0151\u00e1ll\u00edt\u00e1sa (m\u00e9g nem k\u00fcldj\u00fck vissza) ut\u00e1n (post-processing) futnak le. Haszn\u00e1lhat\u00f3 p\u00e9ld\u00e1ul adatkonverzi\u00f3ra, logol\u00e1sra, t\u00f6m\u00f6r\u00edt\u00e9sre, k\u00f3dol\u00e1sra \u00e9s dek\u00f3dol\u00e1sra, input valid\u00e1ci\u00f3ra, autentik\u00e1ci\u00f3ra, autoriz\u00e1ci\u00f3ra stb.</p> <p>Fontos oszt\u00e1lyok:</p> <ul> <li>Filter (maga a filter oszt\u00e1ly)</li> <li>FilterChain (minden filter helyet foglal egy filter l\u00e1ncban, melyet meg is kap a filter)</li> <li>FilterConfig (minden filternek lehetnek egyedi be\u00e1ll\u00edt\u00e1sai, hasonl\u00f3k\u00e9ppen mint a ServletConfig a Servlet eset\u00e9ben)</li> </ul> <p>A filternek nem doGet, doPost, stb met\u00f3dusai vannak, hanem egy doFilter met\u00f3dusa, ahol a filter logik\u00e1j\u00e1t adhatjuk meg.</p> <p>A filtereket is a web.xml-ben adhatjuk meg. A filtereknek is meg lehet adni, hogy mely url-ekre fusson le. <pre><code>&lt;web-app&gt;  &lt;filter&gt;  &lt;filter-name&gt;...&lt;/filter-name&gt;  &lt;filter-class&gt;...&lt;/filter-class&gt;  &lt;/filter&gt;  &lt;filter-mapping&gt;  &lt;filter-name&gt;...&lt;/filter-name&gt;  &lt;url-pattern&gt;...&lt;/url-pattern&gt;  &lt;/filter-mapping&gt;  &lt;/web-app&gt;\n</code></pre></p> <p>Ha a filterek sorrendje sz\u00e1m\u00edt akkor haszn\u00e1ljuk a web xml-t! Amilyen sorrendben szerepelnek a web.xml-ben olyan sorrendben fognak lefutni. Ugyanakkor, lehet\u0151s\u00e9g van a <code>WebFilter</code> annot\u00e1ci\u00f3 haszn\u00e1lat\u00e1ra is, de itt a sorrendet nem tudjuk befoly\u00e1solni.</p> <p>P\u00e9lda: <pre><code>@WebFilter(\"/*\")\npublic class MyFilter implements Filter{  public void init(FilterConfig config) throws ServletException {}  public void doFilter(ServletRequest req, ServletResponse resp,  FilterChain chain) throws IOException, ServletException {  PrintWriter out=resp.getWriter();  out.print(\"filter is invoked before\");  chain.doFilter(req, resp);\n\nout.print(\"filter is invoked after\");  }\n\npublic void destroy() {}  }  </code></pre></p> <p>A servletekn\u00e9l l\u00e1tott m\u00f3don a filtereknek is lehet param\u00e9tereket megadni, melynek kezel\u00e9se ugyan\u00fagy megy mint a servletekn\u00e9l.</p>"},{"location":"09_gyakorlat/","title":"9. gyakorlat","text":""},{"location":"09_gyakorlat/#java-server-pages-jsp","title":"Java Server Pages (JSP)","text":"<p>A JSP technol\u00f3gia csak\u00fagy, mint a Servletek az\u00e9rt hivatottak, hogy a webes alkalmaz\u00e1sokat k\u00e9sz\u00edthess\u00fcnk. Gondoljunk r\u00e1juk \u00fagy, mint a szervleteket kieg\u00e9sz\u00edt\u0151 technol\u00f3gi\u00e1ra. A JSP t\u00e9nylegesen maga is egy Servlet, a Servletb\u0151l sz\u00e1rmazik. Minden funkci\u00f3t, amit a servletek kapcs\u00e1n tanultunk itt is haszn\u00e1lni tudunk. A JSP oldalakra tekints\u00fcnk \u00fagy, mint egyszer\u0171 HTML oldalakra, azonban azok dinamikus volt\u00e1t az biztos\u00edtja, hogy be\u00e1gyazhatunk bel\u00e9j\u00fck Java k\u00f3dot, mellyel a tartalmat gener\u00e1lhatjuk (dinamikuss\u00e1 tehetj\u00fck). Az el\u0151z\u0151 \u00f3r\u00e1n l\u00e1tottak alapj\u00e1n mindenki azt mondhatja, hogy a komplex HTML v\u00e1lasz el\u0151\u00e1ll\u00edt\u00e1sa a servleten bel\u00fcl nem csak hogy macer\u00e1s, de magas hibahajlammal b\u00edr.</p> <p>A JSP oldalak meg\u00e9rt\u00e9s\u00e9t nagyban seg\u00edti az al\u00e1bbi \u00e1bra \u00e1ttanulm\u00e1nyoz\u00e1sa:</p> <p> </p> <p>Az egyik kulcsl\u00e9p\u00e9s a JSP-k servletekk\u00e9 alak\u00edt\u00e1sa. Ezt az \u00e1talak\u00edt\u00e1st az alkalmaz\u00e1s szerver v\u00e9gzi el. Ezut\u00e1n a megszokott folyamat zajlik.</p> <p>A JSP oldalak, HTML-szer\u0171en tagekkel \u00edrhat\u00f3ak le, de benne Java k\u00f3dot is \u00edrhatunk. Hozzunk l\u00e9tre egy \u00faj Maven webapp-os projektet, ahogy azt a szervletekn\u00e9l is tett\u00fck \u00e9s adjuk, hozz\u00e1 a dependency-khez a servlet-api-t. Ezut\u00e1n a gener\u00e1lt projekt index.jsp oldal\u00e1n a k\u00f6vetkez\u0151 k\u00f3dot \u00edrjuk be, majd ind\u00edtsunk el a Tomcat Servert (be\u00e1ll\u00edt\u00e1s ugyanaz, mint a servletekn\u00e9l):</p> <pre><code>&lt;html&gt;  \n&lt;body&gt;  \n  &lt;% out.print(2*5); %&gt;  \n&lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre> <p>Ez a 10-es eredm\u00e9nyt \u00edrja ki. K\u00e9s\u0151bb megn\u00e9zz\u00fck, hogy pontosan mi t\u00f6rt\u00e9nik.</p> <p>A JSP oldalakat a projekt\u00fcnk\u00f6n bel\u00fcl a webapp mapp\u00e1ba kell helyezni, de fontos, hogy ne a <code>WEB-INF</code> mapp\u00e1ba rakjuk, mert az z\u00e1rt az alkalmaz\u00e1sszerveren bel\u00fcl, azokat a f\u00e1jlokat a kliens nem \u00e9ri el direkt m\u00f3don (web.xml-ben kell ilyen esetben megadni). <code>Jobb klikk webapp -&gt; New -&gt; JSP/JSPX Page -&gt; JSP Page</code></p> <p>Tipp</p> <p>A JSP oldalakat haszn\u00e1ljuk megjelen\u00edt\u00e9sre, a controller logik\u00e1t szervezz\u00fck Servletekbe!</p> <p>Amint azt l\u00e1ttuk a servleteket az alkalmaz\u00e1sszerver\u00fcnk Servlet kont\u00e9nere menedzseli. A JSP oldalakat a JSP kont\u00e9ner kezeli. JSP fejleszt\u00e9s sor\u00e1n aj\u00e1nlott a maven dependency-k k\u00f6z\u00e9 felvenni a k\u00f6vetkez\u0151t:</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;\n&lt;artifactId&gt;jsp-api&lt;/artifactId&gt;\n&lt;version&gt;2.2.1-b03&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Feladat</p> <p>Adjunk hozz\u00e1 egy \u00faj JSP oldalt a projekt\u00fcnkh\u00f6z \u00e9s az els\u0151 oldalra helyezz\u00fcnk el egy linket, ami \u00e1tvisz a m\u00e1sik oldalra!</p> Megold\u00e1s <p>index.jsp: <pre><code>&lt;html&gt;\n  &lt;body&gt;\n  &lt;h2&gt;Hello World!&lt;/h2&gt;\n  &lt;a href=\"second.jsp\"&gt;Go To Second Page&lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>second.jsp: <pre><code>&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Second Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Second Page&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>A <code>second.jsp</code>-ben tal\u00e1lhat\u00f3 els\u0151 sort az IntelliJ gener\u00e1lja. K\u00e9s\u0151bb megismerked\u00fcnk ezekkel az elemekkel is.</p>"},{"location":"09_gyakorlat/#jsp-eletciklusok","title":"JSP \u00e9letciklusok","text":"<p>A JSP oldalak az al\u00e1bbi \u00e9letciklussal rendelkeznek. Egy r\u00e9sz\u00fcket m\u00e1r l\u00e1thattuk kor\u00e1bban:</p> <ul> <li>Transzform\u00e1l\u00e1s: A JSP oldalak szervlett\u00e9 alak\u00edt\u00e1sa. Pl.: <code>index.jsp</code> -&gt; <code>index_jsp.java</code></li> <li>Ford\u00edt\u00e1s: A legener\u00e1lt szervleteket leford\u00edtjuk, amennyiben az \u00e1talak\u00edt\u00e1s sikeres volt</li> <li>Oszt\u00e1lybet\u00f6lt\u00e9s: Mem\u00f3ri\u00e1ba t\u00f6lt\u00e9s</li> <li>P\u00e9ld\u00e1nyos\u00edt\u00e1s: A JSP kont\u00e9ner l\u00e9trehoz egy p\u00e9ld\u00e1nyt a JSP oldalb\u00f3l (m\u00e1r szervletk\u00e9nt gondolhatunk r\u00e1)</li> <li>Inicializ\u00e1l\u00e1s: ServletConfig \u00e9s ServletContext el\u00e9rhet\u0151v\u00e9 v\u00e1lik az oldal sz\u00e1m\u00e1ra</li> <li>K\u00e9r\u00e9s feldolgoz\u00e1s: Minden k\u00e9r\u00e9st k\u00fcl\u00f6n sz\u00e1lon szolg\u00e1lnak ki a JSP oldalak is, mint ahogyan a szervletekn\u00e9l is</li> <li>Megsemmis\u00edt\u00e9s: Hasonl\u00f3an, mint a szervletekn\u00e9l a JSP oldalak is megsemmis\u00fclnek \u00e9let\u00fck v\u00e9g\u00e9n (pl.: szerver le\u00e1ll\u00edt\u00e1s)</li> </ul>"},{"location":"09_gyakorlat/#eletciklus-metodusok","title":"\u00c9letciklus met\u00f3dusok","text":"<p>Ahogy a szervletekn\u00e9l is jelen voltak az \u00e9letciklusokat t\u00e1mogat\u00f3 met\u00f3dusok (init, service, destroy), itt is megtal\u00e1lhat\u00f3ak:</p> <ul> <li>jspInit(): a JspPage interface-ben van megadva</li> <li>_jspService(HttpServletRequest request, HttpServletResponse response): HttpJspPage interface tartalmazza</li> <li>jspDestroy(): a JspPage interface-ben van megadva</li> </ul> <p>A <code>JspPage</code> \u00e9s a <code>HttpJspPage</code> interf\u00e9szeket nem kell megadnunk direktben, ezeket az interface-eket automatikusan implement\u00e1lja minden JSP oldal. Ezeket a met\u00f3dusokat a JSP oldalon bel\u00fcl tudjuk fel\u00fcldefini\u00e1lni, amennyiben az sz\u00fcks\u00e9ges (\u00e1ltal\u00e1ban nem az) a declaration tag-ek haszn\u00e1lat\u00e1val (l\u00e1sd lentebb).</p>"},{"location":"09_gyakorlat/#jsp-scripting","title":"JSP scripting","text":"<p>A JSP oldalakon bel\u00fcl haszn\u00e1lhatunk \u00fagynevezett scripting tageket (<code>&lt;%...%&gt;</code>). Ezeken bel\u00fcl java k\u00f3dokat \u00e9s kifejez\u00e9seket adhatunk meg. 3 t\u00edpus\u00e1t k\u00fcl\u00f6nb\u00f6ztetj\u00fck meg:</p> <ul> <li>scriptlet tag: <code>&lt;% java source code %&gt;</code></li> <li>expression tag: <code>&lt;%= expresison %&gt;</code></li> <li>declaration tag: <code>&lt;%! declaration %&gt;</code></li> </ul> <p>P\u00e9lda egy param\u00e9ter ki\u00edr\u00e1s\u00e1ra:</p> <p>index.html <pre><code>&lt;html&gt;  \n  &lt;body&gt;  \n    &lt;form action=\"welcome.jsp\"&gt;  \n      &lt;input type=\"text\" name=\"username\"&gt;  \n      &lt;input type=\"submit\" value=\"go\"&gt;&lt;br/&gt;  \n    &lt;/form&gt;  \n  &lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre></p> <p>welcome.jsp <pre><code>&lt;html&gt;  \n  &lt;body&gt;  \n  &lt;%  \n    String name = request.getParameter(\"username\");\n    out.print(\"welcome \"+name);  \n  %&gt;  \n  &lt;/body&gt;  \n&lt;/html&gt; \n</code></pre></p> <p>Ez ki\u00edrja az index.html form-j\u00e1ban megadott felhaszn\u00e1l\u00f3i nevet a JSP oldalon. Vegy\u00fck \u00e9szre az <code>out.print</code> sort, melyben k\u00e9rdezhetn\u00e9nk, hogy mi\u00e9rt nincs a <code>System</code> az out el\u00e9\u00edrva. A JSP oldalakon haszn\u00e1lhat\u00f3 n\u00e9h\u00e1ny el\u0151re defini\u00e1lt, \u00fagynevezett implicit objektum, mint p\u00e9ld\u00e1ul az <code>out</code>, melynek t\u00edpusa <code>JspWriter</code>, m\u0171k\u00f6d\u00e9s\u00e9t tekintve pedig a servletekben haszn\u00e1lt <code>PrintWriter</code>-hez hasonl\u00edt. Egy m\u00e1sik implicit objektum is szerepel, m\u00e9gpedig a <code>request</code>. Ez a <code>HttpServletRequest</code> objektumunkat jel\u00f6li \u00e9s automatikusan megkapja a JSP oldal. A scriptletek mindig java utas\u00edt\u00e1sokat tartalmaznak, \u00edgy az utas\u00edt\u00e1sok v\u00e9g\u00e9re pontosvessz\u0151t kell \u00edrnunk!</p> <p>A servletekben HTML k\u00f3dot \u00edrtunk Java k\u00f3dba, most pedig HTML-be \u00edrunk Java-t. Nem \u00fagy t\u0171nik, hogy sokkal jobb volna a JSP... Val\u00f3ban a scriptletek el\u00e9gg\u00e9 el tudj\u00e1k cs\u00faf\u00edtani a JSP oldalak forr\u00e1sk\u00f3dj\u00e1t, ez\u00e9rt is tal\u00e1lt\u00e1k ki az Expression Language technol\u00f3gi\u00e1t, melyet a k\u00e9s\u0151bbiekben t\u00e1rgyalunk.</p> <p>A JSP tartalm\u00e1ra tekinthet\u00fcnk, \u00fagy mintha a service met\u00f3dusban lenn\u00e9nk \u00e9s ott \u00edrn\u00e1nk ki a HTML-es tartalmat (v\u00e9gs\u0151 soron t\u00e9nyleg ez t\u00f6rt\u00e9nik). A scriptlet-k\u00e9nt \u00edrt k\u00f3d, \u00edgy ebbe a met\u00f3dusba ker\u00fcl, melynek k\u00f6vetkezm\u00e9nyek\u00e9nt a scriptletben nem defini\u00e1lhatunk met\u00f3dusokat vagy adattagokat. Erre ad megold\u00e1st a declaration tag (ez <code>&lt;%! ... %&gt;</code>), mivel az ezek k\u00f6z\u00e9 a tag-ek k\u00f6z\u00e9 \u00edrt k\u00f3dot a service() met\u00f3duson k\u00edv\u00fclre gener\u00e1lja az alkalmaz\u00e1s szerver JSP translator motorja.</p> <p>P\u00e9lda. <pre><code>&lt;html&gt;  \n  &lt;body&gt;  \n    &lt;%!   \n      int cube(int n){  \n        return n*n*n*;  \n      }  \n    %&gt; \n\n    Cube of 3 is: &lt;% out.print(cube(3)); %&gt;\n  &lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre></p> <p>A 3. tag az expression tag, melybe \u00edrt k\u00f3d a response output stream-j\u00e9re \u00edr\u00f3dik. Nem kell out.print-et \u00edrni! F\u0151k\u00e9nt v\u00e1ltoz\u00f3k vagy met\u00f3dush\u00edv\u00e1sok \u00e9rt\u00e9k\u00e9nek ki\u00edr\u00e1s\u00e1ra haszn\u00e1lhat\u00f3.</p> <p>P\u00e9lda: <pre><code>  &lt;html&gt;  \n    &lt;body&gt;  \n      Current Time: &lt;%= java.util.Calendar.getInstance().getTime() %&gt;  \n    &lt;/body&gt;  \n  &lt;/html&gt;  \n</code></pre></p>"},{"location":"09_gyakorlat/#implicit-objektumok","title":"Implicit-objektumok","text":"<p>A JSP oldalakon implicit objektumokat is kapunk, melyet a web kont\u00e9ner inicializ\u00e1l. Ezek k\u00f6z\u00fcl m\u00e1r l\u00e1ttuk is az <code>out</code> \u00e9s a <code>request</code> implicit objektumokat, melyek rendre a servlet-n\u00e9l l\u00e1tott <code>PrintWriter</code>-hez hasonl\u00f3 (<code>JspWriter</code> t\u00edpus\u00fa) output stream \u00edr\u00f3ja, illetve a <code>HttpServletRequest</code> objektumunk.</p> <p>A k\u00f6vetkez\u0151 implicit objektumok k\u00f6z\u00fcl v\u00e1logathatunk (z\u00e1r\u00f3jelben a t\u00edpusukat l\u00e1thatjuk):</p> <ul> <li>application (<code>ServletContext</code>)</li> <li>config (<code>ServletConfig</code>)</li> <li>jspContext (<code>JspContext</code>)</li> <li>out (<code>JspWriter</code>)</li> <li>page (<code>Object</code>)</li> <li>pageContext (<code>PageContext</code>)</li> <li>request (<code>HttpServletRequest</code>)</li> <li>response (<code>HttpServletResponse</code>)</li> <li>session (<code>HttpSession</code>)</li> <li>exception (<code>Throwable</code>)</li> </ul> <p>A fenti implicit objektumokat a scriptletekben b\u00e1rhol haszn\u00e1lhatjuk, mivel az olyan, mintha a <code>_jspService()</code> met\u00f3dusban \u00edrn\u00e1nk k\u00f3dot. Ezt tov\u00e1bbgondolva, ad\u00f3dik, hogy ezeket az implicit objektumokat nem haszn\u00e1lhatjuk a declaration tag-ek k\u00f6z\u00f6tt, mivel az mag\u00e1hoz a servlet oszt\u00e1lyhoz fog tartozni (adattagokat \u00e9s met\u00f3dusokat defini\u00e1lhatok).</p> <p>Most n\u00e9zz\u00fck meg a fontosabb implicit objektumokat r\u00e9szletesebben!</p>"},{"location":"09_gyakorlat/#request-implicit-objektum","title":"Request implicit objektum","text":"<p>A request implicit objektumot a szervlet <code>service(HttpServletRequest req, ...)</code> met\u00f3dus\u00e1ban param\u00e9terk\u00e9nt megkapott <code>request</code> objektummal azonos\u00edthat\u00f3 (t\u00e9nylegesen ugyanaz az objektum), t\u00edpusa <code>HttpServletRequest</code>. Funkcionalit\u00e1s\u00e1t tekintve is megegyezik a servletekben megismert <code>request</code> objektummal, attrib\u00fatumokat \u00e1ll\u00edthatunk be, k\u00e9rhet\u00fcnk le, ugyan\u00edgy a param\u00e9tereket is el\u00e9rhetj\u00fck.</p>"},{"location":"09_gyakorlat/#response-implicit-objektum","title":"Response implicit objektum","text":"<p>A response implicit objektumot a szervlet <code>service(..., HttpServletResponse resp)</code> met\u00f3dus\u00e1ban param\u00e9terk\u00e9nt megkapott response objektummal azonos\u00edthat\u00f3, t\u00edpusa <code>HttpServletResponse</code>. Hasonl\u00f3an haszn\u00e1lhat\u00f3 mint a szervletekn\u00e9l.</p> <p>P\u00e9lda jsp oldalon bel\u00fcli redirect-re: <pre><code>&lt;%   \n  response.sendRedirect(\"http://www.google.com\");  \n%&gt;  \n</code></pre></p>"},{"location":"09_gyakorlat/#config-implicit-objektum","title":"Config implicit objektum","text":"<p>Amennyiben a jsp oldalunknak szeretn\u00e9nk init param\u00e9tereket be\u00e1ll\u00edtani, akkor azt nem tudjuk megtenni olyan annot\u00e1ci\u00f3s form\u00e1ban, csak a web.xml-ben. N\u00e9zz\u00fcnk egy p\u00e9ld\u00e1t, hogy hogyan lehet JSP oldalakat megadni a web.xml-ben!</p> <p>index.jsp <pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;h2&gt;Hello &lt;%= config.getInitParameter(\"name\") %&gt; &lt;/h2&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>web.xml <pre><code>&lt;!DOCTYPE web-app PUBLIC\n \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n \"http://java.sun.com/dtd/web-app_2_3.dtd\" &gt;\n\n&lt;web-app&gt;\n&lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt;\n&lt;servlet&gt;\n&lt;servlet-name&gt;index&lt;/servlet-name&gt;\n&lt;jsp-file&gt;/index.jsp&lt;/jsp-file&gt;\n&lt;init-param&gt;\n&lt;param-name&gt;name&lt;/param-name&gt;\n&lt;param-value&gt;Kandisz N\u00f3ra&lt;/param-value&gt;\n&lt;/init-param&gt;\n&lt;/servlet&gt;\n\n&lt;servlet-mapping&gt;\n&lt;servlet-name&gt;index&lt;/servlet-name&gt;\n&lt;url-pattern&gt;/index&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n&lt;/web-app&gt;\n</code></pre></p> <p>A JSP oldalon ki\u00edrjuk a web.xml-ben megadott <code>name</code> init param\u00e9ter \u00e9rt\u00e9k\u00e9t. A web.xml-es megad\u00e1s arra is megfelel\u0151, hogy elrejts\u00fck az url-b\u0151l, hogy jsp oldalakkal j\u00e1tszunk a h\u00e1tt\u00e9rben. Mivel a JSP oldalak servletekk\u00e9 alakulnak a h\u00e1tt\u00e9rben, ez\u00e9rt a web.xml-ben is ugyan\u00fagy adjuk meg \u0151ket, mint ahogyan az a hagyom\u00e1nyos servletekn\u00e9l t\u00f6rt\u00e9nt, viszont vegy\u00fck \u00e9szre, hogy itt megadjuk a <code>jsp-file</code> elemet is, melyben megadjuk azt, hogy itt egy jsp f\u00e1jlr\u00f3l van sz\u00f3.</p>"},{"location":"09_gyakorlat/#application-implicit-objektum","title":"Application implicit objektum","text":"<p>Hasonl\u00f3an a <code>ServletConfig</code> objektumhoz, a ServletContext-hez is hozz\u00e1f\u00e9rhet\u00fcnk implicit objektum form\u00e1j\u00e1ban. A <code>ServletContext</code> objektumnak megfelel\u0151 implicit objektum az <code>application</code>.</p> <p>P\u00e9lda context param kiolvas\u00e1s\u00e1ra:</p> <p>web.xml: <pre><code>&lt;web-app&gt;  &lt;servlet&gt;  &lt;servlet-name&gt;welcome&lt;/servlet-name&gt;  &lt;jsp-file&gt;/welcome.jsp&lt;/jsp-file&gt;  &lt;/servlet&gt;  &lt;servlet-mapping&gt;  &lt;servlet-name&gt;welcome&lt;/servlet-name&gt;  &lt;url-pattern&gt;/welcome&lt;/url-pattern&gt;  &lt;/servlet-mapping&gt;  &lt;context-param&gt;  &lt;param-name&gt;driver&lt;/param-name&gt;  &lt;param-value&gt;org.sqlite.JDBC&lt;/param-value&gt;  &lt;/context-param&gt;  &lt;/web-app&gt;  </code></pre></p> <p>welcome.jsp: <pre><code>&lt;%   \n  String driver=application.getInitParameter(\"driver\");  \n  out.print(\"driver name is=\"+driver);  \n%&gt;  \n</code></pre></p>"},{"location":"09_gyakorlat/#session-implicit-objektum","title":"Session implicit objektum","text":"<p>A request-t\u0151l elk\u00e9rhet\u0151 <code>HttpSession</code> t\u00edpus\u00fa objektum megfelel\u0151je.</p> <p>P\u00e9lda session haszn\u00e1lat\u00e1ra.</p> <p>index.html <pre><code>&lt;html&gt;  \n  &lt;body&gt;  \n    &lt;form action=\"welcome.jsp\"&gt;  \n      &lt;input type=\"text\" name=\"uname\"&gt;  \n      &lt;input type=\"submit\" value=\"go\"&gt;&lt;br/&gt;  \n    &lt;/form&gt;  \n  &lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre></p> <p>welcome.jsp: <pre><code>&lt;html&gt;  \n  &lt;body&gt;  \n  &lt;%   \n    String name = request.getParameter(\"uname\");  \n    out.print(\"Welcome \" + name);  \n    session.setAttribute(\"user\",name);\n  %&gt;\n  &lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre> A be\u00e1ll\u00edtott attrib\u00fatumot m\u00e1s oldalakon a <code>session.getAttribute(\"user\")</code> h\u00edv\u00e1ssal k\u00e9rhetj\u00fck le. Mivel a session-kezel\u00e9s el\u00e9gg\u00e9 k\u00f6lts\u00e9ges, \u00edgy ha nincs r\u00e1 sz\u00fcks\u00e9g, akkor megmondhatjuk a JSP oldalnak, hogy ne k\u00e9sz\u00edtsen session objektumot az adott oldalhoz. A session p\u00e9ld\u00e1ul felesleges lehet a login oldalon. Ehhez a <code>&lt;%@ page session=\"false\" %&gt;</code> k\u00f3dr\u00e9szletet illessz\u00fck az oldal tetej\u00e9re. A pontos viselked\u00e9st k\u00e9s\u0151bb tiszt\u00e1zzuk a direkt\u00edv\u00e1kn\u00e1l.</p>"},{"location":"09_gyakorlat/#pagecontext-implicit-objektum","title":"pageContext implicit objektum","text":"<p>A pageContext objektum a <code>javax.servlet.jsp.PageContext</code> oszt\u00e1ly egy p\u00e9ld\u00e1nya, melyen kereszt\u00fcl el\u00e9rhet\u0151ek a k\u00fcl\u00f6nb\u00f6z\u0151 scope-okban l\u00e9v\u0151 attrib\u00fatumok (session scope, request scope, application scope). A pageContext-en kereszt\u00fcl a t\u00f6bbi implicit objektumot is el tudjuk \u00e9rni.</p> <p>P\u00e9lda: <pre><code>&lt;html&gt;  &lt;body&gt;  &lt;%   String name=request.getParameter(\"uname\");  out.print(\"Welcome \"+name);  pageContext.setAttribute(\"user\",name,PageContext.SESSION_SCOPE);    %&gt;  &lt;/body&gt;  &lt;/html&gt;  </code></pre></p> <p>A pageContext implicit objektumot ritk\u00e1bban haszn\u00e1ljuk, mivel helyette haszn\u00e1lhatjuk az implicit objektumokat k\u00f6zvetlen\u00fcl.</p> <p>Feladat</p> <p>K\u00e9sz\u00edts\u00fcnk JSP oldalt, melyen egy gomb megnyom\u00e1sakor egy sz\u00e1ml\u00e1l\u00f3 \u00e9rt\u00e9k\u00e9t n\u00f6velj\u00fck eggyel! A sz\u00e1ml\u00e1l\u00f3t nem kell kell k\u00fcl\u00f6n szervletben n\u00f6velni. Csin\u00e1ljunk mindent egyetlen JSP oldalon!</p> Megold\u00e1s <p>index.jsp: <pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;%!\nprivate static int counter = 0;\n%&gt;\n\n&lt;%\nif(request.getParameter(\"submit\") != null){\ncounter++;\n}\n%&gt;\n\n&lt;h1&gt;Counter value: &lt;%= counter %&gt;&lt;/h1&gt;\n\n&lt;form method=\"post\" action=\"index.jsp\"&gt;\n&lt;button type=\"submit\" name=\"submit\"&gt;Increment&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>A form-on bel\u00fcl a gombnak a <code>name</code> attrib\u00fatum\u00e1t fontos submit-re \u00e1ll\u00edtani, mert a request param\u00e9terei k\u00f6z\u00f6tt ilyen n\u00e9ven fogjuk el\u00e9rni azt. Az eredm\u00e9ny az, hogy csak akkor n\u00f6velj\u00fck a counter \u00e9rt\u00e9k\u00e9t, ha a postban megtal\u00e1lhat\u00f3 volt a submit param\u00e9ter (b\u00e1rmi is legyen az \u00e9rt\u00e9ke).</p> <p>Feladat</p> <p>K\u00e9sz\u00edts\u00fcnk egy form-ot, melyen bek\u00e9rj\u00fck a felhaszn\u00e1l\u00f3 adatait: n\u00e9v, email, sz\u00fclet\u00e9si \u00e9v! A form megnyom\u00e1sakor ker\u00fclj\u00fcnk \u00e1t egy m\u00e1sik jsp oldalra, ahol ki\u00edrjuk ezeket a param\u00e9tereket, de el\u0151tte a kapott \u00e9rt\u00e9keket (ha vannak) beletessz\u00fck a session-be. A ki\u00edr\u00e1s is a session-b\u0151l t\u00f6rt\u00e9njen!</p> Megold\u00e1s <p>index.jsp <pre><code>  &lt;html&gt;\n&lt;body&gt;\n\n&lt;h1&gt;Update profile&lt;/h1&gt;\n\n&lt;form method=\"post\" action=\"details.jsp\"&gt;\n&lt;div&gt;\n&lt;label for=\"name\"&gt;Name&lt;/label&gt;\n&lt;input type=\"text\" id=\"name\" name=\"name\"&gt;\n&lt;/div&gt;\n&lt;div&gt;\n&lt;label for=\"email\"&gt;Email&lt;/label&gt;\n&lt;input type=\"email\" id=\"email\" name=\"email\"&gt;\n&lt;/div&gt;\n&lt;div&gt;\n&lt;label for=\"age\"&gt;Age&lt;/label&gt;\n&lt;input type=\"number\" id=\"age\" name=\"age\"&gt;\n&lt;/div&gt;\n&lt;button type=\"submit\" name=\"submit\"&gt;Update profile&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>details.jsp <pre><code>&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;User details&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;%\nString name = request.getParameter(\"name\");\nString email = request.getParameter(\"email\");\nString age = request.getParameter(\"age\");\n\nif(name != null &amp;&amp; !name.isEmpty()){\nsession.setAttribute(\"name\", name);\n}\nif(email != null &amp;&amp; !email.isEmpty()){\nsession.setAttribute(\"email\", email);\n}\nif(age != null &amp;&amp; !age.isEmpty()){\nsession.setAttribute(\"age\", age);\n}\n%&gt;\n\n&lt;h1&gt;User details&lt;/h1&gt;\n\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td&gt;Name:&lt;/td&gt;\n&lt;td&gt;&lt;%= session.getAttribute(\"name\") == null ? \"Not specified\" : session.getAttribute(\"name\") %&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Email:&lt;/td&gt;\n&lt;td&gt;&lt;%= session.getAttribute(\"email\") == null ? \"Not specified\" : session.getAttribute(\"email\")  %&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Age:&lt;/td&gt;\n&lt;td&gt;&lt;%= session.getAttribute(\"age\") == null ? \"Not specified\" : session.getAttribute(\"age\") %&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"09_gyakorlat/#jsp-direktivak","title":"JSP direkt\u00edv\u00e1k","text":"<p>A direkt\u00edv\u00e1k az alkalmaz\u00e1sszervernek sz\u00f3l\u00f3 \u00fczenetek, melyekkel megmondhatjuk, hogy a JSP oldalt milyen m\u00f3don alak\u00edtsa szervlett\u00e9 a kont\u00e9ner, illetve m\u00f3dos\u00edtani tudjuk, hogy milyen k\u00e9pess\u00e9g\u0171 szervlet\u00fcnk keletkezik a transzform\u00e1l\u00e1s ut\u00e1n. 3 t\u00edpusa van:</p> <ul> <li>page direkt\u00edva</li> <li>include direkt\u00edva</li> <li>taglib direkt\u00edva</li> </ul> <p>Ezek szintaxisa</p> <p>&lt;%@ directive attribute=\"value\" %&gt;</p> <p>, ahol a <code>directive</code> maga a <code>page</code>, <code>include</code>, vagy <code>taglib</code>.</p>"},{"location":"09_gyakorlat/#page-direktiva","title":"page direkt\u00edva","text":"<p>Az eg\u00e9sz oldalra vonatkoz\u00f3 attrib\u00fatumok megad\u00e1s\u00e1ra szolg\u00e1l. Egy <code>page</code> direkt\u00edv\u00e1hoz megadhat\u00f3ak attrib\u00fatumok, melyeket egy vagy ak\u00e1r t\u00f6bb <code>page</code> direkt\u00edv\u00e1ban helyezhet\u00fcnk el a hat\u00e1s ugyanaz. Haszn\u00e1lata:</p> <p>&lt;%@ page attribute=\"value\" %&gt;</p> <p>N\u00e9zz\u00fck milyen attrib\u00fatumokkal tal\u00e1lkozhatunk a leggyakrabban.</p> <p>import: Hasonl\u00f3an a java-s import-hoz itt is pontosan egy java oszt\u00e1lyt h\u00fazhatunk be vele.</p> <p>P\u00e9lda: <pre><code>&lt;%@ page import=\"java.util.Date\" %&gt; &lt;html&gt;  &lt;body&gt;  \nToday is: &lt;%= new Date()%&gt;\n&lt;/body&gt;  &lt;/html&gt;  </code></pre> Addig nem haszn\u00e1lhatjuk a <code>Date</code> oszt\u00e1lyt, ameddig nem h\u00faztuk be.</p> <p>contentType: Ahogyan a servletekn\u00e9l a <code>response.setContentType(\"text/html\")</code> be\u00e1ll\u00edtotta a response mime t\u00edpus\u00e1t, itt ezt a k\u00f6vetkez\u0151k\u00e9ppen tehetj\u00fck meg.</p> <pre><code>&lt;html&gt;  \n&lt;body&gt;  \n\n  &lt;%@ page contentType=\"text/html\" %&gt;  \n\n  Szevasz Jozsi!\n&lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre> <p>errorPage: Ebben az attrib\u00fatumban megadhatjuk, hogy amennyiben az oldalunk egy hib\u00e1t dob, akkor azt melyik hibaoldal kezelje le. Itt b\u00e1rmilyen URI-t megadhatunk.</p> <p>isErrorPage: Ezt akkor adjuk meg, amikor az adott jsp oldal egy hibakezel\u0151 oldal. Az implicit objektumok k\u00f6z\u00f6tt szerepelt az <code>exception</code>, amir\u0151l nem besz\u00e9lt\u00fcnk m\u00e9g. Ez az implicit objektum csak az olyan oldalakon \u00e9rhet\u0151 el, melyekn\u00e9l az <code>isErrorPage</code> attrib\u00fatumot igazra \u00e1ll\u00edtottuk.</p> <p>session: Ahogy azt kor\u00e1bban m\u00e1r l\u00e1ttuk a session objektum l\u00e9trehoz\u00e1s\u00e1t tilthatjuk le. Alap\u00e9rtelmezetten enged\u00e9lyezve van.</p>"},{"location":"09_gyakorlat/#include-direktiva","title":"include direkt\u00edva","text":"<p>Az include direkt\u00edva seg\u00edts\u00e9g\u00e9vel beh\u00fazhatjuk m\u00e1s er\u0151forr\u00e1sok (jsp, hmtl, text f\u00e1jlok) tartalm\u00e1t. Igen hasznos lehet akkor, amikor az oldalainkat logikailag fel akarjuk osztani pl: header, main, footer r\u00e9szekre. Az <code>include</code>-ot a k\u00f6vetkez\u0151 form\u00e1ban haszn\u00e1ljuk:</p> <p>&lt;%@ include file=\"test.jsp\" %&gt;</p> <p>ahol a test.jsp egy relat\u00edv \u00fatvonalmegad\u00e1s az aktu\u00e1lis jsp oldalhoz k\u00e9pest.</p> <p>P\u00e9ld\u00e1ul egy header beh\u00faz\u00e1sa: <pre><code>&lt;html&gt;  \n&lt;body&gt;  \n  &lt;%@ include file=\"header.html\" %&gt;\n\n  Today is: &lt;%= java.util.Calendar.getInstance().getTime() %&gt;  \n&lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre></p>"},{"location":"09_gyakorlat/#taglib-direktiva","title":"taglib direkt\u00edva","text":"<p>A taglib direkt\u00edva tag library-k beh\u00faz\u00e1s\u00e1ra alkalmazhat\u00f3, melyek custom tag-eket tartalmaznak. K\u00e9s\u0151bb majd l\u00e1tjuk, hogy hogyan csin\u00e1lhatunk saj\u00e1t tageket. Pl.: a <code>&lt;%= java.util.Calendar.getInstance().getTime() %&gt;</code> scriptlet helyett, csin\u00e1lhatunk egy saj\u00e1t <code>&lt;currentTime&gt;</code> tag-et, mely ki\u00edrja az aktu\u00e1lis id\u0151t \u00e9s ilyen m\u00f3don nem \"koszolja\" \u00f6ssze a forr\u00e1sk\u00f3dot.</p>"},{"location":"09_gyakorlat/#expression-language","title":"Expression Language","text":"<p>Az Expression Language vagy r\u00f6viden EL, egy olyan b\u0151v\u00edt\u00e9s, mely sokkal egyszer\u0171bb\u00e9 teszi az objektumokkal val\u00f3 munk\u00e1t, mint p\u00e9ld\u00e1ul a request, application, response, stb. Mint kor\u00e1bban l\u00e1ttuk, nem igaz\u00e1n j\u00f3, hogy a JSP-ben alapvet\u0151en HTML k\u00f3d van, mely teli van t\u0171zdelve Java k\u00f3dokkal. Az Expression Language ebben is seg\u00edt.</p> <p>Szintaxisa:</p> <p>${ expression } </p> <p>Az ilyen kifejez\u00e9seket a JSP oldalon bel\u00fcl ak\u00e1rhol haszn\u00e1lhatjuk.</p> <p>Ahogy a scriptletekben is rendelkez\u00fcnk implicit objektumokkal, \u00edgy az Expression Language-ben is el\u00e9rj\u00fck ezeket.</p> <p>Implicit objektumok list\u00e1ja:</p> <ul> <li>pageScope (csak az ezen oldalhoz t\u00e1rolt attrib\u00fatumok map-je)</li> <li>requestScope (a request-ben t\u00e1rolt attrib\u00fatumok map-je)</li> <li>sessionScope (a session-ben t\u00e1rolt attrib\u00fatumok map-je)</li> <li>applicationScope (a ServletContext-ben t\u00e1rolt attrib\u00fatumok map-je)</li> <li>param (request param\u00e9terek lek\u00e9rdez\u00e9s\u00e9hez)</li> <li>paramValues (a request param\u00e9terek list\u00e1ja)</li> <li>header (a k\u00e9r\u00e9s header-je)</li> <li>headerValues (az \u00f6sszes request header lek\u00e9rdez\u00e9se)</li> <li>cookie (cookie-k lek\u00e9rdez\u00e9s\u00e9hez)</li> <li>initParam (a context init param\u00e9terek lek\u00e9rdez\u00e9s\u00e9hez, amit a web.xml-ben adtunk meg, servlet init paramhoz nem haszn\u00e1lhat\u00f3)</li> </ul> <p>Figyelem</p> <p>A fenti implicit objektumokat ne keverj\u00fck \u00f6ssze a JSP implicit objektumokkal!</p> <p>Az Expression Language igazi ereje abban van, hogy nem kell folyamatosan v\u00e1ltanunk HTML \u00e9s java code k\u00f6z\u00f6tt.</p> <p>Vegy\u00fck a k\u00f6vetkez\u0151 p\u00e9ld\u00e1t:</p> <p>index.html <pre><code>&lt;html&gt;  \n  &lt;body&gt;  \n    &lt;form action=\"welcome.jsp\"&gt;  \n      &lt;input type=\"text\" name=\"uname\"&gt;  \n      &lt;input type=\"submit\" value=\"go\"&gt;&lt;br/&gt;  \n    &lt;/form&gt;  \n  &lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre></p> <p>welcome.jsp: <pre><code>&lt;html&gt;  &lt;body&gt;  &lt;%   String name = request.getParameter(\"uname\");  out.print(\"Welcome \" + name);  %&gt;\n&lt;/body&gt;  &lt;/html&gt;  </code></pre></p> <p>Expression Language haszn\u00e1lat\u00e1val a welcome.jsp a k\u00f6vetkez\u0151k\u00e9ppen is \u00edrhat\u00f3:</p> <pre><code>&lt;html&gt;  &lt;body&gt; Welcome ${param.uname}\n  &lt;/body&gt;  &lt;/html&gt;  </code></pre> <p>Az EL-el \u00edrt k\u00f3d sokkal r\u00f6videbb, sokkal tiszt\u00e1bb, k\u00f6nnyebben \u00e9rthet\u0151, \u00edgy mindenk\u00e9ppen aj\u00e1nlatos a haszn\u00e1lata.</p> <p>Seg\u00edts\u00e9g!!! Nem m\u0171k\u00f6dik az EL!</p> <p>Ennek t\u00f6bb oka lehet. A legval\u00f3sz\u00edn\u0171bb az, hogy a web.xml rosszul van meg\u00edrva. Mivel a 2.4-es servlet specifik\u00e1ci\u00f3t\u00f3l kezd\u0151d\u0151en t\u00e1mogatott az EL, \u00edgy a Maven \u00e1ltal gener\u00e1lt webapp nem igaz\u00e1n j\u00f3, mivel abban 2.3-as DTD specifik\u00e1ci\u00f3 van megadva, ami igencsak helytelen. <pre><code>  &lt;!DOCTYPE web-app PUBLIC\n  \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n  \"http://java.sun.com/dtd/web-app_2_3.dtd\" &gt;\n\n&lt;web-app&gt;\n&lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt;\n\n&lt;/web-app&gt;\n</code></pre></p> <p>A legegyszer\u0171bb megold\u00e1s, hogy a <code>&lt;!DOCTYPE ...</code> megad\u00e1st kit\u00f6r\u00f6lj\u00fck.</p>"},{"location":"09_gyakorlat/#el-operatorok","title":"EL oper\u00e1torok","text":"<p>A legt\u00f6bb EL implicit objektum egy map amib\u0151l \u00e9rt\u00e9keket k\u00e9rdezhet\u00fcnk le. Erre haszn\u00e1lhat\u00f3 a property access oper\u00e1tor (.), amivel a mapb\u0151l lek\u00e9rhetj\u00fck a megfelel\u0151 \u00e9rt\u00e9ket. P\u00e9ld\u00e1ul:</p> <p>${requestScope.person.name}</p> <p>Ez lek\u00e9ri a requestScope-ban defini\u00e1lt person attrib\u00fatumot, melynek azt\u00e1n lek\u00e9ri a name attrib\u00fatum\u00e1t. A person itt m\u00e1r nem egy map, hanem egy Bean objektum. Az ilyen Bean objektumokon is haszn\u00e1lhatjuk a property access oper\u00e1tort. A Bean alatt az \u00e1ltalunk m\u00e1r megismert Bean-eket \u00e9rtj\u00fck (publikus konstruktor, getter/setter, szerializ\u00e1lhat\u00f3). Fontos, hogy Bean-en \u00e9s java.util.Map objektumokon haszn\u00e1lhatjuk ezt az oper\u00e1tort.</p> <p>A k\u00f6vetkez\u0151 fontos oper\u00e1tor a collection access oper\u00e1tor. T\u00f6mb\u00f6k vagy list\u00e1k elemeihez kapunk hozz\u00e1f\u00e9r\u00e9st a haszn\u00e1latukkal. P\u00e9ld\u00e1k:</p> <p>${myList[1]}  // a myList lista 1 elem\u00e9t adja vissza</p> <p>${myList[\u201c1\u201d]} // nem csak sz\u00e1mmal, hanem string-el is megadhatjuk az indexet</p> <p>${myMap[expr]} // ha az index nem string akkor a param\u00e9ter EL kifejez\u00e9sk\u00e9nt ki\u00e9rt\u00e9kel\u0151dik</p> <p>${myMap[myList[1]]} // ak\u00e1r t\u00f6bbsz\u00f6r\u00f6sen is egym\u00e1sba lehet \u00e1gyazni</p> <p>Az EL kifejez\u00e9seken bel\u00fcl haszn\u00e1lhatjuk a tov\u00e1bbi megszokott egyszer\u0171 oper\u00e1torokat is:</p> <ul> <li>aritmetikai oper\u00e1torok (<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code>)</li> <li>logikai oper\u00e1torok (<code>&amp;&amp;</code>, <code>||</code>, <code>!</code>)</li> <li>rel\u00e1ci\u00f3s oper\u00e1torok (<code>&lt;</code>, <code>&gt;</code>, <code>==</code>, <code>!=</code>, <code>&lt;=</code>, <code>&gt;=</code>)</li> </ul> <p>Fontos</p> <p>Fontos \u00e9szben tartani a k\u00f6vetkez\u0151ket, amikor EL-t haszn\u00e1lunk:</p> <ul> <li>Az EL kifejez\u00e9sek mindig a k\u00f6vetkez\u0151 form\u00e1ban szerepelnek: <code>${...}</code></li> <li>Egy oldalon a EL feldolgoz\u00e1st letilthatjuk a <code>&lt;%@ page isELIgnored=\"true\" %&gt;</code> page direkt\u00edva haszn\u00e1lat\u00e1val</li> <li>Az EL seg\u00edts\u00e9g\u00e9vel lek\u00e9rdezhet\u00fcnk attrib\u00fatumokat, header-\u00f6ket, cookie-kat, viszont nem \u00e1ll\u00edthatunk be \u00e9rt\u00e9ket</li> <li>Az EL implicit objektumai k\u00fcl\u00f6nb\u00f6znek a JSP implicit objektumait\u00f3l, kiv\u00e9ve a pageContext</li> <li>Az EL NULL-bar\u00e1t: nem dob\u00e1l exception, ha nincs meg valamilyen attrib\u00fatum</li> </ul>"},{"location":"09_gyakorlat/#jsp-action-tag-ek","title":"JSP action tag-ek","text":"<p>A jsp action tag-ek halmaza sokat seg\u00edthet, hogy ne kelljen \u00e1tv\u00e1ltani java k\u00f3dra, helyette jsp-t \u00edrhatunk tov\u00e1bbra is. Itt csak a legfontosabbakat action tag-eket mutatjuk be.</p>"},{"location":"09_gyakorlat/#jspusebean","title":"jsp:useBean","text":"<p>Akkor haszn\u00e1ljuk, ha egy Java Bean-t le szeretn\u00e9nk k\u00e9rni egy adott scope-b\u00f3l, vagy egy \u00faj objektumot l\u00e9trehozni egy adott scope-ban. P\u00e9lda:</p> <pre><code>&lt;jsp:useBean id=\"person\" class=\"hu.alkfejl.Person\" scope=\"session\" /&gt;\n</code></pre> <p>Ebben az esetben a JSP kont\u00e9ner megkeresi a person nev\u0171 bejegyz\u00e9st a session-ben. Amennyiben ilyet nem tal\u00e1l, akkor l\u00e9trehoz egy \u00faj Person objektumot \u00e9s person n\u00e9ven be is \u00e1ll\u00edtja azt a session-ben. Miut\u00e1n defini\u00e1ltuk a Bean-t a JSP oldalon, onnant\u00f3l kezdve lek\u00e9rhetj\u00fck a property-jeit egy m\u00e1sik jsp action tag-gel, melyet <code>getProperty</code>-nek h\u00edvnak:</p> <pre><code>&lt;jsp:getProperty name=\"person\" property=\"name\" /&gt;\n</code></pre> <p>Ezt viszont nem igaz\u00e1n szoktuk haszn\u00e1lni, mivel m\u00e1r ismerj\u00fck az EL k\u00e9pess\u00e9geit, teh\u00e1t a fenti megfelel\u0151je:</p> <pre><code>${person.name}\n</code></pre> <p>A get mellett van egy setProperty jsp action tag, amit viszont m\u00e1r sokkal ink\u00e1bb haszn\u00e1lunk, mivel az EL seg\u00edts\u00e9g\u00e9vel nem tudunk \u00e9rt\u00e9keket be\u00e1ll\u00edtani.</p> <pre><code>&lt;jsp:setProperty name=\"person\" property=\"name\" value=\"Gipsz Jakab\" /&gt;\n</code></pre> <p>Ha a name property-t csak akkor akarjuk be\u00e1ll\u00edtani, ha \u00faj objektumot kellett l\u00e9trehozni (azaz nem volt m\u00e9g benne a sessionben), akkor a setProperty-t a useBean tag gyerekek\u00e9nt adjuk meg!</p> <pre><code>&lt;jsp:useBean id=\"person\" class=\"hu.alkfejl.Person\" scope=\"session\"&gt;\n&lt;jsp:setProperty name=\"person\" property=\"name\" value=\"Gipsz Jakab\" /&gt;\n&lt;/jsp:useBean&gt;\n</code></pre> <p>N\u00e9h\u00e1ny tudnival\u00f3:</p> <ul> <li>Amennyiben a useBean-ek nem adunk meg scope-ot akkor a <code>page</code> az alap\u00e9rtelmezett.</li> <li>Ha a request param\u00e9terek alapj\u00e1n akarom be\u00e1ll\u00edtani a property-t, akkor a setProperty <code>param</code> attrib\u00fatum\u00e1ban adhatom meg, hogy milyen nev\u0171 request param\u00e9ter \u00e9rt\u00e9k\u00e9t akarom a bean-nek odaadni. Ha a property neve megegyezik a request param\u00e9ter nev\u00e9vel, akkor elhagyhatom a param attrib\u00fatumot.</li> <li>Amennyiben a bean \u00f6sszes property-j\u00e9t be akarom \u00e1ll\u00edtani \u00e9s azok neve rendre megegyezik a request param\u00e9terek neveivel, akkor \u00edrhatom a k\u00f6vetkez\u0151t: <code>&lt;jsp:setProperty name=\"person\" property=\"*\" /&gt;</code></li> </ul>"},{"location":"09_gyakorlat/#jspforward","title":"jsp:forward","text":"<p>A szervletekn\u00e9l megismert <code>RequestDispatcher forward</code> met\u00f3dusa helyett haszn\u00e1lhat\u00f3.</p> <p>Az al\u00e1bbi k\u00f3dr\u00e9szletek ekvivalensek:</p> <pre><code>&lt;jsp:forward page=\"welcome.jsp\" /&gt;\n</code></pre> <p>Ugyanez a servlet doGet, doPost, stb met\u00f3dusokban: <pre><code>RequestDispatcher rd = request.getRequestDispatcher(\"welcome.jsp\");\nrd.forward(request, response);\n</code></pre></p>"},{"location":"09_gyakorlat/#jspinclude","title":"jsp:include","text":"<p>A szervletekn\u00e9l megismert <code>RequestDispatcher include</code> met\u00f3dus\u00e1val megegyez\u0151.</p> <p>Az al\u00e1bbi k\u00f3dr\u00e9szletek ekvivalensek:</p> <pre><code>&lt;jsp:include page=\"welcome.jsp\" /&gt;\n</code></pre> <p>Ugyanez a servlet doGet, doPost, stb met\u00f3dusokban: <pre><code>RequestDispatcher rd = request.getRequestDispatcher(\"welcome.jsp\");\nrd.include(request, response);\n</code></pre></p> <p>Egy fontos k\u00fcl\u00f6nbs\u00e9g azonban van: include direkt\u00edva haszn\u00e1latakor az include a transzform\u00e1l\u00e1skor t\u00f6rt\u00e9nik (azaz r\u00e9sze lesz a leford\u00edtott servlet-nek), m\u00edg jelen esetben fut\u00e1si id\u0151ben. Ez azt jelenti, hogy abban az esetben ha er\u0151sen dinamikus JSP oldalunk van, akkor az include direkt\u00edva cs\u0151d\u00f6t mondhat, \u00edgy ilyenkor \u00e9rdemes lehet a <code>jsp:include</code>-ot haszn\u00e1lni.</p>"},{"location":"09_gyakorlat/#jstl","title":"JSTL","text":"<p>A JSTL (JSP Standard Tag Library) egy adag egyedi tag-et ad a kez\u00fcnkbe, melyekkel sokkal k\u00f6nnyebb a fejleszt\u00e9s, illetve az EL mellett, a JSTL haszn\u00e1lat\u00e1val is sokkal szebb k\u00f3dot \u00edrhatunk a JSP oldalban, an\u00e9lk\u00fcl, hogy v\u00e1ltanunk k\u00e9ne scriptlet-re. A JSTL szolg\u00e1ltat n\u00e9h\u00e1ny bej\u00e1r\u00e1ssal \u00e9s el\u00e1gaz\u00e1ssal kapcsolatos tag-et. A JSTL-ben t\u00f6bb csoport tal\u00e1lhat\u00f3 meg, de mi csak a core library-t fogjuk haszn\u00e1lni. Ennek haszn\u00e1lat\u00e1hoz el\u0151sz\u00f6r a pom.xml-be fel kell venn\u00fcnk a k\u00f6vetkez\u0151 dependency-t:</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n&lt;artifactId&gt;jstl&lt;/artifactId&gt;\n&lt;version&gt;1.2&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Majd azon az oldalon, ahol haszn\u00e1lni szeretn\u00e9nk a jstl-t ott a k\u00f6vetkez\u0151t kell, beilleszten\u00fcnk.</p> <p>&lt;%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %&gt;</p>"},{"location":"09_gyakorlat/#cout","title":"c:out","text":"<p>A c:out hasonl\u00edt a <code>&lt;%= ... %&gt;</code> expression scriptlet-hez, viszont itt EL-el haszn\u00e1lhatjuk.</p> <p>P\u00e9lda: <pre><code>&lt;%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %&gt;  &lt;html&gt;  &lt;body&gt;  &lt;c:out value=\"${sessionScope.user.name}\"/&gt;  &lt;/body&gt;  &lt;/html&gt; </code></pre></p> <p>A fenti k\u00f3d a session-b\u0151l kiszedn\u00e9 a be\u00e1ll\u00edtott user bean objektumot, melynek a ki\u00edrja a name fieldj\u00e9t.</p>"},{"location":"09_gyakorlat/#cimport","title":"c:import","text":"<p>Hasonl\u00f3 a <code>&lt;jsp:include&gt;</code> action tag-hez, viszont k\u00e9pes k\u00fcls\u0151 url-ekr\u0151l is beh\u00fazni a tartalmat.</p>"},{"location":"09_gyakorlat/#cset","title":"c:set","text":"<p>A <code>&lt;c:set&gt;</code> v\u00e1ltoz\u00f3k be\u00e1ll\u00edt\u00e1s\u00e1ra haszn\u00e1lhat\u00f3, melynek megadhatjuk a scope-ot is (requestScope, sessionScope, applicationScope).</p> <p>P\u00e9lda:</p> <pre><code>&lt;c:set var=\"income\" scope=\"session\" value=\"${99 * 20 * 100}\"/&gt; </code></pre> <p>Fontos, hogy a scope megad\u00e1s\u00e1n\u00e1l nem kell megadni a teljes implicit objektumot, azaz nem sessionScope-ot \u00edrunk, hanem szimpl\u00e1n session-t.</p>"},{"location":"09_gyakorlat/#cremove","title":"c:remove","text":"<p>A <code>c:set</code> ellenkez\u0151je, elt\u00e1vol\u00edthatunk a megadott scope-b\u00f3l v\u00e1ltoz\u00f3kat. F\u0151 a takar\u00edt\u00e1s magunk ut\u00e1n, ha m\u00e1r nincs sz\u00fcks\u00e9g\u00fcnk valamire.</p> <p>"},{"location":"09_gyakorlat/#cif","title":"c:if","text":"<p>A v\u00e1laszba felt\u00e9telesen helyezhet\u00fcnk el tartalmat.</p> <p>P\u00e9lda: <pre><code>&lt;c:if test=\"${income &gt; 8000}\"&gt;  &lt;p&gt;My income is: &lt;c:out value=\"${income}\"/&gt;&lt;p&gt;  &lt;/c:if&gt;  </code></pre></p> <p>A fenti p\u00e9ld\u00e1ban csak akkor \u00edrjuk ki a j\u00f6vedelmet, ha az nagyobb mint 8000.</p>"},{"location":"09_gyakorlat/#cchoose","title":"c:choose","text":"<p>A Java-s switch megfelel\u0151je.</p> <p>P\u00e9lda: <pre><code>&lt;c:choose&gt;  &lt;c:when test=\"${income &lt;= 1000}\"&gt;  Income is not good.  &lt;/c:when&gt;  &lt;c:when test=\"${income &gt; 10000}\"&gt;  Income is very good.  &lt;/c:when&gt;  &lt;c:otherwise&gt;  Income is undetermined...  &lt;/c:otherwise&gt;  &lt;/c:choose&gt;  </code></pre></p> <p>A case \u00e1gaknak megfeleltethet\u0151 a when, illetve a default \u00e1gnak az otherwise.</p>"},{"location":"09_gyakorlat/#cforeach","title":"c:forEach","text":"<p>Iter\u00e1ci\u00f3hoz haszn\u00e1lhat\u00f3 a c:forEach tag, melyben index alap\u00fa, illetve a t\u00e9nyleges foreach iter\u00e1ci\u00f3 is megadhat\u00f3.</p> <p>P\u00e9lda: <pre><code>&lt;c:forEach var=\"j\" begin=\"1\" end=\"3\"&gt;  Item &lt;c:out value=\"${j}\"/&gt;\n&lt;/c:forEach&gt; </code></pre></p> <p>Egy m\u00e1sik p\u00e9lda sor\u00e1n, ha adott mondjuk a sessionben egy List t\u00edpus\u00fa lista akkor annak elemeit a k\u00f6vetkez\u0151k\u00e9ppen \u00edrhatjuk ki. <pre><code>&lt;c:forEach items=\"${sessionScope.texts}\" var=\"text\"&gt;  &lt;c:out value=\"${text}\"/&gt;\n&lt;/c:forEach&gt; </code></pre>"},{"location":"09_gyakorlat/#credirect","title":"c:redirect","text":"<p>A szervletekn\u00e9l l\u00e1tott <code>response.sendRedirect(\"welcome.jsp\")</code> mint\u00e1j\u00e1ra haszn\u00e1lhat\u00f3, de megint csak nem kell \u00e1tv\u00e1ltanunk scriptlet-be. Az url-ben megadhat\u00f3 k\u00fcls\u0151 er\u0151forr\u00e1s is.</p> <p></p>"},{"location":"09_gyakorlat/#feladatok","title":"Feladatok","text":"<p>Feladat</p> <p>K\u00e9sz\u00edts\u00fcnk egy k\u00e9pek felt\u00f6lt\u00e9s\u00e9re alkalmas JSP alkalmaz\u00e1st, mely Base64-be alak\u00edtja \u00e1t a k\u00e9pet!</p> Megold\u00e1s <p>index.jsp: <pre><code>&lt;html&gt;\n&lt;body&gt;\n\n&lt;form action=\"image-upload\" enctype = \"multipart/form-data\" method=\"post\"&gt;\n&lt;label for=\"img\"&gt;Select image:&lt;/label&gt;\n&lt;input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\"&gt;\n&lt;input type=\"submit\"&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>ImageUpload.java: <pre><code>import javax.servlet.ServletException;\nimport javax.servlet.annotation.MultipartConfig;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.Part;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.SequenceInputStream;\nimport java.util.Base64;\nimport java.util.Vector;\n\n@WebServlet(\"/image-upload\")\n@MultipartConfig(\nfileSizeThreshold = 1024 * 1024, // 1 MB\nmaxFileSize = 1024 * 1024 * 5, // 5 MB\nmaxRequestSize = 1024 * 1024 * 5 * 5 // 25 MB\n)\npublic class ImageUpload extends HttpServlet {\n\n@Override\nprotected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\nVector&lt;InputStream&gt; allParts = new Vector&lt;&gt;();\n\nfor (Part part : req.getParts()) {\nallParts.add(part.getInputStream());\n}\n\nSequenceInputStream appended = new SequenceInputStream(allParts.elements());\nbyte[] img = appended.readAllBytes();\nString result = Base64.getEncoder().encodeToString(img);\n\nSystem.out.println(result);\n}\n}\n</code></pre></p> <p>Fontos, hogy a form-ban megadjuk, hogy multipart data-t k\u00fcld\u00fcnk majd. A szervletben a <code>MultipartConfig</code> annot\u00e1ci\u00f3ban jelezhetj\u00fck, hogy mekkora mennyis\u00e9g\u0171 adatot hajland\u00f3 fogadni a szervlet\u00fcnk. Ezut\u00e1n az adatr\u00e9szeket a request-t\u0151l a <code>getParts()</code>-al k\u00e9rhetj\u00fck le, \u00e9s minden part-t\u00f3l elk\u00e9rhet\u00fcnk egy InputStream-et. Mivel nek\u00fcnk a k\u00e9p egyben kell, ez\u00e9rt ezeket a Streameket \u00f6ssze kell f\u0171zn\u00fcnk. Erre alkalmas a <code>SequenceInputStream</code>, melynek van egy konstruktora, mely Enumeration-et v\u00e1r. Emiatt egy <code>Vector</code>-ba \u00f6sszegy\u0171jtj\u00fck az InputStreameket, melyre az <code>elements()</code> h\u00edv\u00e1s pontosan egy ilyen enumeration-t ad vissza. Ebb\u0151l a <code>SequenceInputStream</code>-b\u0151l m\u00e1r kinyerhetj\u00fck a byte t\u00f6mb\u00f6t, melyet azt\u00e1n a Base64 encoderrel tudunk k\u00f3dolni String-g\u00e9. <p>A kinyert String-et lementhetj\u00fck ak\u00e1r adatb\u00e1zisba is. Most csak ki\u00edrjuk a konzolra. Tesztel\u00e9skor haszn\u00e1lhatunk egy online decodert, hogy visszanyerj\u00fck az eredeti k\u00e9pet. Pl.: https://codebeautify.org/base64-to-image-converter</p> <p>Feladat</p> <p>K\u00e9sz\u00edts\u00fck el a <code>contacts</code> projekt\u00fcnket JSP oldalak \u00e9s servletek haszn\u00e1lat\u00e1val! Els\u0151 k\u00f6rben elegend\u0151 a list\u00e1z\u00e1st \u00e9s a hozz\u00e1ad\u00e1st implement\u00e1lni.</p> Megold\u00e1s <p>A megold\u00e1st l\u00e1sd a pub-on!</p>"},{"location":"10_gyakorlat/","title":"10. gyakorlat","text":""},{"location":"10_gyakorlat/#jsp-folytatas","title":"JSP folytat\u00e1s","text":""},{"location":"10_gyakorlat/#fragment-ek","title":"Fragment-ek","text":"<p>A nem teljes \u00e9rt\u00e9k\u0171, csak t\u00f6red\u00e9k JSP oldalakat JSP fragment-eknek nevezz\u00fck.</p> <p>Feladat</p> <p>A person-administrator alkalmaz\u00e1sunk jsp/servlet megval\u00f3s\u00edt\u00e1s\u00e1ban a <code>menu</code> \u00e9s a k\u00f6z\u00f6s <code>header</code> elemek nem \u00f6n\u00e1ll\u00f3 JSP oldalak. Viszont a b\u00f6ng\u00e9sz\u0151b\u0151l direktben el\u00e9rhet\u0151ek ezek az oldalak. Jav\u00edtsuk ki, hogy erre ne legyen lehet\u0151s\u00e9g! Arr\u00f3l m\u00e1r volt sz\u00f3, hogy amit nem akarunk, hogy a felhaszn\u00e1l\u00f3 el\u00e9rjen, azt a WEB-INF k\u00f6nyvt\u00e1rba kell pakolni. Tegy\u00fcnk is \u00edgy: mozgassuk a teljes common mapp\u00e1t a WEB-INF al\u00e1! Ezut\u00e1n \u00e1ll\u00edtsuk \u00e1t a t\u00f6bbi oldalon szerepl\u0151 el\u00e9r\u00e9si \u00fatvonalakat (../WEB-INF/common/... kell legyen)! </p>"},{"location":"10_gyakorlat/#felhasznalok-kezelese","title":"Felhaszn\u00e1l\u00f3k kezel\u00e9se","text":"<p>Feladat</p> <p>Adjunk hozz\u00e1 az alkalmaz\u00e1sunkhoz val\u00f3di felhaszn\u00e1l\u00f3 kezel\u00e9st! Jelen esetben a login alkalm\u00e1val csak beletessz\u00fck a session-be \u00e9s k\u00e9sz. Legyen lehet\u0151s\u00e9g\u00fcnk \u00fagy bel\u00e9pni, hogy t\u00e9nylegesen ellen\u0151rizz\u00fck az alkalmaz\u00e1sban, hogy helyes felhaszn\u00e1l\u00f3 jelsz\u00f3 p\u00e1rost adott-e meg a felhaszn\u00e1l\u00f3. A jelszavakat titkos\u00edtsuk bcrypt algoritmussal! Ehhez konstru\u00e1ljuk egy felhaszn\u00e1l\u00f3 t\u00e1bl\u00e1t, illetve az adott felhaszn\u00e1l\u00f3 k\u00fcl\u00f6n tudja menedzselni a saj\u00e1t kontaktjait, teh\u00e1t minden felhaszn\u00e1l\u00f3 csak az \u00e1ltala hozz\u00e1adott embereket l\u00e1tja. Legyen egy regisztr\u00e1ci\u00f3 men\u00fcpont is a login-r\u00f3l el\u00e9rhet\u0151!</p> <ol> <li> <p>l\u00e9p\u00e9s: Dolgozzuk \u00e1t az adatb\u00e1zist!    Az valahogy \u00edgy kell, hogy kin\u00e9zzen az \u00e1talak\u00edt\u00e1s ut\u00e1n:</p> <pre><code> create table CONTACT\n(\nid INTEGER not null\nconstraint CONTACT_pk\nprimary key autoincrement,\nname text not null,\nemail text not null,\naddress text,\ndateOfBirth text not null,\ncompany text,\nposition text,\nuser_id int\n);\n\ncreate unique index CONTACT_email_uindex\non CONTACT (email);\n\ncreate table PHONE\n(\nid integer not null\nconstraint PHONE_pk\nprimary key autoincrement,\nnumber text not null,\nphoneType integer not null,\ncontact_id int\nreferences CONTACT\n);\n\ncreate table USER\n(\nid INTEGER not null\nconstraint USER_pk\nprimary key autoincrement,\nusername text not null,\npassword text not null,\nemail text not null\n);\n\ncreate unique index USER_email_uindex\non USER (email);\n\ncreate unique index USER_username_uindex\non USER (username);\n</code></pre> </li> <li> <p>l\u00e9p\u00e9s: <code>User</code> model hozz\u00e1ad\u00e1sa a <code>contacts-core</code>-hoz \u00e9s <code>Contact</code> model aktualiz\u00e1l\u00e1sa.</p> <p><code>Contact.java</code> <pre><code> public class Contact{\n// other properties\nprivate ObjectProperty&lt;User&gt; user = new SimpleObjectProperty&lt;&gt;(this, \"user\");\n\n// getters, setters\n}\n</code></pre></p> <p><code>User.java</code> <pre><code> public class User {\nprivate IntegerProperty id = new SimpleIntegerProperty();\nprivate StringProperty username = new SimpleStringProperty();\nprivate StringProperty password = new SimpleStringProperty();\nprivate StringProperty email = new SimpleStringProperty();\n\n// getters, setters\n}\n</code></pre></p> </li> <li> <p>l\u00e9p\u00e9s: <code>UserDAO</code> \u00e9s <code>UserDAOImpl</code> elk\u00e9sz\u00edt\u00e9se</p> <pre><code>public interface UserDAO {\n\nUser getUserById(int id);\nvoid addUser(User user);\nUser login(String username, String password);\n}\n</code></pre> <p>A <code>UserDAO</code>-ban semmilyen k\u00fcl\u00f6nleges nincs.   Lehet\u0151s\u00e9get ad lek\u00e9rdez\u00e9sre, hozz\u00e1ad\u00e1sra (regisztr\u00e1ci\u00f3), illetve bejelentkez\u00e9sre.</p> <p>A konkr\u00e9t megval\u00f3s\u00edt\u00e1s:</p> <pre><code>public class UserDAOImpl implements UserDAO{\n\nprivate static UserDAOImpl instance;\nprivate static final String DB_CONN_STR = ContactConfiguration.getValue(\"db.url\");\n\npublic static UserDAOImpl getInstance() {\nif (instance == null) {\ntry {\nClass.forName(\"org.sqlite.JDBC\");\n} catch (ClassNotFoundException e1) {\ne1.printStackTrace();\n}\ninstance = new UserDAOImpl();\n}\nreturn instance;\n}\n\nprivate UserDAOImpl() {\n}\n\n@Override\npublic User getUserById(int id) {\ntry (Connection conn = DriverManager.getConnection(DB_CONN_STR);\nPreparedStatement pst = conn.prepareStatement(\"SELECT * FROM USER WHERE id = ?\")\n) {\npst.setInt(1, id);\n\nResultSet rs = pst.executeQuery();\nif (rs.next()) {\nUser u = new User();\nu.setId(rs.getInt(1));\nu.setUsername(rs.getString(2));\nu.setEmail(rs.getString(3));\nu.setPassword(rs.getString(4));\nreturn u;\n}\n\n} catch (SQLException e) {\ne.printStackTrace();\n}\nreturn null;\n}\n\n@Override\npublic void addUser(User user) {\n\ntry (Connection conn = DriverManager.getConnection(DB_CONN_STR);\nPreparedStatement pst = conn.prepareStatement(\"INSERT INTO USER (username, password, email) VALUES (?,?,?)\")\n) {\n\nString newPwd = BCrypt.withDefaults().hashToString(12, user.getPassword().toCharArray());\nuser.setPassword(newPwd);\npst.setString(1, user.getUsername());\npst.setString(2, user.getPassword());\npst.setString(3, user.getEmail());\n\npst.executeUpdate();\n} catch (SQLException e) {\ne.printStackTrace();\n}\n}\n\n@Override\npublic User login(String username, String password) {\n\ntry (Connection conn = DriverManager.getConnection(DB_CONN_STR);\nPreparedStatement pst = conn.prepareStatement(\"SELECT * FROM USER WHERE username = ?\")\n) {\npst.setString(1, username);\nResultSet rs = pst.executeQuery();\nif (rs.next()) {\n\nString dbPass = rs.getString(\"password\");\nBCrypt.Result result = BCrypt.verifyer().verify(password.toCharArray(), dbPass);\nif(result.verified){\nUser user = new User();\nuser.setUsername(rs.getString(\"username\"));\nuser.setPassword(rs.getString(\"password\"));\nuser.setEmail(rs.getString(\"email\"));\nuser.setId(rs.getInt(\"id\"));\nreturn user;\n}\n}\n\n} catch (SQLException e) {\ne.printStackTrace();\n}\n\nreturn null;\n}\n}\n</code></pre> <p>\u00c9rdemes megfigyelni, hogy a <code>UserDAOImpl</code> p\u00e9ld\u00e1nyos\u00edt\u00e1s\u00e1t a Singleton tervez\u00e9si minta ment\u00e9n k\u00e9sz\u00edtett\u00fck el, \u00edgy a <code>getInstance</code> h\u00edv\u00e1ssal k\u00e9rhet\u00fcnk majd egy ilyen p\u00e9ld\u00e1nyt (private konstruktor miatt k\u00edv\u00fclr\u0151l nem p\u00e9ld\u00e1nyos\u00edthat\u00f3).   A megismert mint\u00e1t alkalmazhatjuk a t\u00f6bbi DAO oszt\u00e1lyon is.</p> <p>Egy tov\u00e1bbi \u00e9rdekes r\u00e9sz, amikor az <code>addUser</code> met\u00f3dusban a jelsz\u00f3 hash-elt v\u00e1ltozat\u00e1t \u00e1ll\u00edtjuk el\u0151, tessz\u00fck ezt az\u00e9rt, mert nem szeretn\u00e9nk a nat\u00far sz\u00f6veges jelszavunkat menteni a DB-be.   Ehhez a bcrypt algoritmust haszn\u00e1ljuk, mely manaps\u00e1g egy javasolt hash-el\u00e9si algoritmus.   A JDK nem tartalmaz erre a c\u00e9lre be\u00e9p\u00edtett oszt\u00e1lyokat, \u00edgy egy k\u00fcl\u00f6n f\u00fcgg\u0151s\u00e9get haszn\u00e1lnuk.</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;at.favre.lib&lt;/groupId&gt;\n&lt;artifactId&gt;bcrypt&lt;/artifactId&gt;\n&lt;version&gt;0.9.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Jelen esetben a az alapbe\u00e1ll\u00edt\u00e1sokat haszn\u00e1ljuk (<code>withDefaults</code>), illetve \u00edgy \u00e1ll\u00edtjuk el\u0151 a hash string-et a password alapj\u00e1n.   Tov\u00e1bbi konfigur\u00e1ci\u00f3kat is megadhatunk, melyr\u0151l b\u0151vebben a lib github oldal\u00e1n tal\u00e1lunk le\u00edr\u00e1st.   Miut\u00e1n megvan a hash, ezt be\u00e1ll\u00edtjuk a user password-j\u00e9nek \u00e9s \u00edgy ezt mentj\u00fck az adatb\u00e1zisba.   Amikor bejelentkez\u00fcnk, akkor pedig a megadott jelsz\u00f3t veti \u00f6ssze a library az adatb\u00e1zisban szerepl\u0151vel:   <code>BCrypt.Result result = BCrypt.verifyer().verify(password.toCharArray(), dbPass);</code></p> </li> <li> <p>l\u00e9p\u00e9s: Contact DAO updatel\u00e9se</p> <p><code>ContactDAO.java</code> <pre><code>public interface ContactDAO {\n\nList&lt;Contact&gt; findAll();\nList&lt;Contact&gt; findAll(User user);\n\nContact save(Contact contact);\nvoid delete(Contact contact);\n\n}\n</code></pre></p> <p>A <code>ContactDAO</code> \u00fagy v\u00e1ltozik meg, hogy a <code>findAll</code> param\u00e9ter\u00e9ben egy <code>User</code>-t is \u00e1tadunk.   A ment\u00e9skor szeretn\u00e9nk jel\u00f6lni, hogy az \u00faj\u00f6nnan l\u00e9trehozott kontakt melyik felhaszn\u00e1l\u00f3hoz tartozik (ezt most m\u00e1r a <code>Contact</code> modellben elt\u00e1roljuk), illetve, amikor lek\u00e9rdez\u00fcnk, akkor egy felhaszn\u00e1l\u00f3hoz tartoz\u00f3 kontaktot list\u00e1j\u00e1t adjuk vissza.   Mivel az asztali alkalmaz\u00e1sunkban nem kezelt\u00fcnk felhaszn\u00e1l\u00f3kat \u00e9s nem is fogunk m\u00e1r visszamenni arra a pontra, hogy ezt implement\u00e1ljunk, ez\u00e9rt az eredeti f\u00fcggv\u00e9nylenyomatokat meghagyjuk \u00e9s biztos\u00edtunk olyan lehet\u0151s\u00e9get, melyben a <code>User</code> is megadhat\u00f3.   Ennek t\u00fckr\u00e9ben a <code>ContactDAOImpl</code> a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>public class ContactDAOImpl implements ContactDAO{\n\nprivate static final String SELECT_ALL_CONTACTS = \"SELECT * FROM CONTACT\";\nprivate static final String SELECT_ALL_CONTACTS_BY_USER = \"SELECT * FROM CONTACT WHERE user_id = ?\";\nprivate static final String INSERT_CONTACT = \"INSERT INTO CONTACT (name, email, address, dateOfBirth, company, position, user_id) VALUES (?,?,?,?,?,?,?)\";\nprivate static final String UPDATE_CONTACT = \"UPDATE CONTACT SET name=?, email = ?, address = ?, dateOfBirth=?, company=?, position = ? WHERE id=?\";\nprivate static final String DELETE_CONTACT = \"DELETE FROM CONTACT WHERE id = ?\";\nprivate String connectionURL;\nprivate PhoneDAO phoneDAO = new PhoneDAOImpl();\nprivate UserDAO userDAO = UserDAOImpl.getInstance();\npublic ContactDAOImpl(){\ntry {\nClass.forName(\"org.sqlite.JDBC\");\n} catch (ClassNotFoundException e) {\ne.printStackTrace();\n}\nconnectionURL = ContactConfiguration.getValue(\"db.url\");\n}\n\n@Override\npublic List&lt;Contact&gt; findAll() {\nreturn findAll(null);\n}\n\n@Override\npublic List&lt;Contact&gt; findAll(User user) {\nList&lt;Contact&gt; result = new ArrayList&lt;&gt;();\n\ntry(Connection c = DriverManager.getConnection(connectionURL);\n){\nResultSet rs;\nif(user == null){\nStatement stmt = c.createStatement();\nrs = stmt.executeQuery(SELECT_ALL_CONTACTS);\n}\nelse{\nPreparedStatement stmt = c.prepareStatement(SELECT_ALL_CONTACTS_BY_USER);\nstmt.setInt(1, user.getId());\nrs = stmt.executeQuery();\n}\nwhile(rs.next()){\nContact contact = new Contact();\ncontact.setId(rs.getInt(\"id\"));\ncontact.setName(rs.getString(\"name\"));\ncontact.setEmail(rs.getString(\"email\"));\ncontact.setAddress(rs.getString(\"address\"));\nDate date = Date.valueOf(rs.getString(\"dateOfBirth\"));\ncontact.setDateOfBirth(date == null ? LocalDate.now() : date.toLocalDate());\ncontact.setCompany(rs.getString(\"company\"));\ncontact.setPosition(rs.getString(\"position\"));\ncontact.setPhones(phoneDAO.findAllByContactId(contact.getId()));\ncontact.setUser(userDAO.getUserById(rs.getInt(\"user_id\")));\nresult.add(contact);\n\n}\n\n} catch (SQLException throwables) {\nthrowables.printStackTrace();\n}\n\nreturn result;\n}\n\n@Override\npublic Contact save(Contact contact) {\ntry(Connection c = DriverManager.getConnection(connectionURL);\nPreparedStatement stmt = contact.getId() &lt;= 0 ? c.prepareStatement(INSERT_CONTACT, Statement.RETURN_GENERATED_KEYS) : c.prepareStatement(UPDATE_CONTACT)\n){\nif(contact.getId() &gt; 0){ // UPDATE\nstmt.setInt(7, contact.getId());\n}\nelse{\nif(contact.getUser() != null){\nstmt.setInt(7, contact.getUser().getId());\n}\n}\nstmt.setString(1, contact.getName());\nstmt.setString(2, contact.getEmail());\nstmt.setString(3, contact.getAddress());\nstmt.setString(4, contact.getDateOfBirth().toString());\nstmt.setString(5, contact.getCompany());\nstmt.setString(6, contact.getPosition());\n\nint affectedRows = stmt.executeUpdate();\nif(affectedRows == 0){\nreturn null;\n}\n\nif(contact.getId() &lt;= 0){ // INSERT\nResultSet genKeys = stmt.getGeneratedKeys();\nif(genKeys.next()){\ncontact.setId(genKeys.getInt(1));\n}\n}\n\n} catch (SQLException throwables) {\nthrowables.printStackTrace();\nreturn null;\n}\n\nreturn contact;\n}\n\n// delete is unmodified\n}\n</code></pre> </li> <li> <p>l\u00e9p\u00e9s: login updatel\u00e9se</p> <p>A login oldalon alapvet\u0151en marad minden \u00fagy, ahogy volt de egy linket hozz\u00e1adunk, hogy a regisztr\u00e1l\u00e1s oldalra \u00e1t tudjunk navig\u00e1lni abban az esetben ha m\u00e9g nem volt l\u00e9trehozott fi\u00f3kunk.</p> <pre><code>&lt;span&gt;&lt;a href=\"register.jsp\"&gt;Register&lt;/a&gt;&lt;/span&gt;\n</code></pre> </li> <li> <p>l\u00e9p\u00e9s: LoginController updatel\u00e9se:</p> <p>Ahhoz, hogy a bejentkez\u00e9s az \u00faj DAO-val egy\u00fcttm\u0171k\u00f6dj\u00f6n, a LoginController-ben is kell n\u00e9h\u00e1ny m\u00f3dos\u00edt\u00e1st eszk\u00f6z\u00f6ln\u00fcnk.   Itt m\u00e1r felhaszn\u00e1ljuk a DAO ny\u00fajtotta <code>login</code> met\u00f3dust.</p> <pre><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nrequest.setCharacterEncoding(\"utf-8\");\nresponse.setCharacterEncoding(\"utf-8\");\n\nUserDAO userDAO = UserDAOImpl.getInstance();\n\nString username = request.getParameter(\"username\");\nString password = request.getParameter(\"password\");\n\nUser user = userDAO.login(username, password);\n\nif( user == null){\nresponse.sendRedirect(\"pages/login.jsp\");\nreturn;\n}\n\nrequest.getSession().setAttribute(\"currentUser\", user);\nresponse.sendRedirect(\"pages/list-contact.jsp\");\n}\n</code></pre> </li> <li> <p>l\u00e9p\u00e9s: regisztr\u00e1ci\u00f3s form</p> <p>A regisztr\u00e1ci\u00f3s form valahogy \u00edgy n\u00e9zhet ki:  <pre><code> &lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;jsp:include page=\"../WEB-INF/common/common-header.jsp\"/&gt;\n&lt;title&gt;Register&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=\"container\"&gt;\n&lt;form action=\"../RegisterController\" method=\"post\"&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"username\"&gt;Username&lt;/label&gt;\n&lt;input required name=\"username\" type=\"text\" class=\"form-control\" id=\"username\"\nplaceholder=\"Username\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"password\"&gt;Password&lt;/label&gt;\n&lt;input required name=\"password\" type=\"password\" class=\"form-control\" id=\"password\"\nplaceholder=\"Password\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"email\"&gt;Email&lt;/label&gt;\n&lt;input required name=\"email\" type=\"email\" class=\"form-control\" id=\"email\"\nplaceholder=\"Email\"/&gt;\n&lt;/div&gt;\n&lt;button id=\"submit\" type=\"submit\" class=\"btn btn-primary\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>A regisztr\u00e1ci\u00f3s formban be\u00e9rj\u00fck a felhaszn\u00e1l\u00f3nevet, a jelsz\u00f3t \u00e9s az email c\u00edmet.   A regisztr\u00e1ci\u00f3s form az adatokat tov\u00e1bbk\u00fcldi a <code>RegisterController</code>-nek, mely az adatr\u00e9tegnek tov\u00e1bbk\u00fcldi a regisztr\u00e1ci\u00f3s k\u00e9relmet.</p> <p><pre><code>@WebServlet(\"/RegisterController\")\npublic class RegisterController extends HttpServlet {\n\nUserDAO dao = UserDAOImpl.getInstance();\n\n@Override\nprotected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\nreq.setCharacterEncoding(\"utf-8\");\nresp.setCharacterEncoding(\"utf-8\");\nUser user = new User();\nuser.setUsername(req.getParameter(\"username\"));\nuser.setEmail(req.getParameter(\"email\"));\nuser.setPassword(req.getParameter(\"password\"));\n\ndao.addUser(user);\n\nresp.sendRedirect(\"pages/login.jsp\");\n}\n}\n</code></pre>   Jelen esetben semmilyen jelleg\u0171 ellen\u0151rz\u00e9s nincs, amivel a regisztr\u00e1ci\u00f3 sikeress\u00e9g\u00e9t ellen\u0151rizz\u00fck.</p> </li> <li> <p>l\u00e9p\u00e9s: Alak\u00edtsunk a hozz\u00e1ad\u00e1son \u00e9s a list\u00e1z\u00e1son az \u00fajfajta DAO-nak megfelel\u0151en (kell egy user, akihez tartoz\u00f3 kontaktokat szeretn\u00e9nk list\u00e1zni, illetve akinek szeretn\u00e9nk \u00faj kontaktot l\u00e9trehozni).</p> <p>Az egyik igen fontos pont, hogy a <code>list-contact.jsp</code>-ben beh\u00fazzuk a <code>ContactController</code>-t, melynek ilyen m\u00f3don a <code>doGet</code> met\u00f3dusa fog lefutni, mely az al\u00e1bbit teszi:</p> <pre><code>...\nprivate ContactDAO dao = new ContactDAOImpl();\n\n@Override\nprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\nUser currentUser = (User) req.getSession().getAttribute(\"currentUser\");\nList&lt;Contact&gt; all = dao.findAll(currentUser);\nreq.setAttribute(\"contactList\", all);\n}\n...\n</code></pre> <p>A session alapj\u00e1n lek\u00e9rj\u00fck az aktu\u00e1lis felhaszn\u00e1l\u00f3t \u00e9s csak a hozz\u00e1 tartoz\u00f3 kontaktokat adjuk vissza.</p> <p>A hozz\u00e1ad\u00e1s form-ja nem v\u00e1ltozott, csak a common header r\u00e9sz miatt.</p> <p>Elk\u00fcldj\u00fck a <code>ContactController</code>-nek az \u00f6sszes sz\u00fcks\u00e9ges param\u00e9tert.   A doPost a k\u00f6vetkez\u0151k\u00e9ppen m\u00f3dosul:</p> <pre><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nrequest.setCharacterEncoding(\"utf-8\");\n// setup params\n...\nUser currentUser = (User) request.getSession().getAttribute(\"currentUser\");\nc.setUser(currentUser);\n\nc = dao.save(c);\n...\n// saving phones\n\n}\n</code></pre> <p>Fontos, hogy a request encoding-j\u00e1t is UTF-8-ra \u00e1ll\u00edtsuk be, m\u00e1sk\u00fcl\u00f6nben az adatb\u00e1zisba is rossz encoding-al ker\u00fcl be az \u00faj kontakt (<code>request.setCharacterEncoding(\"utf-8\");</code>).</p> </li> <li> <p>l\u00e9p\u00e9s: L\u00e9nyeg\u00e9ben k\u00e9sz vagyunk, de egy-k\u00e9t dolog m\u00e9g kimaradt, mint p\u00e9ld\u00e1ul a logout \u00e1talak\u00edt\u00e1sa.</p> <p>Eddig a cookie-ban volt csak az aktu\u00e1lis user, most viszont a sessionben t\u00e1roljuk, \u00edgy ezt is \u00e1t kell alak\u00edtanunk kicsit.</p> <pre><code>protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nrequest.getSession().removeAttribute(\"username\");\n\nresponse.sendRedirect(\"pages/login.jsp\");\n}\n</code></pre> <p>Szimpl\u00e1n t\u00f6r\u00f6lj\u00fck a sessionb\u0151l a <code>currentUser</code> attrib\u00fatumot, illetve a login oldalra kalauzoljuk a felhaszn\u00e1l\u00f3t.</p> </li> <li> <p>l\u00e9p\u00e9s: Men\u00fc update:</p> <p>A men\u00fcs\u00e1v jobb oldal\u00e1n ki\u00edrjuk az aktu\u00e1lis felhaszn\u00e1l\u00f3 nev\u00e9t, illetve az itteni leny\u00edl\u00f3 men\u00fcben biztos\u00edtjuk, hogy a felhaszn\u00e1l\u00f3 ki tudjon jelentkezni.   A men\u00fcs\u00e1v szint\u00e9n a cookie-t haszn\u00e1lta eddig, \u00edgy ezt is \u00e1t kell alak\u00edtani. Az idev\u00e1g\u00f3 k\u00f3dr\u00e9szlet:</p> <pre><code>&lt;c:if test=\"${sessionScope.currentUser.username != null}\"&gt;\n&lt;li class=\"nav-item dropdown ml-auto\"&gt;\n&lt;a class='nav-link dropdown-toggle' href='#' id='navbarDropdownMenuLink' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'&gt;\n${sessionScope.currentUser.username}\n        &lt;/a&gt;\n&lt;div class='dropdown-menu dropdown-menu-right' aria-labelledby='navbarDropdownMenuLink'&gt;\n&lt;a class='dropdown-item' href='../LogoutController'&gt;Kijelentkez\u00e9s&lt;/a&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;/c:if&gt;\n</code></pre> </li> <li> <p>l\u00e9p\u00e9s: Filterez\u00e9s</p> <p>A login megold\u00e1sunk m\u00e1r eg\u00e9szen t\u0171rhet\u0151, azonban jelen helyzetben, ha a valamelyik oldalra navig\u00e1lunk direktben, akkor az oldalt megpr\u00f3b\u00e1lja bet\u00f6lteni a rendszer.   A megfelel\u0151 m\u0171k\u00f6d\u00e9s az volna, hogy legal\u00e1bb a session-t ellen\u0151rizz\u00fck, hogy be van-e jelentkezve a felhaszn\u00e1l\u00f3.   Amennyiben igen, akkor az adott oldalra engedj\u00fck, m\u00e1sk\u00fcl\u00f6nben visszha\u00edr\u00e1ny\u00edtjuk a login oldalra.   Mivel a filterez\u00e9st minden lehets\u00e9ges oldalra szeretn\u00e9nk v\u00e9grehajtani, \u00edgy az a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>@WebFilter(\"/*\")\npublic class AuthFilter implements Filter {\n\nprivate List&lt;String&gt; exclusions;\n\n@Override\npublic void init(FilterConfig filterConfig) throws ServletException {\nthis.exclusions = Arrays.asList(filterConfig.getServletContext().getInitParameter(\"login-filter-exclusion\").split(\",\"));\nthis.exclusions.replaceAll(String::trim);\n}\n\n@Override\npublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n\nString path = ((HttpServletRequest) request).getServletPath();\nif (exclusions.stream().anyMatch(path::equals)) {\nchain.doFilter(request, response);\nreturn;\n}\n\nUser currentUser = (User) ((HttpServletRequest) request).getSession().getAttribute(\"currentUser\");\n\nif (currentUser == null) {\n((HttpServletResponse)response).sendRedirect(((HttpServletRequest) request).getContextPath() + \"/pages/login.jsp\");\n}\nelse{\nchain.doFilter(request, response);\n}\n}\n}\n</code></pre> <p>A filterez\u00e9sn\u00e9l a <code>/*</code>-al mondjuk meg, hogy minden k\u00e9r\u00e9sre szeretn\u00e9nk futtatni a filtert.   Mivel van t\u00f6bb oldal is, amin azonban nem szeretn\u00e9nk, ha a filter lefutna, \u00edgy ezeket valamilyen m\u00f3don meg kell adnunk.   Sajnos kiv\u00e9teleket nem tudunk megadni a filter url-patter r\u00e9szn\u00e9l, ez\u00e9rt a <code>web.xml</code>-ben adjuk meg azokat az url-eket, melyekre nem szeretn\u00e9nk filterez\u00e9st v\u00e9grehajtani.   M\u00e9g egy technikai probl\u00e9m, hogy egy param-hoz nem tudunk t\u00f6bb \u00e9rt\u00e9ket megadni, \u00edgy vessz\u0151vel elv\u00e1lasztva adjuk ezt meg.   A Filter-ben pedig a vessz\u0151k ment\u00e9n feldaraboljuk a string-et (init-ben).</p> <pre><code>&lt;context-param&gt;\n&lt;param-name&gt;login-filter-exclusion&lt;/param-name&gt;\n&lt;param-value&gt;\n/index.jsp,\n        /pages/login.jsp,\n        /LoginController,\n        /pages/register.jsp,\n        /RegisterController,\n        /css/style.css\n    &lt;/param-value&gt;\n&lt;/context-param&gt;\n</code></pre> <p>A doFilter met\u00f3dusban megvizsg\u00e1ljuk, hogy az aktu\u00e1lis k\u00e9r\u00e9s url-je (context url n\u00e9lk\u00fcl) megegyezik-e a megadott lista b\u00e1rmely elem\u00e9vel.   Amennyiben tal\u00e1lunk ilyet, akkor tov\u00e1bbengedj\u00fck a k\u00e9r\u00e9st, m\u00e1sk\u00fcl\u00f6nben megvizsg\u00e1ljuk, hogy be vagyunk-e jelentkezve.   Ha a session-ben tal\u00e1lunk bejelentkezett felhaszn\u00e1l\u00f3t, akkor tov\u00e1bbengedj\u00fck a k\u00e9r\u00e9st, m\u00e1sk\u00fcl\u00f6nben a login-ra ir\u00e1ny\u00edtjuk.</p> </li> </ol> <p>Ez egy komplexebb feladat volt, de l\u00e9p\u00e9senk\u00e9nt sz\u00e9pen fel lehetett \u00e9p\u00edteni az alkalmaz\u00e1s megfelel\u0151 m\u0171k\u00f6d\u00e9s\u00e9t. A megold\u00e1s megtal\u00e1lhat\u00f3 a pub-on <code>01-contacts-user</code> mapp\u00e1ban.</p>"},{"location":"10_gyakorlat/#profil-hozzaadasa","title":"Profil hozz\u00e1ad\u00e1sa","text":"<p>Feladat</p> <p>B\u0151v\u00edts\u00fck az alkalmaz\u00e1st egy profil oldallal, ahol megadhatunk profilk\u00e9pet, le\u00edr\u00e1st is. Az oldalon lehessen updatelni a felhaszn\u00e1l\u00f3 tulajdons\u00e1gait (jelsz\u00f3t nem kell).</p> <p>Els\u0151k\u00e9nt b\u0151v\u00edts\u00fck a <code>User</code> oszt\u00e1lyt a k\u00e9p \u00e9s a le\u00edr\u00e1s opci\u00f3kkal!</p> <pre><code>private StringProperty description = new SimpleStringProperty();\nprivate StringProperty profilePic = new SimpleStringProperty();\n\n// getters and setters\n</code></pre> <p>A <code>UserDAO</code>-t m\u00f3dos\u00edtsuk \u00fagy, hogy az az <code>update</code>-re is k\u00e9pes legyen. Ehhez az <code>addUser</code>-t refaktor\u00e1ljuk, hogy <code>save</code>-nek h\u00edvj\u00e1k!</p> <pre><code>User save(User user);\n</code></pre> <p>Az implement\u00e1ci\u00f3t pedig a k\u00f6vetkez\u0151k\u00e9ppen m\u00f3dos\u00edtsuk:</p> <pre><code>...\nprivate static final String INSERT_USER = \"INSERT INTO USER (username, email, profilePic, description, password) VALUES (?,?,?,?,?)\";\nprivate static final String UPDATE_USER = \"UPDATE User SET username=?, email=?, profilePic=?, description=? WHERE id=?\";\n...\n@Override\npublic User save(User user) {\n\ntry (Connection conn = DriverManager.getConnection(DB_CONN_STR);\nPreparedStatement pst = user.getId() &lt;= 0 ? conn.prepareStatement(INSERT_USER, Statement.RETURN_GENERATED_KEYS) : conn.prepareStatement(UPDATE_USER)\n) {\npst.setString(1, user.getUsername());\npst.setString(2, user.getEmail());\npst.setString(3, user.getProfilePic());\npst.setString(4, user.getDescription());\n\nif(user.getId() &gt; 0) { // UPDATE\npst.setInt(5, user.getId());\n}\nelse{ // INSERT\nString hashedPwd = BCrypt.withDefaults().hashToString(12, user.getPassword().toCharArray());\npst.setString(5, hashedPwd);\n}\n\nint affectedRows = pst.executeUpdate();\nif(affectedRows == 0){\nreturn null;\n}\n\nif(user.getId() &lt;= 0){ // INSERT\nResultSet genKeys = pst.getGeneratedKeys();\nif(genKeys.next()){\nuser.setId(genKeys.getInt(1));\n}\n}\n\nuser.setPassword(\"\"); // do not return even the hashed password for the caller\n\n} catch (SQLException e) {\ne.printStackTrace();\n}\n\nreturn user;\n\n}\n</code></pre> <p>Ahhoz, hogy megfelel\u0151en m\u0171k\u00f6djenek az adatb\u00e1zis m\u0171veletek m\u00f3dos\u00edtanunk kell a DB s\u00e9m\u00e1t is:</p> <pre><code>create table USER\n(\nid INTEGER not null\nconstraint USER_pk\nprimary key autoincrement,\nusername text not null,\npassword text not null,\nemail text not null,\nprofilePic text,\ndescription text\n);\n</code></pre> <p>A regisztr\u00e1l\u00e1si oldalon most nem v\u00e1ltoztatunk, \u00edgy n\u00e9zz\u00fck a profil oldalt!</p> <pre><code>&lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %&gt;\n&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;jsp:include page=\"../WEB-INF/common/common-header.jsp\"/&gt;\n&lt;script src=\"../js/profile.js\" &gt;&lt;/script&gt;\n&lt;title&gt;Profile&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;jsp:include page=\"../WEB-INF/common/menu.jsp\"/&gt;\n\n\n&lt;div class=\"container bootstrap snippet\"&gt;\n&lt;div class=\"row\"&gt;\n&lt;div class=\"col-sm-10\"&gt;&lt;h1&gt;${sessionScope.currentUser.username}&lt;/h1&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"row\"&gt;\n&lt;div class=\"col-sm-3\"&gt;&lt;!--left col--&gt;\n&lt;div class=\"text-center\"&gt;\n&lt;c:choose&gt;\n&lt;c:when test=\"${sessionScope.currentUser.profilePic.length() &gt; 0}\"&gt;\n&lt;img src=\"${sessionScope.currentUser.profilePic}\" class=\"avatar img-circle img-thumbnail\"\nalt=\"avatar\"&gt;\n&lt;/c:when&gt;\n&lt;c:otherwise&gt;\n&lt;img src=\"http://ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"avatar img-circle img-thumbnail\"\nalt=\"avatar\"&gt;\n&lt;/c:otherwise&gt;\n&lt;/c:choose&gt;\n\n&lt;h6&gt;Upload a different photo...&lt;/h6&gt;\n&lt;input type=\"file\" class=\"text-center center-block file-upload\"&gt;\n&lt;/div&gt;\n&lt;br&gt;\n\n&lt;/div&gt;&lt;!--/col-3--&gt;\n&lt;div class=\"col-sm-9\"&gt;\n&lt;div class=\"tab-content\"&gt;\n&lt;div class=\"tab-pane active\" id=\"home\"&gt;\n&lt;hr&gt;\n&lt;form class=\"form\" action=\"../UserController\" method=\"post\"&gt;\n&lt;div class=\"form-group\"&gt;\n\n&lt;div class=\"col-xs-6\"&gt;\n&lt;label for=\"name\"&gt;&lt;h4&gt;Name&lt;/h4&gt;&lt;/label&gt;\n&lt;input type=\"text\" class=\"form-control\" name=\"name\" id=\"name\"\nplaceholder=\"Name\" value=\"${sessionScope.currentUser.username}\"&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;div class=\"col-xs-6\"&gt;\n&lt;label for=\"email\"&gt;&lt;h4&gt;Email&lt;/h4&gt;&lt;/label&gt;\n&lt;input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\"\nplaceholder=\"your@email.com\" value=\"${sessionScope.currentUser.email}\"&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;div class=\"col-xs-6\"&gt;\n&lt;label for=\"description\"&gt;&lt;h4&gt;Description&lt;/h4&gt;&lt;/label&gt;\n&lt;input type=\"text\" class=\"form-control\" name=\"description\" id=\"description\"\nplaceholder=\"a short description\" value=\"${sessionScope.currentUser.description}\"&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;div class=\"col-xs-12\"&gt;\n&lt;br&gt;\n&lt;button class=\"btn btn-primary\" type=\"submit\"&gt;&lt;i\nclass=\"glyphicon glyphicon-ok-sign\"&gt;&lt;/i&gt; Save\n                                &lt;/button&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/form&gt;\n\n&lt;/div&gt;&lt;!--/tab-pane--&gt;\n&lt;/div&gt;&lt;!--/tab-content--&gt;\n\n&lt;/div&gt;&lt;!--/col-9--&gt;\n&lt;/div&gt;&lt;!--/row--&gt;\n\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>A fontosabb sorokat kiemelt\u00fck a k\u00f6nnyebbs\u00e9g v\u00e9gett. Mivel szeretn\u00e9nk egy olyan m\u0171k\u00f6d\u00e9st, melynek sor\u00e1n biztos\u00edtjuk, hogy \u00faj k\u00e9p kiv\u00e1laszt\u00e1sa eset\u00e9n a profilk\u00e9pet egyb\u0151l meg is jelen\u00edtj\u00fck, \u00edgy ezt jQuery seg\u00edts\u00e9g\u00e9vel oldjuk meg, melyet az els\u0151 kiemelt sor h\u00faz be. A profil friss\u00edt\u00e9sekor a <code>UserController</code>-hez k\u00fcldj\u00fck a k\u00e9r\u00e9st, ahol az aktu\u00e1lisan bejelentkezett felhaszn\u00e1l\u00f3 adatait m\u00f3dos\u00edtjuk (kiv\u00e9ve a jelsz\u00f3t).</p> <p>El\u0151sz\u00f6r l\u00e1ssuk a <code>profile.js</code> \u00e1llom\u00e1nyt:</p> <pre><code>$(document).ready(function() {\n\nlet readURL = function(input) {\nif (input.files &amp;&amp; input.files[0]) {\nlet reader = new FileReader();\n\nreader.onload = function (e) {\n$('.avatar').attr('src', e.target.result);\n}\n\nreader.readAsDataURL(input.files[0]);\n}\n}\n\n$(\".file-upload\").on('change', function(){\nreadURL(this);\n});\n\n$(\".form\").submit( function(eventObj) {\n$(\"&lt;input /&gt;\").attr(\"type\", \"hidden\")\n.attr(\"name\", \"profilePic\")\n.attr(\"value\", $('.avatar').attr('src') )\n.appendTo(\".form\");\nreturn true;\n});\n});\n</code></pre> <p>Minden esetben, amikor v\u00e1ltozik a kiv\u00e1lasztott k\u00e9p, akkor beolvassuk a k\u00e9pet egy <code>FileReader</code> seg\u00edts\u00e9g\u00e9vel, majd ezt \u00e1ll\u00edtjuk be a profilk\u00e9p <code>src</code> attrib\u00fatum\u00e1nak. Amikor a form-ot submit-elj\u00fck, akkor egy rejtett input field-ben adjuk \u00e1t a <code>profilePic</code> nev\u0171 attrib\u00fatumot a formData-ban, hogy ezt k\u00f6nnyen feldolgozhassuk a szerver oldalon.</p> <p>Az elk\u00fcld\u00f6tt inform\u00e1ci\u00f3k feldolgoz\u00e1s\u00e1t a <code>UserController</code> <code>doPost</code> met\u00f3dusa v\u00e9gzi:</p> <pre><code>@Override\nprotected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n\nUser user = (User) req.getSession().getAttribute(\"currentUser\");\n\nif(req.getParameter(\"name\") != null &amp;&amp; !req.getParameter(\"name\").isEmpty()){\nuser.setUsername(req.getParameter(\"name\"));\n}\n\nif(req.getParameter(\"email\") != null &amp;&amp; !req.getParameter(\"email\").isEmpty()){\nuser.setEmail(req.getParameter(\"email\"));\n}\n\nif(req.getParameter(\"profilePic\") != null &amp;&amp; !req.getParameter(\"profilePic\").isEmpty()){\nuser.setProfilePic(req.getParameter(\"profilePic\"));\n}\n\nif(req.getParameter(\"description\") != null &amp;&amp; !req.getParameter(\"description\").isEmpty()){\nuser.setDescription(req.getParameter(\"description\"));\n}\n\nuser = userDAO.save(user);\n\nreq.getSession().setAttribute(\"currentUser\", user);\nresp.sendRedirect(\"pages/profile.jsp\");\n}\n</code></pre> <p>Els\u0151k\u00e9nt a session-b\u0151l kiszedj\u00fck az aktu\u00e1lis felhaszn\u00e1l\u00f3t, majd friss\u00edtj\u00fck az attrib\u00fatumait \u00e9s elmentj\u00fck az adatb\u00e1zisban, majd friss\u00edtj\u00fck a sessionben l\u00e9v\u0151 <code>currentUser</code> objektumot.</p> <p>Miut\u00e1n ezekkel megvagyunk, helyezz\u00fck el a men\u00fcben is a profil men\u00fcpontot:</p> <pre><code>...\n&lt;div class='dropdown-menu dropdown-menu-right' aria-labelledby='navbarDropdownMenuLink'&gt;\n&lt;a class='dropdown-item' href='../pages/profile.jsp'&gt;Profile&lt;/a&gt;\n&lt;a class='dropdown-item' href='../LogoutController'&gt;Logout&lt;/a&gt;\n&lt;/div&gt;\n...\n</code></pre>"},{"location":"10_gyakorlat/#torles-es-modositas","title":"T\u00f6rl\u00e9s \u00e9s m\u00f3dos\u00edt\u00e1s","text":"<p>Feladat</p> <p>B\u0151v\u00edts\u00fck az alkalmaz\u00e1st t\u00f6rl\u00e9s \u00e9s m\u00f3dos\u00edt\u00e1s elemekkel</p> <p>Els\u0151k\u00e9nt helyezz\u00fck el a t\u00f6rl\u00e9s \u00e9s m\u00f3dos\u00edt\u00e1s ikonokat a list\u00e1ban! Ezekhez az ikonokhoz font-awesome-t haszn\u00e1lunk, \u00edgy azt a <code>common-header.jsp</code>-ben be kell h\u00faznunk!</p> <p><code>common-header.jsp</code>:</p> <pre><code>...\n&lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\"&gt;\n...\n</code></pre> <p>Ezut\u00e1n a <code>list-contact.jsp</code> oldalon adjunk hozz\u00e1 egy \u00faj oszlopot, melyben ezek az ikonok lesznek megjelen\u00edtve:</p> <pre><code>...\n&lt;th scope=\"col\"&gt;Actions&lt;/th&gt;\n...\n&lt;td&gt;\n&lt;a href=\"../UpdateContactController?contactId=${item.id}\"&gt;&lt;i class=\"fas fa-edit\"&gt;&lt;/i&gt;&lt;/a&gt;\n&lt;a href=\"../DeleteContactController?contactId=${item.id}\"&gt;&lt;i class=\"fas fa-trash\"&gt;&lt;/i&gt;&lt;/a&gt;\n&lt;/td&gt;\n...\n</code></pre> <p>Kezdj\u00fcnk az <code>UpdateContactController</code> megval\u00f3s\u00edt\u00e1s\u00e1val:</p> <pre><code>@WebServlet(\"/UpdateContactController\")\npublic class UpdateContactController extends HttpServlet {\nprivate ContactDAO dao = new ContactDAOImpl();\n\n@Override\nprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\nString contactIdStr = req.getParameter(\"contactId\");\n\nif(contactIdStr != null &amp;&amp; !contactIdStr.isEmpty()){\nint contactId = Integer.parseInt(contactIdStr);\nContact contact = dao.findById(contactId);\nreq.setAttribute(\"contact\", contact);\n}\n\nreq.getRequestDispatcher(\"pages/add-contact.jsp\").forward(req, resp);\n}\n}\n</code></pre> <p>Maga az update nem egy bonyolult konstrukci\u00f3. A queryString-ben elk\u00fcld\u00f6tt param\u00e9ter alapj\u00e1n lek\u00e9rj\u00fck a megfelel\u0151 kontaktot, majd ezt a k\u00e9r\u00e9sben, mint attrib\u00fatum elhelyezz\u00fck. Ezek ut\u00e1n a a k\u00e9r\u00e9st tov\u00e1bb\u00edtjuk a <code>add-contact.jsp</code> oldalnak (mely ebben a form\u00e1ban lehet, hogy meg\u00e9rett egy \u00e1tnevez\u00e9sre, de most ezzel nem foglalkozunk). Itt pedig ki fogjuk olvasni a k\u00e9r\u00e9sben elhelyezett attrib\u00fatum \u00f6sszes \u00e9rt\u00e9k\u00e9t \u00e9s ezzel t\u00f6ltj\u00fck fel a fel\u00fcleti vez\u00e9rl\u0151ket.</p> <pre><code>&lt;%@ page import=\"hu.alkfejl.model.Phone\" %&gt;\n&lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %&gt;\n&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %&gt;\n\n&lt;html&gt;\n&lt;head&gt;\n&lt;jsp:include page=\"../WEB-INF/common/common-header.jsp\"/&gt;\n&lt;script src=\"${pageContext.request.contextPath}/js/add-contact.js\"&gt;&lt;/script&gt;\n&lt;title&gt;Add Contact&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;jsp:include page=\"../WEB-INF/common/menu.jsp\"/&gt;\n&lt;jsp:useBean id=\"contact\" class=\"hu.alkfejl.model.Contact\" scope=\"request\" /&gt;\n&lt;div class=\"container\"&gt;\n&lt;form action=\"${pageContext.request.contextPath}/ContactController\" method=\"post\"&gt;\n&lt;input type=\"hidden\" name=\"id\" value=\"${contact.id}\" /&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"name\"&gt;Name&lt;/label&gt;\n&lt;input required name=\"name\" type=\"text\" class=\"form-control\" id=\"name\"\nplaceholder=\"Enter name\" value=\"${contact.name}\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"email\"&gt;Email&lt;/label&gt;\n&lt;input required name=\"email\" type=\"email\" class=\"form-control\" id=\"email\"\nplaceholder=\"Email\" value=\"${contact.email}\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"dateOfBirth\"&gt;Date of Birth&lt;/label&gt;\n&lt;input required id=\"dateOfBirth\" name=\"dateOfBirth\" type=\"date\" class=\"form-control\"\nplaceholder=\"Date of Birth\" value=\"${contact.dateOfBirth}\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label&gt;Phones&lt;/label&gt;\n&lt;c:if test=\"${contact.phones.size() &gt; 0}\"&gt;\n&lt;c:forEach var=\"phone\" items=\"${contact.phones}\"&gt;\n&lt;div class=\"row\"&gt;\n&lt;div class=\"col\"&gt;\n&lt;input name=\"phoneValues\" type=\"text\" class=\"form-control mb-3\"\nplaceholder=\"Enter phone number\" value=\"${phone.number}\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"col\"&gt;\n&lt;select name=\"phoneTypes\" class=\"custom-select\"&gt;\n&lt;c:forEach var=\"phoneType\" items=\"&lt;%=Phone.PhoneType.values()%&gt;\"&gt;\n&lt;c:if test=\"${phone.phoneType.value.equals(phoneType.value)}\"&gt;\n&lt;option selected=\"true\" value=\"${phoneType.value}\"&gt;${phoneType.value}&lt;/option&gt;\n&lt;/c:if&gt;\n&lt;c:if test=\"${!phone.phoneType.value.equals(phoneType.value)}\"&gt;\n&lt;option value=\"${phoneType.value}\"&gt;${phoneType.value}&lt;/option&gt;\n&lt;/c:if&gt;\n&lt;/c:forEach&gt;\n&lt;/select&gt;\n&lt;/div&gt;\n&lt;div class=\"col md-2\"&gt;\n&lt;c:if test=\"${phone.equals(contact.phones.get(contact.phones.size() - 1))}\"&gt;\n&lt;button type=\"button\" class=\"btn btn-secondary\" onclick=\"newRow(this)\"&gt;New&lt;/button&gt;\n&lt;/c:if&gt;\n&lt;c:if test=\"${!phone.equals(contact.phones.get(contact.phones.size() - 1))}\"&gt;\n&lt;button type=\"button\" class=\"btn btn-secondary\" onclick=\"deleteRow(this)\"&gt;Delete&lt;/button&gt;\n&lt;/c:if&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/c:forEach&gt;\n&lt;/c:if&gt;\n&lt;c:if test=\"${contact.phones == null or contact.phones.size() == 0}\"&gt;\n&lt;div class=\"row\"&gt;\n&lt;div class=\"col\"&gt;\n&lt;input name=\"phoneValues\" type=\"text\" class=\"form-control mb-3\"\nplaceholder=\"Enter phone number\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"col\"&gt;\n&lt;select name=\"phoneTypes\" class=\"custom-select\"&gt;\n&lt;c:forEach var=\"phoneType\" items=\"&lt;%=Phone.PhoneType.values()%&gt;\"&gt;\n&lt;option value=\"${phoneType.value}\"&gt;${phoneType.value}&lt;/option&gt;\n&lt;/c:forEach&gt;\n&lt;/select&gt;\n&lt;/div&gt;\n&lt;div class=\"col md-2\"&gt;\n&lt;button onclick=\"newRow(this)\" type=\"button\" class=\"btn btn-secondary\"&gt;New&lt;/button&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/c:if&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"address\"&gt;Address&lt;/label&gt;\n&lt;input id=\"address\" name=\"address\" type=\"text\" class=\"form-control\" id=\"address\"\nplaceholder=\"Address\" value=\"${contact.address}\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"company\"&gt;Company&lt;/label&gt;\n&lt;input id=\"company\" name=\"company\" type=\"text\" class=\"form-control\" id=\"company\"\nplaceholder=\"Company\" value=\"${contact.company}\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"address\"&gt;Position&lt;/label&gt;\n&lt;input id=\"position\" name=\"position\" type=\"text\" class=\"form-control\" id=\"position\"\nplaceholder=\"Position\" value=\"${contact.position}\"/&gt;\n&lt;/div&gt;\n&lt;button id=\"submit\" type=\"submit\" class=\"btn btn-primary\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>A fenti k\u00f3dr\u00e9szletben kiemelt\u00fck a fontosabb v\u00e1ltoztat\u00e1sokat. El\u0151sz\u00f6r is a forward miatt az <code>add-contact.js</code> el\u00e9r\u00e9se nem biztos lesz megfelel\u0151, \u00edgy a <code>pageContext.request.contextPath</code> URL-t haszn\u00e1ljuk, mely megadja a context \u00fatvonal\u00e1t (pl.: <code>http://localhost:8080/contacts_web_war</code>). Ezut\u00e1n az el\u0151zetesen a request-ben elhelyezett <code>contact</code> attrib\u00fatumot kiolvassuk a <code>useBean</code> seg\u00edts\u00e9g\u00e9vel, majd ezt fogjuk felhaszn\u00e1lni az oldalon, hogy felt\u00f6lts\u00fck a field-ek \u00e9rt\u00e9keit.</p> <p>A megl\u00e9v\u0151 input field-ek mellett hozz\u00e1adunk egy rejtett mez\u0151t az <code>id</code> sz\u00e1m\u00e1ra is, mivel err a feldolgoz\u00e1s sor\u00e1n sz\u00fcks\u00e9g\u00fcnk lesz, hiszen friss\u00edteni szeretn\u00e9nk. Ezen fel\u00fcl az \u00f6sszes field-hez megadjuk a <code>value=\"${contact.property}</code> attrib\u00fatumot, hogy ki is t\u00f6ltse az input-okat az aktu\u00e1lis \u00e9rt\u00e9kekkel.</p> <p>A telefonsz\u00e1mok eset\u00e9ben azonban \u00f6sszetettebb feladatunk van \u00e9s n\u00e9mi \u00e1tszervez\u00e9st is ig\u00e9nyel a feladat. Amennyiben a kontakthoz tartoznak telefonsz\u00e1mok, akkor azokat ki kell \u00edrnunk, illetve mindegyik mellett a <code>Delete</code> opci\u00f3t adjuk meg, kiv\u00e9ve az utols\u00f3n\u00e1l, ahol a <code>New</code> opci\u00f3t. Az els\u0151 <code>c:if</code>, akkor fut le, amikor vannak telefonsz\u00e1mok. Ebben az esetben v\u00e9gigiter\u00e1lunk a m\u00e1r megadott telefonsz\u00e1mokon \u00e9s mindegyikhez megadunk egy <code>div</code>-et (<code>row</code> class-al). Ki\u00edrjuk mag\u00e1t a telefonsz\u00e1mot (40. sor) egy vez\u00e9rl\u0151ben, majd egy leny\u00edl\u00f3ba belerakjuk az \u00f6sszes <code>phoneType</code> opci\u00f3t \u00e9s k\u00f6zben figyelj\u00fck, hogy ha az adott <code>phoneType</code> megegyezik azzal, ami ki volt v\u00e1lasztva, akkor r\u00e1ker\u00fcl a <code>selected</code> attrib\u00fatum is, azaz \u0151 lesz kiv\u00e1lasztva a fel\u00fcleten.</p> <p>A gombok megad\u00e1sakor (54-61. sor) figyelj\u00fck, hogy az utols\u00f3 elemn\u00e9l vagyunk-e. Az utols\u00f3 elemn\u00e9l a <code>New</code> sz\u00f6veg lesz a gombon, illetve a <code>newRow(this)</code> esem\u00e9nykezel\u0151t adjuk meg. Ellenkez\u0151 esetben a <code>Delete</code> sz\u00f6veget alkalmazzuk \u00e9s a <code>deleteRow(this)</code> esem\u00e9nykezel\u0151t. A <code>newRow</code> \u00e9s a <code>deleteRow</code> f\u00fcggv\u00e9nyeket az <code>add-contact.js</code>-ben adjuk meg, melyet szint\u00e9n m\u00f3dos\u00edtanunk kellett a kontakt friss\u00edt\u00e9s \u00e9rdek\u00e9ben. A 65-82. sorig tart\u00f3 r\u00e9szben szerepel az, amikor nincs megadva telefonsz\u00e1m a kontakhoz, amely alapj\u00e1n csak egy \u00fcres beviteli sort adunk meg.</p> <p>Ezut\u00e1n l\u00e1ssuk a m\u00f3dos\u00edtott JavaScript r\u00e9szt:</p> <pre><code>function newRow(button){\nbutton = $(button);\nlet newRowToAdd = button.closest('.row').clone(true);\nnewRowToAdd.find('input').val('');\n\nbutton.html('Delete');\nbutton.attr('onclick', 'deleteRow(this)');\nlet phoneRows = $('.row');\nphoneRows.last().parent().append(newRowToAdd);\n}\n\nfunction deleteRow(button){\nbutton.closest('.row').remove();\n}\n</code></pre> <p>A JS k\u00f3d funkcionalit\u00e1sa l\u00e9nyeg\u00e9ben megmaradt, csup\u00e1n a kiszervezt\u00fck azokat k\u00e9t k\u00fcl\u00f6n f\u00fcggv\u00e9nybe.</p> <p>A fentiek eddig a pontig teljesen j\u00f3l m\u0171k\u00f6dnek, azonban a kontakt friss\u00edt\u00e9sekor egy \u00faj rekord fog megjelenni, mivel a <code>ContactController</code>-ben is hozz\u00e1 kell igaz\u00edtanunk a m\u0171k\u00f6d\u00e9st a most megval\u00f3s\u00edtott elemekhez.</p> <pre><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nrequest.setCharacterEncoding(\"utf-8\");\nresponse.setCharacterEncoding(\"utf-8\");\n\nint contactId = 0;\ntry {\ncontactId = Integer.parseInt(request.getParameter(\"id\"));\n} catch (NumberFormatException ex){\nex.printStackTrace();\n}\n\nContact c = dao.findById(contactId);\n\n// check if c exists -&gt; if no then construct a new one (it's a save)\nif(c == null){\nc = new Contact();\n}\n\ntry {\nc.setName(request.getParameter(\"name\"));\nc.setEmail(request.getParameter(\"email\"));\nc.setDateOfBirth(LocalDate.parse(request.getParameter(\"dateOfBirth\")));\nc.setAddress(request.getParameter(\"address\"));\nc.setCompany(request.getParameter(\"company\"));\nc.setPosition(request.getParameter(\"position\"));\n\nUser currentUser = (User) request.getSession().getAttribute(\"currentUser\");\nc.setUser(currentUser);\n\nString[] phoneValues = request.getParameterValues(\"phoneValues\");\nString[] phoneTypes = request.getParameterValues(\"phoneTypes\");\nString[] phoneIds = request.getParameterValues(\"phoneIds\");\n\nList&lt;Phone&gt; phones = new ArrayList&lt;&gt;();\nfor(int i = 0; i &lt; phoneValues.length; i++){\nPhone p = null;\nif(phoneIds != null &amp;&amp; phoneIds[i] != null &amp;&amp; !phoneIds[i].isEmpty()){\np = phoneDAO.findById(Integer.parseInt(phoneIds[i]));\n}\n\nif(p == null){\np = new Phone();\n}\n\np.setNumber(phoneValues[i]);\nfinal String phoneTypeString = phoneTypes[i];\nOptional&lt;Phone.PhoneType&gt; foundPhoneType = Arrays.stream(Phone.PhoneType.values()).filter(phoneType -&gt; phoneType.getValue().equals(phoneTypeString)).findFirst();\np.setPhoneType(foundPhoneType.orElse(Phone.PhoneType.UNKNOWN));\nphones.add(p);\n}\nc.setPhones(phones);\ndao.save(c);\n\n\nresponse.sendRedirect(\"pages/list-contact.jsp\");\n\n} catch (Exception e) {\ne.printStackTrace();\n}\n\n}\n</code></pre> <p>A legfontosabb az <code>id</code> kiolvas\u00e1sa, mely alapj\u00e1n lek\u00e9rdezz\u00fck a megl\u00e9v\u0151 kontaktot. K\u00e9s\u0151bb a <code>save</code> hat\u00e1s\u00e1ra ment\u00e9s vagy beilleszt\u00e9s is t\u00f6rt\u00e9nhet, \u00edgy ezt nem kell majd igaz\u00edtanunk. Ezut\u00e1n feldolgozzuk a telefonsz\u00e1mokat, azonban sz\u00fcks\u00e9g\u00fcnk lesz a megl\u00e9v\u0151 id-kra, melyeket a <code>phoneIds</code>-ban k\u00fcld\u00fcnk el, \u00edgy ezt a jsp-ben is el kell helyezn\u00fcnk egy hidden field-be:</p> <pre><code>&lt;input type=\"hidden\" name=\"phoneIds\" value=\"${phone.id}\" /&gt;\n</code></pre> <p>Miut\u00e1n kiolvastuk a megfelel\u0151 telefonokat (<code>Phone</code> objektumok l\u00e9trehoz\u00e1sa) elmentj\u00fck a kontaktot. Ezen a ponton egy nagyobb refaktor\u00e1l\u00e1st is tegy\u00fcnk meg, amelyet kicsit halogattunk. Ennek eredm\u00e9nyek\u00e9ppen a DAO r\u00e9teget \u00e1talak\u00edtottuk, hogy a egy kontakt ment\u00e9se eset\u00e9n a hozz\u00e1 tartoz\u00f3 telefonsz\u00e1mokat is friss\u00edtse az adatel\u00e9r\u00e9si r\u00e9teg. A m\u00f3dos\u00edt\u00e1sokat ezen a ponton nem fogjuk kifejteni, a m\u00f3dos\u00edtott DAO el\u00e9rhet\u0151 a pub-ban.</p> <p>Az update mellett a delete-hez tartoz\u00f3 servlet a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>@WebServlet(\"/DeleteContactController\")\npublic class DeleteContactController extends HttpServlet {\n\nContactDAO dao = ContactDAOImpl.getInstance();\n\n@Override\nprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\ntry {\nint contactId = Integer.parseInt(req.getParameter(\"contactId\"));\ndao.delete(contactId);\n}\ncatch (NumberFormatException ex){\nex.printStackTrace();\n}\n\nresp.sendRedirect(\"pages/list-contact.jsp\");\n}\n}\n</code></pre> <p>Itt is \u00e9rdemes megjegyezni, hogy a kontakt kit\u00f6rl\u00e9se az \u00f6sszes hozz\u00e1tartoz\u00f3 telefonsz\u00e1mot is kit\u00f6rli. Tov\u00e1bbi feladatk\u00e9nt hozz\u00e1adhatunk egy meger\u0151s\u00edt\u00e9st a t\u00f6rl\u00e9shez, de ezen a ponton ezzel most nem foglalkozunk.</p>"},{"location":"11_gyakorlat/","title":"11. gyakorlat","text":""},{"location":"11_gyakorlat/#sajat-tagek-custom-tags","title":"Saj\u00e1t tagek (Custom tags)","text":"<p>A felhaszn\u00e1l\u00f3 saj\u00e1t maga hozhat l\u00e9tre \u00faj tagaket. Ez\u00e1ltal seg\u00edt abban, hogy ne kelljen scriptleteket haszn\u00e1lni, illetve seg\u00edt szepar\u00e1lni az \u00fczleti logik\u00e1t a megjelen\u00edt\u00e9st\u0151l. Ezek mellett tal\u00e1n a legnagyobb el\u0151nye, hogy ezeket a tageket \u00fajra fel tudjuk haszn\u00e1lni t\u00f6bb helyen is. K\u00e9tf\u00e9lek\u00e9ppen haszn\u00e1lhatjuk a saj\u00e1t tagjeinket: <pre><code>&lt;prefix:tagname attr1=value1....attrn=valuen /&gt;\n\nvagy\n\n&lt;prefix:tagname attr1=value1....attrn=valuen &gt;  body code  &lt;/prefix:tagname&gt;  </code></pre></p> <p>A saj\u00e1t tagek defin\u00edci\u00f3j\u00e1hoz nagyobb szabads\u00e1got ad, ha TLD-ket (Tag Library Descriptor-okat) adunk meg, de ez t\u00falmutat a c\u00e9ljainkon, mivel kicsit neh\u00e9zkes \u00e9s t\u00f6bb helyen kell ezeket megadni.</p> <p>Egy m\u00e1sik, egyszer\u0171bb m\u00f3dja, hogy a tag defin\u00edci\u00f3kat a WEB-INF/tags mapp\u00e1ban helyezz\u00fck el. K\u00e9sz\u00edts\u00fck el a current-datetime taget!</p> <p>WEB-INF/tags/current-datetime.tag <pre><code>&lt;%@ tag import=\"java.time.LocalDateTime\"%&gt;\n&lt;%@ tag language=\"java\" pageEncoding=\"ISO-8859-1\"%&gt;\n\n&lt;%\nout.println(LocalDateTime.now());\n%&gt;\n</code></pre></p> <p>Figyelj\u00fck meg, hogy a <code>page</code> direkt\u00edva helyett azt \u00edrtjuk, hogy <code>tag</code>, ezzel is jelezv\u00e9n, hogy egy saj\u00e1t tag-et defini\u00e1lunk. A tag egyszer\u0171en ki\u00edrja az aktu\u00e1lis d\u00e1tumot \u00e9s id\u0151t.</p> <p>Haszn\u00e1lata, index.jsp <pre><code>&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%&gt;\n&lt;%@ taglib tagdir=\"/WEB-INF/tags\" prefix=\"t\"%&gt;\n\n&lt;t:current-datetime /&gt;\n</code></pre></p> <p>A taglib direkt\u00edv\u00e1ban nem az uri-t kell megadnunk, hanem a tagdir attrib\u00fatumban a saj\u00e1t tagjeink k\u00f6nyvt\u00e1r\u00e1t. Innent\u0151l m\u00e1r haszn\u00e1lhatjuk a tags k\u00f6nyvt\u00e1rban l\u00e9v\u0151 tageket mint p\u00e9ld\u00e1ul a current-datetime-ot.</p>"},{"location":"11_gyakorlat/#custom-tagek-attributumai","title":"Custom tagek attrib\u00fatumai","text":"<p>Az el\u0151z\u0151 p\u00e9ld\u00e1ban csak egy tag-et csin\u00e1ltunk, de annak nem voltak attrib\u00fatumai, ami viszont egy el\u00e9g \u00e1ltal\u00e1nos elv\u00e1r\u00e1s egy saj\u00e1t tag-t\u0151l.</p> <p>K\u00e9sz\u00edts\u00fck el azt a saj\u00e1t tag-et amelyet a k\u00f6vetkez\u0151k\u00e9ppen tudunk haszn\u00e1lni:</p> <pre><code>&lt;t:cube value=\"4\" /&gt;\n</code></pre> <p>Ehhez k\u00e9sz\u00edt\u00fcnk egy cube.tag \u00e1llom\u00e1nyt a WEB-INF/tags mapp\u00e1ba, melynek tartalma: <pre><code>&lt;%@ tag language=\"java\" pageEncoding=\"ISO-8859-1\"%&gt;\n\n&lt;%@ attribute name=\"value\" required=\"true\" type=\"java.lang.Double\" %&gt;\n\n&lt;%\nout.print(value * value * value);\n%&gt;\n</code></pre> Mint az kit\u0171nik, attrib\u00fatumot a <code>&lt;%@ attribute %&gt;</code> direkt\u00edv\u00e1val adhatunk meg. Ez a direkt\u00edva csak tag defin\u00edci\u00f3kn\u00e1l haszn\u00e1lhat\u00f3, jsp oldalakn\u00e1l nem. Az attrib\u00fatumnak meg lehet adni a nev\u00e9t, hogy k\u00f6telez\u0151-e, mint azt a fenti p\u00e9ld\u00e1ban is l\u00e1thatjuk. Nagyon fontos a <code>type</code> attrib\u00fatum.  A p\u00e9ld\u00e1ban a 3. hatv\u00e1nyra emel\u0151 tag\u00fcnknek egy sz\u00e1mot kell v\u00e1rnia, azonban az attrib\u00fatumok alapt\u00edpusa <code>java.util.String</code>. A mi eset\u00fcnkben ez egy nagy exception-t eredm\u00e9nyezne, mivel arra nem tudja \u00e9rtelmezni a <code>value * value</code> kifejez\u00e9st, \u00edgy a type-ot megadtuk, hogy Double-t v\u00e1rjon \u00e9s \u00edgy m\u0171k\u00f6dik is a tag. Ezen fel\u00fcl az attrib\u00fatumnak adhatunk le\u00edr\u00e1st is a <code>description</code> megad\u00e1s\u00e1val.</p> <p>Amennyiben nem attrib\u00fatumban, hanem a tagek k\u00f6z\u00f6tt akarjuk megadni az \u00e9rt\u00e9ket a cube-nak, akkor a k\u00f6vetkez\u0151t kell tenn\u00fcnk:</p> <pre><code>&lt;%@ tag language=\"java\" pageEncoding=\"ISO-8859-1\"%&gt;\n\n&lt;jsp:doBody scope=\"request\" var=\"value\" /&gt;\n\n&lt;%\nint value = Integer.parseInt(((String)request.getAttribute(\"value\")).trim());\nout.print(value * value * value);\n%&gt;\n</code></pre> <p>A jsp:doBody seg\u00edts\u00e9g\u00e9vel a custom tag\u00fcnk k\u00f6z\u00f6tti body r\u00e9szt \u00e9rt\u00e9kelhetj\u00fck ki. A ki\u00e9rt\u00e9kel\u00e9s eredm\u00e9ny\u00e9t egyb\u0151l nyomhatjuk az outba, ekkor nem kell sem a scope sem a var attrib\u00fatumot haszn\u00e1lnunk. Ha viszont szeretn\u00e9nk felhaszn\u00e1lni az \u00e9rt\u00e9k\u00e9t k\u00e9s\u0151bb, akkor \u00e9rdemes lehet elt\u00e1rolni, mint ahogyan most is ki akarjuk sz\u00e1molni a k\u00f6b\u00e9t. Ehhez kiolvassuk a tartalmat, majd string-\u00e9 alak\u00edtjuk \u00e9s trimmelj\u00fck, hogy tudjunk parsolni olyat is ha k\u00fcl\u00f6nb\u00f6z\u0151 sorban van a nyit\u00f3 \u00e9s z\u00e1r\u00f3 tag, illetve k\u00f6zte az adat. Haszn\u00e1lni egyszer\u0171en a k\u00f6vetkez\u0151k\u00e9ppen lehet:</p> <pre><code>&lt;t:cube&gt;3&lt;/t:cube&gt;\n</code></pre> <p>Az attribute direkt\u00edv\u00e1nak van egy tov\u00e1bbi param\u00e9tere, m\u00e9gpedig, hogy az attrib\u00fatum az fragment-e. Ez azt jelenti, hogy a tag param\u00e9ter\u00fcl jsp k\u00f3dr\u00e9szletet kap. Ezek nagyon j\u00f3l haszn\u00e1lhat\u00f3ak, ha p\u00e9ld\u00e1ul template-et kell k\u00e9sz\u00edten\u00fcnk az oldalainkhoz.</p> <p>A cube tag-et b\u0151v\u00edts\u00fck, hogy benne m\u00e9g tov\u00e1bbi jsp-t adhassunk meg! A tag defin\u00edci\u00f3ban az al\u00e1bbiakat kell \u00edrnunk: <pre><code>&lt;%@ tag language=\"java\" pageEncoding=\"UTF-8\"%&gt;\n\n&lt;%@ attribute name=\"value\" required=\"true\" type=\"java.lang.Double\"  %&gt;\n&lt;%@ attribute name=\"content\" fragment=\"true\"%&gt;\n\n&lt;%\nout.print(value * value * value);\n%&gt;\n\n&lt;jsp:invoke fragment=\"content\" /&gt;\n</code></pre> A kapott jsp fragment-et az oldalon bel\u00fcl a <code>&lt;jsp:invoke&gt;</code> haszn\u00e1lat\u00e1val illeszthetj\u00fck be. Ezt ak\u00e1r t\u00f6bb ponton is megtehetj\u00fck. Ezut\u00e1n a haszn\u00e1lat\u00e1t tekintve a k\u00f6vetkez\u0151ket kell tenn\u00fcnk:</p> <pre><code>&lt;t:cube value=\"3\" &gt;\n&lt;jsp:attribute name=\"content\"&gt;\nasdqwe\n  &lt;/jsp:attribute&gt;\n&lt;/t:cube&gt;\n</code></pre> <p>Most, hogy az alapokat megn\u00e9zt\u00fck ideje, hogy \u00e1talak\u00edtsuk az alkalmaz\u00e1sunkat \u00fagy, hogy az page template-eket haszn\u00e1ljon. Az esetleges \u00fajdons\u00e1gokat menet k\u00f6zben m\u00e9g tiszt\u00e1zzuk.</p> <p>Feladat</p> <p>Alak\u00edtsuk \u00e1t \u00fagy a contacts alkalmaz\u00e1sunkat, hogy page template-eket haszn\u00e1ljon!</p> <p>El\u0151sz\u00f6r is k\u00fcl\u00f6nb\u00f6ztess\u00fck meg azt a k\u00fcl\u00f6nb\u00f6z\u0151 eseteket, amikre sz\u00fcks\u00e9g\u00fcnk lehet:</p> <ul> <li>Common header sz\u00fcks\u00e9ges az oldalhoz</li> <li>Common header \u00e9s men\u00fc is sz\u00fcks\u00e9ges az oldalon</li> </ul> <p>Ez alapj\u00e1n k\u00e9tf\u00e9le page template-et fogunk elk\u00e9sz\u00edteni. Vegy\u00fck az els\u0151t, melyben csak a common header lesz benne. Ehhez a <code>WEB-INF</code> alatt hozzuk l\u00e9tre a <code>tags</code> k\u00f6nyvt\u00e1rat, ahol l\u00e9trehozzuk a <code>basic-layout.tag</code> \u00e1llom\u00e1nyt, melynek a k\u00f6vetkez\u0151 tartalma lesz:</p> <pre><code>&lt;%@ tag description=\"Basic Page template\" pageEncoding=\"UTF-8\" %&gt;\n&lt;%@ attribute name=\"title\" required=\"false\" type=\"java.lang.String\" %&gt;\n&lt;%@ attribute name=\"header\" fragment=\"true\" %&gt;\n&lt;%@ attribute name=\"footer\" fragment=\"true\" %&gt;\n\n\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;${title}&lt;/title&gt;\n&lt;link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/style.css\"&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\"&gt;\n&lt;link rel=\"stylesheet\"\nhref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\nintegrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\ncrossorigin=\"anonymous\"&gt;\n&lt;script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\nintegrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\ncrossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;script\nsrc=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"\nintegrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\"\ncrossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;script\nsrc=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"\nintegrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\"\ncrossorigin=\"anonymous\"&gt;&lt;/script&gt;\n\n&lt;jsp:invoke fragment=\"header\"/&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;div id=\"body\" class=\"container\"&gt;\n&lt;jsp:doBody/&gt;\n&lt;/div&gt;\n&lt;jsp:invoke fragment=\"footer\"/&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>A f\u00e1jl elej\u00e9n megadjuk, hogy egy custom tag-r\u0151l van sz\u00f3 (aminek neve megegyezik a f\u00e1jl nev\u00e9vel: <code>basic-layout</code>), majd megadjuk, hogy milyen attrib\u00fatumokat fogunk haszn\u00e1lni ebben a tag-ben. Az els\u0151 attrib\u00fatum a <code>title</code>, mely az oldal c\u00edm\u00e9t adja meg \u00e9s annak t\u00edpus\u00fa <code>String</code>. Ha megn\u00e9zz\u00fck, hogy hol haszn\u00e1ljuk fel a <code>title</code> attrib\u00fatumot, akkor l\u00e1thatjuk, hogy a <code>&lt;title&gt;${title}&lt;/title&gt;</code> megad\u00e1sban szerepel, ami az oldal c\u00edm\u00e9t adja meg. Ilyenkor a tag-et a k\u00f6vetkez\u0151k\u00e9ppen fogjuk haszn\u00e1lni: <code>&lt;basic-layout title=\"Login\"&gt;...&lt;/basic-layout&gt;</code>, melynek eredm\u00e9nyek\u00e9ppen a megadott oldal c\u00edme <code>Login</code> lesz.</p> <p>A <code>&lt;head&gt;</code> r\u00e9szben a kor\u00e1bban <code>common-header.jsp</code> oldalon megadott elemeket helyezz\u00fck el. Ugyanakkor itt van m\u00e9g egy fontos pont, amikor megh\u00edvjuk a <code>header</code> attrib\u00fatumot, amely viszont m\u00e1r egy fragment a <code>title</code>-el ellent\u00e9tben, \u00edgy az tartalmazhat HTML r\u00e9szf\u00e1t is ak\u00e1r. Erre az\u00e9rt van sz\u00fcks\u00e9g, mert az egyes oldalak esetleg tov\u00e1bb szeretn\u00e9k b\u0151v\u00edteni a <code>&lt;head&gt;</code>-ben megadott elemeket, mint p\u00e9ld\u00e1ul az <code>add-contact.jsp</code>-ben szeretn\u00e9nk haszn\u00e1lni az <code>add-contact.js</code> \u00e1llom\u00e1nyt (m\u00e1shol viszont nem). Ugyanezt v\u00e9gezz\u00fck el a <code>footer</code>-re, melyet jelenleg ugyan nem haszn\u00e1lunk, de k\u00e9s\u0151bb j\u00f3l j\u00f6het.</p> <p>A haszn\u00e1lat hely\u00e9n a <code>&lt;basic-layout title=\"xxx\"&gt;...&lt;/basic-layout&gt;</code> k\u00f6z\u00f6tt megadott tartalmat a <code>&lt;jsp:doBody/&gt;</code> h\u00edv\u00e1ssal \u00edrhatjuk ki a template-ben. Ezt a tartalmat egy <code>div</code>-ben helyezz\u00fck el <code>&lt;div id=\"body\" class=\"container\"&gt;</code>.</p> <p>Miut\u00e1n megvan a template, n\u00e9zz\u00fck, hogy hogyan haszn\u00e1lhatjuk fel azt p\u00e9ld\u00e1ul a <code>login.jsp</code> oldalon:</p> <pre><code>&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %&gt;\n&lt;%@ taglib prefix=\"t\" tagdir=\"/WEB-INF/tags\" %&gt;\n\n&lt;t:basic-layout title=\"Login\"&gt;\n&lt;form action=\"../LoginController\" method=\"post\"&gt;\n...\n  &lt;/form&gt;\n&lt;/t:basic-layout&gt;\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban a beh\u00fazzuk a haszn\u00e1lni k\u00edv\u00e1nt tagek mapp\u00e1j\u00e1t: <code>tagdir</code> \u00e9s adunk neki egy prefixet, mely most a <code>t</code>. Ezut\u00e1n egyszer\u0171en haszn\u00e1ljuk a saj\u00e1t <code>basic-layout</code> tag-\u00fcnket, ahol megadjuk a <code>title</code> attrib\u00fatumot. Most a megadott <code>&lt;form&gt;</code> elem ker\u00fcl a template-ben megadott <code>&lt;jsp:doBody/&gt;</code> helyre.</p> <p>A teljess\u00e9g kedv\u00e9\u00e9rt alul l\u00e1that\u00f3 a b\u00f6ng\u00e9sz\u0151ben el\u00e9rhet\u0151 HTML, ahol m\u00e1r a saj\u00e1t tag- felold\u00e1s\u00e1t l\u00e1thatjuk:</p> <pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Login&lt;/title&gt;\n        &lt;link rel=\"stylesheet\" href=\"/contacts_web_war/css/style.css\"&gt;\n        &lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\"&gt;\n        &lt;link rel=\"stylesheet\"\n              href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n              integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n              crossorigin=\"anonymous\"&gt;\n        &lt;script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n                integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n                crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n        &lt;script\n                src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"\n                integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\"\n                crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n        &lt;script\n                src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"\n                integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\"\n                crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div id=\"body\" class=\"container\"&gt;\n          &lt;form action=\"../LoginController\" method=\"post\"&gt;\n              &lt;div class=\"form-group\"&gt;\n                  &lt;label for=\"username\"&gt;Username&lt;/label&gt;\n                  &lt;input required name=\"username\" type=\"text\" class=\"form-control\" id=\"username\"\n                        placeholder=\"Username\"/&gt;\n              &lt;/div&gt;\n              &lt;div class=\"form-group\"&gt;\n                  &lt;label for=\"password\"&gt;Password&lt;/label&gt;\n                  &lt;input required name=\"password\" type=\"password\" class=\"form-control\" id=\"password\"\n                        placeholder=\"Password\"/&gt;\n              &lt;/div&gt;\n              &lt;button id=\"submit\" type=\"submit\" class=\"btn btn-primary\"&gt;Submit&lt;/button&gt;\n              &lt;span&gt;&lt;a href=\"register.jsp\"&gt;Register&lt;/a&gt;&lt;/span&gt;\n          &lt;/form&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Ezt az alap template-et a login mellett a <code>register.jsp</code> is haszn\u00e1lja, mely nagyon hasonl\u00f3 lesz a login-hoz:</p> <pre><code>&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;%@ taglib prefix=\"t\" tagdir=\"/WEB-INF/tags\" %&gt;\n\n&lt;t:basic-layout title=\"Register\"&gt;\n&lt;form action=\"../RegisterController\" method=\"post\"&gt;\n...\n    &lt;/form&gt;\n&lt;/t:basic-layout&gt;\n</code></pre> <p>Az eddigi form-ot \u00e1tmozgattuk a <code>basic-layout</code> tag body r\u00e9sz\u00e9be, illetve m\u00e1s <code>title</code>-t adtunk meg, de m\u00e1s k\u00fcl\u00f6nbs\u00e9g nincs.</p> <p>Ezut\u00e1n n\u00e9zz\u00fck meg azt, hogy hogyan haszn\u00e1lhatjuk fel a <code>basic-layout</code> tag-et egy m\u00e1sik tag defin\u00edci\u00f3j\u00e1ban, azaz hogyan b\u0151v\u00edthetj\u00fck ezt a tag-et (a men\u00fcvel). Nyilv\u00e1nval\u00f3an a <code>basic-layout</code>-ban szerepl\u0151 elemeket szeretn\u00e9nk a <code>basic-layout-menu</code> tag-ben is alkalmazni, viszont k\u00f3dot nem szeretn\u00e9nk duplik\u00e1lni.</p> <pre><code>&lt;%@ tag description=\"Basic Page template\" pageEncoding=\"UTF-8\" %&gt;\n&lt;%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %&gt;\n&lt;%@ taglib prefix=\"t\" tagdir=\"/WEB-INF/tags\" %&gt;\n&lt;%@ attribute name=\"header\" fragment=\"true\" %&gt;\n&lt;%@ attribute name=\"footer\" fragment=\"true\" %&gt;\n&lt;%@ attribute name=\"title\" required=\"false\" type=\"java.lang.String\" %&gt;\n\n&lt;t:basic-layout title=\"${title}\"&gt;\n&lt;jsp:attribute name=\"header\"&gt;\n&lt;jsp:invoke fragment=\"header\" /&gt;\n&lt;/jsp:attribute&gt;\n&lt;jsp:attribute name=\"footer\"&gt;\n&lt;jsp:invoke fragment=\"footer\" /&gt;\n&lt;/jsp:attribute&gt;\n\n&lt;jsp:body&gt;\n&lt;nav class=\"navbar fixed-top navbar-expand-lg navbar-light bg-light\"&gt;\n...\n        &lt;/nav&gt;\n&lt;jsp:doBody/&gt;\n&lt;/jsp:body&gt;\n&lt;/t:basic-layout&gt;\n</code></pre> <p>Mivel hasonl\u00f3an meg szeretn\u00e9nk adni egy <code>basic-layout-menu</code> tag-nek is a <code>title</code>-t, az esetleges <code>header</code>-t \u00e9s <code>footer</code>-t, \u00edgy ezeket az attrib\u00fatumokat itt is \"kivezetj\u00fck\", melyeket majd tov\u00e1bbadjuk a <code>basic-layout</code>-nak. Ez l\u00e1tsz\u00f3dik p\u00e9ld\u00e1ul a <code>&lt;t:basic-layout title=\"${title}\"&gt;</code> sorban is. A <code>header</code> \u00e9s a <code>footer</code> megad\u00e1sa kicsit m\u00e1sk\u00e9ppen m\u0171k\u00f6dik. A <code>header</code> beilleszt\u00e9s\u00e9hez a <code>&lt;jsp:invoke fragment=\"header\" /&gt;</code>-ot kell megh\u00edvnunk, melyet \"k\u00edv\u00fclr\u0151l\" kapunk. Mivel ezt a <code>&lt;t:basic-layout&gt;</code>-nak szeretn\u00e9nk tov\u00e1bbadni, \u00edgy itt meg kell adni, hogy a <code>basic-layout</code> <code>header</code> attrib\u00fatum\u00e1t szeretn\u00e9nk be\u00e1ll\u00edtani, ez\u00e9rt kell a <code>&lt;jsp:attribute name=\"header\"&gt;</code> megad\u00e1s. Hasonl\u00f3k\u00e9ppen a k\u00edv\u00fclr\u0151l kapott <code>basic-layout-menu</code> tartalm\u00e1t tov\u00e1bb szeretn\u00e9nk adni a <code>basic-layout</code> body-jak\u00e9nt, \u00edgy ezt <code>&lt;jsp:body&gt;</code> tag-ek k\u00f6z\u00f6tt kell megadnunk. Annyi a k\u00fcl\u00f6nbs\u00e9g, hogy a k\u00edv\u00fclr\u0151l kapott body HTML tartalom el\u00e9 berakjuk a <code>nav</code>-ot, azaz a men\u00fct.</p> <p>N\u00e9zz\u00fck, hogy hogyan haszn\u00e1lja fel a <code>list-contact.jsp</code> oldal a template-et:</p> <pre><code>&lt;%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %&gt;\n&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %&gt;\n&lt;%@ taglib prefix=\"t\" tagdir=\"/WEB-INF/tags\"%&gt;\n\n&lt;jsp:include page=\"/ContactController\"/&gt;\n\n&lt;t:basic-layout-menu title=\"List Contact\"&gt;\n&lt;table class=\"table\"&gt;\n...\n    &lt;/table&gt;\n&lt;/t:basic-layout-menu&gt;\n</code></pre> <p>A tag felhaszn\u00e1l\u00e1sa a megszokott m\u00f3don t\u00f6rt\u00e9nik, nincs semmi m\u00e1gia. A k\u00fcl\u00f6nbs\u00e9g annyi, hogy most m\u00e1r a <code>&lt;basic-layout-menu&gt;</code> tag-et haszn\u00e1ljuk.</p> <p>Viszont van egy fontos k\u00fcl\u00f6nbs\u00e9g, akkor amikor a <code>header</code>-be vagy a <code>footer</code>-be is bele szeretn\u00e9nk valamit rakni. Ez igaz\u00e1b\u00f3l hasonl\u00f3an megy, mint a <code>basic-layout-menu</code>-n\u00e9l. L\u00e1ssuk az <code>add-contact.jsp</code> oldalt:</p> <pre><code>&lt;%@ page import=\"hu.alkfejl.model.Phone\" %&gt;\n&lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %&gt;\n&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %&gt;\n&lt;%@ taglib prefix=\"t\" tagdir=\"/WEB-INF/tags\" %&gt;\n\n&lt;t:basic-layout-menu title=\"Add Contact\"&gt;\n&lt;jsp:attribute name=\"header\"&gt;\n&lt;script src=\"${pageContext.request.contextPath}/js/add-contact.js\"&gt;&lt;/script&gt;\n&lt;/jsp:attribute&gt;\n&lt;jsp:body&gt;\n&lt;jsp:useBean id=\"contact\" class=\"hu.alkfejl.model.Contact\" scope=\"request\"/&gt;\n&lt;form action=\"${pageContext.request.contextPath}/ContactController\" method=\"post\"&gt;\n...\n        &lt;/form&gt;\n&lt;/jsp:body&gt;\n&lt;/t:basic-layout-menu&gt;\n</code></pre> <p>Szok\u00e1sos m\u00f3don beh\u00fazzuk a haszn\u00e1lni k\u00edv\u00e1nt tag-ek k\u00f6nyvt\u00e1r\u00e1t: <code>&lt;%@ taglib prefix=\"t\" tagdir=\"/WEB-INF/tags\" %&gt;</code>. Ezut\u00e1n a <code>&lt;basic-layout-menu&gt;</code>-on bel\u00fcl a header-t szeretn\u00e9nk megadni, ahol a <code>&lt;script src=\"${pageContext.request.contextPath}/js/add-contact.js\"&gt;&lt;/script&gt;</code> b\u0151v\u00edt\u00e9st szeretn\u00e9nk eszk\u00f6z\u00f6lni. Ezut\u00e1n pedig a body-ban megadni a <code>useBean</code>-nel a megfelel\u0151 <code>Contact</code> objektumot \u00e9s a <code>form</code>-ot. Amennyiben nem jelezn\u00e9nk, hogy mi a header attrib\u00fatum \u00e9s mi a <code>basic-layout-menu</code> body-ja, akkor a rendszer mindent body-nak venne, \u00edgy megadjuk a header attrib\u00fatum \u00e9rt\u00e9k\u00e9t a <code>&lt;jsp:attribute name=\"header\"&gt;</code> tag haszn\u00e1lat\u00e1val, illetve a <code>&lt;jsp:body&gt;</code>-val mag\u00e1t <code>basic-layout-menu</code> body-j\u00e1t.</p> <p>A <code>profile.jsp</code> oldalon hasonl\u00f3 m\u00f3dos\u00edt\u00e1sokat kell tenn\u00fcnk, mint az <code>add-contact.jsp</code>-n, \u00edgy azt itt m\u00e1r nem mutatjuk be.</p> <p>Ezzel elk\u00e9sz\u00edtett\u00fck a kontakt alkalmaz\u00e1sunk webes v\u00e1ltozat\u00e1t is. A teljes projektet l\u00e1sd a pub-on!</p>"},{"location":"12_gyakorlat/","title":"12. gyakorlat","text":""},{"location":"12_gyakorlat/#xml-technologiak","title":"XML technol\u00f3gi\u00e1k","text":""},{"location":"12_gyakorlat/#standard-generalized-markup-language-sgml","title":"Standard Generalized Markup Language (SGML)","text":"<p>Az SGML egy \u00e1ltal\u00e1nos jel\u00f6l\u0151 nyelv, amelyet ISO szabv\u00e1ny defini\u00e1l. A c\u00e9lja, hogy egy adott szintaktik\u00e1nak megfelel\u0151 dokumentumot k\u00f6nnyen lehessen kezelni. Az SGML konkr\u00e9t alkalmaz\u00e1sa a HTML, de az XML is az SGML r\u00e9szhalmaza. Az SGML bonyolult, ez\u00e9rt sz\u00e9les k\u00f6rben nem is terjedt el, ez\u00e9rt ezzel k\u00fcl\u00f6n nem is foglalkozunk, csak az XML-lel.</p>"},{"location":"12_gyakorlat/#extensible-markup-language-xml","title":"Extensible Markup Language (XML)","text":"<p>Az 1. gyakorlaton m\u00e1r megismerkedt\u00fcnk az XML-lel, \u00e9s a f\u00e9l\u00e9v sor\u00e1n m\u00e1r a gyakorlati alkalmaz\u00e1s\u00e1t is l\u00e1ttuk, mert a maven projekt f\u00e1jl (<code>pom.xml</code>), illetve a webes r\u00e9szn\u00e9l a konfigur\u00e1ci\u00f3s f\u00e1jl (<code>web.xml</code>) is XML volt. Azonban ezek ink\u00e1bb a gyakorlatban t\u00f6rt\u00e9n\u0151 alkalmazhat\u00f3s\u00e1gra p\u00e9ld\u00e1k, \u00e9s nem arra, hogy mag\u00e1t az XML-t hogyan kell fel\u00e9p\u00edteni, mit lehet \u00e9s mit nem lehet haszn\u00e1lni, illetve hogyan kell valid\u00e1lni azt. A k\u00f6vetkez\u0151kben az XML technol\u00f3gi\u00e1kkal fogunk megismerkedni, amihez az al\u00e1bbi p\u00e9ld\u00e1t fogjuk haszn\u00e1lni.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;\n&lt;jelentkezes idoszak=\"2019/2020II\" egyetem=\"SZTE\"&gt;\n&lt;hallgato id=\"KOJEAE.SZE\"&gt;\n&lt;hnev&gt;Kov\u00e1cs J\u00e1nos&lt;/hnev&gt;\n&lt;szuletesnap&gt;2000-01-08&lt;/szuletesnap&gt;\n&lt;szak evf=\"2\"&gt;programtervezo informatikus&lt;/szak&gt;\n&lt;/hallgato&gt;\n&lt;kurzusok&gt;\n&lt;kurzus id=\"IAB8532\"&gt;\n&lt;nev&gt;Alkalmaz\u00e1sfejleszt\u00e9s I.&lt;/nev&gt;\n&lt;kredit&gt;2&lt;/kredit&gt;\n&lt;hely&gt;I223&lt;/hely&gt;\n&lt;idopont&gt;Szerda 15:00-16:00&lt;/idopont&gt;\n&lt;tanar&gt;Dr. Siket Istv\u00e1n&lt;/tanar&gt;\n&lt;/kurzus&gt;\n&lt;kurzus id=\"XEL24234\" jovahagyas=\"igen\"&gt;\n&lt;nev&gt;E-Learning&lt;/nev&gt;\n&lt;kredit&gt;3&lt;/kredit&gt;\n&lt;hely&gt;B107&lt;/hely&gt;\n&lt;idopont&gt;Szerda 12:00-14:00&lt;/idopont&gt;\n&lt;tanar&gt;Dr. Kov\u00e1cs G\u00e9za&lt;/tanar&gt;\n&lt;/kurzus&gt;\n&lt;kurzus id=\"LL2458I\" nyelv=\"n\u00e9met\"&gt;\n&lt;nev&gt;N\u00e9met k\u00f6z\u00e9pfok&lt;/nev&gt;\n&lt;kredit&gt;0&lt;/kredit&gt;\n&lt;hely&gt;VI. lektor\u00e1tus&lt;/hely&gt;\n&lt;tanar&gt;Dr. Szab\u00f3 Gabriella&lt;/tanar&gt;\n&lt;oratarto&gt;Nagy Annam\u00e1ria&lt;/oratarto&gt;\n&lt;/kurzus&gt;\n&lt;/kurzusok&gt;\n&lt;/jelentkezes&gt;\n</code></pre>"},{"location":"12_gyakorlat/#document-type-definition-dtd","title":"Document Type Definition (DTD)","text":"<p>A DTD szab\u00e1lyok halmaza, amely SGML t\u00edpus\u00fa nyelvekhez hat\u00e1roz meg dokumentumt\u00edpust. A DTD meghat\u00e1rozza, hogy</p> <ul> <li>milyen elemek lehetnek a dokumentumban,</li> <li>az elemek hogyan kapcsol\u00f3dhatnak egym\u00e1shoz,</li> <li>milyen tartalmuk lehet,</li> <li>milyen tulajdons\u00e1guk lehet.</li> </ul> <p>Fontos, hogy a DTD-ben minden olyan elemet defini\u00e1lni kell, ami az XML-ben el\u0151fordul!</p> <p>A DTD-t k\u00e9tf\u00e9lek\u00e9ppen lehet megadni:</p> <ul> <li>Bels\u0151, amikor a DTD ugyanabban a f\u00e1jlban van, mint amire vonatkozik.</li> <li>K\u00fcls\u0151, amikor a DTD egy k\u00fcl\u00f6n f\u00e1jlban van, \u00e9s csak egy hivatkoz\u00e1st tartalmaz a dokumentum a DTD-re.</li> </ul> <p>A DTD fel\u00e9p\u00edt\u00e9s\u00e9n\u00e9l defini\u00e1ljuk az XML fa szerkezet\u00e9t, amihez els\u0151 l\u00e9p\u00e9sben a fa gy\u00f6ker\u00e9t adjuk meg. A jelentkez\u00e9s xml eset\u00e9ben a fa gy\u00f6kere a jelentkez\u00e9s, amit a k\u00f6vetkez\u0151 m\u00f3don defini\u00e1lunk.</p> <pre><code>&lt;!DOCTYPE jelentkezes\n[\n ...\n]&gt;\n</code></pre> <p>Egy konkr\u00e9t XML-hez nagyon sokf\u00e9le valid\u00e1ci\u00f3s szab\u00e1lyt defini\u00e1lhatunk, mert nem tudhatjuk, hogy mi k\u00f6telez\u0151 \u00e9s mi nem, melyik elemb\u0151l mennyi a minimum \u00e9s maximum, melyik elemre milyen megk\u00f6t\u00e9sek vannak, stb. Mi most egyet fogunk megadni, ami logikusan k\u00f6vetkezik az XML-b\u0151l, illetve bemutatja a DTD lehet\u0151s\u00e9geit is.</p> <p>A <code>jelentkezes</code> elemnek van egy attrib\u00fatuma (<code>id</code>) \u00e9s k\u00e9t gyereke, a <code>hallgato</code> \u00e9s a <code>kurzusok</code>. Ezt az <code>ELEMENT</code> \u00e9s <code>ATTLIST</code> seg\u00edts\u00e9g\u00e9vel adhatjuk meg.</p> <pre><code>&lt;!DOCTYPE jelentkezes\n[\n  &lt;!ELEMENT jelentkezes (hallgato, kurzusok)&gt;\n  &lt;!ATTLIST jelentkezes idoszak CDATA #REQUIRED&gt;\n]&gt;\n</code></pre> <p>Az <code>idoszak</code> t\u00edpus\u00e1t is megadtuk, ez tetsz\u0151leges sz\u00f6veg (<code>CDATA</code>) lehet, (amit a feldolgoz\u00f3 nem is fogja feldolgozni), illetve defini\u00e1ltuk, hogy k\u00f6telez\u0151 megadni (<code>#REQUIRED</code>).</p>"},{"location":"12_gyakorlat/#attributum","title":"Attrib\u00fatum","text":"<p>Az attrib\u00fatum fontosabb lehets\u00e9ges t\u00edpusa:</p> <ul> <li><code>CDATA</code> - sz\u00f6veges adat</li> <li><code>ID</code>  - egyedi azonos\u00edt\u00f3, azaz egy azonos\u00edt\u00f3 nem fordulhat el\u0151 k\u00e9tszer (pl. a <code>kurzus</code> <code>id</code>-ja)</li> <li>Felsorol\u00e1s, amikor defini\u00e1ljuk, hogy pontosan milyen \u00e9rt\u00e9keket vehet fel (pl.  a <code>kurzus</code> eset\u00e9ben a <code>jovahagyas</code>)</li> <li><code>ENTITY</code> \u00e9s <code>ENTITIES</code> - k\u00fcls\u0151 hivatkoz\u00e1s megad\u00e1sa (k\u00e9s\u0151bb lesz r\u00e1 p\u00e9lda)</li> <li><code>IDREF</code> \u00e9s <code>IDREFS</code> - egy vagy t\u00f6bb m\u00e1sik elemre t\u00f6rt\u00e9n\u0151 hivatkoz\u00e1s</li> <li><code>NMTOKEN</code> \u00e9s <code>NMTOKENS</code> - Valid XML n\u00e9v</li> </ul> <p>Az attrib\u00fatum k\u00f6vetelm\u00e9nyek a k\u00f6vetkez\u0151k lehetnek:</p> <ul> <li> <p><code>#REQUIRED</code> - k\u00f6telez\u0151 megadni, p\u00e9ld\u00e1ul a jelentkez\u00e9si id\u0151szakot vagy a hallgat\u00f3nak az egyedi azonos\u00edt\u00f3j\u00e1t</p> <pre><code>&lt;!ATTLIST jelentkezes idoszak CDATA #REQUIRED&gt;\n&lt;!ATTLIST kurzus      id      ID    #REQUIRED&gt;\n</code></pre> </li> </ul> <ul> <li> <p><code>#FIXED</code> - k\u00f6telez\u0151 megadni, de csak egy fix \u00e9rt\u00e9ket vehet fel, ami p\u00e9lda lehet, hogy az egyetem csak az SZTE lehet</p> <pre><code>&lt;!ATTLIST jelentkezes egyetem CDATA #FIXED \"SZTE\"&gt;\n</code></pre> </li> </ul> <ul> <li> <p><code>#IMPLIED</code> - opcion\u00e1lis, azaz megadhatjuk, de nem k\u00f6telez\u0151, p\u00e9ld\u00e1ul a nyelv a kurzusokn\u00e1l</p> <pre><code>&lt;!ATTLIST kurzus      nyelv   CDATA #IMPLIED&gt;\n</code></pre> </li> </ul> <ul> <li> <p>felsorol\u00e1s - megadhatjuk, hogy milyen \u00e9rt\u00e9keket vehet fel, mint p\u00e9ld\u00e1ul a j\u00f3v\u00e1hagy\u00e1sos kurzusokn\u00e1l, de megadhatunk alap\u00e9rtelmezett \u00e9rt\u00e9ket is, hogy ne kelljen minden nem j\u00f3v\u00e1hagy\u00e1soshoz ki\u00edrni a \"nem\"-et</p> <pre><code>&lt;!ATTLIST kurzus      jovahagyas   (igen | nem) \"nem\"&gt;\n</code></pre> </li> </ul>"},{"location":"12_gyakorlat/#elem","title":"Elem","text":"<p>Az elemek eset\u00e9ben megadhatjuk, hogy mi legyen a tartalmuk:</p> <ul> <li><code>EMPTY</code> - \u00fcres, az elemnek nem lehet tartalma (pl. HTML eset\u00e9ben a <code>&lt;br /&gt;</code>)</li> </ul> <ul> <li><code>ANY</code>- tetsz\u0151leges tartalmat megadhatunk, amit az XML megenged</li> </ul> <ul> <li><code>#PCDATA</code> - parsed data, azaz olyan adattartalom, amit az XML-parser feldolgoz</li> </ul> <ul> <li>Gyerek elemek - tov\u00e1bbi XML elemek</li> </ul> <ul> <li> <p>Ezek kombin\u00e1ci\u00f3ja, amikor t\u00f6bbf\u00e9le tartalmat is megadhatunk, pl. a hallgat\u00f3 eset\u00e9ben</p> <pre><code>&lt;!ELEMENT hallgato (hnev, szuletesnap, szak)&gt;\n</code></pre> </li> </ul> <p>A gyerek elemek eset\u00e9ben azt is megadhatjuk, hogy h\u00e1nyszor forduljanak el\u0151:</p> <ul> <li> <p>Szekvencia: ha vessz\u0151vel elv\u00e1lasztva adjuk mega, akkor minden elemnek l\u00e9teznie kell</p> <pre><code>&lt;!ELEMENT hallgato (hnev, szuletesnap, szak)&gt;\n</code></pre> </li> </ul> <ul> <li> <p>Ha t\u00f6bb elem k\u00f6z\u00fcl kell v\u00e1lasztani egyet, akkor a | jellel adhatjuk meg, pl. <code>tanar</code> vagy <code>oratarto</code></p> <pre><code>&lt;!ELEMENT kurzus (... (tanar|oratarto) )&gt;\n</code></pre> </li> </ul> <ul> <li> <p>Ism\u00e9tl\u0151d\u00e9s oper\u00e1torok</p> <ul> <li>Nincs - pontosan egyszer kell el\u0151fordulnia</li> </ul> <ul> <li>? - egyszer vagy egyszer sem, pl. lehet, hogy m\u00e9g nem ismert a kurzus id\u0151pontja</li> </ul> <ul> <li>+ - legal\u00e1bb egyszer szerepelnie kell, pl. a hallgat\u00f3nak legal\u00e1bb egy szakja van</li> </ul> <ul> <li> <p>* - ak\u00e1rh\u00e1nyszor szerepelhet (ak\u00e1r el is lehet hagyni), pl. tetsz\u0151leges kurzust felvehet</p> <pre><code>&lt;!ELEMENT hallgato (hnev, szuletesnap, szak+)&gt;\n&lt;!ELEMENT kurzusok (kurzus*)&gt;\n&lt;!ELEMENT kurzus (nev, kredit, hely, idopont?, (tanar|oratarto)+ )&gt;\n</code></pre> </li> </ul> </li> </ul>"},{"location":"12_gyakorlat/#teljes-pelda","title":"Teljes p\u00e9lda","text":"<p>Ezen \u00e9p\u00edt\u0151elemek felhaszn\u00e1lva a <code>jelentkezes.xml</code>-hez tartoz\u00f3 egy lehets\u00e9ges DTD a k\u00f6vetkez\u0151:</p> <pre><code>&lt;!DOCTYPE jelentkezes\n[\n    &lt;!ELEMENT jelentkezes (hallgato, kurzusok)&gt;\n    &lt;!ATTLIST jelentkezes \n        idoszak CDATA #REQUIRED\n        egyetem CDATA #FIXED \"SZTE\"\n    &gt;\n\n    &lt;!ELEMENT hallgato (hnev, szuletesnap, szak+)&gt;\n    &lt;!ATTLIST hallgato id ID #REQUIRED&gt;\n    &lt;!ELEMENT hnev (#PCDATA)&gt;\n    &lt;!ELEMENT szuletesnap (#PCDATA)&gt;\n    &lt;!ELEMENT szak (#PCDATA)&gt;\n    &lt;!ATTLIST szak evf CDATA #REQUIRED&gt;\n\n    &lt;!ELEMENT kurzusok (kurzus*)&gt;\n    &lt;!ELEMENT kurzus (nev, kredit, hely, idopont?, (tanar|oratarto)+ )&gt;\n    &lt;!ATTLIST kurzus\n        id    ID    #REQUIRED\n        nyelv CDATA #IMPLIED\n        jovahagyas (igen | nem) \"nem\"\n    &gt;\n\n    &lt;!ELEMENT nev (#PCDATA)&gt;\n    &lt;!ELEMENT kredit (#PCDATA)&gt;\n    &lt;!ELEMENT hely (#PCDATA)&gt;\n    &lt;!ELEMENT idopont (#PCDATA)&gt;\n    &lt;!ELEMENT tanar (#PCDATA)&gt;\n  &lt;!ELEMENT oratarto (#PCDATA)&gt;\n\n]&gt;\n</code></pre>"},{"location":"12_gyakorlat/#hivatkozasok","title":"Hivatkoz\u00e1sok","text":""},{"location":"12_gyakorlat/#kulso-hivatkozasok","title":"K\u00fcls\u0151 hivatkoz\u00e1sok","text":"<p>Az els\u0151 k\u00fcls\u0151 hivatkoz\u00e1s maga a DTD lehet. Megtehetj\u00fck, hogy a fenti DTD-t bem\u00e1soljuk az XML elej\u00e9re, de ez nem c\u00e9lszer\u0171, mert \u00edgy minden XML tartalmazza a DTD-t, ami nagyobb m\u00e9ret\u0171 lesz, a DTD redund\u00e1nsan szerepel az \u00f6sszes XML-ben, illetve, ha m\u00f3dos\u00edtjuk a DTD-t, akkor minden XML-ben ki kell cser\u00e9lni. Ez\u00e9rt c\u00e9lszer\u0171 k\u00fcls\u0151 hivatkoz\u00e1sk\u00e9nt megadni a DTD-t, \u00e9s ilyenkor az XML elej\u00e9re csak a hivatkoz\u00e1st kell besz\u00farni.</p> <pre><code>&lt;!DOCTYPE jelentkezes SYSTEM \"jelentkezes.dtd\"&gt;\n</code></pre> <p>De nem csak a DTD-re lehet k\u00fcls\u0151 hivatkoz\u00e1st defini\u00e1lni, hanem ,,b\u00e1rmire''. P\u00e9ld\u00e1ul a <code>kurzusok</code> vagy a <code>kurzus</code> eset\u00e9ben is meg lehet adni, hogy valami k\u00fcls\u0151 f\u00e1jlra vagy egy web c\u00edmre hivatkozzon.</p> <pre><code>&lt;!ENTITY kurzusok    SYSTEM \"https://www...\"&gt;\n&lt;!ENTITY kurzus      SYSTEM \"file://C:...\"&gt;\n</code></pre>"},{"location":"12_gyakorlat/#belso-hivatkozasok","title":"Bels\u0151 hivatkoz\u00e1sok","text":"<p>A DTD lehet\u0151s\u00e9get biztos\u00edt v\u00e1ltoz\u00f3 defin\u00edci\u00f3kra is, \u00e9s ezekre a v\u00e1ltoz\u00f3kra k\u00e9s\u0151bb hivatkozhatunk is. P\u00e9ld\u00e1ul ha az SZTE-t nem akarjuk mindenhova ki\u00edrni, helyette felvesz\u00fcnk egy v\u00e1ltoz\u00f3t, annak \u00e9rt\u00e9k\u00fcl adjuk, \u00e9s ha valami\u00e9rt v\u00e1ltozik az egyetem neve, akkor csak egy helyen kell m\u00f3dos\u00edtani. A kor\u00e1bbi p\u00e9lda kapcsol\u00f3d\u00f3 r\u00e9sze (valid XML-l\u00e9 alak\u00edtva):</p> <pre><code>&lt;!DOCTYPE jelentkezes\n[\n  &lt;!ENTITY EGYETEMNEVE \"SZTE\"&gt;\n&lt;!ELEMENT jelentkezes EMPTY&gt;\n&lt;!ATTLIST jelentkezes egyetem CDATA #FIXED \"SZTE\"&gt;\n]&gt;\n\n&lt;jelentkezes egyetem=\"&amp;EGYETEMNEVE;\" /&gt;\n</code></pre>"},{"location":"12_gyakorlat/#hivatkozasok-hasznalatanak-veszelyei","title":"Hivatkoz\u00e1sok haszn\u00e1lat\u00e1nak vesz\u00e9lyei","text":"<p>Haszn\u00e1ljuk vagy ne haszn\u00e1ljuk a ne haszn\u00e1ljuk a hivatkoz\u00e1sokat? L\u00e1thatjuk, hogy sz\u00e1mos el\u0151ny\u00fck van:</p> <ul> <li>csak egy helyen szerepel a DTD,</li> <li>csak egy helyen adok \u00e9rt\u00e9ket a v\u00e1ltoz\u00f3nak, \u00e9s azt\u00e1n haszn\u00e1lom.</li> </ul> <p>Sz\u00f3val akkor haszn\u00e1ljuk, mi baj t\u00f6rt\u00e9nhet?</p>"},{"location":"12_gyakorlat/#dtd-valtozok","title":"DTD v\u00e1ltoz\u00f3k","text":"<p>Tegy\u00fck fel, hogy van egy alkalmaz\u00e1sunk, ami egy webszerveren fut, \u00e9s valami inputot v\u00e1runk XML form\u00e1tumban. El\u0151vigy\u00e1zatosak vagyunk, \u00e9s hogy v\u00e9dj\u00fck a szervert (t\u00e1rhely, mem\u00f3ria, processzor kapacit\u00e1s), lekorl\u00e1tozzuk a felt\u00f6ltend\u0151 f\u00e1jlok m\u00e9ret\u00e9t. Ekkor megnyugodhatunk, mi baj t\u00f6rt\u00e9nhet, ,,mindenre'' gondolunk.</p> <p>Vagy m\u00e9gsem? Mi van akkor, ha az egyik ,,bar\u00e1tunk'' meglep minket a k\u00f6vetkez\u0151 XML-lel?</p> <pre><code>&lt;!DOCTYPE pelda [\n  &lt;!ENTITY a \"1234567890\"&gt;\n&lt;!ENTITY b \"&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;\"&gt;\n&lt;!ENTITY c \"&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;\"&gt;\n&lt;!ENTITY d \"&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;\"&gt;\n\n&lt;!ENTITY l \"&amp;k;&amp;k;&amp;k;&amp;k;&amp;k;&amp;k;&amp;k;&amp;k;\"&gt;\n&lt;!ENTITY m \"&amp;l;&amp;l;&amp;l;&amp;l;&amp;l;&amp;l;&amp;l;&amp;l;\"&gt;\n]&gt;\n&lt;pelda&gt;&amp;m;&lt;/pelda&gt;\n</code></pre> <p>Mi fog t\u00f6rt\u00e9nni ekkor? Az XML feldolgoz\u00f3 elv\u00e9gzi a dolg\u00e1t, \u00e9s el\u0151\u00e1ll\u00edtja az XML-t, amihez ki kell sz\u00e1molnia <code>m</code>-et, amihez el\u0151bb <code>l</code>-re is sz\u00fcks\u00e9ge van, ... De mekkora lesz <code>m</code>?</p> <ul> <li><code>a</code> 10 b\u00e1jtos</li> <li><code>b</code> 8-szor tartalmazza <code>a</code>-t, azaz 10 * 8 = 80 b\u00e1jt</li> <li><code>c</code> 8-szor tartalmazza <code>b</code>-t, azaz 10 * 8 * 8 = 10 * 82 = 640 b\u00e1jt</li> <li><code>d</code> 8-szor tartalmazza <code>c</code>-t, azaz 10 * 83 = 5 KB</li> <li><code>e</code> 8-szor tartalmazza <code>d</code>-t, azaz 10 * 84 = 40 KB</li> <li>...</li> <li><code>m</code> 8-sor tartalmazza <code>d</code>-t, azaz 10 * 812 = 640 GB!!!</li> </ul> <p>Azaz a fenti ,,\u00e1rtatlannak t\u0171n\u0151'' XML feldolgoz\u00e1s\u00e1hoz 640GB mem\u00f3ri\u00e1ra van sz\u00fcks\u00e9g.</p>"},{"location":"12_gyakorlat/#xml-external-entity-xxe-sebezhetoseg","title":"XML External Entity (XXE) sebezhet\u0151s\u00e9g","text":"<p>A k\u00fcls\u0151 hivatkoz\u00e1sok hasznosak, de azokat is fenntart\u00e1sokkal kell kezelni. P\u00e9ld\u00e1ul, ha valami k\u00fcls\u0151 hivatkoz\u00e1s tartalm\u00e1t a felhaszn\u00e1l\u00f3 l\u00e1thatja, akkor esetleg olyan inform\u00e1ci\u00f3hoz is hozz\u00e1juthat, amihez nincs jogosults\u00e1ga. De ki lenne ilyen amat\u0151r, hogy ezt megengedi, \u00e9s vajon mihez f\u00e9rhet hozz\u00e1? Nos, egy val\u00f3s p\u00e9lda erre, hogy kor\u00e1bban a google toolbart testre lehetett szabni XML seg\u00edts\u00e9g\u00e9vel. Ez egy hasznos funkci\u00f3 volt, csak nem (vagy nem megfelel\u0151en) valid\u00e1lt\u00e1k az XML-t, \u00edgy ha valaki a szerveren tal\u00e1lhat\u00f3 <code>/etc/passwd</code> vagy az <code>/etc/hosts</code> f\u00e1jlok tartalm\u00e1val akarta kieg\u00e9sz\u00edteni a toolbarj\u00e1t, akkor megtehette  </p> <ul> <li>https://blog.detectify.com/2014/04/11/how-we-got-read-access-on-googles-production-servers/</li> <li>https://news.softpedia.com/news/Google-Rewards-Experts-for-XXE-Vulnerability-in-Toolbar-Button-Gallery-437290.shtml</li> </ul>"},{"location":"12_gyakorlat/#xml-schema-definition-xsd","title":"XML Schema Definition (XSD)","text":"<p>Annak ellen\u00e9re, hogy a DTD-vel is defini\u00e1lthatjuk az XML form\u00e1tum\u00e1t, van n\u00e9h\u00e1ny h\u00e1tr\u00e1nya, ami\u00e9rt ink\u00e1bb az XSD-t \u00e9rdemes haszn\u00e1lni. An\u00e9lk\u00fcl, hogy ismern\u00e9nk az XSD-t, a DTD-vel kapcsolatban lehetett n\u00e9hol hi\u00e1ny\u00e9rzet\u00fcnk, ez\u00e9rt most el\u0151re \u00f6sszefoglaljuk a fontosabb k\u00fcl\u00f6nbs\u00e9geket, illetve az XSD el\u0151nyeit a DTD-vel szemben:</p> <ul> <li>Az XSD XML alap\u00fa, m\u00edg a DTD nem, azaz a DTD-hez meg kell tanulni egy \u00fajabb szintaxist (ami az\u00e9rt nem annyira bonyolult  ).</li> <li>Az XSD sokf\u00e9le t\u00edpust defini\u00e1l (sz\u00e1m, d\u00e1tum, ...), m\u00edg a DTD alapb\u00f3l ezt nem t\u00e1mogatja.<ul> <li>Ez\u00e9rt nem tudtunk a sz\u00fclet\u00e9si \u00e9vnek d\u00e1tum t\u00edpus megk\u00f6vetelni, vagy a kredit sz\u00e1mnak nemnegat\u00edv eg\u00e9sz \u00e9rt\u00e9ket.</li> </ul> </li> <li>Az XSD-vel defini\u00e1lhatjuk a gyerek elemek sz\u00e1m\u00e1t \u00e9s sorrendj\u00e9t, m\u00edg a DTD ezt nem t\u00e1mogatja.</li> <li>Az XML-ben haszn\u00e1lhatunk n\u00e9vtereket, \u00e9s az XSD t\u00e1mogatja ezt.</li> <li>Az\u00e9rt a DTD mellett sz\u00f3l p\u00e9ld\u00e1ul, hogy defini\u00e1lhatunk <code>ENTITY</code>-t, amit az XSD nem t\u00e1mogat.</li> </ul>"},{"location":"12_gyakorlat/#xsd-bevezeto","title":"XSD Bevezet\u0151","text":"<p>Az XSD XML alapon defini\u00e1lja, hogy az adott XML hogyan n\u00e9zhet ki, azaz </p> <ul> <li>milyen elemek \u00e9s attrib\u00fatumok fordulhatnak el\u0151,</li> <li>mennyi gyerek elem \u00e9s milyen sorrendben fordulhat el\u0151,</li> <li>az elemek \u00e9s attrib\u00fatumok t\u00edpusait,</li> <li>\u00e9s az elemek \u00e9s attrib\u00fatumok fix \u00e9rt\u00e9keit.</li> </ul> <p>Az XSD megad\u00e1sa egy XML f\u00e1jllal t\u00f6rt\u00e9nik, ahol az XSD nyelvtanban defini\u00e1lt elemeket haszn\u00e1lhatjuk. A gy\u00f6k\u00e9rben megadjuk, hogy az XSD n\u00e9vteret haszn\u00e1ljuk, \u00e9s ezen elemeket az <code>xs</code> prefixszel fogjuk haszn\u00e1lni.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;xs:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"&gt;\n...\n&lt;/xs:schema&gt;\n</code></pre> <p>Az XSD-ben megtal\u00e1lhat\u00f3ak azok az alapt\u00edpusok, amelyek a legt\u00f6bb nyelvben l\u00e9teznek, p\u00e9ld\u00e1ul:</p> <ul> <li>sz\u00f6veg: string</li> <li>sz\u00e1m: integer, long, short, byte, ..., float, double, ...</li> <li>d\u00e1tum: date, time, ...</li> <li>egy\u00e9b: boolean</li> </ul>"},{"location":"12_gyakorlat/#element","title":"Element","text":"<p>Egy XML elemet az XSD-ben az <code>element</code> seg\u00edts\u00e9g\u00e9vel adhatunk meg, ahol meg kell adni a nev\u00e9t \u00e9s azt, hogy mi lehet a tartalma. Az <code>element</code> lehet egyszer\u0171, amikor egy XSD a t\u00edpusa, de lehet \u00f6sszetett is, amikor mi \u00edrjuk le, hogy mit tartalmazhat.</p> <p>P\u00e9ld\u00e1ul a <code>kredit</code> vagy a <code>tan\u00e1r</code> eset\u00e9ben, amikor egyszer\u0171 elemnek tekintj\u00fck:</p> <pre><code>&lt;xs:element name=\"kredit\" type=\"xs:integer\"&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\"/&gt;\n</code></pre> <p>Komplex elemet <code>complexType</code> seg\u00edts\u00e9g\u00e9vel defini\u00e1lhatunk, ahol meg kell adnunk azt is, hogy</p> <ul> <li>milyen elemeket tartalmazzon,</li> <li>melyikb\u0151l mennyit tartalmazzon,</li> <li>\u00e9s hogy sz\u00e1m\u00edt-e a sorrendj\u00fck van sem.</li> </ul>"},{"location":"12_gyakorlat/#osszetett-elem","title":"\u00d6sszetett elem","text":"<p>Ha olyan \u00f6sszetett elemet szeretn\u00e9nk defini\u00e1lni, ahol az \u00f6sszes gyereknek el\u0151 kell fordulnia, de a sorrend tetsz\u0151leges lehet, akkor az <code>all</code>-t kell haszn\u00e1lni. P\u00e9ld\u00e1ul a kurzusnak lehet neve, kreditje, helye, ... (a tan\u00e1r vagy \u00f3ratart\u00f3 v\u00e1laszt\u00e1st most m\u00e9g nem vessz\u00fck figyelembe).</p> <pre><code>&lt;xs:element name=\"kurzus\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:all&gt;\n&lt;xs:element name=\"nev\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"kredit\" type=\"xs:integer\"&gt;\n&lt;xs:element name=\"hely\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"idopont\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\"/&gt;\n&lt;/xs:all&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n</code></pre> <p>Ha az elemek sorrendje is fontos, akkor a <code>sequence</code>-t kell haszn\u00e1lni:</p> <pre><code>&lt;xs:element name=\"kurzus\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:sequence&gt;\n&lt;xs:element name=\"nev\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"kredit\" type=\"xs:integer\"&gt;\n&lt;xs:element name=\"hely\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"idopont\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\"/&gt;\n&lt;/xs:sequence&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n</code></pre> <p>Azt is megtehetj\u00fck, hogy az elemek k\u00f6z\u00fcl v\u00e1lasztunk (<code>choice</code>), p\u00e9ld\u00e1ul, ha a kurzusnak tan\u00e1ra vagy \u00f3ratart\u00f3ja van, \u00e9s ilyenkor vagy az egyiket, vagy a m\u00e1sikat kell megadni:</p> <pre><code>&lt;xs:element name=\"kurzus\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:choice&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"oratarto\" type=\"xs:string\"/&gt;\n&lt;/xs:choice&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n</code></pre>"},{"location":"12_gyakorlat/#szamossag-megadasa","title":"Sz\u00e1moss\u00e1g megad\u00e1sa","text":"<p>Lehet\u0151s\u00e9g\u00fcnk van azt is megadni, hogy egy elem h\u00e1nyszor forduljon, illetve \u00f6sszesen h\u00e1ny elem lehet. Ezekre a <code>minOccurs</code> \u00e9s <code>maxOccurs</code> attrib\u00fatumokat haszn\u00e1lhatjuk.</p> <p>P\u00e9ld\u00e1ul ha a kurzus eset\u00e9ben az id\u0151pont opcion\u00e1lis, azaz nem k\u00f6telez\u0151, akkor a <code>minOccurs</code> \u00e9rt\u00e9k\u00e9t 0-ra kell \u00e1ll\u00edtani, \u00e9s \u00edgy elhagyhat\u00f3 lesz. Tov\u00e1bb\u00e1 ha legfeljebb 5 tan\u00e1ra lehet (most tekints\u00fcnk el a tan\u00e1r vagy oktat\u00f3 megk\u00f6zel\u00edt\u00e9st\u0151l) a kurzusnak, akkor azt a k\u00f6vetkez\u0151 m\u00f3don lehet megadni:</p> <pre><code>&lt;xs:element name=\"kurzus\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:all&gt;\n&lt;xs:element name=\"nev\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"kredit\" type=\"xs:integer\"&gt;\n&lt;xs:element name=\"hely\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"idopont\" type=\"xs:string\" minOccurs=\"0\"/&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\" maxOccurs=\"5\"/&gt;\n&lt;/xs:all&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n</code></pre> <p>A <code>minOccurs</code> \u00e9rt\u00e9ke 0 vagy 1 lehet, a <code>maxOccurs</code> tetsz\u0151leges eg\u00e9sz. Mindkett\u0151nek az alap\u00e9rtelmezett \u00e9rt\u00e9ke 1, azaz minden gyerek elemnek egyszer kell szerepelnie, ha ezt nem specifik\u00e1ljuk m\u00e1sk\u00e9pp.</p>"},{"location":"12_gyakorlat/#referencia-masik-elemre","title":"Referencia m\u00e1sik elemre","text":"<p>Mivel az XML-ben el\u00e9g m\u00e9ly egym\u00e1sba \u00e1gyaz\u00e1si hierarchia alakulhat ki, az\u00e9rt az XSD is el\u00e9g bonyolult \u00e9s m\u00e9ly lehet, ez\u00e9rt c\u00e9lszer\u0171 bizonyos r\u00e9szeket kiszervezni, \u00e9s azokra csak hivatkoz\u00e1sokat megadni. Ilyen lehet, hogy a <code>jelentkezes</code>-t k\u00e9t nagyobb r\u00e9szre bontjuk, a <code>hallgato</code>-ra \u00e9s a <code>kurzusok</code>-ra.</p> <pre><code>&lt;xs:element name=\"jelentkezes\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:sequence&gt;\n&lt;xs:element ref=\"hallgato\"/&gt;\n&lt;xs:element ref=\"kurzusok\"/&gt;\n&lt;/xs:sequence&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n\n&lt;xs:element name=\"hallgato\"&gt;\n...\n&lt;/xs:element&gt;\n\n&lt;xs:element name=\"kurzusok\"&gt;\n...\n&lt;/xs:element&gt;\n</code></pre>"},{"location":"12_gyakorlat/#attributum_1","title":"Attrib\u00fatum","text":"<p>Az attrib\u00fatumokat az <code>attribute</code> seg\u00edts\u00e9g\u00e9vel adhatjuk meg, ahol meg kell adni az attrib\u00fatum nev\u00e9t, a t\u00edpus\u00e1t, \u00e9s hogy k\u00f6telez\u0151 (<code>required</code>) vagy opcion\u00e1lis (<code>optional</code>), \u00e9s esetleg van-e alap\u00e9rtelmezett \u00e9rt\u00e9ke. N\u00e9h\u00e1ny p\u00e9lda az attrib\u00fatumokra, ahol az <code>evf</code> vagy az <code>id</code> megad\u00e1sa k\u00f6telez\u0151, a <code>nyelv</code> opcion\u00e1lis, mint ahogy a <code>jovahagyas</code> is, de ott m\u00e9g alap\u00e9rtelemezett \u00e9rt\u00e9ket is megadunk.</p> <pre><code>&lt;xs:attribute name=\"evf\" type=\"xs:integer\" use=\"required\"/&gt;\n&lt;xs:attribute name=\"id\" type=\"idTipus\" use=\"required\"/&gt;\n&lt;xs:attribute name=\"jovahagyas\" type=\"igenNemTipus\" use=\"optional\" default=\"nem\"/&gt;\n&lt;xs:attribute name=\"nyelv\" type=\"xs:string\" use=\"optional\"/&gt;\n</code></pre> <p>Ha egy elemnek van attrib\u00fatuma, akkor az m\u00e1r nem lehet egyszer\u0171 elem, hi\u00e1ba nincs tov\u00e1bbi gyereke. P\u00e9ld\u00e1ul a <code>szak</code> eset\u00e9ben csak a szakot kell megadni sz\u00f6veggel, de van egy <code>evf</code> attrib\u00fatuma is.</p> <pre><code>&lt;xs:element name=\"szak\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:simpleContent&gt;\n&lt;xs:extension base=\"xs:string\"&gt;\n&lt;xs:attribute name=\"evf\" type=\"xs:integer\" use=\"required\"/&gt;\n&lt;/xs:extension&gt;\n&lt;/xs:simpleContent&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n</code></pre> <p>Vagy p\u00e9ld\u00e1ul a <code>kurzus</code> attrib\u00fatumainak megad\u00e1sa a k\u00f6vetkez\u0151 lehet:</p> <pre><code>&lt;xs:element name=\"kurzus\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:all&gt;\n&lt;xs:element name=\"nev\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"kredit\" type=\"xs:integer\"&gt;\n&lt;xs:element name=\"hely\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"idopont\" type=\"xs:string\" minOccurs=\"0\"/&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\" maxOccurs=\"5\"/&gt;\n&lt;/xs:all&gt;\n&lt;xs:attribute name=\"id\" type=\"idTipus\" use=\"required\"/&gt;\n&lt;xs:attribute name=\"jovahagyas\" type=\"igenNemTipus\" use=\"optional\" default=\"nem\"/&gt;\n&lt;xs:attribute name=\"nyelv\" type=\"xs:string\" use=\"optional\"/&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n</code></pre>"},{"location":"12_gyakorlat/#sajat-tipus-megszoritasok","title":"Saj\u00e1t t\u00edpus, megszor\u00edt\u00e1sok","text":"<p>Eddig csak a be\u00e9p\u00edtett t\u00edpusokat haszn\u00e1ltuk, azonban lehet\u0151s\u00e9g\u00fcnk van megszor\u00edt\u00e1sokat is alkalmazni a t\u00edpusokra, illetve \u00faj t\u00edpusokat is defini\u00e1lhatunk, amit k\u00e9s\u0151bb felhaszn\u00e1lhatunk. Egy logikus megszor\u00edt\u00e1s, hogy a kredit \u00e9rt\u00e9knek legyen minimum \u00e9s maximum \u00e9rt\u00e9ke. \u00edgy a kor\u00e1bbi</p> <pre><code>&lt;xs:element name=\"kredit\" type=\"xs:integer\"&gt;\n</code></pre> <p>helyett megadjuk, hogy tov\u00e1bbra is eg\u00e9sz sz\u00e1m, de a megszor\u00edt\u00e1sokat is defini\u00e1ljuk:</p> <pre><code>&lt;xs:element name=\"kredit\"&gt;\n&lt;xs:simpleType&gt;\n&lt;xs:restriction base=\"xs:integer\"&gt;\n&lt;xs:minInclusive value=\"0\"/&gt;\n&lt;xs:maxInclusive value=\"30\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n&lt;/xs:element&gt;\n</code></pre> <p>Saj\u00e1t t\u00edpus defini\u00e1l\u00e1s\u00e1n\u00e1l meg kell adni a t\u00edpus nev\u00e9t, valamint azt, hogy mit reprezent\u00e1ljon. P\u00e9ld\u00e1ul a hallgat\u00f3k \u00e9s a kurzusok azonos\u00edt\u00f3inak olyan string azonos\u00edt\u00f3kat fogadunk el, amelyek legal\u00e1bb 5 \u00e9s legfeljebb 10 hossz\u00faak.</p> <pre><code>&lt;xs:simpleType name=\"idTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:minLength value=\"5\"/&gt;\n&lt;xs:maxLength value=\"10\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n</code></pre> <p>Ha a j\u00f3v\u00e1hagy\u00e1shoz szeretn\u00e9nk egy t\u00edpust defini\u00e1lni, ami csak igen vagy nem lehet, akkor az string t\u00edpus lesz, \u00e9s megadott \u00e9rt\u00e9keket vehet fel.</p> <pre><code>&lt;xs:simpleType name=\"igenNemTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:enumeration value=\"igen\"/&gt;\n&lt;xs:enumeration value=\"nem\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n</code></pre> <p>De lehet\u0151s\u00e9g van minta alapj\u00e1n is megszor\u00edt\u00e1st defini\u00e1lni. Ilyen lehet p\u00e9ld\u00e1ul az, hogy melyik id\u0151szakra vonatkozik, ahol a mint\u00e1nak az eleje az <code>\u00e9vsz\u00e1m/\u00e9vsz\u00e1m</code>, majd ezt k\u00f6veti egy vagy k\u00e9t <code>I</code>. Ez a minta nem fogja ellen\u0151rizni, hogy az \u00e9vsz\u00e1m j\u00f3-e, de legal\u00e1bb ilyen form\u00e1tumban kapjuk meg.</p> <pre><code>&lt;xs:simpleType name=\"idoszakTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:pattern value=\"\\d{4}/\\d{4}I(I)?\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n</code></pre>"},{"location":"12_gyakorlat/#teljes-xml","title":"Teljes XML","text":"<p>Ezen \u00e9p\u00edt\u0151elemek felhaszn\u00e1l\u00e1s\u00e1val egy lehets\u00e9ges XSD a jelentkezes.xml p\u00e9ld\u00e1hoz a k\u00f6vetkez\u0151:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\"&gt;\n\n&lt;!-- Bevezet\u00fcnk n\u00e9h\u00e1ny t\u00edpust amit a p\u00e9ld\u00e1ban fogunk haszn\u00e1lni --&gt;\n\n&lt;xs:simpleType name=\"idoszakTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:pattern value=\"\\d{4}/\\d{4}I(I)?\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n\n&lt;xs:simpleType name=\"egyetemTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:pattern value=\"SZTE\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n\n&lt;xs:simpleType name=\"idTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:minLength value=\"5\"/&gt;\n&lt;xs:maxLength value=\"10\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n\n&lt;xs:simpleType name=\"igenNemTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:enumeration value=\"igen\"/&gt;\n&lt;xs:enumeration value=\"nem\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n\n\n&lt;!-- Itt kezdj\u00fck el a szab\u00e1lyokat megadni az elementekre --&gt;\n\n&lt;xs:element name=\"jelentkezes\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:sequence&gt;\n&lt;xs:element ref=\"hallgato\"/&gt;\n&lt;xs:element ref=\"kurzusok\"/&gt;\n&lt;/xs:sequence&gt;\n&lt;xs:attribute name=\"idoszak\" type=\"idoszakTipus\" use=\"required\"/&gt;\n&lt;xs:attribute name=\"egyetem\" type=\"egyetemTipus\" use=\"required\"/&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n\n&lt;xs:element name=\"hallgato\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:all&gt; &lt;!-- nem fontos az elemek sorrendje --&gt;\n&lt;xs:element name=\"hnev\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"szuletesnap\" type=\"xs:date\"/&gt;\n&lt;xs:element name=\"szak\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:simpleContent&gt;\n&lt;xs:extension base=\"xs:string\"&gt;\n&lt;xs:attribute name=\"evf\" type=\"xs:integer\" use=\"required\"/&gt;\n&lt;/xs:extension&gt;\n&lt;/xs:simpleContent&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n&lt;/xs:all&gt;\n&lt;xs:attribute name=\"id\" type=\"idTipus\" use=\"required\"/&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n\n&lt;xs:element name=\"kurzusok\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:sequence&gt;\n&lt;xs:element name=\"kurzus\" maxOccurs=\"unbounded\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:all&gt;\n&lt;xs:element name=\"nev\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"kredit\"&gt;\n&lt;xs:simpleType&gt;\n&lt;xs:restriction base=\"xs:integer\"&gt;\n&lt;xs:minInclusive value=\"0\"/&gt;\n&lt;xs:maxInclusive value=\"30\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n&lt;/xs:element&gt;\n&lt;xs:element name=\"hely\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"idopont\" type=\"xs:string\" minOccurs=\"0\"/&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\" minOccurs=\"0\"/&gt;\n&lt;xs:element name=\"oratarto\" type=\"xs:string\" minOccurs=\"0\"/&gt;\n&lt;/xs:all&gt;\n&lt;xs:attribute name=\"id\" type=\"idTipus\" use=\"required\"/&gt;\n&lt;xs:attribute name=\"jovahagyas\" type=\"igenNemTipus\"\nuse=\"optional\" default=\"nem\"/&gt;\n&lt;xs:attribute name=\"nyelv\" type=\"xs:string\" use=\"optional\"/&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n&lt;/xs:sequence&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n\n&lt;/xs:schema&gt;\n</code></pre>"},{"location":"12_gyakorlat/#xml-gyokere","title":"XML gy\u00f6kere","text":"<p>A fenti XSD eset\u00e9ben egy\u00e9rtelm\u0171nek t\u0171nik, hogy a <code>jelentkezes</code>-t v\u00e1rjuk el az XML gy\u00f6ker\u00e9nek, de ez nem \u00edgy van, mert egy olyan XML is valid, aminek a hallgat\u00f3 a gy\u00f6kere, \u00e9s csak azt a r\u00e9szt val\u00f3s\u00edtja meg.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;\n\n&lt;hallgato id=\"KOJEAE.SZE\"&gt;\n&lt;hnev&gt;Kov\u00e1cs J\u00e1nos&lt;/hnev&gt;\n&lt;szuletesnap&gt;2000-01-08&lt;/szuletesnap&gt;\n&lt;szak evf=\"2\"&gt;programtervezo informatikus&lt;/szak&gt;\n&lt;/hallgato&gt;\n</code></pre>"},{"location":"12_gyakorlat/#hasznos-linkek","title":"Hasznos linkek","text":"<ul> <li>XML online valid\u00e1l\u00e1sa: https://www.xmlvalidation.com/index.php?id=1&amp;L=0</li> <li>DTD: https://www.w3schools.com/xml/xml_dtd_intro.asp</li> <li>XSD: https://www.w3schools.com/xml/schema_intro.asp</li> </ul>"},{"location":"13_gyakorlat/","title":"13. gyakorlat","text":""},{"location":"13_gyakorlat/#xml-technologiak-folytatas","title":"XML technol\u00f3gi\u00e1k (folytat\u00e1s)","text":""},{"location":"13_gyakorlat/#xml-path-language-xpath","title":"XML Path Language (XPath)","text":"<p>Az XPath egy olyan lek\u00e9rdez\u0151 nyelv, amivel az XML dokumentumban elemeket tudunk kijel\u00f6lni, illetve az XML tartalma alapj\u00e1n sz\u00e1m\u00edt\u00e1sokat lehet elv\u00e9gezni (pl. egy adott elemnek h\u00e1ny gyereke van).</p>"},{"location":"13_gyakorlat/#xml-mint-fa","title":"XML, mint fa","text":"<p>Egy XML dokumentumot tekinthet\u00fcnk \u00fagy is, mint egy fa. Csak egy gy\u00f6kere lehet, \u00e9s az elemek egym\u00e1sba \u00e1gyaz\u00e1sa jelenti a f\u00e1ban a sz\u00fcl\u0151-gyerek kapcsolatot. N\u00e9zz\u00fck az al\u00e1bbi catalog XML-t:</p> <pre><code>&lt;catalog&gt;\n&lt;product code =\"123\"&gt;\n&lt;price&gt;35.99&lt;/price&gt;\n&lt;/product&gt;\n&lt;product code =\"456\"&gt;\n&lt;price&gt;22.95&lt;/price&gt;\n&lt;discount&gt;\n&lt;amount&gt;25&lt;/amount&gt;\n&lt;/discount&gt;\n&lt;/product&gt;\n&lt;product code =\"789\"&gt;\n&lt;price&gt;185.00 &lt;/price &gt;\n&lt;/product&gt;\n&lt;/catalog&gt;\n</code></pre> <p>A hozz\u00e1 tartoz\u00f3 fa az al\u00e1bbi (a piros kiemel\u00e9snek k\u00e9s\u0151bb lesz jelent\u0151s\u00e9ge). A f\u00e1nak a gy\u00f6kere egy speci\u00e1lis ,,elem'', ami val\u00f3j\u00e1ban nincs a gr\u00e1fban (mint pl. Linux alatt a gy\u00f6k\u00e9r k\u00f6nyvt\u00e1r). Ennek az elemnek a gyereke az XML gy\u00f6kere, majd a t\u00f6bb elem, de megjelennek az attrib\u00fatumok \u00e9s az elemek \u00e9rt\u00e9kei. Emellett a megjegyz\u00e9sek, feldolgoz\u00e1si utas\u00edt\u00e1sok, n\u00e9vterek is r\u00e9szei a f\u00e1nak, de ezekkel most nem foglalkozunk, XPath szempontj\u00e1b\u00f3l hasonl\u00f3ak.</p> <p></p>"},{"location":"13_gyakorlat/#eleresi-utvonalak-tengelyek-kivalasztas","title":"El\u00e9r\u00e9si \u00fatvonalak, tengelyek, kiv\u00e1laszt\u00e1s","text":"<p>Egy el\u00e9r\u00e9si \u00fatvonallal a f\u00e1ban egy vagy t\u00f6bb elemet jel\u00f6lhet\u00fcnk ki. Az el\u00e9r\u00e9si \u00fatvonalat k\u00e9tf\u00e9lek\u00e9ppen adhatjuk meg:</p> <ul> <li>Abszol\u00fat \u00fatvonallal: mindig a gy\u00f6k\u00e9rhez viszony\u00edtva adjuk meg. Ilyenkor <code>/</code> jellel kezd\u0151dik, p\u00e9ld\u00e1ul a <code>product</code> kijel\u00f6l\u00e9se: <code>/catalog/product</code></li> <li>Relat\u00edv \u00fatvonallal: amikor egy adott elemhez k\u00e9pest adjuk meg, p\u00e9ld\u00e1ul ha a <code>catalog</code> elemhez k\u00e9pest akarjuk megadni a <code>product</code>-ot, akkor el\u00e9g annyit \u00edrni, hogy <code>product</code>, de ha a <code>price</code>-t akarjuk, akkor kijel\u00f6lni, akkor <code>product/price</code> (hogy melyik, az majd k\u00e9s\u0151bb)</li> </ul> <p>A tengelyek seg\u00edts\u00e9g\u00e9vel egy adott elemhez k\u00e9pest jel\u00f6lhet\u00fcnk ki elemeket. N\u00e9h\u00e1ny fontosabb tengely, \u00e9s hogy mely elemeket jel\u00f6lik ki a <code>product</code> elemhez k\u00e9pest (illetve a r\u00f6vid jel\u00f6l\u00e9s\u00fck, ha van ilyen):</p> <ul> <li>self: \u00f6nmaga, azaz mag\u00e1t az elemet jel\u00f6li ki<ul> <li>a <code>product</code> eset\u00e9ben ez a <code>product</code> lesz</li> <li><code>self, vagy r\u00f6viden csak</code>.`</li> </ul> </li> <li>parent: az adott elem sz\u00fcl\u0151je<ul> <li>a <code>product</code> eset\u00e9ben a sz\u00fcl\u0151 a <code>catalog</code></li> <li><code>parent</code>, r\u00f6viden csak <code>..</code></li> </ul> </li> <li>child: az adott elem gyereke(i)<ul> <li>a <code>product</code>  eset\u00e9ben t\u00f6bb gyerek is van, a <code>price</code>  \u00e9s a <code>discount</code></li> <li><code>child</code> vagy r\u00f6viden csak az adott t\u00edpus\u00fa gyerek, azaz <code>child::price</code> helyett csak <code>price</code></li> </ul> </li> <li>attribute: az adott elem attrib\u00fatuma(i)<ul> <li>a <code>product</code> eset\u00e9ben a <code>code</code></li> <li><code>attribute::code</code> helyett el\u00e9g csak annyit \u00edrni, hogy <code>@code</code></li> </ul> </li> <li>descendant-or-self: az adott elem \u00e9s a lesz\u00e1rmazottai<ul> <li>a <code>productt</code> eset\u00e9ben a <code>product</code> \u00f6nmaga, \u00e9s minden lesz\u00e1rmazott elem (<code>price</code>, <code>discount</code>, <code>amount</code>)</li> <li>p\u00e9ld\u00e1ul, ha a lesz\u00e1rmazottak k\u00f6z\u00f6tt a <code>price</code>-ra vagyunk k\u00edv\u00e1ncsiak, akkor a <code>/descendant-or-self()/price</code> hivatkoz\u00e1st kell haszn\u00e1lni, vagy r\u00f6viden a <code>//price</code> jel\u00f6l\u00e9st</li> </ul> </li> <li>Tov\u00e1bbi tengelyek: <ul> <li>ancestors, ancestor-or-self, descendant, following, following-sibling, namespace, preceding, preceding-sibling</li> </ul> </li> </ul>"},{"location":"13_gyakorlat/#elemek-kivalasztasa","title":"Elemek kiv\u00e1laszt\u00e1sa","text":"<p>\u00datvonalak seg\u00edts\u00e9g\u00e9vel a fent le\u00edrt m\u00f3don, azaz p\u00e9ld\u00e1ul az \u00f6sszes <code>price</code> elem kiv\u00e1laszt\u00e1sa a <code>//price</code> seg\u00edts\u00e9g\u00e9vel tehet\u0151 meg. Azonban lehet egy\u00e9b lehet egy\u00e9b felt\u00e9teleket is meg megfogalmazni, \u00e1ltal\u00e1nosan a a k\u00e9plet <code>axis::node-test[predicate]</code> alakban \u00edrhat\u00f3 fel, ahol a predicate a felt\u00e9teleket jelenti. Ezekre n\u00e9h\u00e1ny p\u00e9lda:</p> <ul> <li>Azon <code>product</code> elemek kiv\u00e1laszt\u00e1sa, amelynek van k\u00f3d attrib\u00fatuma, \u00e9s annak az \u00e9rt\u00e9ke 123 a  <code>//product[@code=\"123\"]</code> kifejez\u00e9ssel v\u00e1laszthat\u00f3 ki, azaz az attrib\u00fatum \u00e9rt\u00e9k\u00e9re a a felt\u00e9telt a <code>[@attr=\"ertek\"]</code> mondja meg</li> <li>Ha azokat szeretn\u00e9nk kiv\u00e1lasztani, amelyeknek van <code>code</code> attrib\u00fatuma, de az \u00e9rt\u00e9ke mindegy, akkor a  <code>//product[@code]</code> kifejez\u00e9st kell haszn\u00e1lni, azaz attrib\u00fatum l\u00e9tez\u00e9s\u00e9re a felt\u00e9tel <code>[@attr]</code></li> <li>Ha az utols\u00f3 <code>product</code> elemet akarjuk kijel\u00f6lni, akkor a <code>product[last()]</code> seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg, de ha p\u00e9ld\u00e1ul a harmadikat, akkor <code>product[3]</code> a megold\u00e1s</li> <li>De t\u00f6bb felt\u00e9telt is \u00f6ssze lehet f\u0171zni, pl. <code>product[last()][@code]</code> \u00e9s ilyenkor balr\u00f3l jobbra lesznek ki\u00e9rt\u00e9kelve</li> </ul> <p>Az el\u00e9r\u00e9si \u00fatvonalak csom\u00f3pont gy\u0171jtem\u00e9nyeket adnak vissza, amiket felhaszn\u00e1lhatunk k\u00fcl\u00f6nb\u00f6z\u0151 m\u00f3don:</p> <ul> <li>\u00d6ssze lehet f\u0171zni, azaz ha egy XML-ben <code>cd</code> \u00e9s <code>dvd</code>vegyesen szerepel, akkor az \u00f6sszes <code>cd</code> vagy <code>dvd</code> kijel\u00f6l\u00e9se <code>cd | dvd</code>, azaz a <code>|</code> jellel lehet \u00f6sszef\u0171zni</li> <li>Meg is sz\u00e1molhatom az \u00f6sszes olyan <code>product</code> elemet, amelynek a k\u00f3dja legal\u00e1bb 500: <code>count(product[@code &gt;= 500])</code><ul> <li>De lehetne azon <code>price</code> elemeket is kiv\u00e1lasztani, ahol a <code>price</code> \u00e9rt\u00e9ke legal\u00e1bb 100: <code>/catalog/product[price &gt;= 100]/price</code></li> </ul> </li> <li>Kiv\u00e1laszthatom azokat az elemeket, amelyeknek a k\u00f3dja 500 \u00e9s 600 k\u00f6z\u00e9 esik: <code>product[@code &gt;500 and @code &lt;600]</code></li> <li>Sz\u00f6veges alap\u00fa sz\u0171r\u00e9sek is lehetnek, p\u00e9ld\u00e1ul azon v\u00e1s\u00e1rl\u00f3k kiv\u00e1laszt\u00e1sa, amelyeknek a neve \"dr\"-rel kezd\u0151dik: <code>customer[ starts-with(@name, \"dr\")]</code></li> </ul> <p>A teljess\u00e9g ig\u00e9nye n\u00e9lk\u00fcl csak n\u00e9h\u00e1ny p\u00e9ld\u00e1t mutattunk arra, hogy milyen lehet\u0151s\u00e9gek vannak csom\u00f3pontok kijel\u00f6l\u00e9s\u00e9re (tov\u00e1bbi p\u00e9ld\u00e1k), \u00e9s ezeket lehet kombin\u00e1lni is, pl. azon <code>price</code> elemeket is kiv\u00e1lasztani, ahol a <code>price</code> \u00e9rt\u00e9ke legal\u00e1bb 100: <code>/catalog/product[price &gt;= 100]/price</code></p>"},{"location":"13_gyakorlat/#xsl-extensible-stylesheet-language-transformations-xslt","title":"XSL (eXtensible Stylesheet Language) Transformations (XSLT)","text":"<p>Az XSL az az XML-hez tartoz\u00f3 style sheet, kb az, mint a CSS a HTML sz\u00e1m\u00e1ra. Az XSLT egy nyelv, amivel az XML dokumentumokat transzform\u00e1lni lehet:</p> <ul> <li> <p>XML-t XML-l\u00e9, ha p\u00e9ld\u00e1ul \u00e1t akarjuk alak\u00edtani (p\u00e9ld\u00e1ul a lenti k\u00e9t XML ugyanazt az inform\u00e1ci\u00f3 tartalmazza, csak m\u00e1s form\u00e1tumban), vagy valamilyen m\u0171veletet (sz\u0171r\u00e9s, sz\u00e1mol\u00e1s, \u00f6sszef\u0171z\u00e9s, stb.) is szeretn\u00e9nk v\u00e9gezni az adatokon.</p> <pre><code>&lt;employees&gt;\n&lt;employee&gt;\n&lt;name&gt;Reid&lt;/name&gt;\n&lt;salary&gt;91000&lt;/salary&gt;\n&lt;/employee&gt;\n...\n&lt;/employees&gt;\n</code></pre> <pre><code>&lt;staff&gt;\n&lt;staff-member name=\"Reid\" pay=\"91000\"/&gt;\n...\n&lt;/staff&gt;\n</code></pre> </li> </ul> <ul> <li> <p>XML-t HTML-l\u00e9 vagy m\u00e1s dokumentumm\u00e1 akarunk alak\u00edtani.</p> <pre><code>&lt;html&gt;\n  &lt;table&gt;\n    &lt;tr&gt;\n      &lt;td&gt;Reid&lt;/td&gt;\n      &lt;td&gt;91000&lt;/td&gt;\n    &lt;/tr&gt;\n    ...\n  &lt;/table&gt;\n&lt;/html&gt;\n</code></pre> </li> </ul>"},{"location":"13_gyakorlat/#xslt-szabalyok","title":"XSLT szab\u00e1lyok","text":"<p>A k\u00f6vetkez\u0151kben bemutatjuk, hogyan lehet megadni egy XSLT transzform\u00e1ci\u00f3t. Az eg\u00e9szet egy p\u00e9ld\u00e1n kereszt\u00fck fogjuk bemutatni, amikor is a c\u00e9l egy XML HTML-l\u00e9 konvert\u00e1l\u00e1sa lesz. A feladat a CD katal\u00f3gus XML \u00e1talak\u00edt\u00e1sa HTML-l\u00e9 a k\u00f6vetkez\u0151 szempontok szerint:</p> <ul> <li>A HTML oldal c\u00edme a <code>catalog</code> elem <code>name</code> attrib\u00fatum\u00e1nak az \u00e9rt\u00e9ke legyen</li> <li>\u00edrjuk ki, hogy h\u00e1ny CD van a katal\u00f3gusban</li> <li>A CD-k egy t\u00e1bl\u00e1zatban jelenjenek meg<ul> <li>Az <code>artist</code> szerint legyenek rendezve</li> <li>Az akci\u00f3s elemeknek piros legyen a h\u00e1ttere</li> <li>A CD \u00e1r\u00e1t Ft-ban adjuk meg</li> </ul> </li> </ul> <p>A CD katal\u00f3gus egy r\u00e9szlete:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;?xml-stylesheet type=\"text/xsl\" href=\"cd_catalog2Html.xsl\"?&gt;\n&lt;catalog name=\"My cds to sell\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:noNamespaceSchemaLocation=\"cd_catalog.xsd\"&gt;\n&lt;cd&gt;\n&lt;title&gt;Empire Burlesque&lt;/title&gt;\n&lt;artist&gt;Bob Dylan&lt;/artist&gt;\n&lt;country&gt;USA&lt;/country&gt;\n&lt;company&gt;Columbia&lt;/company&gt;\n&lt;price&gt;10.90&lt;/price&gt;\n&lt;year&gt;1985&lt;/year&gt;\n&lt;/cd&gt;\n&lt;cd&gt;\n&lt;title&gt;Hide your heart&lt;/title&gt;\n&lt;artist&gt;Bonnie Tyler&lt;/artist&gt;\n&lt;country&gt;UK&lt;/country&gt;\n&lt;company&gt;CBS Records&lt;/company&gt;\n&lt;price&gt;9.90&lt;/price&gt;\n&lt;year&gt;1988&lt;/year&gt;\n&lt;/cd&gt;\n...\n&lt;/catalog&gt;\n</code></pre> <p>Az XSLT is egy XML dokumentum, ahol az XSLT transzform\u00e1ci\u00f3t le\u00edr\u00f3 elemek/szab\u00e1lyok olyan elemek, amelyek az <code>xsl</code> n\u00e9vt\u00e9rben vannak, de emellett lehetnek tov\u00e1bbi elemek is, mint ahogy a p\u00e9ld\u00e1ban is lesznek majd HTML elemek is.</p> <pre><code>&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n...\n&lt;/xsl:stylesheet&gt;\n</code></pre> <p>A transzform\u00e1ci\u00f3 defini\u00e1l\u00e1sa nem m\u00e1s, mint XSLT szab\u00e1lyok megad\u00e1sa, melyek tetsz\u0151leges sorrendben v\u00e9grehajt\u00f3dhatnak. Az, hogy mire illeszkedik a transzform\u00e1land\u00f3 XML-ben, az XPath seg\u00edts\u00e9g\u00e9vel \u00edrhat\u00f3 le. A szab\u00e1lyokat a <code>&lt;xsl:template match=\"valami\"&gt;</code> seg\u00edt\u00e9s\u00e9vel adhatjuk meg, ahol a valami mondja meg, hogy mire illeszkedjen. P\u00e9ld\u00e1ul ha a gy\u00f6k\u00e9r elemre akarunk defini\u00e1lni egy szab\u00e1lyt, akkor az al\u00e1bbi m\u00f3don tehetj\u00fck meg:</p> <pre><code>&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n\n&lt;xsl:template match=\"/\"&gt;\n\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;CD katalogus&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\nTODO\n      &lt;/body&gt;\n&lt;/html&gt;\n\n&lt;/xsl:template&gt;\n\n&lt;/xsl:stylesheet&gt;\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban a gy\u00f6k\u00e9r elemre fog ,,v\u00e9grehajt\u00f3dni'' a szab\u00e1ly, aminek a belsej\u00e9ben egy HTML oldal k\u00f3dja l\u00e1that\u00f3, \u00e9s a v\u00e9grehajt\u00e1s itt azt jelenti majd, hogy azt a k\u00f3dot \"ki\u00edrja\", azaz a transzform\u00e1ci\u00f3 eredm\u00e9nye az a HTML oldal lesz.</p> <p>Ha egy adott XML elem \u00e9rt\u00e9k\u00e9t akarjuk kiolvasni az XSLT seg\u00edts\u00e9g\u00e9vel, akkor ezt a <code>&lt;xsl:value-of select=\"elem\"/&gt;</code> seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg. Ez kiolvassa az adott elem \u00e9rt\u00e9k\u00e9t, \u00e9s ,,be\u00edrja'' az adott helyre, azaz ha az oldal c\u00edm\u00e9nek a a katal\u00f3gus gy\u00f6k\u00e9r elem\u00e9nek a <code>name</code> attrib\u00fatum\u00e1t akarom megadni, akkor a k\u00f6vetkez\u0151 m\u00f3don kell kieg\u00e9sz\u00edteni a fenti p\u00e9ld\u00e1t:</p> <pre><code>  &lt;head&gt;\n&lt;title&gt;&lt;xsl:value-of select=\"catalog/@name\"/&gt;&lt;/title&gt;\n&lt;/head&gt;\n</code></pre> <p>Nem sz\u00fcks\u00e9ges abszol\u00fat \u00fatvonallal megadni a hivatkoz\u00e1st, mert a minta illeszt\u00e9sekor az adott elemen ,,\u00e1llunk'', ez\u00e9rt ahhoz k\u00e9pest relat\u00edv \u00fatvonallal is megadhatjuk. (Ha nem az XML elem \u00e9rt\u00e9k\u00e9t, hanem mag\u00e1t az XML elemet akarn\u00e1nk ki\u00edratni, akkor a <code>&lt;xsl:copy-of select=\"elem\"/&gt;</code> seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg, de ezt nem fogjuk haszn\u00e1lni a p\u00e9ld\u00e1ban.)</p> <p>A fenti megold\u00e1sban a gy\u00f6k\u00e9rre illeszked\u0151 mint\u00e1t defini\u00e1ltunk, de defini\u00e1lhatunk tov\u00e1bbi mint\u00e1kat is, \u00e9s azokra hivatkozhatunk, \u00edgy egy mint\u00e1t t\u00f6bbsz\u00f6r is fel lehet haszn\u00e1lni, illetve a k\u00f3d is \u00e1tl\u00e1that\u00f3 marad. A tov\u00e1bbi template-re val\u00f3 hivatkoz\u00e1st a <code>&lt;xsl:apply-templates select=\"elem\"/&gt;</code> seg\u00edts\u00e9g\u00e9vel adhatjuk meg.</p> <pre><code>&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n\n&lt;xsl:template match=\"/\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;&lt;xsl:value-of select=\"catalog/@name\"/&gt;&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;xsl:apply-templates select=\"catalog\"/&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n&lt;/xsl:template&gt;\n\n&lt;xsl:template match=\"catalog\"&gt;\nTODO\n  &lt;/xsl:template&gt;\n&lt;/xsl:stylesheet&gt;\n</code></pre> <p>A tov\u00e1bbi feladat a CD-khez elk\u00e9sz\u00edteni egy t\u00e1bl\u00e1zatot, aminek a fejl\u00e9c\u00e9t statikusan bele\u00edrhatjuk a transzform\u00e1ci\u00f3ba. Ezut\u00e1n a CD-ez kell bej\u00e1rni egy ,,for-ciklussal'' de \u00fagy, hogy az <code>artist</code> szerint legyenek rendezve. Erre egy lehets\u00e9ges megold\u00e1s, hogy defini\u00e1lunk egy szab\u00e1lyt a <code>cd</code>-re is, \u00e9s azt alkalmazzuk, de ett\u0151l m\u00e9g nem lesznek rendezve, ehhez meg kell adnunk, hogy az <code>artist</code> szerint rendezve alkalmazza a szab\u00e1lyt: <code>&lt;xsl:sort select=\"cd/artist\"/&gt;</code></p> <pre><code>  &lt;xsl:template match=\"catalog\"&gt;\n&lt;table border=\"1\"&gt;\n&lt;tr&gt;\n&lt;th&gt;El\u0151ad\u00f3&lt;/th&gt;&lt;th&gt;C\u00edm&lt;/th&gt;&lt;th&gt;Orsz\u00e1g&lt;/th&gt;&lt;th&gt;Megjelen\u00e9si \u00e9v&lt;/th&gt;&lt;th&gt;\u00c1r&lt;/th&gt;\n&lt;/tr&gt;\n&lt;xsl:apply-templates select=\"cd\"&gt;\n&lt;xsl:sort select=\"cd/artist\"/&gt;\n&lt;/xsl:apply-templates&gt;\n&lt;/table&gt;\n&lt;/xsl:template&gt;\n\n&lt;xsl:template match=\"cd\"&gt;\nTODO\n  &lt;/xsl:template&gt;\n</code></pre> <p>Minden egyes <code>cd</code> eset\u00e9ben egy \u00faj sort sz\u00farunk be a t\u00e1bl\u00e1zatba, ahol a sor piros h\u00e1tteret kap, ha az adott cd akci\u00f3s. Ehhez egy felt\u00e9telt kell megvizsg\u00e1lnunk, amit a mi eset\u00fcnkben a <code>&lt;xsl:if test=\"price/@discount\"&gt;</code> seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg, majd be\u00e1ll\u00edtjuk a bgcolor \u00e9rt\u00e9k\u00e9t, ha a felt\u00e9tel igaz (azaz a <code>price</code>-nak van <code>discount</code> attrib\u00fatuma).</p> <pre><code>    &lt;tr&gt;\n&lt;xsl:if test=\"price/@discount\"&gt;\n&lt;xsl:attribute name=\"bgcolor\"&gt;  &lt;xsl:value-of select=\"'#FF9999'\"/&gt;\n&lt;/xsl:attribute&gt;\n&lt;/xsl:if&gt;\n...\n    &lt;/tr&gt;\n</code></pre> <p>A t\u00f6bbi \u00e9rt\u00e9k be\u00edr\u00e1sa a t\u00e1bl\u00e1zatba m\u00e1r ,,nem neh\u00e9z''. Annyit m\u00e9g megtesz\u00fcnk, hogy a doll\u00e1rban megadott \u00e1rat \u00e1tkonvert\u00e1ljuk forintra 320Ft/$ \u00e1rfolyamon \u00e9s az \u00e9vsz\u00e1mot k\u00f6z\u00e9pre igaz\u00edtjuk.</p> <pre><code>  &lt;xsl:template match=\"cd\"&gt;\n\n&lt;tr&gt;    &lt;xsl:if test=\"price/@discount\"&gt;\n&lt;xsl:attribute name=\"bgcolor\"&gt;  &lt;xsl:value-of select=\"'#FF9999'\"/&gt;\n&lt;/xsl:attribute&gt;\n&lt;/xsl:if&gt;\n\n&lt;td&gt;&lt;xsl:value-of select=\"artist\"/&gt;&lt;/td&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"title\"/&gt;&lt;/td&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"country\"/&gt;&lt;/td&gt;\n\n&lt;td align=\"center\"&gt;&lt;xsl:value-of select=\"year\"/&gt;&lt;/td&gt;\n&lt;xsl:variable name=\"usprice\" select=\"price\"/&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"format-number($usprice * 184, '#')\"/&gt; FT&lt;/td&gt;\n&lt;/tr&gt;\n\n&lt;/xsl:template&gt;\n</code></pre> <p>A teljes megold\u00e1s egyben:</p> <pre><code>&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n\n&lt;xsl:template match=\"/\"&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n&lt;title&gt;&lt;xsl:value-of select=\"catalog/@name\"/&gt;&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;b&gt;A catal\u00f3gusban szerepl\u0151 cikkek sz\u00e1ma:\n           &lt;xsl:value-of select=\"count(catalog/cd)\"/&gt;\n&lt;/b&gt;\n&lt;xsl:apply-templates select=\"catalog\"/&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n&lt;/xsl:template&gt;\n\n&lt;xsl:template match=\"catalog\"&gt;\n&lt;table border=\"1\"&gt;\n&lt;tr&gt;\n&lt;th&gt;El\u0151ad\u00f3&lt;/th&gt;&lt;th&gt;C\u00edm&lt;/th&gt;&lt;th&gt;Orsz\u00e1g&lt;/th&gt;&lt;th&gt;Megjelen\u00e9si \u00e9v&lt;/th&gt;&lt;th&gt;\u00c1r&lt;/th&gt;\n&lt;/tr&gt;\n&lt;xsl:apply-templates select=\"cd\"&gt;\n&lt;xsl:sort select=\"cd/artist\"/&gt;\n&lt;/xsl:apply-templates&gt;\n&lt;/table&gt;\n&lt;/xsl:template&gt;\n\n\n&lt;xsl:template match=\"cd\"&gt;\n\n&lt;tr&gt;    &lt;xsl:if test=\"price/@discount\"&gt;\n&lt;xsl:attribute name=\"bgcolor\"&gt;  &lt;xsl:value-of select=\"'#FF9999'\"/&gt;\n&lt;/xsl:attribute&gt;\n&lt;/xsl:if&gt;\n\n&lt;td&gt;&lt;xsl:value-of select=\"artist\"/&gt;&lt;/td&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"title\"/&gt;&lt;/td&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"country\"/&gt;&lt;/td&gt;\n\n&lt;td align=\"center\"&gt;&lt;xsl:value-of select=\"year\"/&gt;&lt;/td&gt;\n&lt;xsl:variable name=\"usprice\" select=\"price\"/&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"format-number($usprice * 184, '#')\"/&gt; FT&lt;/td&gt;\n&lt;/tr&gt;\n\n&lt;/xsl:template&gt;\n\n&lt;/xsl:stylesheet&gt;\n</code></pre>"},{"location":"13_gyakorlat/#gyakorlati-resz","title":"Gyakorlati r\u00e9sz","text":"<p>Hogyan tudom ezt kipr\u00f3b\u00e1lni? Automatikus a transzform\u00e1ci\u00f3?</p>"},{"location":"13_gyakorlat/#bongeszo","title":"B\u00f6ng\u00e9sz\u0151","text":"<p>Ha az XML dokumentum elej\u00e9n meg van adva, hogy milyen transzform\u00e1ci\u00f3t kell alkalmazni a megjelen\u00edt\u00e9sn\u00e9l, akkor ,,automatikusan v\u00e9grehajt\u00f3dik''.</p> <pre><code>&lt;catalog name=\"My cds to sell\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:noNamespaceSchemaLocation=\"cd_catalog.xsd\"&gt;\n</code></pre> <p>Azonban ez a gyakorlatban nem m\u0171k\u00f6dik, mert a b\u00f6ng\u00e9sz\u0151k biztons\u00e1gi okokb\u00f3l tiltj\u00e1k a lok\u00e1lis f\u00e1jlok hozz\u00e1f\u00e9r\u00e9st. Ha ezt kikapcsoljuk, akkor m\u0171k\u00f6dik, hogy ,,bet\u00f6lt\u00e9skor'' (drag&amp;drop a f\u00e1jlt a b\u00f6ng\u00e9sz\u0151re) a transzform\u00e1lt v\u00e1ltozat jelenik meg. Ahhoz, hogy ezt ki lehessen pr\u00f3b\u00e1lni pl. Chrome alatt, a Chrome-ot a <code>\u2013allow-file-access-from-files</code> param\u00e9terrel kell elind\u00edtani.</p> <p></p>"},{"location":"13_gyakorlat/#visual-studio","title":"Visual Studio","text":"<p>Lehet\u0151s\u00e9g van a Visual Studioba is bet\u00f6lteni \u00e9s v\u00e9grehajtani a transzform\u00e1ci\u00f3t. Ehhez nyissuk meg a transzform\u00e1ci\u00f3s f\u00e1jl VS-ben, \u00e9s a a f\u00e1jl van kiv\u00e1lasztva, akkor a men\u00fcsorban megjelenik egy XML men\u00fcpont is. Itt el tudjuk ind\u00edtani a transzform\u00e1ci\u00f3t debug-gal vagy an\u00e9lk\u00fcl. Ehhez ki kell v\u00e1lasztani a transzform\u00e1land\u00f3 XML-t, majd lefut r\u00e1 a transzform\u00e1ci\u00f3 \u00e9s az eredm\u00e9ny megjelenik a VS-ben. Lehet\u0151s\u00e9g van break point-ok besz\u00far\u00e1s\u00e1ba is, \u00e9s akkor l\u00e9p\u00e9sr\u0151l l\u00e9p\u00e9sre tudjuk k\u00f6vetni a transzform\u00e1ci\u00f3t, l\u00e1tjuk hol \u00e1llunk a f\u00e1ban, ... Ekkor a m\u00e1r elk\u00e9sz\u00fcl \u00e9s \u00e9rtelmezhet\u0151 kimenet m\u00e1r megjelenik.</p> <p></p> <p>Forr\u00e1s: a fenti p\u00e9lda \u00e9s tov\u00e1bbi r\u00e9szletek a https://www.w3schools.com/xml/xsl_intro.asp\u00a0oldalon \u00e9rhet\u0151ek el.</p>"},{"location":"extras_java_bean/","title":"\u00c9rdekess\u00e9gek Java Beanekhez","text":"<p>A k\u00f6vetkez\u0151kben megismerked\u00fcnk a JavaFX Property-kkel.</p>"},{"location":"extras_java_bean/#mik-a-property-k","title":"Mik a Property-k?","text":"<p>Egy Java oszt\u00e1ly k\u00e9tf\u00e9le member-t tartalmazhat:</p> <ul> <li>field-eket</li> <li>met\u00f3dusokat</li> </ul> <p>Egy oszt\u00e1ly field-jei meghat\u00e1rozz\u00e1k majd az oszt\u00e1lyb\u00f3l k\u00e9sz\u00edtett objektumok \u00e1llapot\u00e1t, mely \u00e1llapotot \u00e1ltal\u00e1ban elrejt\u00fcnk (<code>private</code> field-eket haszn\u00e1lunk). A private field-ek kiolvas\u00e1s\u00e1t \u00e9s be\u00e1ll\u00edt\u00e1s\u00e1t/m\u00f3dos\u00edt\u00e1s\u00e1t publikus met\u00f3dusokon kereszt\u00fcl v\u00e9gezz\u00fck, melyeket accessorok-nak (getter \u00e9s setter) nevez\u00fcnk. \u00c1ltal\u00e1noss\u00e1g\u00e1ban, az olyan oszt\u00e1lyokat, melyek hozz\u00e1f\u00e9r\u00e9st engednek a private field-jeikhez publikus accessor-okon kereszt\u00fcl, tov\u00e1bb\u00e1 van publikus param\u00e9ter n\u00e9lk\u00fcli konstruktoruk, illetve szerializ\u00e1lhat\u00f3ak Java Bean-eknek nevezz\u00fck. A Java Bean-ek accessor-ai egyben defini\u00e1lj\u00e1k a Bean property-jeit is. Att\u00f3l f\u00fcgg\u0151en, hogy milyen publikus accessor-ok vannak megadva egy Java Bean-hez besz\u00e9lhet\u00fcnk</p> <ul> <li>Csak olvashat\u00f3</li> <li>Csak \u00edrhat\u00f3</li> <li>Olvashat\u00f3 \u00e9s \u00cdrhat\u00f3</li> </ul> <p>property-kr\u0151l is.</p> <p>P\u00e9lda olvashat\u00f3/\u00edrhat\u00f3 property-re:</p> <pre><code>public class Person {\n\nprivate String name;\n\npublic String getName() {\nreturn name;\n}\n\npublic void setName(String name) {\nthis.name = name;\n}\n}\n</code></pre> <p>Ebben a p\u00e9ld\u00e1ban a property neve: <code>name</code>.</p> <p>A Java Bean-ek egyik nagy el\u0151nye, hogy k\u00fcls\u0151 alkalmaz\u00e1sok k\u00f6nnyen felhaszn\u00e1lhatj\u00e1k \u0151ket. Ezen fel\u00fcl egy-egy property megfigyelhet\u0151v\u00e9 (<code>Observable</code>) tehet\u0151, azaz m\u00e1sik feliratkozhatnak a property v\u00e1ltoz\u00e1s\u00e1nak esem\u00e9ny\u00e9re, mely alapj\u00e1n automatikus m\u0171veleteket v\u00e9gezhetnek el.</p> <p>A fenti p\u00e9ld\u00e1ban haszn\u00e1lt egyszer\u0171 <code>name</code> property mellett l\u00e9teznek tov\u00e1bbi property t\u00edpusok is:</p> <ul> <li>indexed property: Property-k egy list\u00e1ja, melyeken bel\u00fcl index-ekkel \u00e9r\u00fcnk el egy-egy property-t.</li> <li>bound property: Olyan property, mely k\u00e9pes \u00e9rtes\u00edteni az \u00e9rt\u00e9k\u00e9nek v\u00e1ltoz\u00e1s\u00e1r\u00f3l a feliratkoz\u00f3kat</li> <li>constrained property: Egy olyan speci\u00e1lis v\u00e1ltozata a bound property-nek, melynek sor\u00e1n az esem\u00e9nykezel\u0151 k\u00e9pes megv\u00e9t\u00f3zni egy-egy v\u00e1ltoztat\u00e1st.</li> </ul>"},{"location":"extras_java_bean/#mik-azok-a-kotesek-azaz-binding-ok","title":"Mik azok a k\u00f6t\u00e9sek, azaz Binding-ok?","text":"<p>A programoz\u00e1sban sokszor haszn\u00e1ljuk a binding megnevez\u00e9st, de jelen esetben az adatk\u00f6t\u00e9sekr\u0151l (Data Binding) lesz sz\u00f3. Az adatk\u00f6t\u00e9s sor\u00e1n adatok k\u00f6z\u00f6tti kapcsolatokat defini\u00e1lunk (\u00e1ltal\u00e1ban v\u00e1ltoz\u00f3k k\u00f6z\u00f6tt), mely seg\u00edts\u00e9g\u00e9vel a friss\u00edt\u00e9sek sor\u00e1n biztos\u00edtsuk a szinkroniz\u00e1ci\u00f3t. P\u00e9ldak\u00e9nt vegy\u00fck a k\u00f6vetkez\u0151t:</p> <pre><code>x = y + z;\n</code></pre> <p>Erre az \u00e9rt\u00e9kad\u00e1sra tekinthet\u00fcnk \u00fagy, mint egy adatk\u00f6t\u00e9sre, hiszen <code>x</code> \u00e9rt\u00e9ke f\u00fcgg <code>y</code> \u00e9s <code>z</code> \u00e9rt\u00e9k\u00e9t\u0151l. Azonban fontos, hogy az \u00e9rt\u00e9kad\u00e1snak mi az id\u0151belis\u00e9ge. Amennyiben az <code>y</code> \u00e9rt\u00e9k\u00e9\u00e9t m\u00f3dos\u00edtom az \u00e9rt\u00e9kad\u00e1s ut\u00e1n, akkor x \u00e9rt\u00e9ke nem fog friss\u00fclni. Sok esetben azt szeretn\u00e9nk, hogy egy hosszabb idej\u0171 k\u00f6t\u00e9s j\u00f6jj\u00f6n l\u00e9tre, melynek sor\u00e1n, ha m\u00f3dosul valamilyen t\u00e9nyez\u0151 (v\u00e1ltoz\u00f3\u00e9rt\u00e9k), akkor a v\u00e1ltoz\u00e1s kihat\u00e1ssal legyen a f\u00fcgg\u0151 \u00e9rt\u00e9kre is. A fentiek alapj\u00e1n megk\u00fcl\u00f6nb\u00f6ztet\u00fcnk f\u00fcgg\u0151 \u00e9rt\u00e9ket (dependant), illetve annak f\u00fcgg\u0151s\u00e9geit (dependencies).</p> <p>Az adatk\u00f6t\u00e9seket t\u00f6bbf\u00e9lek\u00e9ppen is csoportos\u00edthatjuk. Egyr\u00e9szt az adatk\u00f6t\u00e9s ki\u00e9rt\u00e9kel\u00e9si strat\u00e9gi\u00e1ja szerint lehet:</p> <ul> <li>eager binding: a f\u00fcgg\u0151s\u00e9gek m\u00f3dos\u00edt\u00e1sakor azonnal \u00fajrakalkul\u00e1ljuk a f\u00fcgg\u0151 \u00e9rt\u00e9ket</li> <li>lazy binding: csak a k\u00f6vetkez\u0151 kiolvas\u00e1skor friss\u00edtj\u00fck az \u00e9rt\u00e9ket (hiszen t\u00f6bbsz\u00f6r is m\u00f3dosulhatnak a f\u00fcgg\u0151s\u00e9gek addig, amig egy\u00e1ltal\u00e1n sz\u00fcks\u00e9g\u00fcnk lesz a f\u00fcgg\u0151 \u00e9rt\u00e9kre)</li> </ul> <p>M\u00e1sr\u00e9szt a f\u00fcgg\u0151s\u00e9gek ir\u00e1ny\u00e1t tekintve besz\u00e9lhet\u00fcnk:</p> <ul> <li>egyir\u00e1ny\u00fa (unidirectional): Egyir\u00e1ny\u00fa, azaz a f\u00fcgg\u0151s\u00e9gekben bek\u00f6vetkez\u0151 v\u00e1ltoz\u00e1sok kihat\u00e1ssal vannak a f\u00fcgg\u0151 \u00e9rt\u00e9kre, de ford\u00edtva nem igaz </li> <li>k\u00e9tir\u00e1ny\u00fa (bidirectional): Oda-vissza ir\u00e1nyul\u00f3 f\u00fcgg\u0151s\u00e9g eset\u00e9n \u00e1ltal\u00e1ban k\u00e9t v\u00e1ltoz\u00f3 k\u00f6z\u00f6tti adatszinkroniz\u00e1ci\u00f3t \u00e9rt\u00fcnk (pl.: <code>Person</code> objektum <code>name</code> property-je f\u00fcgg egy <code>TextField</code> aktu\u00e1lis \u00e9rt\u00e9k\u00e9t\u0151l).</li> </ul>"},{"location":"extras_java_bean/#javabeans-api-tamogatas-kotesekhez","title":"JavaBeans API t\u00e1mogat\u00e1s k\u00f6t\u00e9sekhez","text":"<p>A JavaBeans API m\u00e1r r\u00e9g\u00f3ta ad t\u00e1mogat\u00e1st az adatk\u00f6t\u00e9sekhez, mely sor\u00e1n a k\u00e9t legfontosabb oszt\u00e1ly:</p> <ul> <li><code>java.beans.PropertyChangeListener</code></li> <li><code>java.beans.PropertyChangeSupport</code></li> </ul> <p>Tekints\u00fck meg a <code>Person</code> bean oszt\u00e1ly kieg\u00e9sz\u00edt\u00e9s\u00e9t:</p> <pre><code>public class Person {\n\nprivate String name;\nprivate PropertyChangeSupport pcs = new PropertyChangeSupport(this);\n\npublic Person(String name){\nthis.name = name;\n}\n\npublic String getName() {\nreturn name;\n}\n\npublic void setName(String newName) {\nString oldName = this.name;\nthis.name = newName;\n// Notify the registered listeners about the change\npcs.firePropertyChange(\"name\", oldName, newName);\n}\n\npublic void addPropertyChangeListener(PropertyChangeListener listener) {\npcs.addPropertyChangeListener(listener);\n}\n\npublic void removePropertyChangeListener(PropertyChangeListener listener) {\npcs.removePropertyChangeListener(listener);\n}\n}\n</code></pre> <p>A p\u00e9ld\u00e1ban szerepl\u0151 <code>name</code> property olvashat\u00f3 \u00e9s \u00edrhat\u00f3 is, tov\u00e1bb\u00e1 egy bound property, mivel m\u00f3dos\u00edt\u00e1s sor\u00e1n \u00e9rtes\u00edt\u00e9st k\u00fcld a feliratkozott esem\u00e9nykezel\u0151knek a m\u00f3dos\u00edt\u00e1s t\u00e9ny\u00e9r\u0151l a <code>pcs.firePropertyChange(\"name\", oldName, newName);</code> h\u00edv\u00e1s seg\u00edts\u00e9g\u00e9vel. Az \u00e9rdekl\u0151d\u0151k a k\u00e9t megadott met\u00f3dus seg\u00edts\u00e9g\u00e9vel tudnak fel- illetve leiratkozni az esem\u00e9nyr\u0151l (<code>addPropertyChangeListener</code> \u00e9s <code>removePropertyChangeListener</code>). A v\u00e1ltoztat\u00e1sok detekt\u00e1l\u00e1shoz k\u00e9sz\u00edts\u00fcnk egy oszt\u00e1lyt, melyben ki is haszn\u00e1ljuk a fenti lehet\u0151s\u00e9geket!</p> <pre><code>public class Main {\n\npublic static void main(String[] args) {\nfinal Person p = new Person(\"Kiss B\u00e9la\");\n// Add a property change listener\np.addPropertyChangeListener(Main::handlePropertyChange);\np.setName(\"Dr. Kiss B\u00e9la\");\n}\n\npublic static void handlePropertyChange(PropertyChangeEvent e) {\nString propertyName = e.getPropertyName();\nif (\"name\".equals(propertyName)) {\nSystem.out.print(\"Name has changed. \");\nSystem.out.print(\"Old:\" + e.getOldValue());\nSystem.out.println(\", New:\" + e.getNewValue());\n}\n}\n}\n</code></pre> <p>A <code>main</code>-ben l\u00e9trehozunk egy <code>Person</code> objektumot, majd feliratkoztatjuk a statikus met\u00f3dusunkat a <code>PropertyChangeEvent</code>-ekre. Amikor \u00e1t\u00e1ll\u00edtjuk a <code>Person</code> objektum <code>name</code> property-j\u00e9t, akkor a setter bel\u00fcl megh\u00edvja a <code>pcs.firePropertyChange(\"name\", oldName, newName);</code> met\u00f3dust, mely \u00e9rtes\u00edti az \u00f6sszes feliratkoz\u00f3t, \u00e9s ennek eredm\u00e9nyek\u00e9ppen ki\u00edrjuk a r\u00e9gi \u00e9s \u00faj \u00e9rt\u00e9keket a konzolra.</p>"},{"location":"extras_java_bean/#property-k-hasznalata-javafx-ben","title":"Property-k haszn\u00e1lata JavaFX-ben","text":"<p>Az el\u0151z\u0151leg bemutatott technika az alacsonyszint\u0171 Java Beans API-t haszn\u00e1lta a v\u00e1ltoz\u00e1sok automatikus detekt\u00e1l\u00e1s\u00e1ra. A JavaFX egy szinttel feljebb l\u00e9p \u00e9s komplexebb, rugalmasabb lehet\u0151s\u00e9geket ny\u00fajt a sz\u00e1munkra. Az automatikus v\u00e1ltoztat\u00e1s detekt\u00e1l\u00e1shoz a legt\u00f6bbsz\u00f6r az Observer tervez\u00e9si mint\u00e1t alkalmazz\u00e1k (t\u00f6bbek k\u00f6z\u00f6tt esem\u00e9nykezel\u00e9sekn\u00e9l is). JavaFX-ben az \u00f6sszes property automatikusan <code>Observable</code> is lesz, mely seg\u00edts\u00e9g\u00e9vel automatikusan detekt\u00e1lhatjuk, ha az adott property \u00e9rt\u00e9ke invalidd\u00e1 v\u00e1lik (v\u00e1ltozott egy f\u00fcgg\u0151s\u00e9g\u00e9nek \u00e9rt\u00e9ke), illetve azt is ha az \u00e9rt\u00e9ke megv\u00e1ltozott.</p> <p>A JavaFX-ben haszn\u00e1latos property-k lehetnek csak olvashat\u00f3, illetve olvashat\u00f3/\u00edrhat\u00f3 property-k. Az olvashat\u00f3/\u00edrhat\u00f3 property-k teljes m\u00e9rt\u00e9kben t\u00e1mogatj\u00e1k az adatk\u00f6t\u00e9st, csak olvashat\u00f3 esetben viszont az adott property nem f\u00fcgghet m\u00e1st\u00f3l, de t\u0151le f\u00fcgghetnek.</p> <p>JavaFX-ben a k\u00fcl\u00f6nb\u00f6z\u0151 t\u00edpus\u00fa property-khez k\u00fcl\u00f6nb\u00f6z\u0151 property oszt\u00e1lyok tartoznak, melyek egy hierarchi\u00e1t alkotnak. P\u00e9ld\u00e1ul a <code>StringProperty</code>, <code>DoubleProperty</code>, <code>IntegerProperty</code> rendre a <code>String</code>, <code>double</code> \u00e9s az <code>int</code> t\u00edpusokhoz tartoz\u00f3 property oszt\u00e1lyok. Az el\u0151bbiek mind-mind absztrakt oszt\u00e1lyok, melyek k\u00e9t megval\u00f3s\u00edt\u00e1ssal rendelkeznek. Egy megval\u00f3s\u00edt\u00e1s az olvashat\u00f3/\u00edrhat\u00f3 viselked\u00e9shez, egy pedig a csak olvashat\u00f3 viselked\u00e9shez. P\u00e9ld\u00e1ul a <code>SimpleDoubleProperty</code> oszt\u00e1ly haszn\u00e1lhat\u00f3 olvashat\u00f3/\u00edrhat\u00f3 property-khez, illetve a <code>ReadOnlyDoubleProperty</code> a csak olvashat\u00f3 <code>double</code> property-khez.</p> <p>Az al\u00e1bbi p\u00e9lda egy <code>int</code> property-t deklar\u00e1l, melynek kezd\u0151\u00e9rt\u00e9k\u00e9t 42-re \u00e1ll\u00edtja:</p> <pre><code>IntegerProperty intProperty = new SimpleIntegerProperty(42);\n</code></pre> <p>A property oszt\u00e1lyokhoz k\u00e9tf\u00e9le <code>getter</code> \u00e9s <code>setter</code> tartozik:</p> <ul> <li><code>get()</code> \u00e9s <code>set()</code>: primit\u00edv t\u00edpusokkal oper\u00e1lnak</li> <li><code>getValue()</code> \u00e9s <code>setValue()</code>: objektumokkal oper\u00e1lnak</li> </ul> <p>A csak olvashat\u00f3 property-kkel val\u00f3 munka egy kicsit tr\u00fckk\u00f6sebb. A <code>ReadOnlyXXXWrapper</code> oszt\u00e1ly bel\u00fcl k\u00e9t property-t t\u00e1rol: egy olvashat\u00f3/\u00edrhat\u00f3t \u00e9s egy csak olvashat\u00f3t is. Ezek a property-k folyamatosan szinkronban vannak. A <code>ReadOnlyXXXProperty</code> t\u00edpus\u00fa property-t a Wrapper-t\u0151l kell elk\u00e9rn\u00fcnk a <code>getReadOnlyProperty()</code> met\u00f3dush\u00edv\u00e1ssal. L\u00e1ssunk egy pici p\u00e9ld\u00e1t is!</p> <pre><code>ReadOnlyIntegerWrapper intWrapper = new ReadOnlyIntegerWrapper(42);\nReadOnlyIntegerProperty intProp = intWrapper.getReadOnlyProperty();\n\nSystem.out.println(\"intWrapper:\" + intWrapper.get());\nSystem.out.println(\"intProp:\" + intProp.get());\n\n// Change the value\nidWrapper.set(1337);\nSystem.out.println(\"intWrapper:\" + intWrapper.get());\nSystem.out.println(\"intProp:\" + intProp.get());\n</code></pre> <p>A fenti p\u00e9lda alapj\u00e1n sejthet\u0151, hogy amennyiben a Wrapper-t publikusan kiengedn\u00e9nk, akkor nem lenne semmi \u00e9rtelme, mert ugyan\u00fagy m\u00f3dos\u00edthat\u00f3 lenne a property \u00e9rt\u00e9ke. Ez\u00e9rt a Wrapper-t \u00e1ltal\u00e1ban private field-k\u00e9nt haszn\u00e1ljuk egy-egy oszt\u00e1lyon bel\u00fcl \u00e9s csak a <code>ReadOnlyXXXProperty</code>-t tessz\u00fck publikusan el\u00e9rhet\u0151v\u00e9.</p> <p>A k\u00f6vetkez\u0151 egyszer\u0171 (csak egy \u00e9rt\u00e9ket t\u00e1rol\u00f3) t\u00edpusokhoz haszn\u00e1lhatunk property oszt\u00e1lyokat:</p> <ul> <li>int</li> <li>long</li> <li>float</li> <li>double</li> <li>boolean</li> <li>String</li> <li>Object</li> </ul> <p>Egy-egy property a k\u00f6vetkez\u0151 inform\u00e1ci\u00f3kat t\u00e1rolja:</p> <ul> <li>Referencia a bean objektumra, amely \u0151t t\u00e1rolja</li> <li>A property nev\u00e9t</li> <li>A property \u00e9rt\u00e9k\u00e9t</li> </ul> <p>Ez alapj\u00e1n tal\u00e1lhatunk konstruktorokat is az adott property-khez, melyekb\u0151l a legteljesebb peram\u00e9terlist\u00e1val rendelkez\u0151 a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki (p\u00e9ld\u00e1ban int-re, de \u00e1ltal\u00e1nosan \u00e9rv\u00e9nyes ez a szab\u00e1ly):</p> <pre><code>public class Person {\n\nprivate StringProperty name = new SimpleStringProperty(this, \"name\", \"Dr. Kiss B\u00e9la\");\n//...\n}\n</code></pre> <p>A property-k nem mindig tartoznak bean-hez, \u00edgy besz\u00e9lhet\u00fcnk egyed\u00fcl\u00e1ll\u00f3 (standalone) property-kr\u0151l. Ilyenkor a konstruktorban a bean-t \u00e1ll\u00edthatjuk <code>null</code>-ra. Amennyiben az \u00e9rt\u00e9keket nem adjuk meg, akkor numerikus \u00e9rt\u00e9kek eset\u00e9ben 0 lesz az \u00e9rt\u00e9k, boolean-ra <code>false</code>, tov\u00e1bb\u00e1 a referencia t\u00edpusok a <code>null</code> \u00e9rt\u00e9ket veszik fel. Amennyiben a property nev\u00e9t nem \u00e1ll\u00edtjuk be, akkor annak neve egy \u00fcres string lesz.</p> <p>A property objektumokt\u00f3l a <code>getBean()</code> \u00e9s a <code>getName()</code> met\u00f3dusokkal k\u00e9rhetj\u00fck el a tartalmaz\u00f3 bean referenci\u00e1j\u00e1t, illetve a property nev\u00e9t (a <code>get()</code> \u00e9s <code>getValue()</code> haszn\u00e1lat\u00e1val pedig az \u00e9rt\u00e9ket, ahogy azt kor\u00e1bban l\u00e1ttuk m\u00e1r).</p> <p>Ezek ut\u00e1n \u00edrjuk \u00fajra a <code>Person</code> oszt\u00e1lyt \u00fagy, hogy a sima String helyett StringProperty-t haszn\u00e1l.</p> <pre><code>public class Person {\nprivate StringProperty name = new SimpleStringProperty(this, \"name\", \"John Doe\");\n\npublic final StringProperty nameProperty() {\nreturn name;\n}\n\npublic final String getName() {\nreturn name.get();\n}\n\npublic final void setName(String name) {\nthis.name.set(name);\n}\n}\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban l\u00e1thatjuk, hogy az accessorok, hogyan m\u00f3dosulnak a property megad\u00e1soknak megfelel\u0151en. Erre az\u00e9rt van sz\u00fcks\u00e9g, mert tov\u00e1bbra is szeretn\u00e9nk, hogy a rendszer\u00fcnk m\u0171k\u00f6dj\u00f6n (3rd party alkalmaz\u00e1sok is haszn\u00e1lhatj\u00e1k a rendszer\u00fcnket esetlegesen). Azzal, hogy az accessorokat megtartjuk nem okozunk breaking change-t, viszont nyer\u00fcnk egy hatalmasat, mivel kihaszn\u00e1lhatjuk a property-k el\u0151nyeit.</p>"},{"location":"extras_java_bean/#lusta-inicializalas","title":"Lusta inicializ\u00e1l\u00e1s","text":"<p>A property-k el\u0151nye n\u00e9mi h\u00e1tr\u00e1nnyal is j\u00e1r. A primit\u00edv t\u00edpusok kevesebb mem\u00f3ri\u00e1t esznek, viszont but\u00e1bbak is. Amennyiben egy nagy rendszer\u00fcnk van, akkor a feltehet\u0151leg ritk\u00e1bban haszn\u00e1lt property-ket \u00e9rdemes lehet lust\u00e1n inicializ\u00e1lni, ami egy kis plusz k\u00f3ddal j\u00e1r, viszont cser\u00e9be nyerhet\u00fcnk egy ki mem\u00f3ri\u00e1t. A lusta inicializ\u00e1l\u00e1st akkor \u00e9rdemes haszn\u00e1lni, ha az adott property \u00e9rt\u00e9ke legt\u00f6bbsz\u00f6r egy alap\u00e9rtelmezett \u00e9rt\u00e9ket vesz fel vagy legt\u00f6bbsz\u00f6r nem haszn\u00e1lja ki az adatk\u00f6t\u00e9s adta lehet\u0151s\u00e9geket.</p> <p>Vegy\u00fcnk p\u00e9ld\u00e1ul egy <code>Monitor</code> oszt\u00e1lyt, melyben a monitor t\u00edpus\u00e1t is t\u00e1roljuk. Mivel a t\u00edpusa legt\u00f6bbsz\u00f6r \"flat\" lesz, \u00edgy ezt felhaszn\u00e1lhatjuk.</p> <pre><code>public class Monitor {\n\npublic static final String DEFAULT_SCREEN_TYPE = \"flat\";\nprivate StringProperty screenType;\n\npublic String getScreenType() {\nreturn (screenType == null) ? DEFAULT_SCREEN_TYPE : screenType.get();\n}\n\npublic void setScreenType(String newScreenType) {\nif (screenType != null || !DEFAULT_SCREEN_TYPE.equals(newScreenType)) {\nscreenTypeProperty().set(newScreenType);\n}\n}\n\npublic StringProperty screenTypeProperty() {\nif (screenType == null) {\nscreenType = new SimpleStringProperty(this, \"screenType\", DEFAULT_SCREEN_TYPE);\n}\n\nreturn screenType;\n}\n}\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban megadjuk az alap\u00e9rtelmezett \u00e9rt\u00e9ket, illetve t\u00e1rolunk egy referenci\u00e1t mag\u00e1ra a <code>StringProperty</code>-re. Azonban a property-t csak abban az esetben hozzuk l\u00e9tre t\u00e9nylegesen, amikor valaki t\u00e9nylegesen szeretn\u00e9 a <code>StringProperty</code> t\u00edpus\u00fa objektumot haszn\u00e1lni (pl.: adatk\u00f6t\u00e9s l\u00e9trehoz\u00e1s\u00e1hoz). A getter eg\u00e9szen addig csak a default \u00e9rt\u00e9ket adja vissza ameddig a default \u00e9rt\u00e9ken nem v\u00e1ltoztatunk. Amint egy olyan setter h\u00edv\u00e1s t\u00f6rt\u00e9nik, amikor nem a default \u00e9rt\u00e9ket akarja be\u00e1ll\u00edtani a felhaszn\u00e1l\u00f3, akkor l\u00e9trej\u00f6n maga a property is (<code>screenTypeProperty().set(newScreenType);</code> h\u00edv\u00e1s eredm\u00e9nyek\u00e9ppen).</p> <p>A fenti p\u00e9ld\u00e1ban nem nyer\u00fcnk olyan sokat, de p\u00e9ld\u00e1ul a primit\u00edv t\u00edpusokn\u00e1l elj\u00e1rhatunk \u00fagy, hogy eg\u00e9szen addig egy primit\u00edv t\u00edpusban t\u00e1roljuk az \u00e9rt\u00e9ket, ameddig mag\u00e1t a property-t nem k\u00e9ri el valaki.</p>"},{"location":"extras_java_bean/#property-hierarchia","title":"Property hierarchia","text":"Property hierarchia <p>A hierarchia legtetej\u00e9n az <code>Observable</code> interf\u00e9sz \u00e1ll, mely valamilyen adatot becsomagol \u00e9s k\u00e9pes \u00e9rtes\u00edt\u00e9seket k\u00fcldeni, amikor a tartalmazott adat invalidd\u00e1 v\u00e1lik. Ezekre az esem\u00e9nyekre <code>InvalidationListener</code>-ekkel tudunk feliratkozni, melyek \u00e9rtes\u00fclnek az esem\u00e9nyr\u0151l. Fontos, hogy ha egyszer a tartalom invalidd\u00e1 v\u00e1lt, akkor a k\u00f6vetkez\u0151kben nem gener\u00e1l\u00f3dik \u00faj esem\u00e9ny, \u00edgy minimaliz\u00e1lva a rendszerben l\u00e9trej\u00f6v\u0151 esem\u00e9nyek sz\u00e1m\u00e1t. Az adat \u00fajrasz\u00e1mol\u00e1sa ut\u00e1n ism\u00e9t validd\u00e1 v\u00e1lik.</p> <p>Fontos</p> <p>JavaFX-ben minden property egyben <code>Observable</code> is!</p> <p>Az invalid \u00e1llapotba l\u00e9p\u00e9s nem felt\u00e9tlen\u00fcl egyezik meg az adat megv\u00e1ltoz\u00e1s\u00e1val. P\u00e9ld\u00e1ul egy <code>ObservableList&lt;T&gt;</code> rendez\u00e9se sor\u00e1n az \u00e9rt\u00e9kek nem v\u00e1ltoznak benne, viszont invalidd\u00e1 v\u00e1lik. Ez a megk\u00fcl\u00f6nb\u00f6ztet\u00e9s fontos, mivel a k\u00e9tf\u00e9le esem\u00e9ny elt\u00e9r\u0151en viszonyul az azonnali (eager) \u00e9s lusta (lazy) ki\u00e9rt\u00e9kel\u00e9shez. Amikor az adat invalidd\u00e1 v\u00e1lik, akkor lusta ki\u00e9rt\u00e9kel\u00e9s eset\u00e9n nem sz\u00e1moljuk \u00fajra az \u00e9rt\u00e9k\u00e9t csak akkor amikor legk\u00f6zelebb haszn\u00e1lni szeretn\u00e9nk az adatot. Mivel az adat v\u00e1ltoz\u00e1s\u00e1r\u00f3l (<code>ChangeListener</code>-el kezelhetj\u00fck) csak akkor tudunk nyilatkozni, ha \u00fajrasz\u00e1moljuk annak \u00e9rt\u00e9k\u00e9t, \u00edgy az nem t\u00e1mogatja a lusta ki\u00e9rt\u00e9kel\u00e9st. Ezt a fajta megk\u00fcl\u00f6nb\u00f6ztet\u00e9st m\u00e1r az <code>ObservableValue&lt;T&gt;</code> interf\u00e9sz adja sz\u00e1munkra, azaz annyival tud t\u00f6bbet az <code>Observable</code>-h\u00f6z k\u00e9pest, hogy tud \u00e9rtes\u00edt\u00e9seket k\u00fcldeni a t\u00e1rolt \u00e9rt\u00e9k v\u00e1ltoz\u00e1s\u00e1r\u00f3l, melyet egy <code>ChangeListener</code>-el kezelhet\u00fcnk. A property-kben haszn\u00e1lt <code>T getValue();</code> met\u00f3dus az <code>ObservableValue&lt;T&gt;</code> interf\u00e9szb\u0151l j\u00f6n. Egy <code>ChangeListener&lt;T&gt;</code> rendelkezik a <code>changed()</code> met\u00f3dussal, mely megkapja param\u00e9ter\u00fcl a referenci\u00e1t az <code>ObservableValue&lt;T&gt;</code>-re, illetve a r\u00e9gi \u00e9s \u00faj \u00e9rt\u00e9keket.</p> <p>Fontos</p> <p>Az <code>InvalidationListener</code>-ek haszn\u00e1lata optim\u00e1lisabb lehet, mivel \u00edgy haszn\u00e1lhatunk lusta ki\u00e9rt\u00e9kel\u00e9st. Amennyiben viszont az <code>InvalidationListener</code>-en bel\u00fcl sz\u00fcks\u00e9g\u00fcnk van az \u00e9rt\u00e9kre, akkor az olvas\u00e1si m\u0171velet v\u00e9gs\u0151 soron \u00fagyis triggerelne egy \u00fajrasz\u00e1mol\u00e1st, teh\u00e1t ilyen esetben haszn\u00e1ljunk <code>ChangeListener</code>-t!</p> <p>A <code>ReadOnlyProperty&lt;T&gt;</code> interf\u00e9sz tov\u00e1bb b\u0151v\u00edti az <code>ObservableValue&lt;T&gt;</code> interf\u00e9szt \u00e9s \u00e1ltal\u00e1nos v\u00e1zat ad az \u00f6sszes olvashat\u00f3 property sz\u00e1m\u00e1ra, mellyel \u00edgy m\u00e1r lek\u00e9rdezhetj\u00fck a tartalmaz\u00f3 bean-t (<code>Object getBean()</code>) \u00e9s a property nev\u00e9t (<code>String getName()</code>).</p> <p>Az oszt\u00e1ly hierarchi\u00e1b\u00f3l l\u00e1tszik, hogy a teljes \u00e9rt\u00e9k\u0171 <code>Property&lt;T&gt;</code> property-k az \u00edr\u00e1ssal/adat m\u00f3dos\u00edt\u00e1ssal kapcsolatos m\u0171veleteit a <code>WritableValue&lt;T&gt;</code> interf\u00e9szb\u0151l kapj\u00e1k. Maga a <code>Property&lt;T&gt;</code> interf\u00e9sz hozza be az adatk\u00f6t\u00e9s t\u00e1mogat\u00e1s\u00e1t a k\u00f6vetkez\u0151 met\u00f3dusok t\u00e1mogat\u00e1s\u00e1val:</p> <ul> <li><code>void bind(ObservableValue&lt;? extends T&gt; observable)</code></li> <li><code>void unbind()</code></li> <li><code>void bindBidirectional(Property&lt;T&gt; other)</code></li> <li><code>void unbindBidirectional(Property&lt;T&gt; other)</code></li> <li><code>boolean isBound()</code></li> </ul> <p>Egyir\u00e1ny\u00fa k\u00f6t\u00e9st a <code>bind</code> met\u00f3dus seg\u00edts\u00e9g\u00e9vel hozhatunk l\u00e9tre, melyben megadjuk, hogy az aktu\u00e1lis property \u00e9rt\u00e9ke, mely m\u00e1sik \u00e9rt\u00e9khez legyen k\u00f6tve, azaz mit\u0151l f\u00fcgg az \u00e9rt\u00e9ke. K\u00e9tir\u00e1ny\u00fa k\u00f6t\u00e9st a <code>bindBidirectional</code> met\u00f3dus h\u00edv\u00e1ssal v\u00e9gezhet\u00fcnk. A param\u00e9terek t\u00edpus\u00e1b\u00f3l m\u00e1r l\u00e1tszik n\u00e9h\u00e1ny dolog. K\u00e9tir\u00e1ny\u00fa k\u00f6t\u00e9s nem lehet csak \u00edrhat\u00f3/olvashat\u00f3 property-k k\u00f6z\u00f6tt, m\u00edg egyir\u00e1ny\u00fa k\u00f6t\u00e9sn\u00e9l f\u00fcgghet\u00fcnk csak olvashat\u00f3 \u00e9rt\u00e9kt\u0151l is. Fontos, hogy a generikus param\u00e9tereknek meg kell egyezni\u00fck, mert nyilv\u00e1n egy <code>StringProperty</code> \u00e9rt\u00e9ke nem f\u00fcgghet egy <code>DoubleProperty</code> \u00e9rt\u00e9k\u00e9t\u0151l (k\u00e9s\u0151bb az\u00e9rt l\u00e1tunk majd tr\u00fckk\u00f6ket, hogy hogyan lehet konverzi\u00f3kat v\u00e9gezni). A t\u00f6bbi met\u00f3dus el\u00e9gg\u00e9 intuit\u00edv, \u00edgy azokat nem magyar\u00e1zzuk el.</p>"},{"location":"extras_java_bean/#kotesek-hasznalata-javafx-ben","title":"K\u00f6t\u00e9sek haszn\u00e1lata JavaFX-ben","text":"<p>Az adatk\u00f6t\u00e9s nem m\u00e1s, mint egy kifejez\u00e9s, aminek ki\u00e9rt\u00e9kel\u00e9se ut\u00e1n egy darab \u00e9rt\u00e9ket kapunk. A k\u00f6t\u00e9s egy vagy t\u00f6bb <code>ObervableValue&lt;T&gt;</code>-b\u00f3l tev\u0151dik \u00f6ssze, melyek egyben a k\u00f6t\u00e9s f\u00fcgg\u0151s\u00e9geit is jelentik. A k\u00f6t\u00e9s objektum figyeli a f\u00fcgg\u0151s\u00e9geinek v\u00e1ltoz\u00e1sait \u00e9s ilyenkor \u00fajrasz\u00e1molja a kifejez\u00e9s \u00e9rt\u00e9k\u00e9t. A JavaFX adatk\u00f6t\u00e9sei mind lusta ki\u00e9rt\u00e9kel\u00e9ssel m\u0171k\u00f6dnek, \u00edgy valamelyik f\u00fcgg\u0151s\u00e9g invalidd\u00e1 v\u00e1l\u00e1sakor maga a k\u00f6t\u00e9s is invalidd\u00e1 v\u00e1lik. Amikor \u00fajra k\u00e9ri valaki a k\u00f6t\u00e9s eredm\u00e9ny\u00e9t, akkor ker\u00fcl sor a kifejez\u00e9s \u00fajb\u00f3li ki\u00e9rt\u00e9kel\u00e9s\u00e9re (<code>get()</code> vagy <code>getValue()</code> h\u00edv\u00e1s hat\u00e1s\u00e1ra). Az \u00f6sszes JavaFX property oszt\u00e1ly t\u00e1mogat\u00e1st ad az adatk\u00f6t\u00e9sekhez.</p> <p>Vegy\u00fcnk egy egyszer\u0171 p\u00e9ld\u00e1t, melyben <code>sum = x + y</code> kifejez\u00e9st adunk meg egy k\u00f6t\u00e9s seg\u00edts\u00e9g\u00e9vel. Ez a k\u00f6vetkez\u0151k\u00e9ppen adhat\u00f3 meg:</p> <pre><code>IntegerProperty x = new SimpleIntegerProperty(42);\nIntegerProperty y = new SimpleIntegerProperty(1337);\n\nNumberBinding sum = x.add(y);\n</code></pre> <p>A k\u00f6t\u00e9seknek van egy <code>isValid()</code> met\u00f3dusa, mellyel lek\u00e9rhetj\u00fck, hogy az adott binding \u00e9rt\u00e9ke valid-e. A <code>NumberBinding</code> aktu\u00e1lis \u00e9rt\u00e9k\u00e9nek lek\u00e9r\u00e9s\u00e9hez haszn\u00e1lhatjuk az <code>intValue()</code>, <code>longValue()</code>, <code>floatValue()</code>, \u00e9s <code>doubleValue()</code> met\u00f3dusokat, melyek rendre a megfelel\u0151 t\u00edpus\u00fa \u00e9rt\u00e9kkel t\u00e9rnek vissza.</p> <p>Egy k\u00f6t\u00e9s bel\u00fcl az \u00f6sszes f\u00fcgg\u0151s\u00e9g\u00e9hez l\u00e9trehoz egy-egy <code>InvalidationListener</code>-t, melyek alapj\u00e1n figyeli azokat. Amennyiben egy f\u00fcgg\u0151s\u00e9g invalidd\u00e1 v\u00e1lik, akkor maga is invalid lesz.</p> <p>Egy k\u00f6t\u00e9s objektum \u00e9rt\u00e9k\u00e9hez ak\u00e1r egy property-t is hozz\u00e1k\u00f6thet\u00fcnk, mivel maga a <code>Binding&lt;T&gt;</code> oszt\u00e1ly maga is sz\u00e1rmazik az <code>ObservableValue&lt;T&gt;</code> oszt\u00e1lyb\u00f3l (\u00e9s egy egyir\u00e1ny\u00fa k\u00f6t\u00e9s megad\u00e1sakor a <code>bind()</code> param\u00e9tere pontosan ez kell, hogy legyen). L\u00e1ssunk is egy p\u00e9ld\u00e1t:</p> <pre><code>IntegerProperty x = new SimpleIntegerProperty(42);\nIntegerProperty y = new SimpleIntegerProperty(1337);\nIntegerProperty z = new SimpleIntegerProperty();\n\nz.bind(x.add(y));\n</code></pre> <p>Ilyen esetben a <code>z</code> property m\u00e1r a kor\u00e1bban eml\u00edtett bound property kateg\u00f3ri\u00e1ba esik. Amennyiben szeretn\u00e9nk megsz\u00fcntetni a k\u00f6t\u00e9st, akkor haszn\u00e1ljuk az <code>unbind()</code> met\u00f3dust!</p> <p>Fontos</p> <p>Amennyiben egy property \u00e9rt\u00e9k\u00e9t f\u00fcgg\u0151v\u00e9 tessz\u00fck, akkor az \u00e9rt\u00e9k\u00e9nek direkt be\u00e1ll\u00edt\u00e1sa (pl.: <code>z.set(21);</code>) <code>RuntimeException</code>-t eredm\u00e9nyez.</p> <p>Tov\u00e1bb\u00e1 az is szab\u00e1ly, hogy egy property-nek egyszerre csak egy darab egyir\u00e1ny\u00fa k\u00f6t\u00e9se lehet. Ha belegondolunk, akkor ez nem nagy meglepet\u00e9s. Mi lenne akkor, ha egyszerre szeretn\u00e9nk a k\u00f6vetkez\u0151k teljes\u00fcl\u00e9s\u00e9t <code>z = x + y</code> \u00e9s <code>z = a + b</code>? Ugyanakkor nem fog fut\u00e1sk\u00f6zbeni hib\u00e1t eredm\u00e9nyezni egy \u00fajabb <code>bind()</code> h\u00edv\u00e1s csup\u00e1n az el\u0151z\u0151 k\u00f6t\u00e9st fel\u00fcl\u00edrja a rendszer, azaz nem kell az \u00faj k\u00f6t\u00e9s el\u0151tt megh\u00edvni az <code>unbind()</code>-ot.</p> <p>Ezek a korl\u00e1toz\u00e1sok a k\u00e9tir\u00e1ny\u00fa k\u00f6t\u00e9sek eset\u00e9ben nem \u00e9lnek, puszt\u00e1n az \u00f6sszes property szinkronban lesz.</p>"},{"location":"extras_java_bean/#binding-api","title":"Binding API","text":"<p>Az el\u0151z\u0151ekben m\u00e1r mad\u00e1rt\u00e1vlatb\u00f3l l\u00e1ttuk a k\u00f6t\u00e9sek m\u0171k\u00f6d\u00e9s\u00e9t, most viszont r\u00e9szleteiben is megvizsg\u00e1ljuk a Binding API-t. A Binding API-t k\u00e9t r\u00e9szre oszthatjuk:</p> <ul> <li>Magas szint\u0171</li> <li>Alacsony szint\u0171</li> </ul> <p>A magas szint\u0171 API-t a JavaFX oszt\u00e1lyai alkotj\u00e1k, melyek seg\u00edts\u00e9g\u00e9vel a legt\u00f6bb esetben meg tudjuk adni az \u00f6sszes k\u00f6t\u00e9ssel kapcsolatos ig\u00e9ny\u00fcnket. Amennyiben m\u00e9gsem megoldhat\u00f3 a k\u00f6t\u00e9ssel kapcsolatos \u00f6sszes elv\u00e1r\u00e1sunk, akkor az alacsony szint\u0171 API haszn\u00e1lat\u00e1hoz le kell sz\u00e1rmaztatnunk egy saj\u00e1t oszt\u00e1lyt a magas szint\u0171ekb\u0151l \u00e9s itt kell kifejten\u00fcnk a k\u00f6t\u00e9s\u00fcnk pontos viselked\u00e9s\u00e9t.</p>"},{"location":"extras_java_bean/#magas-szintu-binding-api","title":"Magas szint\u0171 Binding API","text":"<p>A magas szint\u0171 Binding API k\u00e9t r\u00e9szb\u0151l tev\u0151dik \u00f6ssze. Egyr\u00e9szt a Fluent API-v\u00f3l \u00e9s m\u00e1sr\u00e9szt a <code>Binding</code>oszt\u00e1lyb\u00f3l. K\u00f6t\u00e9seket l\u00e9trehozhatunk a kiz\u00e1r\u00f3lag az egyik haszn\u00e1lat\u00e1val vagy a kett\u0151t tetsz\u0151leges kombin\u00e1lva is.</p>"},{"location":"extras_java_bean/#fluent-api","title":"Fluent API","text":"<p>A Fluent API, mint olyan egy \u00e1ltal\u00e1nos fogalom, illetve tervez\u00e9si elv, melynek k\u00f6z\u00e9ppontj\u00e1ban a met\u00f3dus l\u00e1ncol\u00e1s \u00e1ll, \u00edgy megk\u00f6nny\u00edtve a be\u00e1ll\u00edt\u00e1sokat. A neve innen is eredeztethet\u0151, mivel ilyen m\u00f3don \"foly\u00e9konyabban\" \u00edrhat\u00f3 a k\u00f3d. A Fluent API-kn\u00e1l nagyon fontos a visszat\u00e9r\u00e9si t\u00edpus, hogy a met\u00f3dus l\u00e1ncol\u00e1sokat el tudjuk v\u00e9gezni. Mag\u00e1r\u00f3l a Fluent API-r\u00f3l t\u00f6bbet olvashatsz itt.</p> <p>Vegy\u00fcnk egy egyszer\u0171 esetet, amikor 3 property \u00e9rt\u00e9k\u00e9t szeretn\u00e9nk \u00f6sszeadni. Legyen ez a 3 property <code>x</code>, <code>y</code> \u00e9s <code>z</code>! Alapesetben ezt \u00edrn\u00e1nk, felt\u00e9ve, hogy mind a 3 property mondjuk <code>IntegerProperty</code>:</p> <pre><code>x.add(y);\nx.add(z);\n</code></pre> <p>A Fluent API kihaszn\u00e1l\u00e1s\u00e1val viszont ez \u00edgy is \u00edrhat\u00f3:</p> <pre><code>x.add(y).add(z);\n</code></pre> <p>A kulcs, hogy az <code>add()</code> met\u00f3dus maga is egy <code>NumberBinding</code>-ot ad vissza, aminek szint\u00e9n van <code>add</code> met\u00f3dusa, melyek egy helyr\u0151l \"j\u00f6nnek\". Ahhoz, hogy jobban \u00e1tl\u00e1ssuk a teljes k\u00e9pet vizsg\u00e1ljuk meg a kapcsol\u00f3d\u00f3 oszt\u00e1ly hierarchi\u00e1t!</p> Fluent API oszt\u00e1ly hierarchia <p>A fenti \u00e1bra az IntegerProperty-re f\u00f3kusz\u00e1lva mutatja be az \u00f6r\u00f6kl\u0151d\u00e9si hierarchi\u00e1t, de a t\u00f6bbi t\u00edpusn\u00e1l is hasonl\u00f3 a fel\u00e9p\u00edt\u00e9s. A hierarchia egy r\u00e9sz\u00e9t m\u00e1r ismerj\u00fck, azonban vannak fontos tov\u00e1bbi elemek is. Az oszt\u00e1lyok k\u00f6z\u00f6tt vannak olyanok is, amik az automatikus boxing \u00e9s unboxing miatt vannak jelen. A fluent API meg\u00e9rt\u00e9s\u00e9hez az <code>XXXExpression</code> \u00e9s az <code>XXXBinding</code> oszt\u00e1lyokra \u00e9s interf\u00e9szekre kell f\u00f3kusz\u00e1lnunk!</p> <p>Az <code>XXXExpression</code> interf\u00e9szek tartalmazz\u00e1k az \u00f6sszes olyan met\u00f3dust, melyek seg\u00edtenek az adatk\u00f6t\u00e9snek megadott kifejez\u00e9sek specifik\u00e1l\u00e1s\u00e1ban. P\u00e9ld\u00e1ul a fent haszn\u00e1lt <code>add</code> met\u00f3dus a <code>NumberExpression</code> interf\u00e9szb\u0151l j\u00f6n. Az <code>add</code> mellett haszn\u00e1lhat\u00f3 a <code>negate()</code>, <code>subtract()</code>, <code>multiply()</code>, <code>divide()</code> met\u00f3dusok hada is. Tov\u00e1bb\u00e1 tal\u00e1lunk itt rel\u00e1ci\u00f3s m\u0171veleteket is, melyek <code>BooleanBinding</code>-ot adnak vissza, illetve egy tov\u00e1bbi fontos csoportot adnak az <code>asString</code> met\u00f3dusok, melyek <code>StringBinding</code>-ot adnak vissza (az adatk\u00f6t\u00e9sek vil\u00e1g\u00e1ban tekinthet\u0151 kv\u00e1zi a <code>toString()</code>-nek).</p> <p>Miel\u0151tt ezen az \u00e1gon tov\u00e1bbhaladn\u00e1nk, vizsg\u00e1ljuk meg a m\u00e1sik k\u00f6zponti elemet, mag\u00e1t a <code>Binding&lt;T&gt;</code> interf\u00e9szt! A <code>Binding&lt;T&gt;</code> interf\u00e9sz reprezent\u00e1lja azt az \u00e9rt\u00e9ket, melynek \u00e9rt\u00e9ke egy vagy t\u00f6bb m\u00e1sik\u00e9t\u00f3l f\u00fcgg. \u00cdgy az al\u00e1bbi met\u00f3dusokat biztos\u00edtja:</p> <ul> <li><code>public void dispose()</code>: Jelezhetj\u00fck, hogy a <code>Binding</code>-ot m\u00e1r nem haszn\u00e1ljuk, \u00edgy a f\u00fcgg\u0151s\u00e9gekre val\u00f3 referenci\u00e1kat eldobja a rendszer (GC miatt lehet r\u00e1 sz\u00fcks\u00e9g)</li> <li><code>public ObservableList&lt;?&gt; getDependencies()</code>: Nem m\u00f3dos\u00edthat\u00f3 list\u00e1t ad vissza. Ezen kereszt\u00fcl nem tudunk \u00fajabb f\u00fcgg\u0151s\u00e9geket felvenni, csup\u00e1n debug c\u00e9lokat szolg\u00e1l, \u00edgy azt production k\u00f3dban soha ne haszn\u00e1ljuk!</li> <li><code>public void invalidate()</code>: A k\u00f6t\u00e9st invalid \u00e1llapotba helyezi</li> <li><code>public boolean isValid()</code>: \u00e1llapot lek\u00e9rdez\u00e9shez</li> </ul> <p>A <code>NumberBinding</code> puszt\u00e1n egy marker interf\u00e9sz az \u00f6sszes sz\u00e1m alap\u00fa k\u00f6t\u00e9shez, melyet azt\u00e1n a t\u00e9nyleges implement\u00e1ci\u00f3k megval\u00f3s\u00edtanak, mint p\u00e9ld\u00e1ul az <code>IntegerBinding</code>, <code>DoubleBinding</code>, stb.</p> <p>A m\u00e1sik \u00f6r\u00f6kl\u0151d\u00e9si \u00e1gr\u00f3l egy <code>IntegerProperty</code> megkapja a kor\u00e1bban m\u00e1r kifejtett <code>NumberExpression</code> \u00e1ltal megadott met\u00f3dusokat. Ezen fel\u00fcl az <code>ObservableNumberValue</code> interf\u00e9sz biztos\u00edtja az <code>intValue()</code>, <code>longValue()</code>, stb. met\u00f3dusokat. A <code>NumberExpression</code> oszt\u00e1ly egy konkr\u00e9t megval\u00f3s\u00edt\u00e1sa a <code>NumberExpressionBase</code>.</p> <p>A fentiek meg\u00e9rt\u00e9se ut\u00e1n m\u00e1r el\u00e9g j\u00f3 benyom\u00e1sunk van a magasszint\u0171 Binding API haszn\u00e1lat\u00e1r\u00f3l, de a <code>Binding</code> oszt\u00e1lyokat haszn\u00e1ljam vagy a property \u00e9rt\u00e9k\u00e9t vessem al\u00e1 adatk\u00f6t\u00e9snek? N\u00e9zz\u00fcnk egy p\u00e9ld\u00e1t, ahol a k\u00f6r ter\u00fclet\u00e9t sz\u00e1moljuk ki annak sugara alapj\u00e1n. A p\u00e9ld\u00e1ban megmutatjuk mindk\u00e9t megk\u00f6zel\u00edt\u00e9st:</p> <pre><code>public class CircleTest {\n\npublic static void main(String[] args) {\n\nDoubleProperty r = new SimpleDoubleProperty(5.0);\n// Binding a k\u00f6r ter\u00fclet\u00e9re\nDoubleBinding area = r.multiply(r).multiply(Math.PI);\nSystem.out.println(\"r = \" + r.get() + \", ter\u00fclet = \" + area.get());\nr.set(10.0);\nSystem.out.println(\"r = \" + r.get() + \", ter\u00fclet = \" + area.get());\n\n// DoubleProperty \u00e9rt\u00e9k\u00e9nek k\u00f6t\u00e9se egy kifejez\u00e9shez, ami a ter\u00fcletet adja meg\nDoubleProperty area2 = new SimpleDoubleProperty();\narea2.bind(r.multiply(r).multiply(Math.PI));\nSystem.out.println(\"r = \" + r.get() + \", ter\u00fclet2 = \" + area2.get());\n}\n}\n</code></pre> <p>A sz\u00e1mok mellett \u00e9rdemes lehet megn\u00e9zni a <code>StringProperty</code>-hez tartoz\u00f3 Fluent API-t is, mivel a String m\u00e1r referencia t\u00edpus, nem pedig primit\u00edv.</p> String Fluent API oszt\u00e1ly hierarchia <p>Az <code>ObservableStringValue</code> <code>get()</code> met\u00f3dusa nyilv\u00e1n egy String-et ad vissza. A <code>StringExpression</code> nem aritmetikai m\u0171veleteket t\u00e1mogat, hanem string m\u0171veleteket, mint p\u00e9ld\u00e1ul konkaten\u00e1ci\u00f3, \u00f6sszehasonl\u00edt\u00e1s, null check, stb. A <code>getValue()</code> met\u00f3dus mellett rendelkez\u00fcnk ebben az esetben egy <code>getValueSafe()</code> met\u00f3dussal is, mely <code>null</code> eset\u00e9n \u00fcres <code>String</code>-et ad vissza.</p>"},{"location":"extras_java_bean/#extrak","title":"Extr\u00e1k","text":"<p>Az <code>ObjectExpression</code> \u00e9s az <code>ObjectBinding</code> seg\u00edts\u00e9g\u00e9vel tetsz\u0151leges objektumokra t\u00f6rt\u00e9n\u0151 k\u00f6t\u00e9sek hozhat\u00f3k l\u00e9tre. A hierarchia nagyon hasonl\u00f3 a <code>String</code>-n\u00e9l l\u00e1tottakhoz. L\u00e1ssunk egy p\u00e9ld\u00e1t a haszn\u00e1lat\u00e1ra</p> <pre><code>public class PersonBindingTest {\npublic static void main(String[] args) {\n\nPerson p1 = new Person(\"Kiss B\u00e9la\");\nPerson p2 = new Person(\"Nagy J\u00e1nos\");\n\nObjectProperty&lt;Person&gt; person1 = new SimpleObjectProperty&lt;&gt;(p1);\nObjectProperty&lt;Person&gt; person2 = new SimpleObjectProperty&lt;&gt;(p2);\n\n// K\u00f6t\u00e9s, ami \u00f6sszehasonl\u00edtja a k\u00e9t property egyenl\u0151s\u00e9g\u00e9t\nBooleanBinding isEqual = person1.isEqualTo(person1);\nSystem.out.println(isEqual.get());\nperson2.set(p1);\nSystem.out.println(isEqual.get());\n}\n}\n</code></pre> <p>A Binding API biztos\u00edt a sz\u00e1munkra ternary oper\u00e1tort is a <code>When</code> oszt\u00e1ly form\u00e1j\u00e1ban:</p> <pre><code>new When(condition).then(value1).otherwise(value2)\n</code></pre> <p><code>value1</code>-nek \u00e9s <code>value2</code>-nek ugyanolyan t\u00edpus\u00fanak kell lennie.</p> <p>A fentiek mellett az API ad sz\u00e1munkra m\u00e9g egy <code>Bindings</code> oszt\u00e1lyt, mely rengeteg statikus met\u00f3dust tartalmaz. L\u00e9nyege, hogy egyszer\u0171en \u00e9s gyorsan lehet k\u00f6t\u00e9seket l\u00e9trehozni. Mivel a lista igen hossz\u00fa \u00edgy itt azt nem mutatjuk be (illetve t\u00f6bb dolog i kiv\u00e1lthat\u00f3 vele amit m\u00e1r r\u00e9szletesen megn\u00e9zt\u00fcnk).</p>"},{"location":"extras_java_bean/#alacsony-szintu-binding-api","title":"Alacsony szint\u0171 Binding API","text":"<p>El\u0151fordulhatnak estek amikor a magas szint\u0171 Binding API nem megfelel\u0151 az ig\u00e9nyeinknek. P\u00e9ld\u00e1ul egy <code>Observable</code> sz\u00e1mnak nem tudjuk a n\u00e9gyzetgy\u00f6k\u00e9t kisz\u00e1moltatni. Ilyenkor saj\u00e1t kiterjeszt\u00e9seket \u00edrhatunk, melyek megval\u00f3s\u00edtj\u00e1k az ig\u00e9nyelt funkcionalit\u00e1st. Ennek 3 l\u00e9p\u00e9se van:</p> <ol> <li>Az egyik l\u00e9tez\u0151 <code>Binding</code> oszt\u00e1lyt terjessz\u00fck ki (sz\u00e1rmaztassunk bel\u0151le). A n\u00e9gyzetgy\u00f6k\u00f6s p\u00e9ld\u00e1n\u00e1l maradva haszn\u00e1lhatjuk a <code>DoubleBinding</code>-ot.</li> <li>Mindig h\u00edvjuk meg a parent <code>bind()</code> met\u00f3dus\u00e1t a f\u00fcgg\u0151s\u00e9gek k\u00f6t\u00e9s\u00e9hez! Itt az \u00f6sszes f\u00fcgg\u0151s\u00e9get adjuk meg.</li> <li>A l\u00e9nyeg pedig, hogy a <code>computeValue()</code> met\u00f3dust \u00edrjuk fel\u00fcl! (Amennyiben egy\u00e9b funkcionalit\u00e1s is sz\u00fcks\u00e9ges, akkor term\u00e9szetesen t\u00f6bb met\u00f3dust is fel\u00fcl\u00edrhatunk)</li> </ol> <p>P\u00e9ld\u00e1ul a n\u00e9gyzetgy\u00f6k kisz\u00e1m\u00edt\u00e1s\u00e1hoz a k\u00f6vetkez\u0151t \u00edrhatjuk:</p> <pre><code>DoubleProperty num = new SimpleDoubleProperty(25);\nDoubleProperty sqrtOfNum = new SimpleDoubleProperty();\n\nDoubleBinding squareRoot = new DoubleBinding() {\n{\nthis.bind(num);\n}\n\n@Override\nprotected double computeValue() {\ndouble n = num.get();\nreturn Math.sqrt(n);\n}\n};\n\nsqrtOfNum.bind(squareRoot);\n</code></pre> <p>Mivel a fenti p\u00e9ld\u00e1ban anonymous class-t haszn\u00e1ltunk (aminek ugyeb\u00e1r nincs konstruktora), \u00edgy az init blokkban h\u00edvtuk meg a <code>bind()</code> met\u00f3dust. Amennyiben t\u00f6bbsz\u00f6r is szeretn\u00e9nk felhaszn\u00e1lni a k\u00f6t\u00e9s t\u00edpusunkat, akkor \u00e9rdemes neves\u00edteni az oszt\u00e1lyt, ami n\u00e9zhet ki az al\u00e1bbihoz hasonl\u00f3an:</p> <pre><code>public class SquareRootBinding extends DoubleBinding {\nprivate ObservableNumberValue value;\n\npublic SquareRootBinding(ObservableNumberValue o) {\nthis.value = o;\nthis.bind(o);\n}\n\n@Override\nprotected double computeValue() {\nreturn Math.sqrt(this.value.doubleValue());\n}\n}\n</code></pre> <p>A haszn\u00e1lat helye:</p> <pre><code>DoubleProperty num = new SimpleDoubleProperty(25.0);\nDoubleProperty sqrtOfNum = new SimpleDoubleProperty();\n\nDoubleBinding squareRootBinding = new SquareRootBinding(num);\nsqrtOfNum.bind(squareRootBinding);\n\nSystem.out.println(sqrtOfNum.get());\nnum.set(100.0);\nSystem.out.println(sqrtOfNum.get());\n</code></pre> <p>Mivel ak\u00e1r eg\u00e9sz sz\u00e1mokat is haszn\u00e1lhatunk, \u00edgy nem szor\u00edtjuk meg t\u00fals\u00e1gosan azt, hogy milyen <code>Observable</code> objektumokat kaphatunk param\u00e9ter\u00fcl, viszont arra sz\u00fcks\u00e9g\u00fcnk van, hogy a megadott <code>Observable</code> objektumt\u00f3l le tudjuk k\u00e9rni a <code>double</code> \u00e9rt\u00e9k\u00e9t, mivel n\u00e9gyzetgy\u00f6k\u00f6t csak erre tudunk sz\u00e1molni. Emiatt az <code>ObservableNumberValue</code> t\u00edpust v\u00e1lasztjuk, mely tartalmazza a <code>doubleValue()</code> met\u00f3dust.</p>"},{"location":"extras_java_bean/#osszegzes","title":"\u00d6sszegz\u00e9s","text":"<p>A property-k \u00e9s az adatk\u00f6t\u00e9sek rendk\u00edv\u00fcl fontos r\u00e9sz\u00e9t k\u00e9pezik az eg\u00e9sz JavaFX API-nak. Amennyiben megvizsg\u00e1ljuk a grafikus vez\u00e9rl\u0151elemeket, azt fogjuk tapasztalni, hogy az \u00f6sszes adatot property form\u00e1j\u00e1ban t\u00e1rolj\u00e1k.</p> <p>P\u00e9ld\u00e1ul egy <code>TextField</code> az aktu\u00e1lis sz\u00f6veg \u00e9rt\u00e9k\u00e9t egy property-ben t\u00e1rolja:</p> <pre><code>TextField tf = new TextField(\"Foo Bar\");\nStringProperty textProp = tf.textProperty();\n</code></pre> <p>Ez hatalmas el\u0151nyt ad a kez\u00fcnkbe, mivel a k\u00fcl\u00f6nb\u00f6z\u0151 fel\u00fcleti elemek adatai k\u00f6z\u00f6tt rugalmasan hozhatunk l\u00e9tre adatk\u00f6t\u00e9seket. Ezen fel\u00fcl ak\u00e1r a model oszt\u00e1lyainkat is meg\u00edrhatjuk property-k seg\u00edts\u00e9g\u00e9vel, melyeket \u00edgy k\u00f6nnyebben szinkronban tarthatunk a fel\u00fcleti vez\u00e9rl\u0151kkel.</p>"},{"location":"extras_java_bean/#feladatok","title":"Feladatok","text":"<p>Feladat</p> <p>Csin\u00e1ljunk egy egyszer\u0171 JavaFX alkalmaz\u00e1st, ahol <code>Label</code> elemek seg\u00edts\u00e9g\u00e9vel az ablak aktu\u00e1lis m\u00e9ret\u00e9t mutatjuk! A feladat megold\u00e1sa sor\u00e1n haszn\u00e1ljunk property-ket \u00e9s k\u00f6t\u00e9seket!</p> <p>Feladat</p> <p>K\u00e9sz\u00edts\u00fcnk egy saj\u00e1t, alacsony szint\u0171 Binding-ot, mely k\u00e9pes a sz\u00e1m <code>sin</code>-\u00e1t kisz\u00e1m\u00edtani! Sz\u00e1rmaztassunk le a <code>DoubleBinding</code> oszt\u00e1lyb\u00f3l!</p>"},{"location":"extras_java_bean/#videok","title":"Vide\u00f3k","text":"<ul> <li>Property bevezet\u0151</li> <li>Adatk\u00f6t\u00e9sek, Java Beans Property figyel\u00e9s</li> <li>JavaFX Property-k</li> <li>ReadOnlyProperty \u00e9s lusta ki\u00e9rt\u00e9kel\u00e9s</li> <li>Property hierarchia</li> <li>Binding-ok haszn\u00e1lata</li> <li>Magas szint\u0171 Binding API</li> <li>Alacsony szint\u0171 Binding API</li> </ul>"},{"location":"kotprog/00_general/","title":"K\u00f6telez\u0151 program \u00e1ltal\u00e1nos k\u00f6vetelm\u00e9nyek","text":""},{"location":"kotprog/00_general/#webes-es-asztali-alkalmazasok-altalanos-kovetelmenyei","title":"Webes \u00e9s asztali alkalmaz\u00e1sok \u00e1ltal\u00e1nos k\u00f6vetelm\u00e9nyei","text":"<ul> <li>A k\u00f6telez\u0151 programnak k\u00f6vetnie kell a f\u00e9l\u00e9v sor\u00e1n tanult MVC tervez\u00e9si mint\u00e1t mind asztali mind webes megval\u00f3s\u00edt\u00e1s eset\u00e9n is, ahol annak \u00e9rtelme van! Amennyiben az MVC modell nem alkalmazhat\u00f3 abban az esetben is elv\u00e1rt, hogy az alkalmaz\u00e1s logikasan legyen tagolva.</li> <li>A k\u00f6telez\u0151 programokban a modell r\u00e9tegben elhelyezett Beaneknek k\u00f6vetni\u00fck kell a JavaFX-es property konvenci\u00f3kat, ak\u00e1r webes ak\u00e1r asztali megval\u00f3s\u00edt\u00e1sr\u00f3l van sz\u00f3.</li> <li>A beviteli mez\u0151k\u00f6n, ahol annak van \u00e9rtelme, alkalmazzunk valid\u00e1ci\u00f3t!</li> <li>Ahol van \u00e9rtelme ott haszn\u00e1ljunk sz\u00e1lkezel\u00e9si megval\u00f3s\u00edt\u00e1st! P\u00e9ld\u00e1ul export/import funkci\u00f3k</li> <li>Ahol a rendszernek k\u00e9peket kell kezelnie, ott a k\u00e9p adatb\u00e1zisba val\u00f3 ment\u00e9sekor nem sz\u00fcks\u00e9ges blob-ot haszn\u00e1lni, helyette \u00e1talak\u00edthatjuk a k\u00e9peket mondjuk Base64-es k\u00f3dol\u00e1ssal sz\u00f6vegg\u00e9 - ehhez haszn\u00e1lhat\u00f3 p\u00e9ld\u00e1ul a commons-io, melyre tal\u00e1lunk egy p\u00e9ld\u00e1t itt</li> <li>A programok b\u00e1rmilyen tetsz\u0151leges 3rd-party library-t haszn\u00e1lhatnak, melyek seg\u00edtenek a funkcionalit\u00e1sok megval\u00f3s\u00edt\u00e1s\u00e1ban</li> <li>A programok form\u00e1z\u00e1s\u00e1t k\u00fcls\u0151 CSS st\u00edluslapokban kell elv\u00e9gezni!</li> <li>A programoknak a Maven build keretrendszert kell t\u00e1mogatnia, azaz annak haszn\u00e1lat\u00e1val el\u0151 kell tudni \u00e1ll\u00edtani egy jar vagy war \u00e1llom\u00e1nyt (multimodule eset\u00e9n ak\u00e1r t\u00f6bb ilyen is lehet) - alapesetben az <code>mvn clean package</code> parancsra</li> <li>A ki\u00e9rt\u00e9kel\u00e9s seg\u00edt\u00e9s\u00e9re k\u00e9r\u00fcnk egy <code>README.txt</code> vagy <code>README.md</code> f\u00e1jlt, melyben le vannak \u00edrva az alkalmaz\u00e1ssal kapcsolatos fontosabb tudnival\u00f3k. A le\u00edr\u00f3 f\u00e1jlnak tartalmaznia kell a k\u00f6vetkez\u0151ket:<ul> <li>\u00c1ltal\u00e1nos t\u00f6m\u00f6r le\u00edr\u00e1s a programr\u00f3l</li> <li>Feature lista</li> <li>Extra sz\u00fcks\u00e9ges be\u00e1ll\u00edt\u00e1sok</li> <li>Ford\u00edt\u00e1s/futtat\u00e1shoz sz\u00fcks\u00e9ges l\u00e9p\u00e9sek</li> </ul> </li> <li>A forr\u00e1sk\u00f3dban ha vannak esetleg be\u00e9getett \u00fatvonalakat akkor, ahol csak lehet ott relat\u00edv m\u00f3don adjuk meg, illetve a legjobb, ha ezeket valamilyen konfigur\u00e1ci\u00f3s \u00e1llom\u00e1nyban (.properties, .yml) adjuk meg.</li> <li>Az asztali \u00e9s a webes megval\u00f3s\u00edt\u00e1s eset\u00e9n is egy darab k\u00f6z\u00f6s adatb\u00e1zist kell haszn\u00e1lni.</li> </ul>"},{"location":"kotprog/00_general/#asztali-esvagy-web-valasztasi-lehetoseg","title":"Asztali \u00e9s/vagy web v\u00e1laszt\u00e1si lehet\u0151s\u00e9g","text":"<p>Asztali vagy webes alkalmaz\u00e1sk\u00e9nt megval\u00f3s\u00edtani?</p> <ul> <li>Amelyik r\u00e9szfeladat vagy funkcionalit\u00e1s mell\u00e9 az van \u00edrva, hogy asztali, azt asztali alkalmaz\u00e1sk\u00e9nt</li> <li>Amelyik r\u00e9szfeladat vagy funkcionalit\u00e1s mell\u00e9 az van \u00edrva, hogy web, azt webes alkalmaz\u00e1sk\u00e9nt</li> <li>Amelyik r\u00e9szfeladat vagy funkcionalit\u00e1s mell\u00e9 az asztali \u00e9s web van \u00edrva, ott ugyanazt a funkcionalit\u00e1st asztali \u00e9s webes alkalmaz\u00e1sk\u00e9nt is meg kell val\u00f3s\u00edtani. Nem k\u00f6telez\u0151, hogy teljesen ugyanolyan legyen a m\u0171k\u00f6d\u00e9s\u00fck (pl. keres\u00e9sn\u00e9l az egyik esetben felugr\u00f3 ablakba kell be\u00edrni a dolgokat, a m\u00e1sik esetben az oldal tetej\u00e9n tal\u00e1lhat\u00f3ak a beviteli mez\u0151k), de mindk\u00e9t m\u00f3don meg kell val\u00f3s\u00edtani az adott funkcionalit\u00e1st.</li> <li>Amelyik r\u00e9szfeladat vagy funkcionalit\u00e1s mell\u00e9 az asztali vagy web van \u00edrva, ott a fejleszt\u0151 d\u00f6nti el, hogy melyiket v\u00e1lasztja, a m\u00e1sik r\u00e9sz megval\u00f3s\u00edt\u00e1sa opcion\u00e1lis</li> </ul>"},{"location":"kotprog/00_general/#asztali-alkalmazasok-altalanos-kovetelmenyei","title":"Asztali alkalmaz\u00e1sok \u00e1ltal\u00e1nos k\u00f6vetelm\u00e9nyei","text":"<ul> <li>Alkalmazzunk k\u00f6t\u00e9seket a bean-ek \u00e9s a fel\u00fcleti vez\u00e9rl\u0151elemek k\u00f6z\u00f6tt</li> <li>A fel\u00fcletek megval\u00f3s\u00edt\u00e1s\u00e1ra nincs megk\u00f6t\u00e9s, azok k\u00e9sz\u00fclhetnek Java k\u00f3db\u00f3l vagy alkalmazhatjuk az FXML-t is</li> </ul>"},{"location":"kotprog/00_general/#webes-alkalmazasok-altalanos-kovetelmenyei","title":"Webes alkalmaz\u00e1sok \u00e1ltal\u00e1nos k\u00f6vetelm\u00e9nyei","text":"<ul> <li>A fel\u00fclet megval\u00f3s\u00edt\u00e1s\u00e1ra nincs megk\u00f6t\u00e9s, az t\u00f6rt\u00e9nhet puszt\u00e1n szervletek vagy JSP oldalak haszn\u00e1lat\u00e1val, illetve tetsz\u0151leges vegy\u00edtve a kett\u0151t</li> </ul>"},{"location":"kotprog/00_general/#opcionalis-elemek","title":"Opcion\u00e1lis elemek","text":"<ul> <li>Anim\u00e1ci\u00f3k haszn\u00e1lata</li> </ul>"},{"location":"kotprog/00_general/#az-elkeszult-feladatok-beadasa","title":"Az elk\u00e9sz\u00fclt feladatok bead\u00e1sa","text":"<p>K\u00e9s\u0151bb ker\u00fcl pontos\u00edt\u00e1sra.</p>"},{"location":"kotprog/00_general/#az-elkeszul-feladatok-kiertekelese","title":"Az elk\u00e9sz\u00fcl feladatok ki\u00e9rt\u00e9kel\u00e9se","text":"<p>A ki\u00e9rt\u00e9kel\u00e9s pontos r\u00e9szletei k\u00e9s\u0151bb ker\u00fclnek pontos\u00edt\u00e1sra.</p>"},{"location":"kotprog/01_kiertekeles/","title":"01 kiertekeles","text":""},{"location":"kotprog/01_kiertekeles/#kovetelmenyek","title":"K\u00f6vetelm\u00e9nyek","text":""},{"location":"kotprog/01_kiertekeles/#minimum-kovetelmenyek","title":"Minimum k\u00f6vetelm\u00e9nyek","text":"<p>Minimum k\u00f6vetelm\u00e9nyek az el\u00e9gs\u00e9ges jegyhez, azaz ha ezek k\u00f6z\u00fcl valamelyik nincs meg, akkor a gyakorlat el\u00e9gtelen:</p> <ul> <li>Bead\u00e1si hat\u00e1rid\u0151 betart\u00e1sa<ul> <li>Ezut\u00e1n m\u00e1r nem fogadunk el beadand\u00f3kat</li> </ul> </li> <li>Az adott projekt megval\u00f3s\u00edt\u00e1sa<ul> <li>A gyakorlaton tanult technol\u00f3gi\u00e1k alkalmaz\u00e1sa (JavaFX, SQLite, JSP, \u2026)</li> <li>A projekt ford\u00edthat\u00f3 \u00e9s futtathat\u00f3</li> </ul> </li> <li>A projekt 3 f\u0151 komponens\u00e9nek megval\u00f3s\u00edt\u00e1sa: asztali, webes, adatb\u00e1zis<ul> <li>Ha valamelyik r\u00e9sz \u00e9rdemben hi\u00e1nyzik, akkor a projektmunka el\u00e9gtelen<ul> <li>\u00c9rdemben hi\u00e1nyzik: nincs semmi az adott r\u00e9szen, vagy ami van, az \u00e9rdemi funkcionalit\u00e1st nem val\u00f3s\u00edt meg (pl. egy \u00fcres ablak, \u00fcres t\u00e1bl\u00e1zat, egy-k\u00e9t beviteli mez\u0151 vagy gomb, ami semmire sincs haszn\u00e1lva)</li> </ul> </li> </ul> </li> </ul>"},{"location":"kotprog/01_kiertekeles/#kiertekeles","title":"Ki\u00e9rt\u00e9kel\u00e9s","text":""},{"location":"kotprog/01_kiertekeles/#elegseges-szint","title":"El\u00e9gs\u00e9ges szint","text":"<ul> <li>A program ford\u00edthat\u00f3 \u00e9s futtathat\u00f3</li> <li>Mind a h\u00e1rom r\u00e9szen \u00e9rt\u00e9kelhet\u0151 funkcionalit\u00e1s megval\u00f3s\u00edt\u00e1sa<ul> <li>Ezen funkcionalit\u00e1soknak m\u00e1r megfelel\u0151en m\u0171k\u00f6dni\u00fck kell</li> </ul> </li> </ul>"},{"location":"kotprog/01_kiertekeles/#felhasznaloi-kiertekeles","title":"Felhaszn\u00e1l\u00f3i ki\u00e9rt\u00e9kel\u00e9s","text":"<ul> <li>A program megfelel a k\u00f6vetelm\u00e9nyeknek<ul> <li>Minden funkcionalit\u00e1s implement\u00e1lva van</li> </ul> </li> <li>Mennyire j\u00f3l haszn\u00e1lhat\u00f3<ul> <li>Fel\u00e9p\u00edt\u00e9s, bevitel, hibajelz\u00e9sek, ...</li> </ul> </li> <li>Opcion\u00e1lis r\u00e9szfeladatok megval\u00f3s\u00edt\u00e1sa, \u00e9rt\u00e9kel\u00e9se<ul> <li>Ha a programban vannak kisebb hib\u00e1k, akkor azokat az opcion\u00e1lis funkcionalit\u00e1sokkal lehet ellens\u00falyozni</li> </ul> </li> </ul>"},{"location":"kotprog/01_kiertekeles/#fejlesztes","title":"Fejleszt\u00e9s","text":"<ul> <li>A rendszer k\u00f6veti-e az MVC modellt (ahol az el\u0151 van \u00edrva)<ul> <li>Interf\u00e9sz \u00e9s implement\u00e1ci\u00f3 k\u00fcl\u00f6n van-e v\u00e1lasztva</li> <li>A View \u00e9s a Model r\u00e9teg ,,kapcsolata\u2019\u2019</li> </ul> </li> <li>Adatb\u00e1zis \u00e9s JDBC megfelel\u0151 haszn\u00e1lata<ul> <li>Adatb\u00e1zis kialak\u00edt\u00e1sa (t\u00e1bl\u00e1k, t\u00edpusok, \u2026)</li> <li>SQL injection elleni v\u00e9delem</li> <li>Er\u0151forr\u00e1sok megfelel\u0151 lez\u00e1r\u00e1sa</li> </ul> </li> <li>UI megval\u00f3s\u00edt\u00e1sa<ul> <li>Fel\u00e9p\u00edt\u00e9se</li> <li>Input valid\u00e1ci\u00f3</li> <li>Hibakezel\u00e9s</li> </ul> </li> <li>\u00c1ltal\u00e1nos<ul> <li>Program fel\u00e9p\u00edt\u00e9se</li> <li>Elnevez\u00e9si konvenci\u00f3k</li> <li>Dokument\u00e1lts\u00e1g (ford\u00edt\u00e1s, futtat\u00e1s, haszn\u00e1lat - ahol nem egy\u00e9rtelm\u0171)</li> </ul> </li> </ul>"},{"location":"kotprog/1010/","title":"1010 !","text":"<p>A feladat a 1010! j\u00e1t\u00e9k megval\u00f3s\u00edt\u00e1sa grafikusan. A j\u00e1t\u00e9k egy t\u00edzszer t\u00edzes mez\u0151n j\u00e1tsz\u00f3dik, ahova a j\u00e1t\u00e9kosnak k\u00fcl\u00f6nb\u00f6z\u0151 elemeket kell lepakolnia. A j\u00e1t\u00e9kos egyszerre 3 darab elemet kap, \u00e9s ezeket az elemeket kell elhelyezze a 10x10-es p\u00e1ly\u00e1n, amennyiben tal\u00e1l helyet nekik.  Ha a j\u00e1t\u00e9kos nem tudja lerakni az elemeket, akkor vesz\u00edtett. Amennyiben siker\u00fclt leraknia a kapott 3 elemet, \u00fajabb 3 elemet kap, amiket el kell helyezzen a fel\u00fcleten. A kapott elemek form\u00e1ja \u00e9s nagys\u00e1ga v\u00e9letlenszer\u0171.</p>"},{"location":"kotprog/1010/#gui","title":"GUI","text":"<ul> <li>A 10x10-es t\u00e1bla kirajzol\u00e1sa</li> <li>A 3 k\u00f6vetkez\u0151 elem kirajzol\u00e1sa a felhaszn\u00e1l\u00f3nak</li> <li>Ha a felhaszn\u00e1l\u00f3 lerak egy elemet, az elem megjelen\u00edt\u00e9se a t\u00e1bl\u00e1n</li> <li>Csak \u00fcres pontra lehet elemet helyezni, ha m\u00e1r az adott n\u00e9gyzet foglalt, ne tudjon a felhaszn\u00e1l\u00f3 elemet elhelyezni r\u00e1</li> <li>Ha egy sor vagy oszlop betelik, t\u00f6r\u00f6lj\u00fck a foglalts\u00e1got a n\u00e9gyzetekr\u0151l</li> </ul>"},{"location":"kotprog/1010/#rendelkezesre-allo-elemek-amiket-kezelni-kell","title":"Rendelkez\u00e9sre \u00e1ll\u00f3 elemek, amiket kezelni kell","text":""},{"location":"kotprog/1010/#a-jatekos-a-kovetkezo-szempontok-szerint-kap-pontokat","title":"A j\u00e1t\u00e9kos a k\u00f6vetkez\u0151 szempontok szerint kap pontokat","text":"<ul> <li>Minden elhelyezett elem ut\u00e1n annyi pontot kap, ah\u00e1ny n\u00e9gyzetb\u0151l \u00e1ll az adott elem</li> <li>Egy sor vagy oszlop felszabadul\u00e1sakor a j\u00e1t\u00e9kos +10 pontot kap</li> </ul>"},{"location":"kotprog/1010/#tovabbi-funkcionalitasok","title":"Tov\u00e1bbi funkcionalit\u00e1sok","text":"<ul> <li>A felhaszn\u00e1l\u00f3 3x kit\u00f6r\u00f6lhet 1-1 sort vagy oszlopot, ha seg\u00edts\u00e9gre van sz\u00fcks\u00e9ge, ez 50 pontj\u00e1ba ker\u00fcl</li> <li>A felhaszn\u00e1l\u00f3 3x k\u00e9rhet m\u00e1sik 3 elemet a kapottak helyett, ha sz\u00fcks\u00e9ge van r\u00e1, ez szint\u00e9n 50 pontj\u00e1ba ker\u00fcl</li> <li>A j\u00e1t\u00e9kos vesz\u00edt, ha m\u00e1r nincs hova lerakja az elemeket \u00e9s az \u00f6sszes seg\u00edts\u00e9ge elfogyott (vagy van m\u00e9g seg\u00edts\u00e9ge, de nincs r\u00e1 pontja, hogy \"megvegye\")</li> </ul>"},{"location":"kotprog/1010/#jelzesek-a-felhasznalo-fele","title":"Jelz\u00e9sek a felhaszn\u00e1l\u00f3 fel\u00e9","text":"<ul> <li>Sikeres sor- \u00e9s oszlop t\u00f6rl\u00e9skor a felhaszn\u00e1l\u00f3 kapjon \u00fczenetet (valamilyen form\u00e1ban) </li> <li>Seg\u00edts\u00e9gek felhaszn\u00e1l\u00e1sakor szint\u00e9n kapjon valamilyen visszajelz\u00e9st a t\u00f6rt\u00e9ntekr\u0151l</li> <li>Veres\u00e9g eset\u00e9n \u00edrjuk ki a felhaszn\u00e1l\u00f3 el\u00e9rt pontjait, illetve jelezz\u00fck a j\u00e1t\u00e9k v\u00e9g\u00e9t</li> <li>Egy\u00e9ni rekord megd\u00f6nt\u00e9sekor t\u00e1j\u00e9koztassuk a felhaszn\u00e1l\u00f3t.</li> </ul>"},{"location":"kotprog/1010/#adatok-kezelese","title":"Adatok kezel\u00e9se","text":"<p>Minden j\u00e1t\u00e9k v\u00e9g\u00e9n ments\u00fck el az adott felhaszn\u00e1l\u00f3 nev\u00e9t \u00e9s el\u00e9rt pontjait. Legyen egy mindenki \u00e1ltal el\u00e9rhet\u0151 ranglista, amiben a top 10 j\u00e1t\u00e9kos szerepel.</p>"},{"location":"kotprog/1010/#megvalositas","title":"Megval\u00f3s\u00edt\u00e1s","text":"<p>A ranglista el\u00e9rhet\u0151 legyen mind asztali, mind webes alkalmaz\u00e1sban. A j\u00e1t\u00e9k vagy asztali vagy webes alkalmaz\u00e1s legyen.</p>"},{"location":"kotprog/2048/","title":"2048","text":"<p>A feladat a n\u00e9pszer\u0171 2048 j\u00e1t\u00e9k megval\u00f3s\u00edt\u00e1sa.</p>"},{"location":"kotprog/2048/#kovetelmenyek-asztali-es-web","title":"K\u00f6vetelm\u00e9nyek (asztali \u00e9s web)","text":"<ul> <li>A j\u00e1t\u00e9k \u00f6sszes alap funkci\u00f3j\u00e1t t\u00e1mogatni kell, mely a fenti linken el\u00e9rhet\u0151</li> <li>A j\u00e1t\u00e9kot sz\u00e1mok helyett k\u00e9pekkel is lehessen j\u00e1tszani<ul> <li>A j\u00e1t\u00e9kos tudja, hogy k\u00e9t azonos k\u00e9p egyes\u00edt\u00e9se eset\u00e9n milyen \u00faj k\u00e9p j\u00f6n l\u00e9tre</li> <li>Egy \u00fajonnan l\u00e9trehozott k\u00e9pes konfigur\u00e1ci\u00f3t menteni kell adatb\u00e1zisba is (a k\u00e9peket lehet base64-ben k\u00f3dolni, \u00edgy nem kell blob-ban t\u00e1rolni)</li> <li>A j\u00e1t\u00e9k indul\u00e1sakor ki lehet v\u00e1lasztani, hogy melyik konfigur\u00e1ci\u00f3val szeretn\u00e9nk j\u00e1tszani</li> </ul> </li> <li>A konfigur\u00e1ci\u00f3 megad\u00e1sakor lehessen megv\u00e1lasztani a r\u00e1csos t\u00e1bla m\u00e9ret\u00e9t is<ul> <li>V\u00e1laszt\u00e1si opci\u00f3k:<ul> <li>5x5</li> <li>6x6</li> <li>8x8</li> </ul> </li> <li>A m\u00e9ret m\u00f3dos\u00edt\u00e1sakor megadhat\u00f3, hogy h\u00e1ny szint legyen (alapb\u00f3l 11 szint van \u00e9s ha el\u00e9rt\u00fck a 11-ket akkor nyert\u00fcnk)</li> </ul> </li> <li>Amennyiben nincs tov\u00e1bbi lehets\u00e9ges l\u00e9p\u00e9s, akkor a felhaszn\u00e1l\u00f3t t\u00e1j\u00e9koztatni kell err\u0151l \u00e9s a j\u00e1t\u00e9k v\u00e9get \u00e9r</li> <li>A j\u00e1t\u00e9knak t\u00e1mogatnia kell az eredm\u00e9nyek adatb\u00e1zisba val\u00f3 r\u00f6gz\u00edt\u00e9s\u00e9t, ahol t\u00e1rolni kell:<ul> <li>A j\u00e1t\u00e9kos nev\u00e9t</li> <li>Az el\u00e9rt id\u0151eredm\u00e9nyt</li> <li>Az el\u00e9rt szintet</li> </ul> </li> <li>Az eredm\u00e9nyeket konfigur\u00e1ci\u00f3khoz kell t\u00e1rolni</li> <li>Az eredm\u00e9nyeket k\u00e9s\u0151bb vissza lehessen n\u00e9zni<ul> <li>List\u00e1zni</li> <li>Keresni eredm\u00e9nyek vagy n\u00e9v alapj\u00e1n</li> </ul> </li> </ul>"},{"location":"kotprog/2048/#opcionalis-kovetelmenyek","title":"Opcion\u00e1lis k\u00f6vetelm\u00e9nyek","text":"<ul> <li>2 j\u00e1t\u00e9kos \u00fczemm\u00f3d, ahol W,A,S,D, illetve \u2190, \u2191, \u2192, \u2193 billenty\u0171kkel lehet ir\u00e1ny\u00edtani a j\u00e1t\u00e9kmenetet.<ul> <li>Aki magasabb szintet \u00e9r el az nyert<ul> <li>Ha azonos szintet \u00e9rnek el, akkor az nyert, aki hamarabb \u00e9rte el</li> </ul> </li> </ul> </li> </ul>"},{"location":"kotprog/adatbazismuveletek/","title":"Adatb\u00e1zis menedzser","text":"<p>A feladat egy grafikus fel\u00fclettel rendelkez\u0151 adatb\u00e1zis menedzser szoftver elk\u00e9sz\u00edt\u00e9se, mely SQLite adatb\u00e1zist k\u00e9pes kezelni.</p>"},{"location":"kotprog/adatbazismuveletek/#adatok-lekerdezesemegjelenitese-asztali-es-web","title":"Adatok lek\u00e9rdez\u00e9se/megjelen\u00edt\u00e9se (asztali \u00e9s web)","text":"<p>Az alkalmaz\u00e1sban lehet\u0151s\u00e9get kell ny\u00fajtani SQLite adatb\u00e1zisok megnyit\u00e1s\u00e1ra. Asztali alkalmaz\u00e1s eset\u00e9n az \u00fatvonal megad\u00e1s\u00e1val, webes fel\u00fcleten pedig a f\u00e1jl felt\u00f6lt\u00e9s\u00e9vel.</p> <ul> <li>Bet\u00f6lt\u00e9s ut\u00e1n a fel\u00fclet jelen\u00edtse meg az el\u00e9rhet\u0151 t\u00e1bl\u00e1kat az adatb\u00e1zisban</li> <li>Egy-egy t\u00e1bl\u00e1t kijel\u00f6lve legyen lehet\u0151s\u00e9g azok s\u00e9m\u00e1j\u00e1nak, valamint a benne t\u00e1rolt adatsorok megjelen\u00edt\u00e9s\u00e9re:<ul> <li>S\u00e9ma: a t\u00e1bla \u00e1ltal haszn\u00e1lt mez\u0151k nevei, t\u00edpusai, kulcsok, stb.</li> <li>Adat: egy kiv\u00e1lasztott t\u00e1bl\u00e1ban t\u00e1rolt adatok megjelen\u00edt\u00e9se t\u00e1bl\u00e1zatban els\u0151dleges kulcs szerint rendezve. A t\u00e1bl\u00e1zat oszlopai megegyeznek a t\u00e1bl\u00e1ban szerepl\u0151 oszlopnevekkel.</li> </ul> </li> </ul>"},{"location":"kotprog/adatbazismuveletek/#adatbazis-modositasa-asztali","title":"Adatb\u00e1zis m\u00f3dos\u00edt\u00e1sa (asztali)","text":"<p>A program ny\u00fajtson lehet\u0151s\u00e9get a t\u00e1bl\u00e1ban t\u00e1rolt adatok m\u00f3dos\u00edt\u00e1s\u00e1ra:</p> <ul> <li>Egy t\u00e1bla adatainak megjelen\u00edt\u00e9sekor a t\u00e1bl\u00e1zat legyen szerkeszthet\u0151, amit a felhaszn\u00e1l\u00f3 m\u00f3dos\u00edtani tud. M\u00f3dos\u00edt\u00e1s meger\u0151s\u00edt\u00e9se ut\u00e1n az adatok friss\u00fcljenek az adatb\u00e1zisban is.</li> <li>Legyen lehet\u0151s\u00e9g egy-egy adatsor t\u00f6rl\u00e9s\u00e9re is.</li> </ul>"},{"location":"kotprog/adatbazismuveletek/#migracio-es-fejlesztoi-funkciok-asztali-vagy-web","title":"Migr\u00e1ci\u00f3 \u00e9s fejleszt\u0151i funkci\u00f3k (asztali vagy web)","text":"<p>Az adatb\u00e1zis menedzser az al\u00e1bbi extra funkci\u00f3kat ny\u00fajtja a felhaszn\u00e1l\u00f3knak:</p> <ul> <li>Fejleszt\u0151i fel\u00fclet: egy sz\u00f6veges beviteli mez\u0151, melybe a felhaszn\u00e1l\u00f3 SQL k\u00f3dot \u00edrhat.<ul> <li>Egy gombnyom\u00e1s hat\u00e1s\u00e1ra lefut a beg\u00e9pelt SQL k\u00f3d, aminek az eredm\u00e9nye egy t\u00e1bl\u00e1zatban jelenik meg.</li> <li>SQL Injection ellehetetlen\u00edt\u00e9se.</li> <li>Visszajelz\u00e9s: egy parancs lefut\u00e1sa ut\u00e1n a fel\u00fclet adjon visszajelz\u00e9st, hogy h\u00e1ny sort \u00e9rintett az a m\u0171velet.</li> </ul> </li> <li>SQL k\u00f3d: az adatb\u00e1zisban tal\u00e1lhat\u00f3 t\u00e1bl\u00e1kat lehessen export\u00e1lni, azaz SQLite k\u00f3d ker\u00fclj\u00f6n ment\u00e9sre (m\u00e1solhat\u00f3 form\u00e1ba, esetleg f\u00e1jlba). Ez csak a t\u00e1bl\u00e1k s\u00e9m\u00e1j\u00e1ra vonatkozik, magukra a t\u00e1rolt adatokra nem.</li> <li>B\u00e1rmilyen felmer\u00fcl\u0151 hiba eset\u00e9n a jelezni kell a felhaszn\u00e1l\u00f3nak, hogy mit rontott el.<ul> <li>P\u00e9ld\u00e1ul oszlopn\u00e9v m\u00f3dos\u00edt\u00e1s\u00e1n\u00e1l: az oszlopn\u00e9vre hivatkoznak m\u00e1sik t\u00e1bl\u00e1b\u00f3l, akkor ezt jelezni kell. Nem kell automatikusan jav\u00edtani.</li> </ul> </li> </ul>"},{"location":"kotprog/adatbazismuveletek/#opcionalisan-megvalosithato-elemek-asztali-vagy-web","title":"Opcion\u00e1lisan megval\u00f3s\u00edthat\u00f3 elemek (asztali vagy web)","text":"<ul> <li> <p>Az adatb\u00e1zisban t\u00e1rolt adatok megjelen\u00edt\u00e9se sor\u00e1n:</p> <ul> <li>A fejl\u00e9cben egy oszlopn\u00e9vre kattintva friss\u00fclj\u00f6n a t\u00e1bl\u00e1zat a kiv\u00e1lasztott oszlop szerinti rendez\u00e9ssel.</li> </ul> <ul> <li>A fejl\u00e9cben az oszlopnevek alatt legyen lehet\u0151s\u00e9g sz\u0171r\u00e9si felt\u00e9telek megad\u00e1s\u00e1ra (sz\u00f6veg, amelyre kell illeszkednie a sz\u0171rt adatnak). Csak abban az oszlopban kell sz\u0171rni, ahova a felhaszn\u00e1l\u00f3 be\u00edrta a keres\u00e9si felt\u00e9telt.</li> </ul> <ul> <li>Oldalak menedzsel\u00e9se: megadhat\u00f3, hogy egy oldalon h\u00e1ny db rekord jelen\u00edthet\u0151 meg. Amennyiben ett\u0151l t\u00f6bb elem van a t\u00e1bl\u00e1ban, akkor megjelenik egy lapoz\u00f3 fel\u00fclet annyi oldallal, ah\u00e1nyba belef\u00e9r az adat \u00e9s lehessen lapozni.</li> </ul> </li> </ul> <ul> <li>M\u00f3dos\u00edt\u00e1s:<ul> <li>S\u00e9ma: az oszlopneveket, valamint azok t\u00edpus\u00e1t is meg lehessen v\u00e1ltoztatni. Amennyiben a m\u00e1r megl\u00e9v\u0151 adatok alapj\u00e1n ez hib\u00e1t eredm\u00e9nyezne, aj\u00e1nlja fel, hogy t\u00f6r\u00f6lj\u00f6n minden adatot a t\u00e1bl\u00e1b\u00f3l \u00e9s v\u00e1ltoztassa meg a t\u00edpust.</li> </ul> </li> </ul> <ul> <li> <p>Migr\u00e1ci\u00f3:</p> <ul> <li>A t\u00e1rolt adatokat is lehessen export\u00e1lni SQL-k\u00e9nt (<code>insert into ...</code> form\u00e1ban).</li> </ul> <ul> <li>Az adatok sz\u0171rt megjelen\u00edt\u00e9se sor\u00e1n csak azok a rekordok ker\u00fcljenek export\u00e1l\u00e1sra, melyek megfelelnek a sz\u0171r\u00e9si felt\u00e9teleknek.</li> </ul> </li> </ul> <ul> <li> <p>Hibakezel\u00e9s:</p> <ul> <li>A hib\u00e1kat logolni kell egy erre fenntartott sz\u00f6veges f\u00e1jlba.</li> </ul> <ul> <li>Exception ki\u00edr\u00e1sa egy erre kijel\u00f6lt fel\u00fcletre (piros sz\u00ednnel).</li> </ul> </li> </ul> <ul> <li>Fejleszt\u0151i lehet\u0151s\u00e9gek:<ul> <li>Syntax highlight</li> </ul> </li> </ul>"},{"location":"kotprog/allatkert/","title":"\u00c1llatkerti \u00f6r\u00f6kbefogad\u00e1s","text":"<p>A feladat egy \u00e1llatkerti \u00f6r\u00f6kbefogad\u00e1st menedzsel\u0151 program elk\u00e9sz\u00edt\u00e9se. Az \u00e1llatkertekben szok\u00e1s virtu\u00e1lisan \u00f6r\u00f6kbe fogadni \u00e1llatkerti lak\u00f3kat, valamilyen t\u00e1mogat\u00e1s ellen\u00e9ben (p\u00e9nz vagy egy\u00e9b adom\u00e1ny), ilyen esetben az adom\u00e1nyoz\u00f3 neve felt\u00fcntet\u00e9sre ker\u00fcl az \u00f6r\u00f6kbefogadott \u00e1llat mellett, illetve nemr\u00e9g sz\u00fcletett kis\u00e1llat eset\u00e9n nevet is lehet adni az \u00f6r\u00f6kbefogadott \u00e1llatnak.</p>"},{"location":"kotprog/allatkert/#a-programnak-a-kovetkezoket-kell-tartalmazni","title":"A programnak a k\u00f6vetkez\u0151ket kell tartalmazni","text":"<ul> <li>\u00d6r\u00f6kbefogad\u00f3, aki a k\u00f6vetkez\u0151 tulajdons\u00e1gokkal rendelkezik<ul> <li>n\u00e9v</li> <li>el\u00e9rhet\u0151s\u00e9g (email)</li> </ul> </li> <li>\u00d6r\u00f6kbefogadhat\u00f3 \u00e1llat:<ul> <li>n\u00e9v (ha van m\u00e1r neki)</li> <li>faj</li> <li>f\u00e9nyk\u00e9p</li> <li>bemutatkoz\u00f3 sz\u00f6veg</li> <li>sz\u00fclet\u00e9si \u00e9v</li> </ul> </li> <li>\u00d6r\u00f6kbefogad\u00e1si k\u00f6nyvel\u00e9s:<ul> <li>ki fogadta \u00f6r\u00f6kbe</li> <li>melyik \u00e1llatot</li> <li>mikor</li> <li>\u00f6r\u00f6kbefogadott \u00e1llat neve (csak akkor lehessen megadni, ha m\u00e9g nincs neve az \u00f6r\u00f6kbefogadott \u00e1llatnak)</li> <li>t\u00e1mogat\u00e1s t\u00edpusa (p\u00e9nz\u00f6sszeg vagy \u00e1llateledel)</li> <li>t\u00e1mogat\u00e1s \u00f6sszege (ha p\u00e9nz\u00f6sszeg a t\u00edpus) vagy </li> <li>t\u00e1mogat\u00e1s mennyis\u00e9ge (pl. h\u00e1ny kil\u00f3 \u00e1llateledel, ha nem p\u00e9nz\u00f6sszeg a t\u00edpus)</li> <li>t\u00e1mogat\u00e1s gyakoris\u00e1ga (egyszeri t\u00e1mogat\u00e1s, t\u00f6bbsz\u00f6r ism\u00e9tl\u0151d\u0151)</li> </ul> </li> <li>Az \u00f6r\u00f6kbefogad\u00f3kat, az \u00e1llatokat \u00e9s a k\u00f6nyvel\u00e9st adatb\u00e1zisban kell t\u00e1rolni (logikusan \u00f6sszekapcsolt strukt\u00far\u00e1ban).</li> </ul>"},{"location":"kotprog/allatkert/#a-programnak-a-kovetkezo-funkcionalitasokkal-kell-rendelkeznie","title":"A programnak a k\u00f6vetkez\u0151 funkcionalit\u00e1sokkal kell rendelkeznie","text":"<ul> <li>T\u00e1mogat\u00f3k/\u00f6r\u00f6kbefogad\u00f3k hozz\u00e1ad\u00e1sa, szerkeszt\u00e9se, list\u00e1z\u00e1sa, t\u00f6rl\u00e9se</li> <li>\u00c1llatok hozz\u00e1ad\u00e1sa, szerkeszt\u00e9se, list\u00e1z\u00e1sa, t\u00f6rl\u00e9se</li> <li>Legyen lehet\u0151s\u00e9g \u00e1llat \u00f6r\u00f6kbefogad\u00e1s\u00e1ra<ul> <li>\u00f6r\u00f6kbe fogadni \u00fajonnan sz\u00fcletett, vagy m\u00e9g nem \u00f6r\u00f6kbefogadott \u00e1llatkerti lak\u00f3t lehet</li> <li>ha olyan \u00e1llatot fogadnak \u00f6r\u00f6kbe, akinek m\u00e9g nincs neve, lehessen megadni nevet (egy\u00e9b esetben ne)</li> </ul> </li> </ul>"},{"location":"kotprog/allatkert/#keresesi-szuresi-lehetosegek","title":"Keres\u00e9si, sz\u0171r\u00e9si lehet\u0151s\u00e9gek","text":"<ul> <li>M\u00e1r \u00f6r\u00f6kbefogadott \u00e9s m\u00e9g nem \u00f6r\u00f6kbefogadotts\u00e1g alapj\u00e1n lehessen sz\u0171rni az \u00e1llatok list\u00e1j\u00e1t</li> <li>Az \u00f6r\u00f6kbefogad\u00e1sok k\u00f6z\u00f6tt lehessen keresni<ul> <li>\u00f6r\u00f6kbefogad\u00f3 neve szerint</li> <li>\u00f6r\u00f6kbefogadott neve szerint</li> <li>\u00f6r\u00f6kbefogad\u00e1s id\u0151pontja szerint (melyik \u00e9vben t\u00f6rt\u00e9nt)</li> <li>illetve sz\u0171rni t\u00e1mogat\u00e1s t\u00edpusa szerint</li> </ul> </li> </ul>"},{"location":"kotprog/allatkert/#megvalositas","title":"Megval\u00f3s\u00edt\u00e1s","text":"<p>Az asztali alkalmaz\u00e1st az \u00e1llatkerti dolgoz\u00f3k haszn\u00e1lj\u00e1k, \u00edgy itt lehessen - \u00f6r\u00f6kbefogad\u00f3kat szerkeszteni, t\u00f6r\u00f6lni, list\u00e1zni - \u00e1llatokat hozz\u00e1adni, szerkeszteni, t\u00f6r\u00f6lni, list\u00e1zni - az \u00f6r\u00f6kbefogad\u00e1sokat list\u00e1zni, sz\u0171rni</p> <p>A webes alkalmaz\u00e1s a l\u00e1togat\u00f3knak sz\u00f3l, \u00edgy itt lehessen</p> <ul> <li>\u00f6r\u00f6kbefogad\u00f3k\u00e9nt regisztr\u00e1lni (kv\u00e1zi \u00f6r\u00f6kbefogad\u00f3 hozz\u00e1ad\u00e1sa)</li> <li>\u00f6r\u00f6kbefogadni</li> <li>\u00e1llatokat list\u00e1zni, sz\u0171rni</li> </ul>"},{"location":"kotprog/amoba/","title":"Am\u0151ba","text":"<p>A feladat az am\u0151ba j\u00e1t\u00e9k megval\u00f3s\u00edt\u00e1sa.</p>"},{"location":"kotprog/amoba/#kovetelmenyek-asztali-es-web","title":"K\u00f6vetelm\u00e9nyek (asztali \u00e9s web)","text":"<ul> <li>T\u00e1mogatni kell a k\u00f6vetkez\u0151 j\u00e1t\u00e9km\u00f3dokat<ul> <li>J\u00e1t\u00e9kos j\u00e1t\u00e9kos ellen j\u00e1tszhasson<ul> <li>Asztali alkalmaz\u00e1s eset\u00e9n ak\u00e1r egy ablakon bel\u00fcl</li> <li>Webes alkalmaz\u00e1s eset\u00e9n ,,t\u00e1volr\u00f3l''</li> </ul> </li> <li>Egy j\u00e1t\u00e9kos egy g\u00e9p ellen j\u00e1tszhasson<ul> <li>Az algoritmus lehet v\u00e9letlenszer\u0171 l\u00e9p\u00e9s is</li> </ul> </li> </ul> </li> <li>Egyedi t\u00e1blam\u00e9ret (min: 10x10)</li> <li>Id\u0151korl\u00e1t (ami a j\u00e1t\u00e9k el\u0151tt meg lehet adni)<ul> <li>A j\u00e1t\u00e9kosoknak csak megadott m\u00e1sodpercnyi ideje van egy l\u00e9p\u00e9sre</li> <li>A j\u00e1t\u00e9kosoknak a teljes j\u00e1t\u00e9kra van egy id\u0151korl\u00e1tja</li> </ul> </li> <li>A parti elment\u00e9se<ul> <li>A l\u00e9p\u00e9seket el kell t\u00e1rolni adatb\u00e1zisban is, hogy k\u00e9s\u0151bb visszaj\u00e1tszhat\u00f3 legyen egy-egy parti</li> </ul> </li> </ul>"},{"location":"kotprog/cgol/","title":"Conway's Game of Life","text":"<p>A feladat megalkotni egy k\u00e9t j\u00e1t\u00e9kossal j\u00e1tszhat\u00f3 verzi\u00f3j\u00e1t a fenti evol\u00faci\u00f3s j\u00e1t\u00e9knak.</p>"},{"location":"kotprog/cgol/#a-program-minimalis-elvarasai-default-asztali-vagy-web","title":"A program minim\u00e1lis elv\u00e1r\u00e1sai (default: asztali vagy web)","text":"<ul> <li>Egy olyan men\u00fc fejleszt\u00e9se, ahol lehet\u0151s\u00e9geink vannak a k\u00f6vetkez\u0151kre:<ul> <li>j\u00e1t\u00e9k ind\u00edt\u00e1sa</li> <li>toplista megtekint\u00e9se (asztali \u00e9s web)</li> <li>opci\u00f3k men\u00fc (default: asztali \u00e9s web)<ul> <li>j\u00e1t\u00e9kt\u00e9r m\u00e9ret\u00e9nek megad\u00e1sa, pl.: 100x60</li> <li>egyes j\u00e1t\u00e9kosok sz\u00edneinek kiv\u00e1laszt\u00e1si lehet\u0151s\u00e9ge</li> <li>felk\u00e9sz\u00fcl\u0151 k\u00f6r hossz\u00e1nak be\u00e1ll\u00edt\u00e1sa: egy sz\u00e1m, amely jelzi, hogy h\u00e1ny k\u00f6r \u00e1ll rendelkez\u00e9sre az egyes j\u00e1t\u00e9kosok sz\u00e1m\u00e1ra, miel\u0151tt a j\u00e1t\u00e9k t\u00e9nylegesen kezd\u0151dne</li> <li>egy hat\u00e1r pontsz\u00e1m megad\u00e1sa melynek el\u00e9r\u00e9sek\u00f6r a j\u00e1t\u00e9kos gy\u0151z</li> <li>opcion\u00e1lisan egy max. k\u00f6r sz\u00e1m, mely el\u00e9r\u00e9sekor a j\u00e1t\u00e9knak v\u00e9ge \u00e9s a t\u00f6bb ponttal rendelkez\u0151 j\u00e1t\u00e9kos gy\u0151z (ha nincs megadva vagy 0, akkor ne legyen limit)</li> </ul> </li> <li>kil\u00e9p\u00e9s</li> </ul> </li> <li>J\u00e1t\u00e9kt\u00e9r kirajzol\u00e1sa az opci\u00f3knak megfelel\u0151en.</li> <li>A felhaszn\u00e1l\u00f3 sz\u00e1m\u00e1ra jelezz\u00fck, hogy melyik player k\u00f6vetkezik.</li> <li>Legyenek \u00fan. felk\u00e9sz\u00fcl\u0151 k\u00f6r\u00f6k (preliminary rounds), ahol a j\u00e1t\u00e9kosok (felv\u00e1ltva) a megadott sz\u00e1m\u00fa k\u00f6r\u00f6k\u00f6n kereszt\u00fcl egys\u00e9geket helyezhetnek el a t\u00e9rk\u00e9pen, \u00e9s a \"game of life\" csak ezut\u00e1n kezd\u0151dik.</li> <li>J\u00e1t\u00e9k sor\u00e1n egyszer az egyik j\u00e1t\u00e9kos rakja le saj\u00e1t egys\u00e9g\u00e9t a t\u00e9rk\u00e9pre, majd a m\u00e1sodik j\u00e1t\u00e9kos. A t\u00e9rk\u00e9pet minden l\u00e9p\u00e9s sor\u00e1n friss\u00edteni kell (kiv\u00e9ve a felk\u00e9sz\u00fcl\u0151 k\u00f6r\u00f6k sor\u00e1n)!</li> <li>A halott cella \u00e9l\u0151 cell\u00e1ba val\u00f3 \u00e1tmenetkor a sz\u00fclet\u0151 cella sz\u00edn\u00e9t (azaz, hogy melyik j\u00e1t\u00e9koshoz tartozik az hat\u00e1rozza meg, hogy kinek volt t\u00f6bb cell\u00e1ja a k\u00f6rnyezet\u00e9ben).</li> <li>A j\u00e1t\u00e9knak v\u00e9ge, ha az egyik j\u00e1t\u00e9kos gy\u0151z, illetve akkor is v\u00e9ge, ha valaki egys\u00e9gei teljesen kipusztulnak.</li> </ul>"},{"location":"kotprog/cgol/#tovabbi-kotelezo-funkcionalitasok-default-asztali-vagy-web","title":"Tov\u00e1bbi k\u00f6telez\u0151 funkcionalit\u00e1sok (default: asztali vagy web)","text":"<ul> <li>Egy olyan \u00fan. \"playground\" lehet\u0151s\u00e9g biztos\u00edt\u00e1sa, ahol a felhaszn\u00e1l\u00f3 megtekintheti, hogy hogyan fejl\u0151dnek egyes alakzatok az id\u0151 (avagy k\u00f6r\u00f6k) haladt\u00e1val. (speci\u00e1lis alakzatokra evvel tesztelhetj\u00fck is, hogy j\u00f3l m\u0171k\u00f6dik-e a j\u00e1t\u00e9kunk, l\u00e1sd: hasznos link) (default: asztali \u00e9s web)</li> <li>Skillek melyek k\u00f6z\u00fcl a j\u00e1t\u00e9kos az adott k\u00f6rben t\u00f6bbet is aktiv\u00e1lhat (teh\u00e1t a skillek aktiv\u00e1l\u00e1sa nem min\u0151s\u00fcl l\u00e9p\u00e9snek):<ul> <li>hibern\u00e1ci\u00f3: Ezen k\u00e9pess\u00e9g haszn\u00e1latakor a j\u00e1t\u00e9kos egys\u00e9gei nem friss\u00fclnek adott sz\u00e1m\u00fa k\u00f6r\u00f6n kereszt\u00fcl (pl. 3 k\u00f6r erej\u00e9ig). Ez azt jelenti, hogy a j\u00e1t\u00e9kos egys\u00e9gei se nem pusztulnak, se nem gyarapodnak ez id\u0151 alatt.</li> <li>r\u00e1k: A j\u00e1t\u00e9kszab\u00e1lyok szerint, ha egy halott cell\u00e1nak h\u00e1rom \u00e9l\u0151 szomsz\u00e9dja van, akkor a k\u00f6vetkez\u0151 k\u00f6rben a halott cella \u00e9letre kell. Az ilyen m\u00f3don sz\u00fcletett cella az\u00e9 a j\u00e1t\u00e9kos\u00e9, akinek t\u00f6bb (azaz kett\u0151) cell\u00e1ja volt a halott cella k\u00f6rnyezet\u00e9ben. A r\u00e1k skill haszn\u00e1latakor azonban az \u00fajonnan sz\u00fclet\u0151 cell\u00e1t az a j\u00e1t\u00e9kos kapja, akinek legal\u00e1bb egy cell\u00e1ja van ennek k\u00f6rnyezet\u00e9ben \u00e9s a m\u00e1sik j\u00e1t\u00e9kosn\u00e1l nem akt\u00edv ugyanezen skill (ekkor az eredeti szab\u00e1lyok vannak \u00e9rv\u00e9nyben).</li> <li>sz\u00edv\u00f3ss\u00e1g: A skill aktivit\u00e1s\u00e1nak ideje alatt az adott j\u00e1t\u00e9koshoz tartoz\u00f3 cell\u00e1k nem halhatnak bele a t\u00faln\u00e9pesed\u00e9sbe (overpopulation).</li> <li>felfedez\u0151: A skill aktivit\u00e1si ideje alatt a j\u00e1t\u00e9kos cell\u00e1i nem halnak bele aluln\u00e9pesed\u00e9sbe (underpopulation).</li> </ul> </li> </ul>"},{"location":"kotprog/cgol/#opcionalis-kovetelmenyek-default-asztali-vagy-web","title":"Opcion\u00e1lis k\u00f6vetelm\u00e9nyek (default: asztali vagy web)","text":"<ul> <li>G\u00e9pi j\u00e1t\u00e9kos fejleszt\u00e9se - single player m\u00f3d. (lehet random gener\u00e1l\u00e1son alapul\u00f3 is)</li> </ul> <p>hasznos link:</p> <ul> <li>Conway's Game of Life</li> </ul> <p>Az egyes al-list\u00e1k k\u00f6vetelm\u00e9nyein\u00e9l a legm\u00e9lyebb default \u00e9rv\u00e9nyes.</p>"},{"location":"kotprog/chat/","title":"Chat program","text":"<p>A feladat egy chat program megval\u00f3s\u00edt\u00e1sa, ahol a bel\u00e9pett felhaszn\u00e1l\u00f3k cseveghetnek egym\u00e1ssal. Nem kell val\u00f3s id\u0151ben megjelen\u00edteni az \u00fczeneteket, el\u00e9g ha friss\u00edt\u00e9skor m\u00e1r az \u00faj \u00fczeneteket is l\u00e1thatjuk.</p>"},{"location":"kotprog/chat/#felhasznalok","title":"Felhaszn\u00e1l\u00f3k","text":"<p>Az alkalmaz\u00e1s tudjon kezelni felhaszn\u00e1l\u00f3kat:</p> <ul> <li>minden felhaszn\u00e1l\u00f3 rendelkezzen egy nickn\u00e9vvel</li> <li>meg lehessen adni \u00e9letkort</li> <li>nemet</li> <li>\u00e9rdekl\u0151d\u00e9si k\u00f6rt</li> </ul> <p>Ez azt is jelenti, hogy az alkalmaz\u00e1sban lehessen regisztr\u00e1lni \u00e9s bejelentkezni.</p>"},{"location":"kotprog/chat/#szobak","title":"Szob\u00e1k","text":"<p>A chatprogramon bel\u00fcl legyenek k\u00fcl\u00f6nb\u00f6z\u0151 szob\u00e1k, a felhaszn\u00e1l\u00f3knak legyen lehet\u0151s\u00e9g\u00fck v\u00e1ltani a szob\u00e1k k\u00f6z\u00f6tt. Egy chatszob\u00e1nak legyen:</p> <ul> <li>neve</li> <li>szab\u00e1lyai</li> <li>kateg\u00f3ri\u00e1ja</li> </ul>"},{"location":"kotprog/chat/#beszelgetes","title":"Besz\u00e9lget\u00e9s","text":"<p>A besz\u00e9lget\u00e9sek historyja legyen elmentve adatb\u00e1zisba, ehhez csatlakozzon az alkalmaz\u00e1s. </p> <p>A besz\u00e9lget\u00e9sben lehessen k\u00fcldeni sima \u00fczenetet \u00e9s k\u00e9pet. Opcion\u00e1lisan form\u00e1zott sz\u00f6veget (d\u0151lt bet\u0171, f\u00e9lk\u00f6v\u00e9r), smiley-t.</p>"},{"location":"kotprog/chat/#adatkezeles","title":"Adatkezel\u00e9s","text":"<p>Egy sima felhaszn\u00e1l\u00f3 tudjon:</p> <ul> <li>keresni a szob\u00e1k k\u00f6z\u00f6tt n\u00e9v \u00e9s kateg\u00f3ria alapj\u00e1n</li> <li>keresni a felhaszn\u00e1l\u00f3k k\u00f6z\u00f6tt n\u00e9v \u00e9s \u00e9rdekl\u0151d\u00e9si k\u00f6r alapj\u00e1n</li> </ul> <p>Az alkalmaz\u00e1shoz tartozzon egy admin fel\u00fclet, az adminnak legyen joga a k\u00f6vetkez\u0151kh\u00f6z:</p> <ul> <li>felhaszn\u00e1l\u00f3k \u00e9s chatszob\u00e1k t\u00f6rl\u00e9se</li> </ul>"},{"location":"kotprog/chat/#megvalositas","title":"Megval\u00f3s\u00edt\u00e1s","text":"<p>Az alkalmaz\u00e1s rendelkezzen egy webes fel\u00fclettel. A webes fel\u00fcleten a felhaszn\u00e1l\u00f3k tudjanak regisztr\u00e1lni \u00e9s bejelentkezni, chatelni egym\u00e1ssal, illetve keresni a szob\u00e1k \u00e9s a felhaszn\u00e1l\u00f3k k\u00f6z\u00f6tt a fenti le\u00edr\u00e1s alapj\u00e1n. Nem kell val\u00f3s id\u0151ben megjelen\u00edteni az \u00fczeneteket, el\u00e9g ha friss\u00edt\u00e9skor m\u00e1r az \u00faj \u00fczeneteket is l\u00e1thatjuk. Ezen k\u00edv\u00fcl az alkalmaz\u00e1s rendelkezzen m\u00e9g egy admin fel\u00fclettel is, ez egy asztali alkalmaz\u00e1s legyen. Itt a felhaszn\u00e1l\u00f3kat \u00e9s a szob\u00e1kat lehessen list\u00e1zni \u00e9s t\u00f6r\u00f6lni.</p>"},{"location":"kotprog/csapat/","title":"Csapat","text":"<p>A feladat egy focicsapat j\u00e1t\u00e9kosait \u00e9s meccseit kezel\u0151 szoftver kifejleszt\u00e9se.</p>"},{"location":"kotprog/csapat/#adat-rogzito-muveletek-asztali","title":"Adat r\u00f6gz\u00edt\u0151 m\u0171veletek (asztali)","text":"<p>A programnak az al\u00e1bbi funkci\u00f3kat kell t\u00e1mogatnia a megfelel\u0151 fel\u00fcleteken kereszt\u00fcl, az adatok adatb\u00e1zisban t\u00f6rt\u00e9n\u0151 t\u00e1rol\u00e1s\u00e1val:</p> <ul> <li>Csapat \u00e9s j\u00e1t\u00e9kos l\u00e9trehoz\u00e1sa<ul> <li>J\u00e1t\u00e9kos eset\u00e9n t\u00e1roland\u00f3 adatok:<ul> <li>N\u00e9v</li> <li>Poz\u00edci\u00f3</li> <li>Sz\u00fclet\u00e9s \u00e9ve</li> <li>A j\u00e1t\u00e9kos kor\u00e1bbi \u00e9s aktu\u00e1lis csapatai</li> </ul> </li> <li>Csapat eset\u00e9n t\u00e1roland\u00f3 adatok:<ul> <li>Csapat neve</li> <li>Csapat sikerei (pl: 2018 BL gy\u0151zelem)</li> <li>Csapat aktu\u00e1lis j\u00e1t\u00e9kosai</li> <li>Csapat nemzetis\u00e9ge</li> </ul> </li> </ul> </li> </ul>"},{"location":"kotprog/csapat/#adat-lekerdezo-es-modosito-muveletek-asztali-es-web","title":"Adat lek\u00e9rdez\u0151 \u00e9s m\u00f3dos\u00edt\u00f3 m\u0171veletek (asztali \u00e9s web)","text":"<p>Az al\u00e1bbi lek\u00e9rdez\u0151 \u00e9s m\u00f3dos\u00edt\u00f3 funkci\u00f3k sz\u00fcks\u00e9gesek:</p> <ul> <li>Csapatok list\u00e1z\u00e1sa<ul> <li>Minden adat list\u00e1z\u00e1sa</li> <li>Nemzetis\u00e9gre sz\u0171rt lista</li> </ul> </li> <li>J\u00e1t\u00e9kosok list\u00e1z\u00e1sa<ul> <li>Minden adat list\u00e1z\u00e1sa</li> <li>Adott csapat j\u00e1t\u00e9kosainak list\u00e1z\u00e1sa</li> </ul> </li> <li>Csapatok \u00e9s j\u00e1t\u00e9kosok m\u00f3dos\u00edt\u00e1sa</li> </ul>"},{"location":"kotprog/csapat/#interaktiv-funkciok-web","title":"Interakt\u00edv funkci\u00f3k (web)","text":"<p>A csapat kezel\u0151 alkalmaz\u00e1s az al\u00e1bbi interakt\u00edv funkci\u00f3kat tartalmazza:</p> <ul> <li>Csapat tagjainak sz\u00f6veges \u00fczenet k\u00fcld\u00e9se (ki kell v\u00e1lasztani, hogy csapaton bel\u00fcl ki k\u00fcldi, kinek)</li> <li>Adott j\u00e1t\u00e9kos \u00fczeneteinek megtekint\u00e9se</li> <li>M\u00e9rk\u0151z\u00e9sek l\u00e9trehoz\u00e1sa<ul> <li>M\u00e9rk\u0151z\u00e9s tulajdons\u00e1gai<ul> <li>Id\u0151pont</li> <li>B\u00edr\u00f3</li> <li>Helysz\u00edn</li> <li>Hazai csapat</li> <li>Ellenf\u00e9l (csapat)</li> <li>Eredm\u00e9ny:<ul> <li>J\u00e1tsz\u00f3 j\u00e1t\u00e9kosok</li> </ul> </li> <li>G\u00f3lszerz\u0151(k)</li> <li>Fot\u00f3k a m\u00e9rk\u0151z\u00e9sr\u0151l (opcion\u00e1lis)</li> <li>Utaz\u00e1si inform\u00e1ci\u00f3k</li> </ul> </li> </ul> </li> <li>Eredm\u00e9nyek r\u00f6gz\u00edt\u00e9se (v\u00e9geredm\u00e9ny, ki l\u0151tte a g\u00f3lt, l\u00e1sd lentebb a tulajdons\u00e1gokat)</li> <li>Eddigi m\u00e9rk\u0151z\u00e9s eredm\u00e9nyeinek megtekint\u00e9se</li> </ul>"},{"location":"kotprog/csapat/#opcionalisan-megvalosithato-elemek-asztali-vagy-web","title":"Opcion\u00e1lisan megval\u00f3s\u00edthat\u00f3 elemek (asztali vagy web)","text":"<ul> <li>Komplexebb lek\u00e9rdez\u00e9sek t\u00e1mogat\u00e1sa<ul> <li>Csapat eddigi eredm\u00e9nyei</li> <li>Eddigi g\u00f3lszerz\u0151k (\u00f6sszes\u00edtett lista/csapatonk\u00e9nt)</li> <li>Hazai meccsek eredm\u00e9nyei, idegenbeli meccsek eredm\u00e9nyei</li> </ul> </li> </ul> <ul> <li> <p>Adatok import\u00e1l\u00e1si lehet\u0151s\u00e9ge XML-b\u0151l</p> <ul> <li>Egy XML f\u00e1jlb\u00f3l csapatok \u00e9s/vagy j\u00e1t\u00e9kosok adatainak bet\u00f6lt\u00e9se a rendszerbe</li> </ul> </li> </ul> <ul> <li>Eredm\u00e9nyek export\u00e1l\u00e1sa XML f\u00e1jlba</li> </ul>"},{"location":"kotprog/kerdoiv/","title":"K\u00e9rd\u0151\u00edv","text":"<p>A feladat egy k\u00e9rd\u0151\u00edv k\u00e9sz\u00edt\u0151 \u00e9s kit\u00f6lt\u0151 program k\u00e9sz\u00edt\u00e9se.</p>"},{"location":"kotprog/kerdoiv/#asztali-alkalmazas-funkcioi","title":"Asztali alkalmaz\u00e1s funkci\u00f3i","text":"<ul> <li>K\u00e9rd\u00e9s kezel\u00e9se<ul> <li>K\u00e9rd\u00e9snek van egy le\u00edr\u00e1sa (k\u00e9rd\u00e9s)</li> <li>K\u00e9rd\u00e9shez tartozhat k\u00e9p (opcion\u00e1lis)</li> <li>V\u00e1lasz t\u00edpusok<ul> <li>egyszer\u0171 sz\u00f6veges v\u00e1lasz</li> <li>t\u00f6bb v\u00e1laszlehet\u0151s\u00e9g k\u00f6z\u00fcl egyet lehet kiv\u00e1lasztani</li> <li>t\u00f6bb v\u00e1laszlehet\u0151s\u00e9g k\u00f6z\u00fcl t\u00f6bbet lehet kiv\u00e1lasztani</li> <li>d\u00e1tumot lehet megadni</li> <li>Eg\u00e9sz sz\u00e1mot lehet megadni</li> </ul> </li> </ul> </li> <li>K\u00e9rd\u00e9ssor \u00f6ssze\u00e1ll\u00edt\u00e1sa sor\u00e1n<ul> <li>Egy vagy t\u00f6bb k\u00e9rd\u00e9st lehet megadni</li> <li>K\u00e9rd\u00e9ssornak van kit\u00f6lt\u00e9si intervalluma, amikor kit\u00f6lthet\u0151</li> <li>Maxim\u00e1lis kit\u00f6lt\u00e9si id\u0151</li> <li>K\u00e9rd\u00e9ssort csak a l\u00e9trehoz\u00f3 szerkeszthet</li> <li>H\u00e1nyszor lehet kit\u00f6lteni</li> <li>Link, hogy a k\u00e9rd\u00e9ssor hol \u00e9rhet\u0151 el</li> </ul> </li> </ul> <ul> <li>K\u00e9rd\u00e9ssor list\u00e1z\u00e1s<ul> <li>Sz\u0171r\u00e9si lehet\u0151s\u00e9g: lej\u00e1rt, aktu\u00e1lis, j\u00f6v\u0151beni, kit\u00f6lt\u00f6tt</li> <li>Csak a k\u00e9rd\u00e9ssor felt\u00e9telei \u00e1ltal megjelen\u00edthet\u0151 k\u00e9rd\u00e9ssorokat kell megjelen\u00edteni.</li> </ul> </li> </ul> <ul> <li>Az adatokat adatb\u00e1zisba kell t\u00e1rolni</li> </ul> <ul> <li>Eredm\u00e9nyek megtekint\u00e9se<ul> <li>Kit\u00f6lt\u00e9senk\u00e9nt</li> <li>Statisztika a v\u00e1laszokr\u00f3l (ahol ennek van \u00e9rtelme)</li> <li>Eredm\u00e9nyeket csv form\u00e1tumba ki tudja menteni.</li> </ul> </li> </ul>"},{"location":"kotprog/kerdoiv/#webes-alkalmazas-funkcioi","title":"Webes alkalmaz\u00e1s funkci\u00f3i","text":"<ul> <li>K\u00e9rd\u00e9ssor kit\u00f6lt\u00e9se<ul> <li>Csak akkor lehets\u00e9ges, ha a k\u00e9rd\u00e9ssor felt\u00e9telei teljes\u00fclnek</li> <li>R\u00f6gz\u00edteni kell a kit\u00f6lt\u0151 nev\u00e9t \u00e9s a kit\u00f6lt\u00e9s id\u0151pontj\u00e1t</li> <li>K\u00e9rd\u00e9ssort nem lehet folytatni</li> </ul> </li> </ul>"},{"location":"kotprog/kerdoiv/#opcionalisan-megvalosithato-elemek","title":"Opcion\u00e1lisan megval\u00f3s\u00edthat\u00f3 elemek","text":"<ul> <li>K\u00e9rd\u00e9ssor folytat\u00e1s\u00e1nak lehet\u0151s\u00e9ge</li> <li>R\u00f6gz\u00edteni a sz\u00e1m\u00edt\u00f3g\u00e9p ip c\u00edm\u00e9t is</li> <li>Eredm\u00e9nyek statisztikai kimutat\u00e1sa grafikonos \u00e1br\u00e1zol\u00e1ssal</li> </ul>"},{"location":"kotprog/mozi/","title":"Mozi jegyfoglal\u00f3 alkalmaz\u00e1s","text":"<p>A feladat egy mozi jegyfoglal\u00f3 rendszer kifejleszt\u00e9se. Az alkalmaz\u00e1st k\u00e9t r\u00e9szre kell osztani: egy asztali \u00e9s egy webes alkalmaz\u00e1sra. Az asztali alkalmaz\u00e1s szolg\u00e1l az adminisztrat\u00edv feladatok ell\u00e1t\u00e1s\u00e1ra, m\u00edg a webes kliens csup\u00e1n azt hivatott szolg\u00e1lni, hogy a rendszerben foglal\u00e1sokat tudjuk l\u00e9trehozni.</p>"},{"location":"kotprog/mozi/#adminisztrativ-funkciok-asztali","title":"Adminisztrat\u00edv funkci\u00f3k (asztali)","text":"<ul> <li>Mozi termeinek menedzsel\u00e9se<ul> <li>Funkci\u00f3k:<ul> <li>\u00daj terem hozz\u00e1ad\u00e1sa</li> <li>Terem m\u00f3dos\u00edt\u00e1s</li> <li>Terem t\u00f6rl\u00e9se</li> <li>Termek list\u00e1z\u00e1sa</li> </ul> </li> <li>Egy terem tulajdons\u00e1gai<ul> <li>Egyedi azonos\u00edt\u00f3 (pl: n\u00e9v)</li> <li>Sorok sz\u00e1ma</li> <li>Oszlopok sz\u00e1ma</li> </ul> </li> <li>Egy terem csak t\u00e9glalap alak\u00fa elrendez\u00e9st k\u00f6vethet jelen esetben</li> <li>Egy teremben tal\u00e1lhat\u00f3 sz\u00e9keket automatikusan sz\u00e1mozzuk</li> </ul> </li> <li>Filmek menedzsel\u00e9se<ul> <li>M\u0171veletek:<ul> <li>\u00daj film hozz\u00e1ad\u00e1sa</li> <li>Film t\u00f6rl\u00e9se</li> <li>Film m\u00f3dos\u00edt\u00e1sa</li> <li>Filmek list\u00e1z\u00e1sa \u00e9s keres\u00e9se a tulajdons\u00e1gok alapj\u00e1n</li> <li>Vet\u00edt\u00e9si be\u00e1ll\u00edt\u00e1sok<ul> <li>A filmet melyik napon, h\u00e1ny \u00f3rakor \u00e9s melyik teremben j\u00e1tsz\u00e1k</li> </ul> </li> </ul> </li> <li>Filmek tulajdons\u00e1gai<ul> <li>C\u00edm</li> <li>Hossz (percben megadva)</li> <li>Korhat\u00e1r</li> <li>Rendez\u0151</li> <li>Szerepl\u0151k</li> <li>Le\u00edr\u00e1s</li> <li>Bor\u00edt\u00f3k\u00e9p</li> </ul> </li> </ul> </li> <li>Jegy\u00e1rak be\u00e1ll\u00edt\u00e1sa, amely f\u00fcgghet<ul> <li>a filmt\u0151l,</li> <li>a vet\u00edt\u00e9s id\u0151pontj\u00e1t\u00f3l (pl. d\u00e9lel\u0151tt olcs\u00f3bb, mint az esti \u00f3r\u00e1kban),</li> <li>az \u00fcl\u0151helyt\u0151l</li> </ul> </li> <li>Foglal\u00e1sok megtekint\u00e9se/m\u00f3dos\u00edt\u00e1sa (amit a felhaszn\u00e1l\u00f3k fel\u00fcletr\u0151l hoztak l\u00e9tre)</li> </ul>"},{"location":"kotprog/mozi/#foglalasok-kezelese-web","title":"Foglal\u00e1sok kezel\u00e9se (web)","text":"<ul> <li>Funkci\u00f3k:<ul> <li>\u00daj foglal\u00e1s (film/id\u0151pont alapj\u00e1n)</li> <li>Foglal\u00e1s t\u00f6rl\u00e9se</li> <li>Foglal\u00e1s m\u00f3dos\u00edt\u00e1sa (szem\u00e9lyek sz\u00e1ma/jegy t\u00edpus/foglalt \u00fcl\u0151hely)</li> <li>Foglal\u00e1sok list\u00e1z\u00e1sa \u00e9s keres\u00e9se a tulajdons\u00e1gok alapj\u00e1n</li> </ul> </li> <li>Foglal\u00e1s tulajdons\u00e1gai:<ul> <li>Foglal\u00f3 szem\u00e9ly neve</li> <li>Melyik vet\u00edt\u00e9sre foglal</li> <li>Melyik helyeket foglalta</li> <li>\u00d6sszesen mennyibe ker\u00fcl a foglal\u00e1s</li> </ul> </li> </ul> <p>A felhaszn\u00e1l\u00f3 egy adott vet\u00edt\u00e9sre tud helyeket foglalni, ahol l\u00e1tja az adott foglalts\u00e1gi \u00e1llapotot. A felhaszn\u00e1l\u00f3 a vet\u00edt\u00e9s el\u0151tt 24 \u00f3r\u00e1val tudja csak lemondani foglal\u00e1st, m\u00f3dos\u00edtani viszont tudja a foglal\u00e1s\u00e1t (az adott vet\u00edt\u00e9sen bel\u00fcl, teh\u00e1t \u00faj helyet/helyeket foglalhat). A webes fel\u00fcleten ki kell list\u00e1zni, hogy milyen aktu\u00e1lis filmek vannak, mely list\u00e1b\u00f3l egy kiv\u00e1laszt\u00e1sa eset\u00e9n a film vet\u00edt\u00e9seit l\u00e1thatjuk. A vet\u00edt\u00e9s kiv\u00e1laszt\u00e1sakor t\u00e1rul a felhaszn\u00e1l\u00f3 el\u00e9 a foglal\u00e1si fel\u00fclet.</p>"},{"location":"kotprog/mozi/#opcionalisan-megvalosithato-elemek-asztali-vagy-web","title":"Opcion\u00e1lisan megval\u00f3s\u00edthat\u00f3 elemek (asztali vagy web)","text":"<ul> <li>Foglal\u00e1si fel\u00fcleten a helyek kiv\u00e1laszt\u00e1sa vizu\u00e1lisan, egy \u00fcl\u00e9s t\u00e9rk\u00e9p seg\u00edts\u00e9g\u00e9vel t\u00f6rt\u00e9njen</li> <li>Az asztali fel\u00fcleten legyen lehet\u0151s\u00e9g alapadatok (pl. filmek, vet\u00edt\u00e9si id\u0151pontok) XML f\u00e1jlb\u00f3l t\u00f6rt\u00e9n\u0151 import\u00e1l\u00e1s\u00e1ra</li> <li>Az asztali fel\u00fcleten legyen lehet\u0151s\u00e9g a foglal\u00e1si adatok XML f\u00e1jlba t\u00f6rt\u00e9n\u0151 export\u00e1l\u00e1s\u00e1ra</li> <li>A webes fel\u00fcleten az egyes filmekhez (ha el van t\u00e1rolva az adatb\u00e1zisban) jelen\u00edts\u00fcnk meg trailer vide\u00f3 linkeket</li> </ul>"},{"location":"kotprog/nyulacska/","title":"Nyulacska","text":"<p>A feladat egy Nyulacska alkalmaz\u00e1s meg\u00edr\u00e1sa, ahol k\u00e9t j\u00e1t\u00e9kos tud egym\u00e1s ellen j\u00e1tszani.</p>"},{"location":"kotprog/nyulacska/#a-program-minimalis-elvarasai-asztali-vagy-web","title":"A program minim\u00e1lis elv\u00e1r\u00e1sai (asztali vagy web)","text":"<ul> <li>A sakkt\u00e1bla \u00e9s a figur\u00e1k kirajzol\u00e1sa</li> <li>A parti elej\u00e9n a b\u00e1buk a kezd\u0151 \u00e1llapotba ker\u00fclnek</li> <li>L\u00e9p\u00e9sek szab\u00e1lyoss\u00e1g\u00e1nak ellen\u0151rz\u00e9se</li> <li>A partinak ,,v\u00e9ge\":<ul> <li>A fekete akkor nyer, ha siker\u00fcl a feh\u00e9ret k\u00f6rbe vennie, hogy az sehov\u00e1 ne tudjon l\u00e9pni. A feh\u00e9r akkor nyer, ha el\u00e9ri a fekete alapsor\u00e1t.</li> <li>Valamelyik f\u00e9l feladhatja, ilyenkor automatikusan a m\u00e1sik f\u00e9l nyert</li> <li>Az egyik f\u00e9l d\u00f6ntetlent aj\u00e1nl, \u00e9s a m\u00e1sik ezt elfogadja</li> </ul> </li> </ul>"},{"location":"kotprog/nyulacska/#tovabbi-kotelezo-funkcionalitasok","title":"Tov\u00e1bbi k\u00f6telez\u0151 funkcionalit\u00e1sok","text":"<ul> <li>A j\u00e1t\u00e9kosok megadhatj\u00e1k a nev\u00fcket</li> <li>A l\u00e9p\u00e9sek megad\u00e1s\u00e1ra t\u00f6bbf\u00e9le megold\u00e1s k\u00f6z\u00fcl v\u00e1laszthat a fejleszt\u0151, p\u00e9ld\u00e1ul:<ul> <li>A j\u00e1t\u00e9kos eg\u00e9rrel kijel\u00f6li, hogy melyik mez\u0151r\u0151l melyik mez\u0151re l\u00e9p</li> <li>Beviteli mez\u0151ben megadja, honnan hova l\u00e9p</li> </ul> </li> <li>A partit el lehessen menteni egy adatb\u00e1zisba<ul> <li>A j\u00e1t\u00e9kosok nev\u00e9t \u00e9s az eredm\u00e9nyt el kell t\u00e1rolni</li> </ul> </li> <li>Ki lehessen list\u00e1zni, hogy ki kivel j\u00e1tszott, \u00e9s mi lett az eredm\u00e9nye (asztali \u00e9s web)</li> <li>Lehessen keresni az elmentett partik k\u00f6z\u00f6tt (asztali \u00e9s web)<ul> <li>N\u00e9v, eredm\u00e9ny, d\u00e1tum, ... alapj\u00e1n</li> <li>Le lehessen j\u00e1tszani a partit</li> </ul> </li> </ul>"},{"location":"kotprog/nyulacska/#opcionalis-kovetelmenyek","title":"Opcion\u00e1lis k\u00f6vetelm\u00e9nyek","text":"<ul> <li>Be lehessen t\u00f6lteni \u00e9s le lehessen j\u00e1tszani<ul> <li>L\u00e9p\u00e9sr\u0151l l\u00e9p\u00e9sre meg lehessen n\u00e9zni a partit</li> </ul> </li> <li>A rendszer biztos\u00edtsa a sakk\u00f3ra haszn\u00e1lat\u00e1t<ul> <li>Be lehessen \u00e1ll\u00edtani, hogy h\u00e1ny perces a parti, \u00e9s minden l\u00e9p\u00e9sn\u00e9l automatikusan v\u00e1ltson is \u00e1t</li> </ul> </li> </ul>"},{"location":"kotprog/paraszthaboru/","title":"Paraszth\u00e1bor\u00fa","text":"<p>A feladat egy Paraszth\u00e1bor\u00fa alkalmaz\u00e1s meg\u00edr\u00e1sa, ahol k\u00e9t j\u00e1t\u00e9kos tud egym\u00e1s ellen j\u00e1tszani.</p>"},{"location":"kotprog/paraszthaboru/#a-program-minimalis-elvarasai-asztali-vagy-web","title":"A program minim\u00e1lis elv\u00e1r\u00e1sai (asztali vagy web)","text":"<ul> <li>A sakkt\u00e1bla \u00e9s a figur\u00e1k kirajzol\u00e1sa</li> <li>A parti elej\u00e9n a b\u00e1buk a kezd\u0151 \u00e1llapotba ker\u00fclnek</li> <li>L\u00e9p\u00e9sek szab\u00e1lyoss\u00e1g\u00e1nak ellen\u0151rz\u00e9se</li> <li>A partinak ,,v\u00e9ge\":<ul> <li>Az gy\u0151z, aki el\u0151bb \u00e9r \u00e1t valamennyi figur\u00e1j\u00e1val a t\u00e1bla m\u00e1sik oldal\u00e1ra. Ha ugyanabban a l\u00e9p\u00e9sp\u00e1rban \u00e9r be mindkett\u0151, a j\u00e1t\u00e9k d\u00f6ntetlen.</li> <li>Valamelyik f\u00e9l feladhatja, ilyenkor automatikusan a m\u00e1sik f\u00e9l nyert</li> <li>Az egyik f\u00e9l d\u00f6ntetlent aj\u00e1nl, \u00e9s a m\u00e1sik ezt elfogadja</li> </ul> </li> </ul>"},{"location":"kotprog/paraszthaboru/#tovabbi-kotelezo-funkcionalitasok","title":"Tov\u00e1bbi k\u00f6telez\u0151 funkcionalit\u00e1sok","text":"<ul> <li>A j\u00e1t\u00e9kosok megadhatj\u00e1k a nev\u00fcket</li> <li>A l\u00e9p\u00e9sek megad\u00e1s\u00e1ra t\u00f6bbf\u00e9le megold\u00e1s k\u00f6z\u00fcl v\u00e1laszthat a fejleszt\u0151, p\u00e9ld\u00e1ul:<ul> <li>A j\u00e1t\u00e9kos eg\u00e9rrel kijel\u00f6li, hogy melyik mez\u0151r\u0151l melyik mez\u0151re l\u00e9p</li> <li>Beviteli mez\u0151ben megadja, honnan hova l\u00e9p</li> </ul> </li> <li>A partit el lehessen menteni egy adatb\u00e1zisba<ul> <li>A j\u00e1t\u00e9kosok nev\u00e9t \u00e9s az eredm\u00e9nyt el kell t\u00e1rolni</li> </ul> </li> <li>Ki lehessen list\u00e1zni, hogy ki kivel j\u00e1tszott, \u00e9s mi lett az eredm\u00e9nye (asztali \u00e9s web)</li> <li>Lehessen keresni az elmentett partik k\u00f6z\u00f6tt (asztali \u00e9s web)<ul> <li>N\u00e9v, eredm\u00e9ny, d\u00e1tum, ... alapj\u00e1n</li> </ul> </li> </ul>"},{"location":"kotprog/paraszthaboru/#opcionalis-kovetelmenyek","title":"Opcion\u00e1lis k\u00f6vetelm\u00e9nyek","text":"<ul> <li>Be lehessen t\u00f6lteni \u00e9s le lehessen j\u00e1tszani<ul> <li>L\u00e9p\u00e9sr\u0151l l\u00e9p\u00e9sre meg lehessen n\u00e9zni a partit</li> </ul> </li> <li>A rendszer biztos\u00edtsa a sakk\u00f3ra haszn\u00e1lat\u00e1t<ul> <li>Be lehessen \u00e1ll\u00edtani, hogy h\u00e1ny perces a parti, \u00e9s minden l\u00e9p\u00e9sn\u00e9l automatikusan v\u00e1ltson is \u00e1t</li> </ul> </li> </ul>"},{"location":"kotprog/sakk/","title":"Sakk","text":"<p>A feladat egy sakkprogram alkalmaz\u00e1s meg\u00edr\u00e1sa, ahol k\u00e9t j\u00e1t\u00e9kos tud egym\u00e1s ellen j\u00e1tszani.</p>"},{"location":"kotprog/sakk/#a-program-minimalis-elvarasai-a-sakk-jatek-szempontjabol-asztali-vagy-web","title":"A program minim\u00e1lis elv\u00e1r\u00e1sai a sakk j\u00e1t\u00e9k szempontj\u00e1b\u00f3l (asztali vagy web)","text":"<ul> <li>A sakkt\u00e1bla \u00e9s a figur\u00e1k kirajzol\u00e1sa</li> <li>A parti elej\u00e9n a b\u00e1buk a kezd\u0151 \u00e1llapotba ker\u00fclnek</li> <li>\u00dct\u00e9sek eset\u00e9n a le\u00fct\u00f6tt b\u00e1buk lev\u00e9tele</li> <li>Speci\u00e1lis l\u00e9p\u00e9sek (s\u00e1ncol\u00e1s, menet k\u00f6zbeni \u00fct\u00e9s, \u00e1tv\u00e1ltoz\u00e1s) \"manu\u00e1lis\" t\u00e1mogat\u00e1sa<ul> <li>Ha speci\u00e1lis l\u00e9p\u00e9sre ker\u00fcl sor, akkor azt a programnak nem kell automatikusan t\u00e1mogatni, de m\u00f3dot kell biztos\u00edtani arra, hogy a j\u00e1t\u00e9kosok ezt \"megoldj\u00e1k\" maguknak<ul> <li>Ez azt jelenti, hogy p\u00e9ld\u00e1ul az \u00e1tv\u00e1ltoz\u00e1s eset\u00e9n a felhaszn\u00e1l\u00f3 r\u00e1kattint egy gombra, aminek hat\u00e1s\u00e1ra lehet\u0151s\u00e9ge lesz kiv\u00e1lasztani azt, hogy milyen figur\u00e1t k\u00e9r (\u00e9s a legutols\u00f3 l\u00e9p\u00e9s alapj\u00e1n v\u00e9grehajtja az \u00e1tv\u00e1ltoz\u00e1st)</li> </ul> </li> </ul> </li> <li>A partinak ,,v\u00e9ge\":<ul> <li>Valamelyik f\u00e9l feladhatja, ilyenkor automatikusan a m\u00e1sik f\u00e9l nyert</li> <li>Az egyik f\u00e9l d\u00f6ntetlent aj\u00e1nl, \u00e9s a m\u00e1sik ezt elfogadja</li> </ul> </li> </ul>"},{"location":"kotprog/sakk/#tovabbi-kotelezo-funkcionalitasok","title":"Tov\u00e1bbi k\u00f6telez\u0151 funkcionalit\u00e1sok","text":"<ul> <li>A j\u00e1t\u00e9kosok megadhatj\u00e1k a nev\u00fcket</li> <li>A l\u00e9p\u00e9sek megad\u00e1s\u00e1ra t\u00f6bbf\u00e9le megold\u00e1s k\u00f6z\u00fcl v\u00e1laszthat a fejleszt\u0151, p\u00e9ld\u00e1ul:<ul> <li>A j\u00e1t\u00e9kos eg\u00e9rrel kijel\u00f6li, hogy melyik mez\u0151r\u0151l melyik mez\u0151re l\u00e9p</li> <li>Beviteli mez\u0151ben megadja, honnan hova l\u00e9p</li> </ul> </li> <li>A partit el lehessen menteni egy adatb\u00e1zisba<ul> <li>A j\u00e1t\u00e9kosok nev\u00e9t \u00e9s az eredm\u00e9nyt el kell t\u00e1rolni</li> </ul> </li> <li>Ki lehessen list\u00e1zni, hogy ki kivel j\u00e1tszott, \u00e9s mi lett az eredm\u00e9nye (asztali \u00e9s web)</li> <li>Lehessen keresni az elmentett partik k\u00f6z\u00f6tt (asztali \u00e9s web)<ul> <li>N\u00e9v, eredm\u00e9ny, d\u00e1tum, ... alapj\u00e1n</li> </ul> </li> </ul>"},{"location":"kotprog/sakk/#opcionalis-kovetelmenyek","title":"Opcion\u00e1lis k\u00f6vetelm\u00e9nyek","text":"<ul> <li>Speci\u00e1lis l\u00e9p\u00e9sek automatikus t\u00e1mogat\u00e1sa: s\u00e1ncol\u00e1s, \u00e1tv\u00e1ltoz\u00e1s \u00e9s menet k\u00f6zbeni \u00fct\u00e9s</li> <li>Be lehessen t\u00f6lteni \u00e9s le lehessen j\u00e1tszani<ul> <li>L\u00e9p\u00e9sr\u0151l l\u00e9p\u00e9sre meg lehessen n\u00e9zni a partit</li> </ul> </li> <li>A rendszer biztos\u00edtsa a sakk\u00f3ra haszn\u00e1lat\u00e1t<ul> <li>Be lehessen \u00e1ll\u00edtani, hogy h\u00e1ny perces a parti, \u00e9s minden l\u00e9p\u00e9sn\u00e9l automatikusan v\u00e1ltson is \u00e1t</li> </ul> </li> </ul> <p>A szab\u00e1lyos l\u00e9p\u00e9sek ellen\u0151rz\u00e9se, a matt vagy a d\u00f6ntetlen \u00e9szrev\u00e9tele egy nagyobb programoz\u00e1si feladat lenne, de nem kapcsol\u00f3dik az Alkalmaz\u00e1sfejleszt\u00e9s anyaghoz, ez\u00e9rt nem kell megval\u00f3s\u00edtani.</p>"},{"location":"kotprog/snake/","title":"Snake","text":"<p>A feladat egy szokv\u00e1nyost\u00f3l kicsit elt\u00e9r\u0151 Snake j\u00e1t\u00e9k megalkot\u00e1sa.</p>"},{"location":"kotprog/snake/#a-program-minimalis-elvarasai-asztali-vagy-web","title":"A program minim\u00e1lis elv\u00e1r\u00e1sai (asztali vagy web)","text":"<ul> <li>Egy olyan men\u00fc fejleszt\u00e9se, ahol lehet\u0151s\u00e9geink vannak a k\u00f6vetkez\u0151kre:<ul> <li>egyj\u00e1t\u00e9kos m\u00f3d ind\u00edt\u00e1sa</li> <li>k\u00e9tj\u00e1t\u00e9kos m\u00f3d ind\u00edt\u00e1sa</li> <li>opci\u00f3k men\u00fc<ul> <li>ez a men\u00fc alatt meg lehessen adni, hogy a p\u00e1lya h\u00e1nyszor h\u00e1nyas \"grid\"-en j\u00e1tsz\u00f3djon.</li> <li>k\u00edgy\u00f3 alapsebess\u00e9g\u00e9nek v\u00e1ltoztat\u00e1sa</li> <li>k\u00edgy\u00f3 sz\u00edne</li> <li>kaja sz\u00edne</li> </ul> </li> <li>kil\u00e9p\u00e9s</li> </ul> </li> <li>Szolg\u00e1ltassunk lehet\u0151s\u00e9get a j\u00e1t\u00e9kos / j\u00e1t\u00e9kosok nev\u00e9nek megad\u00e1s\u00e1ra (ak\u00e1r indul\u00e1skor, ak\u00e1r befejez\u00e9skor)</li> <li>Indul\u00e1skor rajzoljuk ki a j\u00e1t\u00e9kteret, valamint a k\u00edgy\u00f3t \u00e9s egy kezdeti ehet\u0151 objektumot.</li> <li>Legal\u00e1bb egy kaja legyen mindig a j\u00e1t\u00e9kt\u00e9ren<ul> <li>ennek felv\u00e9telekor pont j\u00e1r \u00e9s a k\u00edgy\u00f3 n\u00f6vekszik</li> </ul> </li> <li>A j\u00e1t\u00e9knak v\u00e9ge, ha a k\u00edgy\u00f3 falba vagy saj\u00e1t mag\u00e1ba harap.<ul> <li>az ekkor sz\u00fclet\u0151 eredm\u00e9nyt / eredm\u00e9nyeket ments\u00fck el a top list\u00e1ba</li> </ul> </li> </ul>"},{"location":"kotprog/snake/#tovabbi-kotelezo-funkcionalitasok-asztali-vagy-web","title":"Tov\u00e1bbi k\u00f6telez\u0151 funkcionalit\u00e1sok (asztali vagy web)","text":"<ul> <li>Legyen t\u00f6bbf\u00e9le kaja, melyeket jel\u00f6l\u00fcnk \u00e9s az \u00e9rt\u00fck j\u00e1r\u00f3 pont is v\u00e1ltozik</li> <li>Az opci\u00f3k men\u00fcben legyen lehet\u0151s\u00e9g kiv\u00e1lasztani a p\u00e1lya t\u00edpus\u00e1t<ul> <li>fallal hat\u00e1rolt p\u00e1lya</li> <li>fal n\u00e9lk\u00fcli p\u00e1lya</li> </ul> </li> <li>Skillek:<ul> <li>kannib\u00e1l: ez a skill t\u00f6bbj\u00e1t\u00e9kos m\u00f3dra vonatkozik, aktivit\u00e1si ideje viszonylag kev\u00e9s \u00e9s limit\u00e1ltan haszn\u00e1lhat\u00f3, \u00e1m speci\u00e1lis kaja felv\u00e9tel\u00e9n\u00e9l lehet\u0151s\u00e9g van \u00fajra haszn\u00e1lat\u00e1ra</li> <li>\u00e9hs\u00e9g: aktivit\u00e1si ideje alatt az adott j\u00e1t\u00e9kos k\u00e9pes saj\u00e1t mag\u00e1ba harapni an\u00e9lk\u00fcl, hogy ez a j\u00e1t\u00e9k v\u00e9g\u00e9t jelenten\u00e9, \u00e1m a leharapott testr\u00e9sz elv\u00e9sz</li> </ul> </li> <li>T\u00f6bbj\u00e1t\u00e9kos m\u00f3d sor\u00e1n, ha abba az ir\u00e1nyba ir\u00e1ny\u00edtjuk tov\u00e1bb a k\u00edgy\u00f3t, amerre jelenleg is n\u00e9z, akkor sebess\u00e9ge n\u00f6vekedjen, ellenkez\u0151 esetben pedig cs\u00f6kkenjen</li> <li>Toplista kezel\u00e9se (asztali \u00e9s web)<ul> <li>Toplista list\u00e1z\u00e1sa k\u00fcl\u00f6n az egyszem\u00e9lyes \u00e9s a k\u00e9tszem\u00e9lyes m\u00f3dhoz</li> <li>Lehessen szerkeszteni az eredm\u00e9nyeket<ul> <li>M\u00f3dos\u00edtani a nevet vagy a pontsz\u00e1mot</li> <li>Lehessen t\u00f6r\u00f6lni</li> </ul> </li> </ul> </li> </ul>"},{"location":"kotprog/snake/#opcionalis-kovetelmenyek-asztali-vagy-web","title":"Opcion\u00e1lis k\u00f6vetelm\u00e9nyek (asztali vagy web)","text":"<ul> <li>K\u00e9sz\u00edteni saj\u00e1t muzsik\u00e1t, ami j\u00e1t\u00e9k k\u00f6zben sz\u00f3l<ul> <li>h\u00e1tt\u00e9rzene</li> <li>k\u00edgy\u00f3 sikl\u00f3s hangok</li> <li>em\u00e9szt\u00e9si folyamatok hangjai</li> </ul> </li> <li>Legyen lehet\u0151s\u00e9g p\u00e1ly\u00e1t tervezni \u00e9s menteni, majd bet\u00f6lteni azt \u00e9s j\u00e1tszani rajta<ul> <li>Meg lehessen adni, hogy a p\u00e1lya mely r\u00e9sz\u00e9n legyen fal</li> </ul> </li> </ul>"},{"location":"kotprog/szakacskonyv/","title":"Szak\u00e1csk\u00f6nyv","text":"<p>A feladat egy szak\u00e1csk\u00f6nyv megval\u00f3s\u00edt\u00e1sa, ahol a receptek mellett a rendelkez\u00e9sre \u00e1ll\u00f3 hozz\u00e1val\u00f3kat is t\u00e1rolja a program, \u00e9s k\u00fcl\u00f6nb\u00f6z\u0151 m\u00f3dokon seg\u00edti a felhaszn\u00e1l\u00f3kat.</p>"},{"location":"kotprog/szakacskonyv/#alapanyagok-felvetele-asztali","title":"Alapanyagok felv\u00e9tele (asztali)","text":"<p>A programnak meg lehessen adni k\u00fcl\u00f6nb\u00f6z\u0151 alapanyagokat/hozz\u00e1val\u00f3kat, ahol a k\u00f6vetkez\u0151ket kell elt\u00e1rolni:</p> <ul> <li>Az alapanyag/hozz\u00e1val\u00f3 neve.</li> <li>M\u00e9rt\u00e9kegys\u00e9ge (kilogramm, liter, ...)</li> <li>Tov\u00e1bbi m\u00e9rt\u00e9kegys\u00e9g (ev\u0151kan\u00e1l, b\u00f6gre, ...)<ul> <li>Ilyen esetekben meg kell adni a v\u00e1lt\u00e1st a ,,hivatalos'' \u00e9s a ,,tov\u00e1bbi'' m\u00e9rt\u00e9kegys\u00e9gek k\u00f6z\u00f6tt</li> </ul> </li> </ul>"},{"location":"kotprog/szakacskonyv/#receptek-asztali-vagy-web","title":"Receptek (asztali vagy web)","text":"<p>A recepteket eset\u00e9ben a k\u00f6vetkez\u0151ket kell megadni</p> <ul> <li>Az \u00e9tel neve</li> <li>Az \u00e9tel tov\u00e1bbi nevei (opcion\u00e1lis)</li> <li>F\u00e9nyk\u00e9p (opcion\u00e1lis)</li> <li>Az elk\u00e9sz\u00edt\u00e9s le\u00edr\u00e1sa</li> <li>Az elk\u00e9sz\u00edt\u00e9s neh\u00e9zs\u00e9ge (pl. \"kezd\u0151knek is megy\"-t\u0151l a \"csak profiknak aj\u00e1nljuk\"-ig)</li> <li>Az elk\u00e9sz\u00edt\u00e9s id\u0151tartalma</li> <li>Egy adag h\u00e1ny f\u0151re elegend\u0151</li> <li>Sz\u00fcks\u00e9ges hozz\u00e1val\u00f3k<ul> <li>Hozz\u00e1val\u00f3 neve \u00e9s mennyis\u00e9ge</li> <li>Csak olyanokat \u00e9s olyan m\u00e9rt\u00e9kegys\u00e9ggel lehet megadni, ami szerepel m\u00e1r az adatb\u00e1zisban</li> </ul> </li> <li>Kateg\u00f3ria<ul> <li>Leves, f\u0151\u00e9tel, k\u00f6ret, sal\u00e1ta, desszert, ...</li> </ul> </li> </ul>"},{"location":"kotprog/szakacskonyv/#bevasarlas-asztali-vagy-web","title":"Bev\u00e1s\u00e1rl\u00e1s (asztali vagy web)","text":"<p>T\u00e1mogassuk a bev\u00e1s\u00e1rl\u00e1st, azaz megadhatjuk, hogy melyik alapanyagb\u00f3l mennyit vett\u00fcnk</p> <ul> <li>Alapanyag neve</li> <li>Alapanyag mennyis\u00e9ge</li> </ul>"},{"location":"kotprog/szakacskonyv/#minimalis-keszlet-beallitasa-asztali","title":"Minim\u00e1lis k\u00e9szlet be\u00e1ll\u00edt\u00e1sa (asztali)","text":"<p>Meg lehessen adni a hozz\u00e1val\u00f3khoz, hogy mi az a minim\u00e1lis mennyis\u00e9g, amit szeretn\u00e9k mindig otthon t\u00e1rolni, \u00e9s ha ez al\u00e1 megy, akkor adjon figyelmeztet\u00e9st</p>"},{"location":"kotprog/szakacskonyv/#menu-osszeallitasa-asztali-vagy-web","title":"Men\u00fc \u00f6ssze\u00e1ll\u00edt\u00e1sa (asztali vagy web)","text":"<p>A megl\u00e9v\u0151 receptek alapj\u00e1n lehessen men\u00fcket \u00f6ssze\u00e1ll\u00edtani, ahol meg kell adni</p> <ul> <li>A men\u00fc nev\u00e9t</li> <li>Elk\u00e9sz\u00edt\u00e9si idej\u00e9t</li> <li>H\u00e1ny f\u0151re elegend\u0151</li> <li>Melyik \u00e9telekb\u0151l (receptekb\u0151l) \u00e1ll</li> </ul>"},{"location":"kotprog/szakacskonyv/#keresesi-lehetosegek-web","title":"Keres\u00e9si lehet\u0151s\u00e9gek (web)","text":"<ul> <li>Recept vagy men\u00fc neve alapj\u00e1n<ul> <li>Lehessen sz\u0171rni, hogy ha valamelyiket akarom vagy nem akarom l\u00e1tni</li> </ul> </li> <li>Kateg\u00f3ria alapj\u00e1n</li> <li>Elk\u00e9sz\u00edt\u00e9si id\u0151 alapj\u00e1n</li> <li>Elk\u00e9sz\u00edt\u00e9s neh\u00e9zs\u00e9ge alapj\u00e1n</li> <li>X vend\u00e9g j\u00f6n, mihez van el\u00e9g alapanyag</li> <li>Az adott receptet szeretn\u00e9m elk\u00e9sz\u00edteni X vend\u00e9g r\u00e9sz\u00e9re<ul> <li>Van-e el\u00e9g hozz\u00e1val\u00f3?</li> <li>Mit kellene venni?</li> </ul> </li> <li>Mib\u0151l van a minim\u00e1lis szint alatt</li> </ul>"},{"location":"kotprog/szakacskonyv/#fozes-web","title":"F\u0151z\u00e9s (web)","text":"<p>A program nem fog f\u0151zni helyett\u00fcnk, de ha kiv\u00e1lasztunk egy (vagy t\u00f6bb receptet) \u00e9s megadjuk, hogy h\u00e1ny f\u0151re k\u00e9sz\u00edtj\u00fck el, akkor</p> <ul> <li>ennek megfelel\u0151en cs\u00f6kkenti az alapanyagok mennyis\u00e9g\u00e9t,</li> <li>\u00e9s figyelmeztet is, ha a minim\u00e1lis szint al\u00e1 cs\u00f6kkent valamelyik alapanyag mennyis\u00e9ge,</li> <li>illetve ki\u00edrja, ha nincs el\u00e9g alapanyag, \u00e9s megmondja, hogy mib\u0151l kell v\u00e1s\u00e1rolni.</li> </ul>"},{"location":"kotprog/szamologep/","title":"Sz\u00e1mol\u00f3g\u00e9p","text":"<p>A feladat egy sz\u00e1mol\u00f3g\u00e9p k\u00e9sz\u00edt\u00e9se, amely asztali \u00e9s webes alkalmaz\u00e1sk\u00e9nt is haszn\u00e1lhat\u00f3.</p>"},{"location":"kotprog/szamologep/#kotelezoen-megvalositando-elemek","title":"K\u00f6telez\u0151en megval\u00f3s\u00edtand\u00f3 elemek","text":"<p>A sz\u00e1mol\u00f3g\u00e9pben az al\u00e1bbi funkci\u00f3knak kell el\u00e9rhet\u0151nek lennie:</p> <ul> <li>Val\u00f3s \u00e9s eg\u00e9sz sz\u00e1mok kezel\u00e9se</li> <li>Alap aritmetikai m\u0171veletek biztos\u00edt\u00e1sa: +,-,*,%<ul> <li>Z\u00e1r\u00f3jelez\u00e9si lehet\u0151s\u00e9g</li> </ul> </li> <li>Tov\u00e1bbi matematikai m\u0171veletek biztos\u00edt\u00e1sa<ul> <li>n\u00e9gyzetre emel\u00e9s</li> <li>reciprok </li> <li>gy\u00f6kvon\u00e1s</li> <li>marad\u00e9kos oszt\u00e1s</li> <li>sin, cos, tan</li> </ul> </li> <li>T\u00e1rol\u00e1si m\u0171veletek m\u0171veletek<ul> <li>M\u0171velet elment\u00e9se adatb\u00e1zisba</li> <li>Kor\u00e1bbi m\u0171velet bet\u00f6lt\u00e9se</li> <li>Adott eredm\u00e9ny elment\u00e9se mem\u00f3ri\u00e1ba  </li> <li>Adott eredm\u00e9ny bet\u00f6lt\u00e9se mem\u00f3ri\u00e1b\u00f3l </li> </ul> </li> <li>Sz\u00e1mrendszerek k\u00f6z\u00f6tti v\u00e1lt\u00e1s (hex, dec, bin, oct)</li> <li>Be\u00e9p\u00edtett konvert\u00e1l\u00f3k alkalmaz\u00e1sa<ul> <li>P\u00e9nznem v\u00e1lt\u00e1s (Fix EUR-HUF). Valuta t\u00e1rol\u00e1sa adatb\u00e1zisban</li> <li>S\u00faly v\u00e1lt\u00e1s (mg,g,dkg,kg,t)</li> <li>H\u0151m\u00e9rs\u00e9klet (F,C)</li> </ul> </li> <li>Rosszul megadott m\u0171veletek felismer\u00e9se, mint p\u00e9ld\u00e1ul<ul> <li>rossz z\u00e1r\u00f3jelz\u00e9s</li> <li>5+*3</li> </ul> </li> </ul>"},{"location":"kotprog/szamologep/#opcionalisan-megvalosithato-elemek","title":"Opcion\u00e1lisan megval\u00f3s\u00edthat\u00f3 elemek","text":"<ul> <li>Line\u00e1ris \u00e9s m\u00e1sodfok\u00fa f\u00fcggv\u00e9ny \u00e1br\u00e1zol\u00e1sa</li> <li>Valuta online lek\u00e9rdez\u00e9se REST-en kereszt\u00fcl pl: https://exchangeratesapi.io/</li> </ul>"},{"location":"legacy/01_gyakorlat/","title":"1. gyakorlat","text":""},{"location":"legacy/01_gyakorlat/#xml-extensible-markup-language","title":"XML (eXtensible Markup Language)","text":"<p>Az XML-t adatok t\u00e1rol\u00e1s\u00e1ra \u00e9s tov\u00e1bb\u00edt\u00e1s\u00e1ra tervezt\u00e9k. Mind ember \u00e9s mind g\u00e9p sz\u00e1m\u00e1ra olvashat\u00f3 form\u00e1tumban t\u00e1rolja az adatot (azaz, sz\u00f6veges form\u00e1tumban \u00e9s nem bin\u00e1risan). Az XML szoftver- \u00e9s hardverf\u00fcggetlen eszk\u00f6z, \u00edgy p\u00e9ld\u00e1ul el\u0151szeretettel alkalmazt\u00e1k/alkalmazz\u00e1k web szolg\u00e1ltat\u00e1sokban adatok tov\u00e1bb\u00edt\u00e1s\u00e1ra. \u00d6nmag\u00e1ban nem csin\u00e1l semmit, nincsenek el\u0151re defini\u00e1lt tagek.</p> <p>Egy egyszer\u0171 XML p\u00e9lda:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;note&gt;\n&lt;to&gt;B\u00e9la&lt;/to&gt;\n&lt;from&gt;Jani&lt;/from&gt;\n&lt;heading&gt;Reminder&lt;/heading&gt;\n&lt;body&gt;Don't forget me this weekend!&lt;/body&gt;\n&lt;/note&gt;\n</code></pre> <p>Az XML-t sokszor haszn\u00e1lj\u00e1k arra, hogy az adatot elszepar\u00e1lj\u00e1k a megjelen\u00edt\u00e9st\u0151l, tov\u00e1bb\u00e1 el\u0151szeretettel alkalmazz\u00e1k konfigur\u00e1ci\u00f3s \u00e1llom\u00e1nyokk\u00e9nt (pl.: <code>build.xml</code> Ant eset\u00e9ben, illetve <code>pom.xml</code> Maven eset\u00e9ben, stb). Ilyen \u00e9rtelemben egyen\u00e9rt\u00e9k\u0171 lehet a JSON-nel is, melyben szint\u00e9n adatokat adhatunk meg.</p>"},{"location":"legacy/01_gyakorlat/#xml-fa","title":"XML fa","text":"<ul> <li>Az XML dokumentumok elemei egy fa strukt\u00far\u00e1t alkotnak, melyet szok\u00e1s XML DOM-nak is h\u00edvni (HTML DOM mint\u00e1j\u00e1ra).</li> <li>Minden XML dokumentumban pontosan egy gy\u00f6k\u00e9r tal\u00e1lhat\u00f3.</li> <li>Minden pontnak lehetnek gyerekei is.</li> <li>A fenti p\u00e9ld\u00e1ban <code>&lt;note&gt;</code> a gy\u00f6k\u00e9r, melynek n\u00e9gy gyereke van (<code>to</code>, <code>from</code>, <code>heading</code> \u00e9s <code>body</code>)</li> </ul> <p>Az XML-ek els\u0151 sor\u00e1ban az \u00fagynevezett prolog sor tal\u00e1lhat\u00f3, mely speci\u00e1lis form\u00e1tum\u00fa \u00e9s opcion\u00e1lis. A lenti p\u00e9ld\u00e1ban a haszn\u00e1lt XML verzi\u00f3j\u00e1t (kezdetekt\u0151l fogva 1.0) \u00e9s a karakterk\u00f3dol\u00e1st adja meg (az alap\u00e9rtelmezett az UTF-8).</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n</code></pre> <p>A prolog sor nem r\u00e9sze az XML dokumentumnak, ez\u00e9rt nincs sz\u00fcks\u00e9g lez\u00e1r\u00f3 tagre.</p> <p>Egy XML dokumentum j\u00f3l form\u00e1zott, ha teljes\u00fclnek a k\u00f6vetkez\u0151k:</p> <ul> <li>Nincs \u00e1tlapol\u00f3 tag-p\u00e1r (P\u00e9ld\u00e1ul nincs ilyen: <code>&lt;to&gt; &lt;from&gt; &lt;/to&gt; &lt;/from&gt;</code>)</li> <li>Minden tagnek van lez\u00e1r\u00f3 p\u00e1rja</li> <li>Minden attrib\u00fatum \u00e9rt\u00e9k id\u00e9z\u0151jelek vagy aposztr\u00f3fok k\u00f6z\u00f6tt szerepel</li> <li>Pontosan egy gy\u00f6k\u00e9r elem tal\u00e1lhat\u00f3 a dokumentumban</li> </ul>"},{"location":"legacy/01_gyakorlat/#karakter-entitasok","title":"Karakter entit\u00e1sok","text":"<p>Mivel az XML-ben vannak speci\u00e1lis karakterek, ezeket valahogy m\u00e1shogy kell \u00edrnunk, ha egy ilyen karaktert szeretn\u00e9nk adatk\u00e9nt t\u00e1rolni. Ezek a karakter entit\u00e1sok:</p> Karakter entit\u00e1s Megjelen\u00e9s Elnevez\u00e9s &amp;lt; &lt; kisebb mint &amp;gt; &gt; nagyobb mint &amp;amp; &amp; \u00e9s jel &amp;apos; ' aposztr\u00f3f &amp;quot; \" id\u00e9z\u0151jel <p>P\u00e9ld\u00e1ul azt szeretn\u00e9nk \u00edrni a <code>&lt;heading&gt;</code> tag-ek k\u00f6z\u00e9, hogy x &lt; y, akkor azt a k\u00f6vetkez\u0151k\u00e9ppen tehetj\u00fck meg:</p> <pre><code>&lt;heading&gt; x &amp;lt; y &lt;/heading&gt;\n</code></pre>"},{"location":"legacy/01_gyakorlat/#elemek","title":"Elemek","text":"<p>Minden XML elem a k\u00f6vetkez\u0151ket tartalmazhatja:</p> <ul> <li>sz\u00f6veg (Pl: <code>&lt;to&gt;</code> sz\u00f6veg <code>&lt;/to&gt;</code> )</li> <li>attrib\u00fatum (Pl: <code>&lt;note id=\"attr\"&gt; &lt;/note&gt;</code> )</li> <li>tov\u00e1bbi elemek, azaz gyerek elemek (Pl: a <code>note</code> tartalmazza a <code>to</code>, <code>from</code>, <code>heading</code>, <code>body</code> tageket)</li> <li>a fentiek kombin\u00e1ci\u00f3ja (egy elemnek lehet egyszerre attrib\u00fatuma, lehet benne sz\u00f6veg, illetve a sz\u00f6veg mellett tov\u00e1bbi elemeket is tartalmazhat)</li> </ul> <p>Az al\u00e1bbi p\u00e9ld\u00e1ban l\u00e1thatunk egy olyan esetet, amikor egy elem kombin\u00e1lva tartalmazza az \u00f6sszes lehet\u0151s\u00e9get:</p> <pre><code>&lt;note id=\"12\"&gt;\nEz itt a sz\u00f6veg r\u00e9sz.\n    &lt;child_element&gt;\n...\n    &lt;/child_element&gt;\n&lt;/note&gt;\n</code></pre> <p>Az XML tagek lehetnek \u00fcresek is, azaz nincs benn\u00fck se sz\u00f6veg, se m\u00e1sik elem:</p> <pre><code>&lt;heading&gt;&lt;/heading&gt;\n</code></pre> <p>Ezt r\u00f6videbben is \u00edrhatjuk, az al\u00e1bbi form\u00e1ban, melyet self-closing tag-nek nevez\u00fcnk:</p> <pre><code>&lt;heading /&gt;\n</code></pre>"},{"location":"legacy/01_gyakorlat/#gyerek-elem-vagy-attributum","title":"Gyerek elem vagy attrib\u00fatum","text":"<pre><code>&lt;note&gt;\n&lt;to&gt;Jozsi&lt;/to&gt;\n&lt;/note&gt;\n</code></pre> <p>A fenti XML r\u00e9szlet ekvivalens a k\u00f6vetkez\u0151 k\u00f3ddal:</p> <pre><code>&lt;note to=\"Jozsi\" /&gt;\n</code></pre> <p>L\u00e1that\u00f3, hogy teljesen mindegy, melyik m\u00f3dot v\u00e1lasztjuk, mivel maga az adat \u00edgy vagy \u00fagy, de meg lesz adva. Akkor m\u00e9gis mikor melyiket haszn\u00e1ljuk? Alapgondolat: Az elemre vonatkoz\u00f3 meta-adatokat t\u00e1roljuk attrib\u00fatumokban a t\u00f6bbit pedig gyermek elemk\u00e9nt hozzuk l\u00e9tre. Teh\u00e1t a <code>to</code> legyen ink\u00e1bb gyermek elem. Ha a <code>note</code>-ra vonatkoz\u00f3 meta-adatunk van (Pl: <code>id</code>), akkor azt t\u00e1roljuk attrib\u00fatumk\u00e9nt. Amikor valamilyen \u00f6sszetett adatr\u00f3l van sz\u00f3 (Pl. a <code>to</code> adaton bel\u00fcl t\u00e1rolunk egy <code>name</code>, illetve <code>email</code> adatot), akkor nyilv\u00e1nval\u00f3an gyerek elemet haszn\u00e1ljunk!</p>"},{"location":"legacy/01_gyakorlat/#nevterek-namespaces","title":"N\u00e9vterek (namespaces)","text":"<p>Az XML n\u00e9vterek alapvet\u0151 funkci\u00f3ja, hogy a n\u00e9v\u00fctk\u00f6z\u00e9seket elker\u00fclj\u00fck. Ez akkor fordulhat el\u0151, ha k\u00fcl\u00f6nb\u00f6z\u0151 XML-eket (k\u00fcl\u00f6nb\u00f6z\u0151 domain) akarunk egyes\u00edteni. P\u00e9ld\u00e1ul egy HTML table-t haszn\u00e1l\u00f3 r\u00e9szlet:</p> <pre><code>&lt;table&gt;\n&lt;tr&gt;\n&lt;td&gt;Apples&lt;/td&gt;\n&lt;td&gt;Bananas&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n</code></pre> <p>Egy m\u00e1sik dokumentumban viszont a table egy b\u00fatordarabra vonatkozik:</p> <pre><code>&lt;table&gt;\n&lt;name&gt;African Coffee Table&lt;/name&gt;\n&lt;width&gt;80&lt;/width&gt;\n&lt;length&gt;120&lt;/length&gt;\n&lt;/table&gt;\n</code></pre> <p>Ha ezt a k\u00e9t dokumentumot \u00f6sszef\u00e9s\u00fcln\u00e9nk, akkor n\u00e9v\u00fctk\u00f6z\u00e9s l\u00e9pne fel, mivel mindkett\u0151 dokumentumban van table, azonban teljesen m\u00e1s a jelent\u00e9s\u00fck (r\u00e1ad\u00e1sul m\u00e1s elemeket is tartalmaznak).</p> <pre><code>&lt;h:table&gt;\n&lt;h:tr&gt;\n&lt;h:td&gt;Apples&lt;/h:td&gt;\n&lt;h:td&gt;Bananas&lt;/h:td&gt;\n&lt;/h:tr&gt;\n&lt;/h:table&gt;\n\n&lt;f:table&gt;\n&lt;f:name&gt;African Coffee Table&lt;/f:name&gt;\n&lt;f:width&gt;80&lt;/f:width&gt;\n&lt;f:length&gt;120&lt;/f:length&gt;\n&lt;/f:table&gt;\n</code></pre> <p>A fenti p\u00e9lda m\u00e9g nem teljes, mivel n\u00e9vtereket m\u00e1r haszn\u00e1lunk benne, de m\u00e9g nem defini\u00e1ltuk a \"h\" \u00e9s \"f\" n\u00e9vtereket. A n\u00e9vtereket b\u00e1rmelyik elem <code>xmlns</code> attrib\u00fatum\u00e1ban defini\u00e1lhatjuk. A n\u00e9vterek defini\u00e1l\u00e1s\u00e1nak szintaxisa:</p> <pre><code>xmlns:prefix=\"URI\"\n</code></pre> <p>A fenti p\u00e9lda helyesen a n\u00e9vt\u00e9r defin\u00edci\u00f3kkal kieg\u00e9sz\u00edtve \u00edgy n\u00e9z ki:</p> <pre><code>&lt;root&gt;\n&lt;h:table xmlns:h=\"http://www.w3.org/TR/html4/\"&gt;\n&lt;h:tr&gt;\n&lt;h:td&gt;Apples&lt;/h:td&gt;\n&lt;h:td&gt;Bananas&lt;/h:td&gt;\n&lt;/h:tr&gt;\n&lt;/h:table&gt;\n\n&lt;f:table xmlns:f=\"http://www.w3schools.com/furniture\"&gt;\n&lt;f:name&gt;African Coffee Table&lt;/f:name&gt;\n&lt;f:width&gt;80&lt;/f:width&gt;\n&lt;f:length&gt;120&lt;/f:length&gt;\n&lt;/f:table&gt;\n&lt;/root&gt;\n</code></pre> <p>A n\u00e9vt\u00e9r defin\u00edci\u00f3j\u00e1t az \u00f6sszes gyermek elem \u00f6r\u00f6k\u00f6li, azaz minden gyerekn\u00e9l haszn\u00e1lhatjuk a defini\u00e1lt namespace prefix-et. A n\u00e9vtereket a root elemn\u00e9l is defini\u00e1lhatjuk, majd a gyerekelemek k\u00f6z\u00f6tt b\u00e1rhol haszn\u00e1lhatjuk:</p> <pre><code>&lt;root\nxmlns:h=\"http://www.w3.org/TR/html4/\"\nxmlns:f=\"http://www.w3schools.com/furniture\"&gt;\n</code></pre> <p>A n\u00e9vterekn\u00e9l a az URI-nak nem kell l\u00e9tez\u0151nek lennie, csak az egyedis\u00e9get hivatott biztos\u00edtani. A v\u00e1llalatok azonban arra szokt\u00e1k haszn\u00e1lni, hogy a n\u00e9vteret le\u00edr\u00f3 oldalra mutassanak. Megadhatunk alap\u00e9rtelmezett n\u00e9vteret (default namespace) is, melynek form\u00e1ja:</p> <pre><code>xmlns=\"URI\"\n</code></pre> <p>Ilyenkor az \u00f6sszes gyerek elem ugyanabba a namespace-be fog tartozni. Vegy\u00fck \u00e9szre, hogy ebben az esetben a prefix megad\u00e1s\u00e1t elhagyjuk! A fenti p\u00e9lda default n\u00e9vterekkel:</p> <pre><code>&lt;root&gt;\n&lt;table xmlns=\"http://www.w3.org/TR/html4/\"&gt;\n&lt;tr&gt;\n&lt;td&gt;Apples&lt;/td&gt;\n&lt;td&gt;Bananas&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n\n&lt;table xmlns=\"http://www.w3schools.com/furniture\"&gt;\n&lt;name&gt;African Coffee Table&lt;/name&gt;\n&lt;width&gt;80&lt;/width&gt;\n&lt;length&gt;120&lt;/length&gt;\n&lt;/table&gt;\n&lt;/root&gt;\n</code></pre> <p>Mivel prefixet sem haszn\u00e1lunk a n\u00e9vt\u00e9r megad\u00e1s\u00e1n\u00e1l, \u00edgy a gyerek elemekben sem kell hogy megadjuk azokat, mivel automatikusan a f\u00e1ban f\u00f6lfel\u00e9 elindulva a legels\u0151 megtal\u00e1lt n\u00e9vt\u00e9rbe fognak tartozni.</p> <p>Feladat (01_users)</p> <p>K\u00e9sz\u00edts\u00fcnk egy XML dokumentumot manu\u00e1lisan! A dokumentumban fel\u00e9p\u00edt\u00e9se legyen a k\u00f6vetkez\u0151:</p> <ul> <li>A gy\u0151k\u00e9relem legyen a <code>users</code></li> <li> <p>A <code>users</code> elemen bel\u00fcl legyen 3 <code>user</code> elem, ahol minden <code>user</code> a k\u00f6vetkez\u0151 tulajdons\u00e1gokkal rendelkezik:</p> <ul> <li><code>id</code></li> <li><code>name</code></li> <li><code>email</code></li> <li><code>age</code></li> </ul> </li> </ul> <p>Az \u00f6sszes <code>user</code> teetsz\u0151leges adatot tartalmazhat.</p> Megold\u00e1s <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;users&gt;\n&lt;user id=\"1\"&gt;\n&lt;name&gt;Gipsz Jakab&lt;/name&gt;\n&lt;email&gt;gipsz@jakab.hu&lt;/email&gt;\n&lt;age&gt;21&lt;/age&gt;\n&lt;/user&gt;\n&lt;user id=\"2\"&gt;\n&lt;name&gt;Kandisz N\u00f3ra&lt;/name&gt;\n&lt;email&gt;kandisz@nora.hu&lt;/email&gt;\n&lt;age&gt;54&lt;/age&gt;\n&lt;/user&gt;\n&lt;user id=\"3\"&gt;\n&lt;name&gt;Beviz Elek&lt;/name&gt;\n&lt;email&gt;beviz@elek.com&lt;/email&gt;\n&lt;age&gt;14&lt;/age&gt;\n&lt;/user&gt;\n&lt;/users&gt;\n</code></pre> <p>Az XML alapjait a k\u00f6vetkez\u0151 vide\u00f3 foglalja \u00f6ssze:</p> <p></p>"},{"location":"legacy/01_gyakorlat/#build-rendszerek","title":"Build rendszerek","text":"<p>\u00c1ltal\u00e1noss\u00e1g\u00e1ban a build rendszerek seg\u00edtenek, hogy a fejleszt\u00e9si folyamat sokkal k\u00f6nnyebben \u00e9s g\u00f6rd\u00fcl\u00e9kenyebben mehessen v\u00e9gbe. De mit is nevez\u00fcnk pontosan build folyamatnak? \u00c1ltal\u00e1noss\u00e1g\u00e1ban v\u00e9ve mondhatjuk azt, hogy a build folyamat sor\u00e1n a forr\u00e1sk\u00f3db\u00f3l valamilyen futtathat\u00f3 term\u00e9ket kapunk. A ford\u00edt\u00e1s mellett t\u00e1mogat\u00e1st ad f\u00fcgg\u0151s\u00e9gek (3rd-party libek) kezel\u00e9s\u00e9re, egy\u00e9b jar-ok classpath-ba rak\u00e1s\u00e1ra, tesztek futtat\u00e1s\u00e1ra, a leford\u00edtott k\u00f3dot csomagba rakhatjuk (JAR, WAR, vagy ZIP). Az elk\u00e9sz\u00fclt csomagokat azt\u00e1n publik\u00e1lni is lehet egy alkalmaz\u00e1sszerverre vagy egy repository-ba. Ebben is seg\u00edtenek a build rendszerek, mint amilyen a Maven is, mely k\u00e9pes ezeket a l\u00e9p\u00e9seket automatiz\u00e1lni, \u00edgy a k\u00e9zi buildel\u00e9s sor\u00e1n esetlegesen bek\u00f6vetkez\u0151 hib\u00e1k sz\u00e1m\u00e1t is lecs\u00f6kkenthetj\u00fck.</p>"},{"location":"legacy/01_gyakorlat/#maven","title":"Maven","text":"<p>A Maven egy build keretrendszer a sok k\u00f6z\u00fcl, mely Java nyelv\u0171 alkalmaz\u00e1sok build-el\u00e9s\u00e9hez ad seg\u00edts\u00e9get. Azon fel\u00fcl, hogy a buildel\u00e9s automatiz\u00e1lhat\u00f3 a seg\u00edts\u00e9g\u00e9vel, bizonyos mint\u00e1kat (best practices) is el\u0151nyben r\u00e9szes\u00edt, mely alapj\u00e1n seg\u00edti a projekt fel\u00e9p\u00edt\u00e9s\u00e9nek k\u00f6nnyebb \u00e9rthet\u0151s\u00e9g\u00e9t, \u00edgy a produktivit\u00e1st is n\u00f6velve. Egy ilyen best practice p\u00e9ld\u00e1ul a forr\u00e1sk\u00f3dok helye, ami alapb\u00f3l a projekt gy\u00f6k\u00e9rk\u00f6nyvt\u00e1ra alatt az <code>src</code> mapp\u00e1ban tal\u00e1lhat\u00f3. Amennyiben ezt a best practice-t k\u00f6vetj\u00fck, akkor a build le\u00edr\u00f3ban, mely a <code>pom.xml</code> lesz, nem is kell megadnunk azt, hogy hol tal\u00e1lhat\u00f3ak a forr\u00e1sk\u00f3d f\u00e1jljaink.</p> <p>A Maven a k\u00f6vetkez\u0151 feladatok elv\u00e9gz\u00e9s\u00e9ben seg\u00e9dkezik, azaz automatiz\u00e1lja azokat:</p> <ul> <li>Build (k\u00f3dgener\u00e1l\u00e1s, ford\u00edt\u00e1s, package-el\u00e9s)</li> <li>Dokument\u00e1ci\u00f3 gener\u00e1l\u00e1sa (pl.: Javadoc)</li> <li>Reporting</li> <li>F\u00fcgg\u0151s\u00e9gek kezel\u00e9se</li> <li>SCM (Source Code Management)</li> <li>Release</li> <li>Distribution</li> </ul> <p>Az automatiz\u00e1l\u00e1s el\u0151nye, hogy kisebb a hibalehet\u0151s\u00e9g (nincs emberi t\u00e9nyez\u0151), illetve gyorsabb is maga a folyamat.</p>"},{"location":"legacy/01_gyakorlat/#maven-fo-kepessegei","title":"Maven f\u0151 k\u00e9pess\u00e9gei:","text":"<ul> <li>egyszer\u0171 projekt l\u00e9trehoz\u00e1s, mely k\u00f6veti a best practice-t. A maven projekt template-eket k\u00edn\u00e1l, amiket archetype-nak nevez.</li> <li>f\u00fcgg\u0151s\u00e9gkezel\u00e9s: automatikusan friss\u00edti, let\u00f6lti \u00e9s valid\u00e1lja a f\u00fcgg\u0151s\u00e9geket (library-k).</li> <li>k\u00f6zponti repository: a projekt\u00fcnk f\u00fcgg\u0151s\u00e9geit a lok\u00e1lis g\u00e9pr\u0151l vagy publikus repository-kb\u00f3l szerzi be a Maven (pl: Maven Central Repository)</li> </ul>"},{"location":"legacy/01_gyakorlat/#maven-telepitese","title":"Maven telep\u00edt\u00e9se","text":"<p>Parancssori Maven-hez:</p> <ul> <li>Legyen JDK a g\u00e9pre telep\u00edtve</li> <li>JAVA_HOME k\u00f6rnyezeti v\u00e1ltoz\u00f3t \u00e1ll\u00edtsd be</li> <li>PATH k\u00f6rnyezeti v\u00e1ltoz\u00f3hoz add hozz\u00e1 a $JAVA_HOME/bin bejegyz\u00e9st (Win alatt %JAVA_HOME%\\bin)</li> <li>T\u00f6ltsd le a Maven-t (https://maven.apache.org/download.cgi)</li> <li>Csomagold ki valahova a t\u00f6m\u00f6r\u00edtett \u00e1llom\u00e1nyokat</li> <li>ahova kicsomagoltad a maven-t add hozz\u00e1 a PATH-hoz (bin k\u00f6nyvt\u00e1rral egy\u00fctt)</li> <li>nyiss egy termin\u00e1lt \u00e9s futtasd az 'mvn --version' parancsot</li> </ul> <p>Eclipse \u00e9s IntelliJ is ad bundled Maven-t, azaz az IDE-ben be\u00e9p\u00edtve, a parancssori telep\u00edt\u00e9se n\u00e9lk\u00fcl is lesz m\u00e1r ilyen\u00fcnk.</p>"},{"location":"legacy/01_gyakorlat/#pom-project-object-model","title":"POM - Project Object Model","text":"<p>Minden Maven projektben megtal\u00e1lhat\u00f3 egy <code>pom.xml</code> \u00e1llom\u00e1ny, mely a projekt gy\u00f6k\u00e9rk\u00f6nyvt\u00e1r\u00e1ban foglal helyet. Ebben az \u00e1llom\u00e1nyban vannak a config-ok, a projekt alapinform\u00e1ci\u00f3i.</p> <p>Amiket itt megadhatunk:</p> <ul> <li>f\u00fcgg\u0151s\u00e9gek</li> <li>pluginok</li> <li>goal-ok</li> <li>build profilok</li> <li>projekt verzi\u00f3</li> </ul> <p>Mivel minden projektet egy group (<code>groupId</code>) \u00e9s egy name (<code>artifactId</code>) azonos\u00edt a maven repository-ban (n\u00e9zz\u00fcnk sz\u00e9t a Maven k\u00f6zponti repoban: https://search.maven.org/ \u00e9s keress\u00fcnk r\u00e1 p\u00e9ld\u00e1ul a JUnit-ra!), ez\u00e9rt a mi projekt\u00fcnknek is kell ilyenekkel rendelkeznie (persze emiatt m\u00e9g nem lesz publik\u00e1lva a projekt\u00fcnk a k\u00f6zponti repository-ba).</p> <p>Feladat (02_FirstMaven)</p> <p>K\u00e9sz\u00edts\u00fcnk egy \u00faj Maven projektet \u00e9s n\u00e9zz\u00fck meg annak eredm\u00e9ny\u00e9t, azaz a legener\u00e1lt projektet!</p> <p>L\u00e9p\u00e9sek (IntelliJ):</p> <ul> <li>File-&gt;New-&gt;Project...</li> <li>Bal oldalon v\u00e1lasszuk ki a <code>Maven</code>-t! V\u00e1lasszuk ki a szimpatikus JDK verzi\u00f3t!</li> <li>Most m\u00e9g ne pip\u00e1ljuk be a <code>Create from archetype</code> opci\u00f3t!</li> <li>A k\u00f6vetkez\u0151 l\u00e9p\u00e9sben adjuk meg a projekt nev\u00e9t \u00e9s hely\u00e9t!</li> <li>Az <code>Artifact Coordinates</code> alatt megadhatjuk a <code>groupId</code>-t, <code>artifactId</code>-t \u00e9s a <code>version</code>-t is.</li> <li>Az utols\u00f3 oldalon a haszn\u00e1lni k\u00edv\u00e1nt maven-t v\u00e1laszthatjuk ki, illetve megadhatjuk a user setting f\u00e1jlt \u00e9s a lok\u00e1l repo hely\u00e9t. Ezeket most hagyjuk alap\u00e9rtelmezetten.</li> <li>Finish</li> </ul> <p>N\u00e9zz\u00fcnk meg az eredm\u00e9nyt!</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n&lt;groupId&gt;hu.alkfejl&lt;/groupId&gt;\n&lt;artifactId&gt;FirstMaven&lt;/artifactId&gt;\n&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n\n&lt;/project&gt;\n</code></pre> <ul> <li>Minden <code>pom.xml</code> f\u00e1jlban a dokumentum gy\u00f6kere a <code>project</code> elem. Itt k\u00fcl\u00f6nb\u00f6z\u0151 namespace defin\u00edci\u00f3k vannak megadva attrib\u00fatumk\u00e9nt, illetve a maven XSD (XML Schema Definition) f\u00e1jlra is tal\u00e1lhatunk hivatkoz\u00e1st (az XSD adja meg, hogy egy POM s\u00e9m\u00e1nak megfelel\u0151 XML dokumentumban milyen elemek, milyen attrib\u00fatumok, stb. szerepelhetnek).</li> <li>A model version a pom.xml-re vonatkozik. Ezt mindig 4.0.0-ra \u00e1ll\u00edtsuk, mivel jelenleg ez az egyetlen haszn\u00e1latos verzi\u00f3!</li> <li><code>groupId, artifactId, version</code> olyan k\u00f6telez\u0151 elemek, melyek egy\u00e9rtelm\u0171en azonos\u00edtanak egy-egy projektet a maven repository-ban.</li> <li>A <code>groupId</code> a v\u00e1llalat vagy szervezetre vonatkoz\u00f3 egyedi azonos\u00edt\u00f3. Pl: <code>com.company</code></li> <li>Az <code>artifactId</code> a projektre vonatkoz\u00f3 azonos\u00edt\u00f3. A <code>groupId</code>-val egy\u00fctt egy\u00e9rtelm\u0171en meghat\u00e1rozza a projektet a repository-ban.</li> <li>A <code>version</code> a projekt verzi\u00f3j\u00e1t adja meg. A repository-ban egy projekthez k\u00fcl\u00f6nb\u00f6z\u0151 verzi\u00f3k is adottak lehetnek, \u00edgy ezt is egy\u00e9rtelm\u0171s\u00edteni kell.</li> </ul>"},{"location":"legacy/01_gyakorlat/#pom-fajl-tipusok","title":"POM f\u00e1jl t\u00edpusok","text":"<p>Alapvet\u0151en 3 t\u00edpusa l\u00e9tezik:</p> <ul> <li>Egyszer\u0171 (Simple) POM f\u00e1jl: L\u00e9nyeg\u00e9ben az a f\u00e1jl, amit fentebb kaptunk. Csak azok az inform\u00e1ci\u00f3k vannak benne, ami az adott projektre vonatkozik.</li> <li>Super POM f\u00e1jl: Minden egyszer\u0171 POM f\u00e1jlnak van \u0151se, amit super POM-nak nevez\u00fcnk. Ezekben a Super POM-okban alap\u00e9rtelmezett be\u00e1ll\u00edt\u00e1sokat tal\u00e1lunk, melyeket meg\u00f6r\u00f6k\u00f6lnek az egyszer\u0171 POM f\u00e1jlok. A Super POM-ok a Maven telep\u00edt\u00e9si k\u00f6nyvt\u00e1r\u00e1ban tal\u00e1lhat\u00f3ak meg: <code>M2_HOME/lib</code> alatt. A Super POM-okat soha ne m\u00f3dos\u00edtsuk, mert ezzel pont az alap\u00e9rtelmezett konfigur\u00e1ci\u00f3k el\u0151ny\u00e9t csorb\u00edtjuk!</li> <li>Effective POM f\u00e1jl: A super \u00e9s a simple POM-ok kombin\u00e1ci\u00f3ja, azaz a t\u00e9nyleges (effective) POM f\u00e1jl, melyet az adott projekten alkalmazunk.</li> </ul> <p>\u00d6sszefoglal\u00e1sk\u00e9ppen, az \u00e1ltalunk \u00edrt <code>pom.xml</code> egy super POM-b\u00f3l sz\u00e1rmazik, amely egy csom\u00f3 alap dolgot megad (hogyan kell ford\u00edtani a projektet, hogyan kell futtatni a teszteket, stb.), pontosan az\u00e9rt, hogy nek\u00fcnk m\u00e1r csak az elt\u00e9r\u00e9seket kelljen megadni, \u00edgy kevesebb konfigur\u00e1ci\u00f3val m\u00e1ris egy t\u00e9nylegesen m\u0171k\u00f6d\u0151 build le\u00edr\u00f3 f\u00e1jlunk lesz. A saj\u00e1t pom.xml f\u00e1jlunk kieg\u00e9sz\u00edt\u00e9s\u00e9t a super POM-al egy\u00fctt (azaz az effective POM-ot) megn\u00e9zhetj\u00fck, ha kiadjuk a k\u00f6vetkez\u0151 parancsot:</p> <pre><code>mvn help:effective-pom\n</code></pre> <p>Ezt meg tudjuk csin\u00e1lni az IntelliJ-n bel\u00fcl is. Ehhez a Maven n\u00e9zetre is sz\u00fcks\u00e9g\u00fcnk lesz. Ha nincs megnyitva: Ctrl + Shift + A -&gt; <code>Maven</code>.</p> <p></p> <p>Itt a kis 'm'-re kattintva be\u00edrhatjuk oda a fenti parancsot. Ha futtatjuk, akkor az eredm\u00e9nyt az IntelliJ-n bel\u00fcl l\u00e1thatjuk.</p> <p>IntelliJ-n bel\u00fcl egy m\u00e1sik m\u00f3d erre, ha a <code>pom.xml</code> \u00e1llom\u00e1nyra jobb klikkel\u00fcnk \u00e9s a <code>Maven -&gt; Show Effective POM</code> opci\u00f3t kiv\u00e1lasztjuk.</p>"},{"location":"legacy/01_gyakorlat/#fuggosegek","title":"F\u00fcgg\u0151s\u00e9gek","text":"<p>Azokat a k\u00fcls\u0151 lib-eket vagy keretrendszereket, amiket a projekt\u00fcnk haszn\u00e1l f\u00fcgg\u0151s\u00e9geknek nevezz\u00fck. A Maven k\u00e9pes automatikusan let\u00f6lteni a forr\u00e1sk\u00f3dot \u00e9s a dokument\u00e1ci\u00f3t is hozz\u00e1. Nem kell let\u00f6lten\u00fcnk a megfelel\u0151 verzi\u00f3j\u00fa JAR-t valahonnan a netr\u0151l, majd hozz\u00e1adni a projekt\u00fcnk lib-jeihez, classpath-ba rakni stb.</p> <p>Eg\u00e9sz\u00edts\u00fck ki a pom.xml-t a k\u00f6vetkez\u0151kkel (project elem gyereke)!</p> <p><pre><code>&lt;dependencies&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;log4j&lt;/groupId&gt;\n&lt;artifactId&gt;log4j&lt;/artifactId&gt;\n&lt;version&gt;1.2.17&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre> A dependency-kn\u00e9l is <code>groupId</code>, <code>artifactId</code> \u00e9s <code>version</code> alapj\u00e1n megy az azonos\u00edt\u00e1s. Ez alapj\u00e1n tudja a rendszer, hogy mit kell let\u00f6lteni.</p> <p>Feladat</p> <p>K\u00e9sz\u00edts\u00fcnk egy <code>Main</code> \u00e1llom\u00e1nyt a projektben \u00e9s haszn\u00e1ljuk a <code>log4j</code>-t benne!</p> Megold\u00e1s <pre><code>import org.apache.log4j.Level;\nimport org.apache.log4j.Logger;\n\npublic class Main {\n\nprivate static final Logger logger = Logger.getLogger(Main.class);\n\npublic static void main(String[] args) {\nlogger.info(\"Starting main\");\n\nif(logger.isDebugEnabled()){\nlogger.debug(\"This is debug\");\n}\n\nlogger.info(\"Ending main\");\n}\n\n\n}\n</code></pre> <p>Tipp</p> <p>Ha azt kapjuk, hogy <code>release version x not supported</code>, akkor a k\u00f6vetkez\u0151ket kell tenn\u00fcnk (ez a maven miatt van sajnos, aki 1.5-re \u00e1ll\u00edtja a ford\u00edt\u00f3t). A <code>pom.xml</code>-ben adjuk hozz\u00e1 az Apache Maven Compiler Plugin-t (kicsit k\u00e9s\u0151bb m\u00e9g besz\u00e9l\u00fcnk a plugin-ekr\u0151l).</p> <pre><code>&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n&lt;version&gt;3.8.1&lt;/version&gt;\n&lt;configuration&gt;\n&lt;source&gt;11&lt;/source&gt;\n&lt;target&gt;11&lt;/target&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n</code></pre> <p>Figyelem</p> <p>Arra figyelj\u00fcnk, hogy amennyiben a Maven automatikus import-ot nem enged\u00e9lyezt\u00fck a projektben, akkor nyomjuk meg a refresh gombot a Maven f\u00fcl\u00f6n, mivel ilyen esetben nem t\u00f6lti le automatikusan a f\u00fcgg\u0151s\u00e9geket a rendszer!</p> <p>Tranzit\u00edv f\u00fcgg\u0151s\u00e9gek: Amikor egy f\u00fcgg\u0151s\u00e9g\u00fcnknek tov\u00e1bbi f\u00fcgg\u0151s\u00e9gei vannak, akkor tranzit\u00edv f\u00fcgg\u0151s\u00e9gr\u0151l besz\u00e9l\u00fcnk.</p> <p>P\u00e9ld\u00e1ul a <code>junit-jupiter-engine</code> f\u00fcgg\u0151s\u00e9gnek van egy tov\u00e1bbi f\u00fcgg\u0151s\u00e9ge (m\u00e1sok mellett) a <code>junit-jupiter-api</code>-ra, \u00edgy ez ut\u00f3bbit\u00f3l a mi alkalmaz\u00e1sunk tranzit\u00edvan f\u00fcgg.</p> <p>Feladat</p> <p>Pr\u00f3b\u00e1ljuk ki, hogy f\u00fcgg\u0151s\u00e9gk\u00e9nt megadjuk az al\u00e1bbit:</p> <p><pre><code>&lt;dependency&gt;\n&lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;\n&lt;artifactId&gt;junit-jupiter-engine&lt;/artifactId&gt;\n&lt;version&gt;5.7.0&lt;/version&gt;\n&lt;scope&gt;test&lt;/scope&gt;\n&lt;/dependency&gt;\n</code></pre> , majd IntelliJ-n bel\u00fcl a Maven f\u00fcl\u00f6n a <code>Dependencies</code> alatt megvizsg\u00e1ljuk a f\u00fcgg\u0151s\u00e9geket!</p> <p>Megjegyz\u00e9s</p> <p>A tranzit\u00edv f\u00fcgg\u0151s\u00e9gek miatt el\u0151fordulhat, hogy egy f\u00fcgg\u0151s\u00e9g t\u00f6bbsz\u00f6r ker\u00fcl megad\u00e1sra (direkt \u00e9s tranzit\u00edv m\u00f3don is ak\u00e1r). Ilyenkor a nem k\u00edv\u00e1natos tranzit\u00edv f\u00fcgg\u0151s\u00e9get kiz\u00e1rhatjuk a k\u00f6vetkez\u0151k\u00e9ppen (ha p\u00e9ld\u00e1ul JUnit 4-r\u0151l van sz\u00f3):</p> <pre><code>...\n&lt;dependency&gt;\n...\n    &lt;exclusions&gt;\n&lt;exclusion&gt;\n&lt;groupId&gt;junit&lt;/groupId&gt;\n&lt;artifactId&gt;junit&lt;/artifactId&gt;\n&lt;/exclusion&gt;\n&lt;/exclusions&gt;\n&lt;/dependency&gt;\n</code></pre> <p>A f\u00fcgg\u0151s\u00e9geknek lehetnek scope-jai, melyek a k\u00f6vetkez\u0151k lehetnek:</p> <ul> <li>compile: Alap\u00e9rtelmezett scope (ha nem \u00edrjuk ki akkor is ez lesz). Az ilyen m\u00f3don megadott f\u00fcgg\u0151s\u00e9gek beleker\u00fclnek a classpath-ba.</li> <li>provided: Hasonl\u00f3 a compile-hoz, de itt a f\u00fcgg\u0151s\u00e9get fut\u00e1sk\u00f6zben kapja meg a rendszer. A f\u00fcgg\u0151s\u00e9g el\u00e9rhet\u0151 lesz ford\u00edt\u00e1si id\u0151ben is, de az a v\u00e9gs\u0151 artifact-ba nem ker\u00fcl bele. P\u00e9lda: <code>javax.servlet-api</code></li> <li>runtime: A f\u00fcgg\u0151s\u00e9g csak fut\u00e1s k\u00f6zben lesz el\u00e9rhet\u0151, ford\u00edt\u00e1sn\u00e1l nem. P\u00e9ld\u00e1ul, ha MySQL-t haszn\u00e1lunk az alkalmaz\u00e1sunkban, akkor a MySQL driver f\u00fcgg\u0151s\u00e9g\u00e9t runtime-ra \u00e1ll\u00edtva biztosak lehet\u00fcnk abban, hogy a JDBC API-t haszn\u00e1ljuk \u00e9s a konkr\u00e9t driver-t csak fut\u00e1s k\u00f6zben haszn\u00e1lja a rendszer.</li> <li>test: Ezek a f\u00fcgg\u0151s\u00e9gek csak a tesztek futtat\u00e1sa k\u00f6zben lesznek el\u00e9rhet\u0151ek. Tipikus p\u00e9lda: TestNG, JUnit</li> </ul>"},{"location":"legacy/01_gyakorlat/#repository-k","title":"Repository-k","text":"<p>A Maven repository-kb\u00f3l t\u00f6lti le a f\u00fcgg\u0151s\u00e9geket (libek \u00e9s plugin-ok), illetve itt t\u00e1rolja a build eredm\u00e9nyeket is (ak\u00e1r mi is publik\u00e1lhatjuk saj\u00e1t projekt\u00fcnket). Van egy lok\u00e1lis repository, mely a home k\u00f6nyvt\u00e1r <code>.m2/</code> k\u00f6nyvt\u00e1r\u00e1ban tal\u00e1lhat\u00f3 meg. Amennyiben egy lib vagy plugin a lok\u00e1lis repoban el\u00e9rhet\u0151, akkor a Maven azt haszn\u00e1lja, m\u00e1sk\u00fcl\u00f6nben let\u00f6lti a k\u00f6zponti rep\u00f3b\u00f3l \u00e9s elt\u00e1rolja a lok\u00e1lisban is, \u00edgy legk\u00f6zelebb m\u00e1r nem kell a t\u00e1voli repository-hoz fordulnia. Vannak olyan lib-ek, amik nem a Maven k\u00f6zponti repoban vannak, hanem valamelyik m\u00e1sik repoban (pl: JBoss alkalmaz\u00e1sszerver). Az ilyen esetekben tov\u00e1bbi repokat adhatunk meg a pom.xml-ben.</p> <p>P\u00e9lda:</p> <pre><code>&lt;repositories&gt;\n&lt;repository&gt;\n&lt;id&gt;JBoss repository&lt;/id&gt;\n&lt;url&gt;http://repository.jboss.org/nexus/content/groups/public/&lt;/url&gt;\n&lt;/repository&gt;\n&lt;/repositories&gt;\n</code></pre>"},{"location":"legacy/01_gyakorlat/#build-eletciklusok","title":"Build \u00e9letciklusok","text":"<p>Az alap koncepci\u00f3k ut\u00e1n n\u00e9zz\u00fck, hogy a Maven milyen m\u00f3don build-eli a Java projekt\u00fcnket!</p> <p>Minden maven build egy \u00e9letciklust k\u00f6vet, melyek f\u00e1zisokb\u00f3l \u00e1llnak, \u00e9s a f\u00e1zisokhoz goal-ok rendelhet\u0151ek. Pl egy \u00e9letciklusra: ford\u00edts, csomagold az \u00e1llom\u00e1nyokat jar-ba \u00e9s rakd ki a maven repoba.</p> <p>Alapb\u00f3l a k\u00f6vetkez\u0151 \u00e9letciklusok \u00e1llnak rendelkez\u00e9sre:</p> <ul> <li>default</li> <li>clean</li> <li>site</li> </ul> <p>Ezek az \u00e9letciklusok egym\u00e1st\u00f3l f\u00fcggetlenek, \u00e9s ak\u00e1r egyszerre is v\u00e9grehajthat\u00f3ak. A default \u00e9letciklus a k\u00f6vetkez\u0151 f\u00e1zisokra oszthat\u00f3:</p> <ul> <li>validate \u2013 a projekt pom.xml \u00e1llom\u00e1ny\u00e1nak helyess\u00e9g\u00e9t ellen\u0151rzi</li> <li>compile \u2013 ford\u00edt\u00e1s bin\u00e1riss\u00e1</li> <li>test \u2013 unit tesztek futtat\u00e1sa</li> <li>package \u2013 a leford\u00edtott k\u00f3dot csomagba pakoljuk (ZIP, WAR, JAR, EAR)</li> <li>integration-test \u2013 tov\u00e1bbi tesztek futtat\u00e1sa, melyhez kell m\u00e1r a csomag is</li> <li>verify \u2013 a csomag helyess\u00e9g\u00e9nek ellen\u0151rz\u00e9se</li> <li>install \u2013 a lok\u00e1lis maven repoba rakja bele a csomagot</li> <li>deploy \u2013 t\u00e1voli szer\u00f3ra vagy k\u00f6zponti repoba rakja ki a csomagot</li> </ul> <p>A fenti build folyamat eredm\u00e9nyek\u00e9ppen el\u0151\u00e1ll\u00f3 f\u00e1jlokat a clean lifecycle-el t\u00f6r\u00f6lhetj\u00fck (<code>.class</code> \u00e9s metaadatokat tartalmaz\u00f3 f\u00e1jlok, l\u00e9nyeg\u00e9ben a <code>target</code> mappa tartalma). Ezek mellett a site lifecycle seg\u00edts\u00e9g\u00e9vel a Javadoc-ot gener\u00e1ltathatjuk le a rendszerrel.</p> <p>A fent eml\u00edtett f\u00e1zisokhoz mindig tartozik egy pre \u00e9s egy post r\u00e9sz is, amikhez defini\u00e1lhatjuk tov\u00e1bbi goal-okat, melyek rendre a f\u00e1zis el\u0151tt vagy ut\u00e1n futnak le (a pre \u00e9s a post k\u00f6z\u00f6tt van a sima f\u00e1zis is. Pl: pre-compile, compile, post-compile).</p> <p>Na de mi is akkor egy goal? A goal egy j\u00f3l meghat\u00e1rozott feladat, mely hozz\u00e1j\u00e1rul a projekt buildel\u00e9s\u00e9hez. Egy goal f\u00e1zisokhoz tartozhat (0 vagy t\u00f6bb is lehet). Az a goal ami nem tartozik egy f\u00e1zishoz sem, az csak \u00e9letcikluson k\u00edv\u00fcl, direkt h\u00edvhat\u00f3.</p> <p>Vegy\u00fcnk egy p\u00e9ld\u00e1t!</p> <pre><code>mvn clean dependency:copy-dependencies package\n</code></pre> <p>Ebben a parancsban a <code>clean</code> egy \u00e9letciklus, a <code>package</code> a default \u00e9letciklus egy build f\u00e1zisa, a <code>dependency:copy-dependencies</code> viszont egy goal. A parancsban megadott sorrendben fognak lefutni a build f\u00e1zisok \u00e9s goal-ok.</p> <p>\u00d6sszess\u00e9g\u00e9ben gondolhatunk egy f\u00e1zisra \u00fagy, mint goal-ok halmaz\u00e1ra. Illetve egy \u00e9letciklusra, \u00fagy mint f\u00e1zisok egym\u00e1sut\u00e1nis\u00e1g\u00e1ra.</p> <p>Feladat</p> <p>N\u00e9zz\u00fck meg az IntelliJ-ben is a lehet\u0151s\u00e9geket!</p>"},{"location":"legacy/01_gyakorlat/#plugin-ok-es-goal-ok","title":"Plugin-ok \u00e9s Goal-ok","text":"<p>Egy plugin nem m\u00e1s mint goal-ok halmaza, melyek mindegyike valamilyen f\u00e1zisban ker\u00fcl v\u00e9grehajt\u00e1sra (ez a sorrendis\u00e9g miatt fontos).</p> <p>Van egy rak\u00e1s be\u00e9p\u00edtett plugin amit haszn\u00e1lhatunk. Ezeket megn\u00e9zhetj\u00fck itt.</p> <p>A Maven rendelkezik egy alap\u00e9rtelmezett megad\u00e1ssal is, hogy melyik f\u00e1zishoz milyen goal-ok vannak alapb\u00f3l bek\u00f6tve. L\u00e1sd itt.</p> <p>Hogy egy f\u00e1zishoz tartoz\u00f3 goal-okat lefuttassunk a k\u00f6vetkez\u0151t kell kiadnunk a parancssorban:</p> <pre><code>mvn &lt;phase&gt;\n</code></pre> <p>P\u00e9ld\u00e1ul az <code>mvn clean install</code> parancs kiad\u00e1s\u00e1ra elt\u00e1vol\u00edtjuk az el\u0151z\u0151leg konstru\u00e1lt csomagot \u00e9s a leford\u00edtott \u00e1llom\u00e1nyokat (clean f\u00e1zis), majd lefuttattjuk az \u00f6sszes f\u00e1zist, ami sz\u00fcks\u00e9ges az install-hoz.</p> <p>A plugin jobb meg\u00e9rt\u00e9s\u00e9hez vizsg\u00e1ljuk meg a Maven Compiler Plugin-t, mely a forr\u00e1sk\u00f3dok leford\u00edt\u00e1s\u00e1\u00e9rt felel\u0151s (.class f\u00e1jlok el\u0151\u00e1ll\u00edt\u00e1sa), azaz ekvivalens egy <code>javac</code> futtat\u00e1ssal. A compiler plugin haszn\u00e1lat\u00e1hoz a k\u00f6vetkez\u0151t kell megadnunk a <code>pom.xml</code>-ben:</p> <pre><code>&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n&lt;version&gt;3.8.1&lt;/version&gt;\n&lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n</code></pre> <p>A compiler plugin enged\u00e9lyezi a <code>compile</code> f\u00e1zis haszn\u00e1lat\u00e1t a default lifecycle-ben. Ezut\u00e1n adjuk ki a k\u00f6vetkez\u0151 parancsot, hogy leford\u00edtsuk a projekt forr\u00e1s\u00e1llom\u00e1nyait!</p> <pre><code>mvn compiler:compile\n</code></pre> <p>Hat\u00e1s\u00e1ra a leford\u00edtott \u00e1llom\u00e1nyok a <code>target</code> mappa alatt j\u00f6nnek l\u00e9tre.</p> <p>IntelliJ-ben szimpl\u00e1n dupla kattoljunk a Maven f\u00fcl alatt a compile lifecycle elemre \u00e9s hasonl\u00f3 hat\u00e1st \u00e9rhet\u00fcnk el!</p>"},{"location":"legacy/01_gyakorlat/#property-k-hasznalata","title":"Property-k haszn\u00e1lata","text":"<p>A pom.xml-ben ha t\u00f6bb helyen akarunk konstans \u00e9rt\u00e9keket felhaszn\u00e1lni, akkor \u00e9rdemes lehet property-ket haszn\u00e1lni. A defini\u00e1lt property-ket a pom.xml-ben b\u00e1rhol felhaszn\u00e1lhatjuk \u00e9s hivatkozni a <code>${property_name}</code> alakban kell.</p> <p>P\u00e9ld\u00e1ul a fenti maven compiler haszn\u00e1lat\u00e1t \u00edgy is m\u00f3dos\u00edthatjuk a pom.xml-ben.</p> <pre><code>&lt;properties&gt;\n&lt;java_version&gt;11&lt;/java_version&gt;\n&lt;/properties&gt;\n\n&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n&lt;version&gt;3.8.1&lt;/version&gt;\n&lt;configuration&gt;\n&lt;source&gt;${java_version}&lt;/source&gt;\n&lt;target&gt;${java_version}&lt;/target&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n</code></pre> <p>A property-k j\u00f3l j\u00f6hetnek az \u00fatvonalmegad\u00e1sokn\u00e1l is.</p>"},{"location":"legacy/01_gyakorlat/#pom-build-szekcio","title":"POM - Build szekci\u00f3","text":"<p>A pom.xml egy fontos szelete a build, melybe m\u00e1r raktunk plugin-t is fentebb. Ebben a r\u00e9szben adhatjuk meg az alap\u00e9rtelmezett Maven goal-t, a projekt bin\u00e1risainak mapp\u00e1j\u00e1t, az alkalmaz\u00e1sunk nev\u00e9t.</p> <pre><code>&lt;build&gt;\n&lt;defaultGoal&gt;install&lt;/defaultGoal&gt;\n&lt;directory&gt;${basedir}/target&lt;/directory&gt;\n&lt;finalName&gt;${artifactId}-${version}&lt;/finalName&gt;\n//...\n&lt;/build&gt;\n</code></pre> <p>A fenti r\u00e9szletben haszn\u00e1lt property-ket haszn\u00e1lhatjuk an\u00e9lk\u00fcl, hogy azokat a properties elemben defini\u00e1ljuk, ezeket szolg\u00e1ltatja a rendszer.</p> <p>A Maven alapjait az al\u00e1bbi vide\u00f3 foglalja \u00f6ssze:</p> <p></p>"},{"location":"legacy/01_gyakorlat/#profilok","title":"Profilok","text":"<p>A fejleszt\u00e9s k\u00f6zben \u00e1ltal\u00e1ban felmer\u00fcl az ig\u00e9ny, hogy m\u00e1sk\u00e9ppen menjen a build folyamata fejleszt\u00e9s k\u00f6zben, mint amikor production k\u00f3dot akarunk el\u0151\u00e1ll\u00edtani \u00e9s azt valahova \u00e9les\u00edteni. Erre kit\u0171n\u0151 megold\u00e1st adnak a profilok, amik igaz\u00e1b\u00f3l k\u00fcl\u00f6nb\u00f6z\u0151 konfigur\u00e1ci\u00f3kat adnak meg a pom.xml-en bel\u00fcl.</p> <p>P\u00e9lda:</p> <pre><code>&lt;profiles&gt;\n&lt;profile&gt;\n&lt;id&gt;production&lt;/id&gt;\n&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n//...\n               &lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n&lt;/profile&gt;\n&lt;profile&gt;\n&lt;id&gt;development&lt;/id&gt;\n&lt;activation&gt;\n&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;\n&lt;/activation&gt;\n&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n//...\n               &lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n&lt;/profile&gt;\n&lt;/profiles&gt;\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban a development az alap\u00e9rtelmezett (<code>activeByDefault</code> elem adja meg), de amennyiben a <code>production</code>-t akarjuk haszn\u00e1lni akkor a k\u00f6vetkez\u0151t kell kiadni:</p> <pre><code>mvn clean install -Pproduction\n</code></pre> <p>Az is lehet, hogy a development k\u00f6zben nem szeretn\u00e9nk, ha a tesztek lefutn\u00e1nak. Ilyenkor a k\u00f6vetkez\u0151t haszn\u00e1lhatjuk:</p> <pre><code>&lt;profile&gt;\n&lt;id&gt;development&lt;/id&gt;\n&lt;properties&gt;\n&lt;maven.test.skip&gt;true&lt;/maven.test.skip&gt;\n&lt;/properties&gt;\n&lt;activation&gt;\n&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;\n&lt;/activation&gt;\n&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n//...\n            &lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n&lt;/profile&gt;\n</code></pre>"},{"location":"legacy/01_gyakorlat/#maven-projekt-parancssorbol","title":"Maven projekt parancssorb\u00f3l","text":"<pre><code>mvn archetype:generate -DgroupId=hu.alkfejl -DartifactId=commandline-maven -DarchetypeArtifactId=maven-archetype-quickstart\n</code></pre> <p>A fenti parancs hat\u00e1s\u00e1ra gener\u00e1l\u00f3dik egy projekt, mely a maven-archetype-quickstart projekt sablont haszn\u00e1lja. Emellett a <code>groupId</code>-t \u00e9s az <code>artifactId</code>-t adtuk meg. Alap\u00e9rtelmezetten interakt\u00edv m\u00f3dban indul a gener\u00e1l\u00e1s. Ha ezt ki akarjuk kapcsolni, akkor a <code>-DinteractiveMode=false</code> kapcsol\u00f3t is adjuk \u00e1t a maven-nek! A l\u00e9trehozott projektben benne lesz a JUnit, illetve egy egyszer\u0171 'Hello World' jelleg\u0171 <code>App.java</code> \u00e1llom\u00e1ny.</p> <p>A maven archetype-ok el\u0151re defini\u00e1lt projekt v\u00e1zakat/sablonokat tartalmaznak, melyek k\u00f6z\u00fcl v\u00e1laszthatjuk a nek\u00fcnk legjobban megfelel\u0151t.</p> <p>Ha elk\u00e9sz\u00fclt a projekt\u00fcnk, akkor ford\u00edtsuk le azt maven-nel:</p> <pre><code>mvn compile\n</code></pre> <p>Ekkor a maven v\u00e9gigmegy az \u00f6sszes f\u00e1zison, ami a compile-ig van a sorban \u00e9s mag\u00e1n a compile-on is. V\u00e9geredm\u00e9nyk\u00e9nt leford\u00edtja a projekt \u00e1llom\u00e1nyait.</p> <p>Tesztek futtat\u00e1s\u00e1hoz:</p> <pre><code>mvn test\n</code></pre> <p>Csomag k\u00e9sz\u00edt\u00e9s\u00e9hez:</p> <pre><code>mvn package\n</code></pre>"},{"location":"legacy/01_gyakorlat/#alkalmazas-futtatasa","title":"Alkalmaz\u00e1s futtat\u00e1sa","text":"<p>Az alkalmaz\u00e1st futtathatjuk is a maven seg\u00edts\u00e9g\u00e9vel. Ehhez egy plugin-re lesz sz\u00fcks\u00e9g\u00fcnk, melynek neve: <code>exec-maven-plugin</code>.</p> <p>A pom.xml <code>plugins</code> r\u00e9szben helyezz\u00fck el a k\u00f6vetkez\u0151t: <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;\n&lt;artifactId&gt;exec-maven-plugin&lt;/artifactId&gt;\n&lt;version&gt;1.5.0&lt;/version&gt;\n&lt;configuration&gt;\n&lt;mainClass&gt;hu.alkfejl.App&lt;/mainClass&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre></p> <p>Ezut\u00e1n:</p> <pre><code>mvn exec:java\n</code></pre> <p>paranccsal futtathatjuk majd a projekt\u00fcnket.</p> <p>Feladat (03_XML_Reader)</p> <p>Olvassuk be az el\u0151z\u0151leg elk\u00e9sz\u00edtett <code>users.xml</code> \u00e1llom\u00e1ny felhaszn\u00e1l\u00f3it:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;users&gt;\n&lt;user id=\"1\"&gt;\n&lt;name&gt;Gipsz Jakab&lt;/name&gt;\n&lt;email&gt;gipsz@jakab.hu&lt;/email&gt;\n&lt;age&gt;21&lt;/age&gt;\n&lt;/user&gt;\n&lt;user id=\"2\"&gt;\n&lt;name&gt;Kandisz N\u00f3ra&lt;/name&gt;\n&lt;email&gt;kandisz@nora.hu&lt;/email&gt;\n&lt;age&gt;54&lt;/age&gt;\n&lt;/user&gt;\n&lt;user id=\"3\"&gt;\n&lt;name&gt;Beviz Elek&lt;/name&gt;\n&lt;email&gt;beviz@elek.com&lt;/email&gt;\n&lt;age&gt;14&lt;/age&gt;\n&lt;/user&gt;\n&lt;/users&gt;\n</code></pre> <p>A beolvas\u00e1shoz haszn\u00e1lhatjuk a k\u00f6vetkez\u0151 f\u00fcgg\u0151s\u00e9get, melyr\u0151l tov\u00e1bbi infomr\u00e1ci\u00f3k el\u00e9rhet\u0151ek itt</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;com.fasterxml.jackson.dataformat&lt;/groupId&gt;\n&lt;artifactId&gt;jackson-dataformat-xml&lt;/artifactId&gt;\n&lt;version&gt;2.10.1&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> Megold\u00e1s <p>User.java:</p> <pre><code>import com.fasterxml.jackson.annotation.JsonProperty;\nimport com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n\n@JacksonXmlRootElement(localName = \"user\")\npublic class User {\nprivate Long id;\nprivate String name;\nprivate String email;\nprivate int age;\n\n@Override\npublic String toString() {\nreturn \"User{\" +\n\"id=\" + id +\n\", name='\" + name + '\\'' +\n\", email='\" + email + '\\'' +\n\", age=\" + age +\n'}';\n}\n\npublic Long getId() {\nreturn id;\n}\n\npublic void setId(Long id) {\nthis.id = id;\n}\n\npublic String getName() {\nreturn name;\n}\n\npublic void setName(String name) {\nthis.name = name;\n}\n\npublic String getEmail() {\nreturn email;\n}\n\npublic void setEmail(String email) {\nthis.email = email;\n}\n\npublic int getAge() {\nreturn age;\n}\n\npublic void setAge(int age) {\nthis.age = age;\n}\n}\n</code></pre> <p>Users.java <pre><code>import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\nimport com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\nimport com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Users {\n@JacksonXmlElementWrapper(useWrapping = false)\n@JacksonXmlProperty(localName = \"user\")\nList&lt;User&gt; users = new ArrayList&lt;&gt;();\n\npublic List&lt;User&gt; getUsers() {\nreturn users;\n}\n\npublic void setUsers(List&lt;User&gt; users) {\nthis.users = users;\n}\n}\n</code></pre></p> <p>Main.java:</p> <pre><code>import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class Main {\n\nprivate static &lt;T&gt; T readXML(String file, Class&lt;T&gt; clazz){\n\nT result = null;\ntry{\nXmlMapper mapper = new XmlMapper();\nString content = new String(Files.readAllBytes(Paths.get(file)));\nresult = mapper.readValue(content, clazz);\n} catch (IOException e) {\ne.printStackTrace();\n}\n\nreturn result;\n}\n\npublic static void main(String[] args) {\n\nif(args.length != 1){\nSystem.out.println(\"XML file path is missing\");\nreturn;\n}\n\nString filepath = args[0];\n\nif(!new File(filepath).exists()){\nSystem.out.println(\"XML file is missing\");\nreturn;\n}\n\nUsers u = readXML(filepath, Users.class);\nSystem.out.println(u.getUsers().size());\n}\n}\n</code></pre> <p>Feladat (04_commandline-maven)</p> <p>Keress\u00fck meg a parancssori Maven parancsok IDE-n bel\u00fcli megfelel\u0151it! Pr\u00f3b\u00e1ljunk ki valamilyen archetype-ot is!</p>"},{"location":"legacy/01_gyakorlat/#referenciak","title":"Referenci\u00e1k","text":"<ul> <li>W3Schools - XML Tutorial</li> <li>Maven Homepage</li> </ul>"},{"location":"legacy/02_gyakorlat/","title":"2. gyakorlat","text":""},{"location":"legacy/02_gyakorlat/#mi-is-az-a-javafx","title":"Mi is az a JavaFX?","text":"<ul> <li>Java GUI-s alkalmaz\u00e1sokhoz egy ide\u00e1lis v\u00e1laszt\u00e1s</li> <li>Tekinthet\u0151 a Swing lesz\u00e1rmazottj\u00e1nak</li> <li>GUI \u00e9p\u00edt\u00e9s k\u00e9tf\u00e9le m\u00f3don:<ul> <li>Java k\u00f3d \u00edr\u00e1s\u00e1val</li> <li>FXML le\u00edr\u00f3 seg\u00edts\u00e9g\u00e9vel (XML alap\u00fa)</li> </ul> </li> </ul>"},{"location":"legacy/02_gyakorlat/#a-javafx-komponensei","title":"A JavaFX komponensei","text":"<p>A GUI fel\u00e9p\u00edt\u00e9s\u00e9hez egy \u00fagynevezett Scene Graph hozunk l\u00e9tre. Ez a gr\u00e1f vizu\u00e1lis elemeket tartalmaz, amiket Node-oknak nevez\u00fcnk (<code>javafx.scene.Node</code>). Ezeket a <code>Node</code>-okat a Scene Graph hierarchikus elrendez\u00e9sben t\u00e1rolja. Fontos, hogy ez a hierarchia egy f\u00e1t alkot, azaz nincs benne k\u00f6r. Ez az\u00e9rt tilos, mert p\u00e9ld\u00e1ul ha k\u00e9t t\u00e1rol\u00f3 egym\u00e1st t\u00e1roln\u00e1 direkt vagy indirekt az \u00e9rtelmetlen lenne. Tov\u00e1bb\u00e1 a gr\u00e1fhoz minden elemet csak egyszer adhatunk hozz\u00e1. A Scene Graph-ot a publikus JavaFX API seg\u00edts\u00e9g\u00e9vel tudjuk fel\u00e9p\u00edteni. Egy node lehet p\u00e9ld\u00e1ul egy egyszer\u0171 UI vez\u00e9rl\u0151, p\u00e9ld\u00e1ul egy gomb. Egy p\u00e9lda Scene Graph az al\u00e1bb l\u00e1that\u00f3:</p> Scene Graph p\u00e9lda (Forr\u00e1s: FxDocs) <p>A hierarchia legfels\u0151bb pontj\u00e1n a <code>Stage</code> \u00e1ll, mely egy nat\u00edv ablakot reprezent\u00e1l. A <code>Stage</code> egyszerre csak egy <code>Scene</code>-t tartalmazhat, mely a Scene Graph t\u00e1rol\u00f3ja. A bels\u0151 \u00fagynevezett <code>Branch Node</code>-oknak lehetnek gyerekei, \u00edgy ezek a node-ok <code>Parent</code> t\u00edpus\u00faak. Ennek a reprezent\u00e1ci\u00f3nak az el\u0151nye, hogy tetsz\u0151leges transzform\u00e1ci\u00f3t egy bels\u0151 node-ra alkalmazva, annak gyerekeire is \u00e9rv\u00e9nyesek lesznek azok. P\u00e9ld\u00e1ul, ha eltolunk egy elemet, aminek vannak gyerekei is, akkor azok is el lesznek tolva a megadott transzform\u00e1ci\u00f3 alapj\u00e1n.</p> <p>A Prism egy hardver-gyors\u00edtott grafikus cs\u0151vezet\u00e9k, ami rendereli a Scene Graph-ot.</p> <p>A Glass Windowing Toolkit az oper\u00e1ci\u00f3s rendszert\u0151l f\u00fcgg\u0151en nat\u00edv m\u00f3don ablakoz\u00e1si feladatokat l\u00e1t el. Ezen fel\u00fcl ez a komponens felel\u0151s az esem\u00e9nykezel\u0151 sorok (event queue) kezel\u00e9s\u00e9\u00e9rt. JavaFX-ben az esem\u00e9nyek a f\u0151 threadben ker\u00fclnek kezel\u00e9sre, amely JavaFX-ben az \u00fagynevezett Application Thread. Fontos, hogy a Scene Graph-ot csak ezen a f\u0151 sz\u00e1lon kereszt\u00fcl m\u00f3dos\u00edthatjuk.</p> <p>A Media Engine meglep\u0151 m\u00f3don a m\u00e9dia lej\u00e1tsz\u00e1s\u00e1hoz ad seg\u00edts\u00e9get. Audio \u00e9s Vide\u00f3 lej\u00e1tsz\u00e1si lehet\u0151s\u00e9geket biztos\u00edt a felhaszn\u00e1l\u00f3 sz\u00e1m\u00e1ra.</p> <p>JavaFX-es alkalmaz\u00e1sainkban webes tartalmat is megjelen\u00edthet\u00fcnk, melynek felel\u0151se a web engine (WebKit alap\u00fa).</p> <p>A Quantum toolkit a 4 alacsony szint felett egy absztrakci\u00f3s szint, illetve a 4 alacsony szint k\u00f6z\u00f6tti koordin\u00e1ci\u00f3\u00e9rt is \u0151 a felel\u0151s.</p> <p></p>"},{"location":"legacy/02_gyakorlat/#hello-world-javafx-ben","title":"Hello World JavaFX-ben","text":"<p>A k\u00f6vetkez\u0151kben megn\u00e9zz\u00fck, hogy hogyan kell be\u00e1ll\u00edtani a projekt\u00fcnket, hogy k\u00e9pesek legy\u00fcnk JavaFX alkalmaz\u00e1sokat \u00edrni. A projektek buildel\u00e9s\u00e9hez Maven-t fogunk haszn\u00e1lni, \u00edgy erre f\u00f3kusz\u00e1lunk.</p>"},{"location":"legacy/02_gyakorlat/#javafx-maven","title":"JavaFX + Maven","text":"<p>Feladat</p> <p>Csin\u00e1ljunk egy teszt projektet az IDE-ben Maven haszn\u00e1lat\u00e1val! JavaFX alkalmaz\u00e1shoz k\u00f6vess\u00fck a hivatalos le\u00edr\u00e1st!</p> Megold\u00e1s <p>A projekt l\u00e9trehoz\u00e1s\u00e1t \u00e9s konfigur\u00e1ci\u00f3j\u00e1t az al\u00e1bbi vide\u00f3 mutatja be:</p> <p></p>"},{"location":"legacy/02_gyakorlat/#javafx-sdk","title":"JavaFX SDK","text":"<p>Feladat</p> <p>Pr\u00f3b\u00e1ljuk ki a projekt l\u00e9trehoz\u00e1s\u00e1t a JavaFX SDK haszn\u00e1lat\u00e1val is!</p> Megold\u00e1s <p>A projekt l\u00e9trehoz\u00e1s\u00e1t \u00e9s konfigur\u00e1ci\u00f3j\u00e1t az al\u00e1bbi vide\u00f3 mutatja be:</p> <p></p>"},{"location":"legacy/02_gyakorlat/#a-generalt-projekt-felepitese","title":"A gener\u00e1lt projekt fel\u00e9p\u00edt\u00e9se","text":"<p>B\u00e1rmelyik fenti megold\u00e1st is v\u00e1lasztjuk a projekt\u00fcnk l\u00e9trehoz\u00e1s\u00e1hoz, azokban lesznek olyan alkot\u00f3elemek, melyek minden JavaFX alkalmaz\u00e1sban megtal\u00e1lhat\u00f3ak. Ezeket az elemeket a k\u00f6vetkez\u0151 vide\u00f3 mutatja be, illetve lesz r\u00f3luk sz\u00f3 a k\u00f6vetkez\u0151 szekci\u00f3kban is.</p> <p></p>"},{"location":"legacy/02_gyakorlat/#csontvaz","title":"Csontv\u00e1z","text":"<p>Minden JavaFX alkalmaz\u00e1snak az Application oszt\u00e1lyb\u00f3l kell sz\u00e1rmaznia, ami a <code>javafx.application</code> csomagban tal\u00e1lhat\u00f3. Teh\u00e1t minden alkalmaz\u00e1s f\u0151 oszt\u00e1lya valahogy \u00edgy n\u00e9z ki:</p> <pre><code>package hu.alkfejl;\nimport javafx.application.Application;\n\npublic class HelloFX extends Application {\n// ide j\u00f6n a tov\u00e1bbi k\u00f3d\n}\n</code></pre> <p>Ez a k\u00f3d ilyen form\u00e1ban m\u00e9g nem lesz futtathat\u00f3. Az <code>Application</code> oszt\u00e1ly egy absztrakt oszt\u00e1ly, melynek van egy <code>start(Stage stage)</code> absztrakt met\u00f3dusa. Az <code>Application</code> oszt\u00e1lyban a k\u00f6vetkez\u0151 m\u00f3don van deklar\u00e1lva a met\u00f3dus:</p> <p><pre><code>public abstract void start(Stage stage) throws java.lang.Exception\n</code></pre> Ez lesz a f\u0151 bel\u00e9p\u00e9si pont, \u00e9s nek\u00fcnk kell kifejten\u00fcnk. Ezzel b\u0151v\u00edtve a k\u00f3dot a k\u00f6vetkez\u0151t kapjuk:</p> <p><pre><code>package hu.alkfejl;\nimport javafx.application.Application;\nimport javafx.stage.Stage;\n\npublic class HelloFX extends Application {\n\n@Override\npublic void start(Stage stage) {\n// Ide j\u00f6n, hogy indul\u00e1skor mi t\u00f6rt\u00e9njen\n}\n}\n</code></pre> A start met\u00f3dus a JavaFX alkalmaz\u00e1s elind\u00edt\u00e1sakor fog megh\u00edv\u00f3dni. Vegy\u00fck \u00e9szre, hogy param\u00e9terk\u00e9nt egy <code>Stage</code>-et kap ez a met\u00f3dus. Ez lesz az \u00fagynevezett primary stage. A stage-re tekints\u00fcnk \u00fagy, mint egy komplett ablakra (c\u00edmsor, minimize, maximize, bez\u00e1r\u00e1s gombokkal egy\u00fctt, \u00e9s maga az ablak tartalma). Az ablak tartalma egy scene lesz, amit majd kicsit k\u00e9s\u0151bb hozz\u00e1 is fogunk adni. A primary stage mindig l\u00e9trej\u00f6n, de ezen fel\u00fcl majd mi magunk is hozhatunk l\u00e9tre tov\u00e1bbi stage-eket (ablakokat).</p> <p>A fenti alkalmaz\u00e1st m\u00e1r le tudjuk ford\u00edtani, de t\u00f6rt\u00e9nni nem fog semmi. N\u00e9zz\u00fck meg mi kell ahhoz, hogy valami l\u00e1that\u00f3t is csin\u00e1ljunk.</p> <p>Teh\u00e1t a primary stage-\u00fcnk tekinthet\u0151 egy scene t\u00e1rol\u00f3j\u00e1nak. A JavaFX \u00e1ltal l\u00e9trehozott primary stage-nek alapb\u00f3l nincs megadva scene-je, azaz \u00fcres ez a kont\u00e9ner (az ablakon bel\u00fcl nincs semmi tartalom). K\u00e9s\u0151bb k\u00e9sz\u00edt\u00fcnk egy saj\u00e1t scene-t amit megadunk majd a primary stage-nek. Egyel\u0151re \u00e1ll\u00edtsuk be a primary stage c\u00edmsor\u00e1t, hogy mutassa a 'Hello JavaFX' sz\u00f6veget. Ahhoz, hogy a stage-et kirajzolja (renderelje a rendszer) meg kell h\u00edvnunk a <code>show()</code> met\u00f3dus\u00e1t.</p> <pre><code>package hu.alkfejl;\nimport javafx.application.Application;\nimport javafx.stage.Stage;\n\npublic class HelloFX extends Application {\n\n@Override\npublic void start(Stage stage) {\nstage.setTitle(\"Hello JavaFX\");\n\nstage.show();\n}\n}\n</code></pre> <p>A fenti k\u00f3d teljesen j\u00f3l m\u0171k\u00f6dik, \u00e1m a szemf\u00fclesek \u00e9szrevehetik, hogy nincsen <code>main</code> met\u00f3dusunk. JavaFX alkalmaz\u00e1s eset\u00e9ben nem is kell, hogy legyen <code>main</code> met\u00f3dusunk. Ha ez valami\u00e9rt m\u00e9gis sz\u00fcks\u00e9ges sz\u00e1munkra (p\u00e9ld\u00e1ul a parancssori argumentumok miatt) akkor m\u00f3dos\u00edtsuk a programunkat a k\u00f6vetkez\u0151k\u00e9ppen.</p> <pre><code>package hu.alkfejl;\nimport javafx.application.Application;\nimport javafx.stage.Stage;\n\npublic class HelloFX extends Application {\n\npublic static void main(String[] args) {\nApplication.launch(args);\n}\n\n@Override\npublic void start(Stage stage) {\nstage.setTitle(\"Hello JavaFX\");\n\nstage.show();\n}\n}\n</code></pre> <p>Az <code>Application</code> statikus <code>launch</code> met\u00f3dusa csin\u00e1l n\u00e9h\u00e1ny munk\u00e1latot a h\u00e1tt\u00e9rben, majd megh\u00edvja a <code>start</code> met\u00f3dust. Ilyen m\u00f3don j\u00f3form\u00e1n becsomagoltuk a JavaFX alkalmaz\u00e1sunkat.</p> <p>Fontos</p> <p>N\u00e9h\u00e1ny IDE eset\u00e9n probl\u00e9m\u00e1t okozhat a <code>main</code> n\u00e9lk\u00fcli oszt\u00e1ly, \u00edgy mi mindig haszn\u00e1lni fogjuk.</p> <p>Tipp</p> <p>A <code>launch</code> met\u00f3dus nem t\u00e9r addig vissza, ameddig minden ablakot be nem z\u00e1runk, vagy meg nem h\u00edvjuk a <code>Platform.exit()</code> met\u00f3dust.</p>"},{"location":"legacy/02_gyakorlat/#scene-hozzaadasa","title":"Scene hozz\u00e1ad\u00e1sa","text":"<p>Ahogy azt eml\u00edtett\u00fck kor\u00e1bban a primary stage-\u00fcnk tartalmazhat egy <code>Scene</code>-t, ami pedig a grafikai elemeket tartalmazza egy fa-strukt\u00far\u00e1ban. Ennek a fa hierarchi\u00e1nak a legfels\u0151 pontja az \u00fagynevezett root node. Egy <code>Scene</code>-nek rendelkeznie kell egy root node-al. A k\u00f6vetkez\u0151 p\u00e9ld\u00e1ban <code>VBox</code>-ot haszn\u00e1lunk majd root-k\u00e9nt, amely egy vertik\u00e1lis t\u00e1rol\u00f3.</p> <p>Tipp</p> <p>B\u00e1rmelyik elem ami a <code>javafx.scene.Parent</code> oszt\u00e1lyb\u00f3l sz\u00e1rmazik haszn\u00e1lhat\u00f3 root node-k\u00e9nt. Tipikusan a t\u00e1rol\u00f3k \u00e9s elrendez\u00e9s panelek ilyen elemek. P\u00e9ld\u00e1ul: <code>VBox</code>, <code>HBox</code>, <code>Pane</code>, <code>GridPane</code>, <code>TilePane</code>, <code>FlowPane</code>.</p> <p>\u00cdme egy p\u00e9lda, amiben m\u00e1r scene-t is adunk a stage-hez:</p> <pre><code>package hu.alkfejl;\nimport javafx.application.Application;\nimport javafx.scene.Scene;\nimport javafx.scene.layout.VBox;\nimport javafx.scene.text.Text;\nimport javafx.stage.Stage;\n\npublic class HelloFX extends Application {\n\npublic static void main(String[] args) {\nApplication.launch(args);\n}\n\n@Override\npublic void start(Stage stage) {\nstage.setTitle(\"Hello JavaFX\");\n\nVBox root = new VBox();\nText msg = new Text(\"Hello JavaFX from the Scene\");\nroot.getChildren().add(msg);\n\nScene scene = new Scene(root, 300, 50);\n\nstage.setScene(scene);\nstage.show();\n}\n}\n</code></pre> <p>Vegy\u00fck sorra az \u00faj k\u00f3dot. Ahhoz, hogy a scene root node-j\u00e1t be tudjuk \u00e1ll\u00edtani l\u00e9trehozunk egy <code>VBox</code> objektumot, amely egy vertik\u00e1lis elrendez\u00e9st biztos\u00edt\u00f3 t\u00e1rol\u00f3. Ez azt jelenti, hogy a VBox-hoz hozz\u00e1adott gyermek node-ok egym\u00e1s alatt fognak megjelenni.</p> <pre><code>VBox root = new VBox();\n</code></pre> <p>Ehhez a t\u00e1rol\u00f3hoz most egyetlen gyereket adunk hozz\u00e1, m\u00e9gpedig egy <code>Text</code> t\u00edpus\u00fa objektumot.</p> <pre><code>Text msg = new Text(\"Hello JavaFX from the Scene\");\n</code></pre> <p>Ez egy egyszer\u0171 sz\u00f6veges tartalmat defini\u00e1l JavaFX-ben. A <code>Text</code> oszt\u00e1ly azon konstruktor\u00e1t haszn\u00e1ltuk, melynek egy <code>String</code>-et adhatunk meg. Ezut\u00e1n t\u00e9nylegesen hozz\u00e1 is adjuk a l\u00e9trehozott <code>Text</code> objektumot a t\u00e1rol\u00f3hoz:</p> <p><pre><code>root.getChildren().add(msg);\n</code></pre> A <code>getChildren()</code> met\u00f3dussal lek\u00e9rhet\u0151 az adott t\u00e1rol\u00f3 \u00f6sszes gyereke, ami egy <code>ObservableList&lt;Node&gt;</code> objektumot ad vissza, azaz a gyerekeket egy list\u00e1ban \u00e9rhetj\u00fck el. A fenti p\u00e9ld\u00e1ban egyszer\u0171en ehhez a list\u00e1hoz adjuk hozz\u00e1 az \u00faj elemet, azaz a <code>Text</code> t\u00edpus\u00fa <code>msg</code> objektumot.</p> <p>Tipp</p> <p>Minden <code>Parent</code>-b\u0151l sz\u00e1rmaz\u00f3 elemnek van <code>getChildren()</code> met\u00f3dusa, mivel a <code>Parent</code>-nek lehetnek gyerekei...</p> <p>Az <code>ObservableList</code> egy olyan lista interface, mely biztos\u00edtja azt, hogy a lista v\u00e1ltoz\u00e1sakor a feliratkoz\u00f3k \u00e9rtes\u00edt\u00e9st kapjanak. Ez az\u00e9rt fontos, mert ha fut\u00e1s k\u00f6zben dinamikusan v\u00e1ltoztatjuk egy <code>Parent</code> gyerekeit (pl. hozz\u00e1adunk egy \u00faj gyereket), akkor val\u00f3sz\u00edn\u0171leg \u00fajra ki kell rajzolnia a rendszernek.</p> <p>Miut\u00e1n elk\u00e9sz\u00edtett\u00fck a root node-unkat \u00e9s adtunk hozz\u00e1 tartalmat, l\u00e9trehozzuk a scene-t:</p> <pre><code>Scene scene = new Scene(root, 300, 50);\n</code></pre> <p>A <code>Scene</code> t\u00f6bb konstruktorral is rendelkezik, de a root node-ot meg kell adnunk mindenk\u00e9ppen (ami <code>Parent</code> t\u00edpus\u00fa kell legyen). A p\u00e9ld\u00e1ban megadjuk a scene m\u00e9ret\u00e9t is (sz\u00e9less\u00e9g \u00e9s magass\u00e1g).</p> <p>Ezut\u00e1n a primary stage-nek meg kell mondanunk, hogy az im\u00e9nt l\u00e9trehozott scene-t haszn\u00e1lja, \u00edgy a k\u00f6vetkez\u0151 utas\u00edt\u00e1st is megadjuk: <pre><code>stage.setScene(scene);\n</code></pre></p> <p>Feladat</p> <p>V\u00e1ltoztassuk meg az ablak \"st\u00edlus\u00e1t\" a <code>void initStyle(StageStyle style)</code> met\u00f3dus seg\u00edts\u00e9g\u00e9vel, melyet m\u00e9g a <code>show()</code> el\u0151tt h\u00edvjunk meg! A haszn\u00e1lhat\u00f3 \u00e9rt\u00e9kek:</p> <ul> <li>StageStyle.DECORATED</li> <li>StageStyle.UNDECORATED</li> <li>StageStyle.TRANSPARENT</li> <li>StageStyle.UNIFIED</li> <li>StageStyle.UTILITY</li> </ul> <p>Feladat</p> <p>Tiltsuk le a f\u0151 ablakunk \u00e1tm\u00e9retez\u00e9s\u00e9t a <code>setResizable()</code> met\u00f3dus haszn\u00e1lat\u00e1val!</p> <p>Feladat</p> <p>\u00c1ll\u00edtsuk be az ablakunk minim\u00e1lis, illetve maxim\u00e1lis sz\u00e9less\u00e9g\u00e9t \u00e9s magass\u00e1g\u00e1t a k\u00f6vetkez\u0151k haszn\u00e1lat\u00e1val:</p> <ul> <li><code>setMinWidth()</code></li> <li><code>setMinHeight()</code></li> <li><code>setMaxWidth()</code></li> <li><code>setMaxHeight()</code></li> </ul> <p>Feladat</p> <p>Amikor megjelen\u00edtj\u00fck a f\u0151 ablakunkat, akkor az \"maximized\" \u00e1llapottal rendelkezzen! Haszn\u00e1ljuk a <code>setMaximized()</code> met\u00f3dust, majd vess\u00fck \u00f6ssze a <code>setFullScreen()</code> met\u00f3dussal!</p>"},{"location":"legacy/02_gyakorlat/#a-hello-javafx-bovitese","title":"A Hello JavaFX b\u0151v\u00edt\u00e9se","text":"<p>M\u00e9g nagyon keveset l\u00e1ttunk a JavaFX-b\u0151l. A k\u00f6vetkez\u0151 l\u00e9p\u00e9s, hogy hozz\u00e1adunk egy gombot, amit ha megnyom a felhaszn\u00e1l\u00f3, akkor az alkalmaz\u00e1s kil\u00e9p.</p> <p>Amikor a felhaszn\u00e1l\u00f3 megnyomja a gombot, akkor egy <code>ActionEvent</code> esem\u00e9ny keletkezik. Amennyiben kezelni szeretn\u00e9nk a keletkez\u0151 <code>ActionEvent</code>-et, akkor hozz\u00e1 kell adnunk egy <code>ActionEvent</code> handler-t (kezel\u0151t), mert a gomb <code>setOnAction</code> met\u00f3dusa ezt v\u00e1rja, eg\u00e9szen pontosan egy <code>EventHandler&lt;ActionEvent&gt;</code> param\u00e9tert. A saj\u00e1t esem\u00e9nykezel\u0151h\u00f6z ez\u00e9rt a <code>EventHandler&lt;ActionEvent&gt;</code> interf\u00e9szb\u0151l kell sz\u00e1rmaztatni egy saj\u00e1t oszt\u00e1lyt, \u00e9s a <code>void handle(ActionEvent e)</code> met\u00f3dust kell megval\u00f3s\u00edtani, ami az esem\u00e9ny bek\u00f6vetkeztekor fog megh\u00edv\u00f3dni. Erre egy p\u00e9lda a k\u00f6vetkez\u0151:</p> <pre><code>class MyEventHandler implements EventHandler&lt;ActionEvent&gt; {\n@Override\npublic void handle(ActionEvent e) {\nPlatform.exit();\n}\n}\n</code></pre> <p>\u00c9s a haszn\u00e1lata:</p> <pre><code>Button exit = new Button(\"Exit\");\nexit.setOnAction(new MyEventHandler());\n</code></pre> <p>Mivel a k\u00fcl\u00f6nb\u00f6z\u0151 esem\u00e9nyekhez k\u00fcl\u00f6nb\u00f6z\u0151 esem\u00e9nykezel\u0151t haszn\u00e1lunk, \u00e9s \u00e1ltal\u00e1ban egy esem\u00e9nykezel\u0151 oszt\u00e1lyt csak egy helyen haszn\u00e1lunk, ez\u00e9rt ,,felesleges'' az oszt\u00e1lyt l\u00e9trehozni, ezt megval\u00f3s\u00edthatjuk anonymous oszt\u00e1llyal is.</p> <pre><code>Button exit = new Button(\"Exit\");\nexit.setOnAction(new EventHandler&lt;ActionEvent&gt;() {\n\n@Override\npublic void handle(ActionEvent e) {\nPlatform.exit();\n}\n\n});\n</code></pre> <p>Tov\u00e1bb egyszer\u0171s\u00edtve a dolgot haszn\u00e1lhatunk lambda kifejez\u00e9st is.</p> <pre><code>Button exit = new Button(\"Exit\");\nexit.setOnAction(e -&gt; {\nPlatform.exit();\n});\n</code></pre> <p>A gomb haszn\u00e1lat\u00e1t \u00e9s az esem\u00e9nykezel\u00e9s\u00e9t az al\u00e1bbi vide\u00f3 is bemutatja:</p> <p></p> <p>A gombon k\u00edv\u00fcl l\u00e9trehozhatunk egy <code>TextField</code>-et is, amely egy egyszer\u0171 sz\u00f6veges beviteli mez\u0151. A <code>TextField</code>-hez hozz\u00e1adunk egy esem\u00e9nykezel\u0151t, mely figyeli a billenty\u0171 felenged\u00e9seket \u00e9s a kor\u00e1bban l\u00e9trehozott <code>Text</code> t\u00edpus\u00fa msg sz\u00f6veg\u00e9t v\u00e1ltoztatja meg.</p> <pre><code>Text msg = new Text();\nTextField name = new TextField();\n\nname.setOnKeyReleased(e -&gt; {\nmsg.setText(\"Hi \" + name.getText());\n});\n</code></pre> <p>Az \u00faj r\u00e9szek ut\u00e1n a teljes program valahogy \u00edgy n\u00e9z ki:</p> <pre><code>package hu.alkfejl;\nimport javafx.application.Application;\nimport javafx.application.Platform;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.TextField;\nimport javafx.scene.layout.VBox;\nimport javafx.scene.text.Text;\nimport javafx.stage.Stage;\n\npublic class HelloFX extends Application {\n\npublic static void main(String[] args) {\nApplication.launch(args);\n}\n\n@Override\npublic void start(Stage stage) {\nstage.setTitle(\"Hello JavaFX\");\n\nVBox root = new VBox();\nText msg = new Text();\nTextField name = new TextField();\n\nButton exit = new Button(\"Exit\");\nexit.setOnAction(e -&gt; {\nPlatform.exit();\n});\n\nname.setOnKeyReleased(e -&gt; {\nmsg.setText(\"Hi \" + name.getText());\n});\n\nroot.getChildren().addAll(name, msg, exit);\n\nScene scene = new Scene(root, 500, 300);\nstage.setScene(scene);\nstage.show();\n}\n}\n</code></pre> <p>Megjegyz\u00e9s</p> <p>Aki \u00fagy \u00e9rzi, hogy a lambd\u00e1kkal nem b\u00e1nik megfelel\u0151 szinten, az itt elsaj\u00e1t\u00edthatja az alapokat.</p> <p></p> <p>Feladat</p> <p>Amennyiben egy gombnyom\u00e1sra l\u00e9p\u00fcnk ki az alkalmaz\u00e1sb\u00f3l, akkor a bez\u00e1r\u00e1skor triggerelt esem\u00e9nykezel\u0151t \u00e1tj\u00e1tszhatja a felhaszn\u00e1l\u00f3, ha az ablak jobb fels\u0151 sark\u00e1ban a kis \"X\"-re kattint. Pr\u00f3b\u00e1ljuk ki a <code>Stage</code> <code>setOnCloseRequest()</code> met\u00f3dus\u00e1t, mely k\u00e9pes kezelni a <code>CloseRequest</code>-eket. Elegend\u0151, ha egy egyszer\u0171 <code>System.out.println()</code>-t helyez\u00fcnk el benne.</p>"},{"location":"legacy/02_gyakorlat/#egy-javafx-application-eletciklusa","title":"Egy JavaFX Application \u00e9letciklusa","text":"<p>K\u00e9t f\u0151 sz\u00e1l j\u00f6n l\u00e9tre egy JavaFX alkalmaz\u00e1s futtat\u00e1sakor (a <code>launch()</code> met\u00f3dus hat\u00e1s\u00e1ra):</p> <ul> <li>JavaFX Launcher</li> <li>JavaFX Application Thread</li> </ul> <p>A JavaFX Runtime az <code>Application</code> oszt\u00e1ly k\u00f6vetkez\u0151 met\u00f3dusait h\u00edvja meg annak \u00e9letciklusa folyam\u00e1n (sorrendben):</p> <ul> <li>Param\u00e9ter n\u00e9lk\u00fcli konstruktor (Ilyennek lennie kell)</li> <li><code>init()</code></li> <li><code>start()</code></li> <li><code>stop()</code></li> </ul> <p>A JavaFX Application Thread p\u00e9ld\u00e1nyos\u00edt egy objektumot az <code>Application</code> lesz\u00e1rmazottj\u00e1b\u00f3l a <code>launch()</code> h\u00edv\u00e1s hat\u00e1s\u00e1ra. Ezut\u00e1n megh\u00edv\u00f3dik az <code>init()</code> met\u00f3dus, ami az <code>Application</code> oszt\u00e1lyban egy \u00fcres met\u00f3dus, de kedv\u00fcnkre fel\u00fcldefini\u00e1lhatjuk a f\u0151 oszt\u00e1lyunkban. <code>Stage</code> \u00e9s <code>Scene</code> l\u00e9trehoz\u00e1sa az <code>init</code>-en bel\u00fcl nem lehets\u00e9ges. Ezut\u00e1n megh\u00edv\u00f3dik a <code>start()</code> met\u00f3dus \u00e9s a <code>launch</code> met\u00f3dus a fut\u00e1s befejez\u00e9s\u00e9re v\u00e1r.  Amikor a fut\u00e1s\u00e1t befejezte az app, akkor megh\u00edv\u00f3dik a <code>stop()</code> met\u00f3dus, ami ugyan\u00fagy egy \u00fcres met\u00f3dus az <code>Application</code> oszt\u00e1lyban, de fel\u00fcldefini\u00e1lhatjuk. A fentiek k\u00f6z\u00fcl az <code>init</code> a Launcher Thread \u00e1ltal h\u00edvott, a t\u00f6bbi az App Thread \u00e1ltal.</p> <p></p>"},{"location":"legacy/02_gyakorlat/#javafx-alkalmazasok-debuggolasa","title":"JavaFX alkalmaz\u00e1sok debuggol\u00e1sa","text":"<p>A debug egy kicsit tr\u00fckk\u00f6s \u00edgy, hogy Maven-t haszn\u00e1lunk a futtat\u00e1shoz. A k\u00f6vetkez\u0151t kell a pom.xml-ben elhelyezn\u00fcnk a <code>javafx-maven-compiler</code> plugin al\u00e1:</p> <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.openjfx&lt;/groupId&gt;\n&lt;artifactId&gt;javafx-maven-plugin&lt;/artifactId&gt;\n&lt;version&gt;0.0.4&lt;/version&gt;\n&lt;configuration&gt;\n&lt;mainClass&gt;hu.alkfejl.App&lt;/mainClass&gt;\n&lt;/configuration&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;id&gt;run&lt;/id&gt;\n&lt;configuration&gt;\n&lt;mainClass&gt;hu.alkfejl.App&lt;/mainClass&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n&lt;execution&gt;\n&lt;id&gt;debug&lt;/id&gt;\n&lt;configuration&gt;\n&lt;mainClass&gt;hu.alkfejl.App&lt;/mainClass&gt;\n&lt;options&gt;\n&lt;option&gt;-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:4000&lt;/option&gt;\n&lt;/options&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre> <p>Ezzel k\u00e9t futtat\u00e1si konfigur\u00e1ci\u00f3t csin\u00e1lunk, melyek k\u00f6z\u00fcl a sima run nem v\u00e1ltozik semmit sem, viszont l\u00e9trehozunk egy <code>debug</code> futtat\u00e1si k\u00f6rnyezetet is, ahol az opci\u00f3k seg\u00edts\u00e9g\u00e9vel egy olyan JVM-et ind\u00edtunk, amihez \"t\u00e1volr\u00f3l\" csatlakozhatunk. Erre az\u00e9rt van sz\u00fcks\u00e9g, mert a Maven-b\u0151l ind\u00edtott JavaFX alkalmaz\u00e1s egy k\u00fcl\u00f6n JVM-en fog futni (nem az IntelliJ-t haszn\u00e1ljuk a futtat\u00e1shoz, amiben lenne be\u00e9p\u00edtett debugger is). A JDWP (Java Debug Wire Protocol) pontosan ebben seg\u00edt: <code>agentlib:jdwp</code>, eg\u00e9sz pontosan a JVM \u00e9s a debugger (mely ebben az esetben az IntelliJ-n bel\u00fcl van) k\u00f6z\u00f6tti kapcsolatot teremti meg. Az opci\u00f3k k\u00f6z\u00f6tt a <code>4000</code> a portot adja meg, amin csatlakozhatunk a JVM-hez. Ezt nyilv\u00e1n szabadon \u00e1ll\u00edthatjuk.</p> <p>Tov\u00e1bbi olvasm\u00e1nyt itt tal\u00e1lsz a JDWP-r\u0151l.</p> <p>Miut\u00e1n a plugin-t megfelel\u0151en konfigur\u00e1ltuk a debug futtat\u00e1si m\u00f3dot a k\u00f6vetkez\u0151k\u00e9ppen k\u00e9rhetj\u00fck a Maven-t\u0151l:</p> <pre><code>mvn clean javafx:run@debug\n</code></pre> <p>A parancs kiad\u00e1sa ut\u00e1n az IntelliJ <code>Run</code> konzolj\u00e1n a k\u00f6vetkez\u0151t olvashatjuk:</p> <p><pre><code>Listening for transport dt_socket at address: 4000\n</code></pre> , mely ut\u00e1n az <code>Attach Debugger</code> gombot is megtal\u00e1ljuk. Nincs m\u00e1s dolgunk, mint r\u00e1kattintani erre a gombra \u00e9s m\u00e1ris debug m\u00f3dban l\u00e1tjuk az alkalmaz\u00e1sunkat az IDE-n bel\u00fcl (persze valahova rakjunk egy breakpoint-ot, hogy ezt l\u00e1ssuk is).</p> <p>Nekem nem jelenik meg az <code>Attach Debugger</code> gomb ...</p> <p>Amennyiben az <code>Attach Debugger</code> gombot nem l\u00e1tjuk, akkor pr\u00f3b\u00e1lkozzunk meg a fenti men\u00fcsorban a <code>Run -&gt; Attach to Process...</code>-el, ahol l\u00e1tnunk kell a 4000-es porton fut\u00f3 process-t. Fontos, hogy ebben az esetben is fusson az alkalmaz\u00e1s a fenti <code>mvn</code> paranccsal.</p> <p>A fentieket az al\u00e1bbi vide\u00f3 foglalja \u00f6ssze:</p> <p></p>"},{"location":"legacy/02_gyakorlat/#scene-ek-menedzselese","title":"Scene-ek menedzsel\u00e9se","text":"<p>Jelen fejezet megmutatja, hogy hogyan tudunk t\u00f6bb <code>Scene</code> k\u00f6z\u00f6tt v\u00e1ltani. Ez az\u00e9rt fontos, mert egy komplexebb alkalmaz\u00e1sban biztosan t\u00f6bb <code>Scene</code>-t fogunk haszn\u00e1lni az egyes tartalmak megjelen\u00edt\u00e9s\u00e9hez.</p> <p>P\u00e9ld\u00e1ul: Chat alkalmaz\u00e1s</p> <ul> <li>Partner v\u00e1laszt\u00f3 ablak</li> <li>Besz\u00e9lget\u00e9s a partnerrel</li> </ul> <p>A k\u00f6vetkez\u0151 p\u00e9lda megmutatja, hogy hogyan tudunk k\u00e9t egyszer\u0171 scene-t l\u00e9trehozni \u00e9s k\u00f6z\u00f6tt\u00fck navig\u00e1lni.</p> <pre><code>package hu.alkfejl;\n\nimport javafx.application.Application;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.layout.VBox;\nimport javafx.stage.Stage;\n\n\npublic class Main extends Application {\nprivate Stage mainWindow;\nprivate Scene scene1, scene2;\n\n@Override\npublic void start(Stage primaryStage) {\nmainWindow = primaryStage;\n\nconstructScene1();\nconstructScene2();\n\nmainWindow.setScene(scene1);\nmainWindow.setTitle(\"Multiple scenes\");\nmainWindow.show();\n\n}\n\nprivate void constructScene1() {\nLabel lb = new Label(\"Scene 1\");\nButton btn = new Button(\"Go to Scene 2\");\nbtn.setOnAction(e -&gt; {\nmainWindow.setScene(scene2);\n});\n\n//Some layout\nVBox root = new VBox();\nroot.getChildren().addAll(lb, btn);\n\nscene1 = new Scene(root, 300, 300);\n}\n\nprivate void constructScene2() {\nLabel lb = new Label(\"Scene 2\");\nButton btn = new Button(\"Go to Scene 1\");\nbtn.setOnAction(e -&gt; {\nmainWindow.setScene(scene1);\n});\n\n//Some layout\nVBox root = new VBox();\nroot.getChildren().addAll(lb, btn);\n\nscene2 = new Scene(root, 300, 300);\n}\n\npublic static void main(String[] args) {\nlaunch(args);\n}\n}\n</code></pre> <p>A <code>start()</code> met\u00f3dus elej\u00e9n elt\u00e1roljuk egy adattagban a primaryStage-re a referenci\u00e1t, hogy ezen met\u00f3duson k\u00edv\u00fcl is el\u00e9rhess\u00fck a f\u0151 ablakunkat. Ezut\u00e1n egyszer\u0171en megkonstru\u00e1ljuk a k\u00e9t <code>Scene</code>-t, amelyekre egy-egy <code>Label</code> (egyszer\u0171 sz\u00f6veges UI elem), illetve egy-egy <code>Button</code> ker\u00fcl. A gombokhoz hozz\u00e1adtunk egy-egy esem\u00e9nykezel\u0151t is, melyek rendre a m\u00e1sik <code>Scene</code>-t \u00e1ll\u00edtj\u00e1k be a <code>mainWindow</code>-nak, mint aktu\u00e1lis Scene.</p> <p>Feladat (02_scene-manager)</p> <p>Komplexebb alkalmaz\u00e1sokn\u00e1l \u00e9rdemes lehet k\u00e9sz\u00edten\u00fcnk egy <code>SceneManager</code> oszt\u00e1lyt, melynek seg\u00edts\u00e9g\u00e9vel v\u00e9gezz\u00fck el az \u00f6sszes scene v\u00e1lt\u00e1st, vagyis scene-ek k\u00f6z\u00f6tti navig\u00e1l\u00e1st. Pr\u00f3b\u00e1ljuk meg kiszervezni ezt a navig\u00e1ci\u00f3t egy k\u00fcl\u00f6n komponensbe!</p> Megold\u00e1s <p>A SceneManager oszt\u00e1ly valahogy \u00edgy n\u00e9zhet ki:</p> <pre><code>package hu.alkfejl;\n\nimport javafx.scene.Scene;\nimport javafx.stage.Stage;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class SceneManager {\n\nprivate static Stage mainWindow;\n\nprivate static Scene actualScene;\n\nprivate static Map&lt;String, Scene&gt; scenes = new HashMap&lt;&gt;();\n\npublic static void addScene(String sceneId, Scene scene){\nscenes.put(sceneId, scene);\n}\n\npublic static void setActualScene(String sceneId){\nSceneManager.actualScene = scenes.get(sceneId);\nSceneManager.mainWindow.setScene(SceneManager.actualScene);\nSceneManager.mainWindow.setTitle(\"Actual scene: \" + sceneId);\n}\n\npublic static Scene getActualScene() {\nreturn actualScene;\n}\n\npublic static void init(Stage mainWindow){\nSceneManager.mainWindow = mainWindow;\n}\n}\n</code></pre> <p>A haszn\u00e1lata pedig a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9zhet ki:</p> <pre><code>package hu.alkfejl;\n\nimport javafx.application.Application;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.layout.StackPane;\nimport javafx.stage.Stage;\n\n\n/**\n * JavaFX App\n */\npublic class App extends Application {\nScene scene1, scene2;\n\n@Override\npublic void start(Stage stage) {\nSceneManager.init(stage);\n\nButton btn1 = new Button(\"Go To Scene 2\");\nbtn1.setOnAction(event -&gt; SceneManager.setActualScene(\"scene2\"));\nStackPane sp1 = new StackPane(btn1);\nscene1 = new Scene(sp1, 640, 480);\n\nButton btn2 = new Button(\"Go To Scene 1\");\nbtn2.setOnAction(event -&gt; SceneManager.setActualScene(\"scene1\"));\nStackPane sp2 = new StackPane(btn2);\nscene2 = new Scene(sp2, 640, 480);\n\n\nSceneManager.addScene(\"scene1\", scene1);\nSceneManager.addScene(\"scene2\", scene2);\nSceneManager.setActualScene(\"scene1\");\nstage.show();\n}\n\npublic static void main(String[] args) {\nlaunch();\n}\n\n}\n</code></pre>"},{"location":"legacy/02_gyakorlat/#egyszeru-gui-elemek","title":"Egyszer\u0171 GUI elemek","text":"<p>A tov\u00e1bbiakban a legegyszer\u0171bb \u00e9s leggyakrabban haszn\u00e1lt <code>Node</code>-okat n\u00e9zz\u00fck meg k\u00f6zelebbr\u0151l.</p>"},{"location":"legacy/02_gyakorlat/#combobox","title":"ComboBox","text":"<p>Leny\u00edl\u00f3 lista, melynek elemei k\u00f6z\u00fcl v\u00e1laszthat a felhaszn\u00e1l\u00f3. <pre><code>ObservableList&lt;String&gt; days = FXCollections.observableArrayList(\n\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\");\n\nComboBox&lt;String&gt; combo = new ComboBox&lt;String&gt;();\n\ncombo.setItems(days); //\u00e9rt\u00e9kek be\u00e1ll\u00edt\u00e1sa\ncombo.setValue(\"Friday\"); //default \u00e9rt\u00e9k              \n</code></pre></p> <p>Szerkeszthet\u0151v\u00e9 is tehetj\u00fck: </p> <pre><code>combo.setEditable(true);\n</code></pre> <p>Az \u00e9rt\u00e9k\u00e9t pedig a <code>.getValue()</code>-val k\u00e9rhetj\u00fck el.</p> <pre><code>combo.getValue();\n</code></pre> <p>Megjegyz\u00e9s</p> <p>A <code>ComboBox</code> l\u00e9v\u00e9n egy generikus megval\u00f3s\u00edt\u00e1s, b\u00e1rmilyen t\u00edpus\u00fa objektumokat tartalmazhat. Ilyen esetben a helyes megjelen\u00e9s v\u00e9gett meg kell adnunk a <code>CellFactory</code>-t, vagy haszn\u00e1lhatunk egy <code>StringConverter</code>-t is.</p>"},{"location":"legacy/02_gyakorlat/#spinner","title":"Spinner","text":"<p>Hasonl\u00f3 a m\u0171k\u00f6d\u00e9si elve a <code>ComboBox</code>-hoz, valamilyen \u00e9rt\u00e9kk\u00e9szletb\u0151l v\u00e1laszhat a felhaszn\u00e1l\u00f3. Alapvet\u0151en nem szerkeszthet\u0151, csak a nyilakkal lehet l\u00e9pkedni az \u00e9rt\u00e9kek k\u00f6z\u00f6tt, de van lehet\u0151s\u00e9g szerkeszthet\u0151v\u00e9 tenni. <pre><code>Spinner&lt;Integer&gt; spinner = new Spinner&lt;Integer&gt;();\n\nint from = 0;\nint to = 100;\nint initialValue = 3;\n\n// meg kell adni neki valamilyen \u00e9rt\u00e9kk\u00e9szletet amit haszn\u00e1l     \nSpinnerValueFactory&lt;Integer&gt; valueFactory= new SpinnerValueFactory.IntegerSpinnerValueFactory(from, to, initialValue);\n\nspinner.setValueFactory(valueFactory);\n\nspinner.setEditable(true); // ha szeretn\u00e9nk, hogy bele\u00edrni is lehessen\n</code></pre> Ez egyszer\u0171bben: <pre><code>Spinner&lt;Integer&gt; spinner = new Spinner&lt;Integer&gt;(0, 100, 3);\nspinner.setEditable(true);\n</code></pre> Hogy l\u00e1ssuk mi\u00e9rt j\u00f3 nek\u00fcnk az els\u0151 megad\u00e1si m\u00f3d, adjunk meg egy spinnert, amiben a h\u00e9t napjai szerepelnek.</p> <pre><code>ObservableList&lt;String&gt; days = FXCollections.observableArrayList(\n\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\");\n\nSpinner&lt;String&gt; spinner = new Spinner&lt;String&gt;();\n\nSpinnerValueFactory&lt;String&gt; valueFactory =\nnew SpinnerValueFactory.ListSpinnerValueFactory&lt;String&gt;(days);\n\nvalueFactory.setValue(\"Friday\"); // default \u00e9rt\u00e9k be\u00e1ll\u00edt\u00e1sa         \n\nspinner.setValueFactory(valueFactory);\n</code></pre> <p>Az \u00e9rt\u00e9k\u00e9t itt is a <code>.getValue()</code>-vel k\u00e9rhetj\u00fck el.</p> <pre><code>spinner.getValue();\n</code></pre>"},{"location":"legacy/02_gyakorlat/#checkbox","title":"CheckBox","text":"<p>Egy egyszer\u0171 bepip\u00e1lhat\u00f3 vez\u00e9rl\u0151.</p> <p>Haszn\u00e1lata:</p> <pre><code>CheckBox box1 = new CheckBox();\nbox1.setText(\"Szeretem a sajtot\"); // c\u00edmke hozz\u00e1ad\u00e1sa\n\n//vagy\nCheckBox box2 = new CheckBox(\"Szeretem a sajtot\");\n\nbox1.setSelected(true); // kipip\u00e1l\u00e1s\n</code></pre> <p>\u00c9rt\u00e9k\u00e9nek elk\u00e9r\u00e9se:</p> <pre><code>box1.isSelected();\n</code></pre>"},{"location":"legacy/02_gyakorlat/#radiobutton","title":"RadioButton","text":"<p>Hasonl\u00f3 a <code>CheckBox</code>-hoz, group-ba pakolva az azonos group-on bel\u00fcliekb\u0151l csak egy v\u00e1laszthat\u00f3 ki egyszerre.</p> <p>Ebben a p\u00e9ld\u00e1ban mindkett\u0151t be tudjuk jel\u00f6lni egyszerre. <pre><code>RadioButton button1 = new RadioButton(\"Male\");\nRadioButton button2 = new RadioButton(\"Female\");\n</code></pre></p> <p>Abban az esetben, ha egy groupba pakoljuk \u0151ket, akkor egyidej\u0171leg csak az egyiket tudjuk kiv\u00e1lasztani.</p> <pre><code>ToggleGroup group = new ToggleGroup();\n\nRadioButton button1 = new RadioButton(\"Male\");\nbutton1.setToggleGroup(group);\nbutton1.setSelected(true); // default \u00e9rt\u00e9knek bejel\u00f6lj\u00fck ezt\n\nRadioButton button2 = new RadioButton(\"Female\");\nbutton2.setToggleGroup(group);\n</code></pre> <p>Egy r\u00e1di\u00f3 gomb st\u00e1tusz\u00e1nak lek\u00e9rdez\u00e9se a k\u00f6vetkez\u0151k\u00e9ppen lehets\u00e9ges:</p> <pre><code>button1.isSelected();\n</code></pre> <p>Amennyiben azt szeretn\u00e9nk megtudni, hogy mely gomb van kijel\u00f6lve a csoporton bel\u00fcl, akkor a k\u00f6vetkez\u0151k\u00e9ppen j\u00e1rhatunk el:</p> <pre><code>RadioButton selectedRadioButton = (RadioButton) group.getSelectedToggle();\nString toogleGroupValue = selectedRadioButton.getText();\n</code></pre>"},{"location":"legacy/02_gyakorlat/#elrendezesek","title":"Elrendez\u00e9sek","text":"<p>JavaFX-ben a UI elemeknek rendre megmondhatjuk, hogy milyen poz\u00edci\u00f3ban jelenjenek meg. Enn\u00e9l egy jobb megold\u00e1s lehet, ha layout-okat haszn\u00e1lunk, mivel \u00e1tm\u00e9retez\u00e9skor a rendszer automatikus m\u00e9retezi \u00e9s poz\u00edcion\u00e1lja a layout \u00e1ltal tartalmazott UI elemeket is. A be\u00e9p\u00edtett elrendez\u00e9sek mind a <code>javafx.scene.layout.Pane</code> oszt\u00e1lyb\u00f3l sz\u00e1rmaznak (ez\u00e9rt nev\u00fck \u00e1ltal\u00e1ban ...Pane-re v\u00e9gz\u0151dik).</p>"},{"location":"legacy/02_gyakorlat/#borderpane","title":"BorderPane","text":"<p>A <code>BorderPane</code> az al\u00e1bbi k\u00e9pen l\u00e1that\u00f3 elrendez\u00e9st biztos\u00edt:</p> <p></p> <p>A <code>BorderPane</code> a legt\u00f6bb alkalmaz\u00e1sban el\u0151fordul, mivel remek lehet\u0151s\u00e9get biztos\u00edt a fels\u0151bb szint\u0171 komponensek elrendez\u00e9s\u00e9hez. Pl: Fenti toolbar, baloldali navig\u00e1ci\u00f3s n\u00e9zet, alulra valamilyen status bar ker\u00fclhet, k\u00f6z\u00e9pen a f\u0151 tartalom jelen\u00edthet\u0151 meg. A k\u00fcl\u00f6nb\u00f6z\u0151 r\u00e9gi\u00f3kat ak\u00e1rhogyan m\u00e9retezhetj\u00fck. Ha p\u00e9ld\u00e1ul nincs sz\u00fcks\u00e9g a jobboldali r\u00e9szre, akkor annak m\u00e9rete lehet 0 is. Ehhez egyszer\u0171en nem kell defini\u00e1lni azt a r\u00e9gi\u00f3t, amire nincs sz\u00fcks\u00e9g.</p> <pre><code>@Override\npublic void start(Stage primaryStage) {\n\nBorderPane root = new BorderPane();\nroot.setTop(new Label(\"Fent\"));\nroot.setLeft(new Label(\"Bal\"));\nroot.setRight(new Label(\"Jobb\"));\nroot.setBottom(new Label(\"Lent\"));\nroot.setCenter(new Label(\"K\u00f6z\u00e9p\"));\n\nScene scene = new Scene(root, 300, 300);\n\nprimaryStage.setScene(scene);\nprimaryStage.setTitle(\"BorderPane demo\");\nprimaryStage.show();\n\n}\n</code></pre>"},{"location":"legacy/02_gyakorlat/#hbox","title":"HBox","text":"<p>A <code>HBox</code> egy egyszer\u0171 horizont\u00e1lis elrendez\u00e9st tesz lehet\u0151v\u00e9, ahol az elemek egym\u00e1s mell\u00e9 ker\u00fclnek. A <code>HBox</code>-on bel\u00fcl az elemek k\u00f6z\u00f6tti t\u00e1vols\u00e1got a <code>Spacing</code>-gel adhatjuk meg.</p> <pre><code>HBox root = new HBox();\nroot.getChildren().addAll(new Button(\"Egy\"), new Button(\"Kett\u0151\"), new Button(\"H\u00e1rom\"));\n</code></pre> <p></p> <p>Ugyanez 10-es spacing-gel:</p> <pre><code>HBox root = new HBox();\nroot.setSpacing(10);\nroot.getChildren().addAll(new Button(\"Egy\"), new Button(\"Kett\u0151\"), new Button(\"H\u00e1rom\"));\n</code></pre> <p></p> <p>Ha padding-et is alkalmazunk r\u00e1:</p> <p><pre><code>root.setPadding(new Insets(10,10,10,10));\n</code></pre> </p> <p>Tipp</p> <p>A t\u00e1rol\u00f3k eset\u00e9ben az elrendez\u00e9st adott esetben finom\u00edthatjuk egy <code>Region</code> haszn\u00e1lat\u00e1val. P\u00e9ld\u00e1ul azt szeretn\u00e9nk, hogy egy gomb a <code>HBox</code> bal a m\u00e1sik pedig a jobb oldal\u00e1n legyen, akkor a k\u00f6vetkez\u0151ket is haszn\u00e1lhatjuk:</p> <pre><code>Button btn1 = new Button(\"Left\");\nButton btn2 = new Button(\"Right\");\n\nRegion spacer = new Region();\nHBox.setHgrow(spacer, Priority.ALWAYS);\n\nHBox hbox = new HBox(10, btn1, spacer, btn2);\nhbox.setPadding(new Insets(10));\n</code></pre> <p>A fenti esetben a <code>spacer</code> r\u00e9gi\u00f3 \u00e1tm\u00e9retez\u00e9st\u0151l f\u00fcgg\u0151en n\u00f6vekszik (<code>hgrow</code>), \u00edgy a k\u00e9t gomb a <code>HBox</code> k\u00e9t sz\u00e9l\u00e9n fog elhelyezkedni.</p>"},{"location":"legacy/02_gyakorlat/#vbox","title":"VBox","text":"<p>A <code>VBox</code> egy egyszer\u0171 vertik\u00e1lis elrendez\u00e9st tesz lehet\u0151v\u00e9, ahol az elemek egym\u00e1s al\u00e1 ker\u00fclnek. A <code>VBox</code>-on bel\u00fcl az elemek k\u00f6z\u00f6tti t\u00e1vols\u00e1got a <code>Spacing</code>-el adhatjuk meg.</p> <p>A p\u00e9ldak\u00f3d m\u00e1r spacing \u00e9s padding alkalmaz\u00e1s\u00e1t is mutatja.</p> <pre><code>  @Override\npublic void start(Stage primaryStage) {\ntry {\nVBox root = new VBox();\nroot.setSpacing(10);\nroot.setPadding(new Insets(10, 10, 10, 10));\nroot.getChildren().addAll(new Button(\"Egy\"), new Button(\"Kett\u0151\"), new Button(\"H\u00e1rom\"));\nScene scene = new Scene(root, 400, 400);\nprimaryStage.setScene(scene);\nprimaryStage.show();\n} catch (Exception e) {\ne.printStackTrace();\n}\n}\n</code></pre> <p></p>"},{"location":"legacy/02_gyakorlat/#stackpane","title":"StackPane","text":"<p>A <code>StackPane</code>, ahogy neve is mutatja, egy stack-et haszn\u00e1l. A hozz\u00e1adott elemek egy stack-be ker\u00fclnek \u00e9s \u00edgy egym\u00e1son jelennek meg. J\u00f3l haszn\u00e1lhat\u00f3 akkor amikor p\u00e9ld\u00e1ul egy k\u00e9pre szeretn\u00e9nk sz\u00f6veget \u00edrni. Amennyiben megv\u00e1ltoztatjuk az elemek pozicion\u00e1l\u00e1s\u00e1t, akkor az az \u00f6sszes belerakott elemre hat\u00e1ssal lesz. </p> <p>L\u00e1ssunk egy p\u00e9ld\u00e1t:</p> <pre><code>  @Override\npublic void start(Stage primaryStage) {\ntry {\nStackPane root = new StackPane();\nRectangle rect = new Rectangle(100.0, 30.0);\n\nText text = new Text(\"Yeah\");\ntext.setFill(Color.WHITE);\n\nroot.getChildren().addAll(rect, text);\nScene scene = new Scene(root, 400, 400);\nprimaryStage.setScene(scene);\nprimaryStage.show();\n} catch (Exception e) {\ne.printStackTrace();\n}\n}\n</code></pre> <p>Ennek az eredm\u00e9nye a k\u00f6vetkez\u0151:</p> <p></p> <p>A p\u00e9ld\u00e1ban a <code>javafx.scene.shape.Rectangle</code> oszt\u00e1lyt haszn\u00e1ltuk egy t\u00e9glalap l\u00e9trehoz\u00e1s\u00e1hoz. Az alap sz\u00edn fekete, \u00edgy ezt ezzel rajzolja ki a rendszer. Ezut\u00e1n l\u00e9trehoztunk egy <code>Text</code> t\u00edpus\u00fa objektumot, melynek a sz\u00edn\u00e9t (<code>setFill</code>) feh\u00e9rre \u00e1ll\u00edtottuk be.</p> <p>Tipp</p> <p>A StackPane alap\u00e9rtelmezetten k\u00f6z\u00e9pre igaz\u00edtja a benne l\u00e9v\u0151 elemeket.</p>"},{"location":"legacy/02_gyakorlat/#gridpane","title":"GridPane","text":"<p>R\u00e1csos elrendez\u00e9st lehet\u0151v\u00e9 tev\u0151 elrendez\u00e9s manager. A cellatartalmak <code>Node</code> t\u00edpust esznek meg. Az elrendez\u00e9st kedv\u00fcnkre alak\u00edthatjuk a span-ek (sor vagy oszlop \u00f6sszevon\u00e1sok) haszn\u00e1lat\u00e1val.</p> <p>Tipp</p> <p>J\u00f3l haszn\u00e1lhat\u00f3 p\u00e9ld\u00e1ul formok l\u00e9trehoz\u00e1sakor.</p> <p>A cell\u00e1k k\u00f6z\u00f6tti helyet a <code>HGap</code> \u00e9s <code>VGap</code> adja meg.</p> <p>Egy egyszer\u0171 form \u00f6sszerak\u00e1sa valahogy \u00edgy n\u00e9z ki:</p> <pre><code>@Override\npublic void start(Stage primaryStage) {\ntry {\nGridPane root = new GridPane();\nroot.setVgap(10); //f\u00fcgg\u0151leges helyk\u00f6z a cell\u00e1k k\u00f6z\u00f6tt\nroot.setHgap(30); //v\u00edzszintes helyk\u00f6z a cell\u00e1k k\u00f6z\u00f6tt\n\n//els\u0151 sor hozz\u00e1ad\u00e1sa\nText name = new Text(\"N\u00e9v:\");\nroot.add(name, 0, 0); //add(Node child, int columnIndex, int rowIndex)\nTextField nameTextField = new TextField();\nroot.add(nameTextField, 1, 0);\n\n//m\u00e1sodik sor hozz\u00e1ad\u00e1sa\nText email = new Text(\"Email:\");\nroot.add(email, 0, 1);\nTextField emailTextField = new TextField();\nroot.add(emailTextField, 1, 1);\n\n// A k\u00e9t gombot belerakjuk egy HBox-ba\nButton ok = new Button(\"Ok\");\nButton cancel = new Button(\"M\u00e9gse\");\nHBox hb = new HBox();\nhb.setAlignment(Pos.CENTER); // A hbox-on bel\u00fcl k\u00f6z\u00e9pre igaz\u00edtottak az elemek\nhb.setSpacing(20); // az elemek k\u00f6z\u00f6tti t\u00e1vols\u00e1g\nhb.getChildren().addAll(ok, cancel); // gombok a hbox-hoz\nroot.add(hb, 0, 2, 2, 1); //hbox a grid-hez -&gt; add(Node child, int columnIndex, int rowIndex, int colspan, int rowspan)\n\nroot.setPadding(new Insets(10, 10, 10, 10)); // gridre egy padding\nScene scene = new Scene(root, 400, 400);\nprimaryStage.setScene(scene);\nprimaryStage.show();\n} catch (Exception e) {\ne.printStackTrace();\n}\n}\n</code></pre> <p>Ennek az eredm\u00e9nye:</p> <p></p>"},{"location":"legacy/02_gyakorlat/#flowpane","title":"FlowPane","text":"<p>A <code>FlowPane</code> az elemek egym\u00e1s ut\u00e1n helyezi el. Alap\u00e9rtelmezetten horizont\u00e1lisan rakja \u0151ket egym\u00e1s ut\u00e1n, ameddig a sz\u00e9less\u00e9g azt engedi, ut\u00e1na \u00faj sort kezd. Megadhat\u00f3, hogy sor- vagy oszlopfolytonosan dolgozzon (<code>setOrientation()</code>).</p> <p>L\u00e1ssunk egy p\u00e9ld\u00e1t:</p> <pre><code>  @Override\npublic void start(Stage primaryStage) {\ntry {\nFlowPane root = new FlowPane();\nroot.setPadding(new Insets(5, 0, 5, 0)); //Flowpane paddingje\nroot.setVgap(10); //Elemek k\u00f6z\u00f6tti vertik\u00e1lis hely\nroot.setHgap(10); // horizont\u00e1lisan a spacing\nroot.setOrientation(Orientation.VERTICAL); //Orient\u00e1ci\u00f3 be\u00e1ll\u00edt\u00e1sa\n\nroot.getChildren().addAll(new Button(\"1\"), new Button(\"2\"), new Button(\"3\"));\n\nScene scene = new Scene(root,400,400);\nprimaryStage.setScene(scene);\nprimaryStage.show();\n} catch(Exception e) {\ne.printStackTrace();\n}\n}\n</code></pre> <p></p>"},{"location":"legacy/02_gyakorlat/#tilepane","title":"TilePane","text":"<p>A <code>TilePane</code> nagyon hasonl\u00f3 a <code>FlowPane</code>-hez, de egy r\u00e1csos elrendez\u00e9st biztos\u00edt az egym\u00e1s ut\u00e1n bepakolt elemekre. Fontos, hogy a cell\u00e1k m\u00e9rete ugyanakkora lesz.</p> <pre><code>TilePane root = new TilePane();\nroot.setPadding(new Insets(10));\nroot.setVgap(10);\nroot.setHgap(10);\n\nButton btn1 = new Button(\"1\");\nbtn1.setPrefWidth(20);\n\nButton btn2 = new Button(\"2\");\nbtn2.setPrefWidth(40);\n\nButton btn3 = new Button(\"3\");\nbtn3.setPrefWidth(100);\n\nroot.getChildren().addAll(btn1, btn2, btn3);\n</code></pre> <p></p> <p>Amennyiben a p\u00e9ld\u00e1ban kicser\u00e9lj\u00fck a <code>TilePane</code>-t <code>FlowPane</code>-re, akkor az elemek k\u00f6z\u00f6tti nagy 'r\u00e9s' megsz\u0171nik, mert a <code>FlowPane</code> nem foglalkozik azzal hogy r\u00e1csos legyen az elrendez\u00e9s, csak pakolja egym\u00e1s ut\u00e1n az elemeket.</p>"},{"location":"legacy/02_gyakorlat/#anchorpane","title":"AnchorPane","text":"<p>Az <code>AnchorPane</code> akkor j\u00f6het j\u00f3l, ha az ablak n\u00e9gy sz\u00e9l\u00e9hez viszony\u00edtva valamilyen elemeket fixen akarunk tartani. P\u00e9ld\u00e1ul egy <code>HBox</code>-ban l\u00e9v\u0151 gombokat alulra szeretn\u00e9nk mindig rakni. Ez az \u00e1tm\u00e9retez\u00e9skor is megmarad. Ehhez az kell, hogy a <code>HBox</code>-ra egy horgonyt (anchor-t) \u00e1ll\u00edtsunk be.</p> <p>L\u00e1ssuk a p\u00e9ld\u00e1t:</p> <pre><code>...\nHBox hb = new HBox();\nButton buttonSave = new Button(\"Save\");\nButton buttonCancel = new Button(\"Cancel\");\nhb.setSpacing(20);\nhb.setPadding(new Insets(10));\nhb.getChildren().addAll(buttonSave, buttonCancel);\n\nAnchorPane root = new AnchorPane();         root.getChildren().add(hb);\nAnchorPane.setBottomAnchor(hb, 5.0);            Scene scene = new Scene(root,400,400);\n...\n</code></pre> <p>Fontos, hogy egy node-ra t\u00f6bb anchor-t is alkalmazhatunk. Ha p\u00e9ld\u00e1ul a fenti p\u00e9ld\u00e1ban a <code>HBox</code>-ot nem csak lentre szeretn\u00e9nk horgonyoztatni, hanem jobb oldalra is akkor az <code>AnchorPane.setRightAnchor(hb, 10)</code> h\u00edv\u00e1st is meg kell ejten\u00fcnk.</p> <p>A fenti p\u00e9lda eredm\u00e9nye:</p> <p></p>"},{"location":"legacy/02_gyakorlat/#menuk","title":"Men\u00fck","text":"<p>A men\u00fck, <code>Menu</code>, azok a sz\u00f6veges elemek, melyekre az egeret r\u00e1mozgatva leny\u00edl\u00f3 sz\u00f6vegeket tal\u00e1lunk, melyek lehetnek tov\u00e1bbi men\u00fck vagy ak\u00e1r konkr\u00e9t funkcionalit\u00e1st biztos\u00edt\u00f3 elemek, <code>MenuItem</code>. A men\u00fcket gyakran az ablakok tetej\u00e9re helyezz\u00fck el, de ez szabadon v\u00e1laszthat\u00f3 \u00e9s a feljebb felsorolt t\u00e1rol\u00f3k b\u00e1rmelyik\u00e9vel hasznlhat\u00f3k, ak\u00e1rcsak b\u00e1rmelyik m\u00e1sik <code>Node</code>.</p> <p>Ahhoz, hogy a men\u00fck egym\u00e1s mellett legyenek alkalmazhatunk egy men\u00fc sort, <code>MenuBar</code>. Ez fogja tartalmazni az \u00f6sszes men\u00fct egym\u00e1s mellett.</p> <pre><code>MenuBar menuBar = new MenuBar();\nMenu fileMenu = new Menu(\"File\"); // Ez lesz a File men\u00fc, a sz\u00f6veget konstruktorban adhatjuk meg.\nMenu helpMenu = new Menu(\"Help\"); // Ez lesz a help men\u00fc\n\nmenuBar.getMenus().addAll(fileMenu, helpMenu); // A men\u00fcket hozz\u00e1 is kell adni a men\u00fc b\u00e1rhoz, k\u00fcl\u00f6nben nem jelen\u00edti meg azokat.\n</code></pre> <p>Eddig nem tartalmaznak elemeket a men\u00fck, csak megjelennek. Ahhoz, hogy leny\u00edl\u00f3 tartalmuk legyen, tov\u00e1bbi elemeket kell adni a men\u00fckh\u00f6z, pl <code>MenuItem</code> eeket.</p> <pre><code>MenuItem newFileMenuItem = new MenuItem(\"New\");\nMenuItem openFileMenuItem = new MenuItem(\"Open\");\nfileMenu.getItems().addAll(newFileMenuItem, openFileMenuItem);\n\nMenuItem showHelpMenuItem = new MenuItem(\"GeneralHelp\");\nhelpMenu.getItems().add(showHelpMenuItem);\n</code></pre> <p>Ezzel az adott men\u00fckre kattintva el\u0151j\u00f6nnek a megfelel\u0151 elemek, azonban eddig semmi sem t\u00f6rt\u00e9nik, ha r\u00e1kattintunk egy elemre. Ehhez meg kell adnunk, hogy mi t\u00f6rt\u00e9njen az adott elemre kattint\u00e1skor.</p> <pre><code>newFileMenuItem.setOnAction(event -&gt; {\n// Itt adhatjuk meg mi legyen a m\u0171velet ha r\u00e1kattintunk\n});\n</code></pre>"},{"location":"legacy/02_gyakorlat/#dailogus-ablakok","title":"Dail\u00f3gus ablakok","text":""},{"location":"legacy/02_gyakorlat/#alert","title":"Alert","text":"<p>A JDK 8u40-val a JavaFX-be beker\u00fcltek a dial\u00f3gus ablakokat megval\u00f3s\u00edt\u00f3 API oszt\u00e1lyok. Az egyik ilyen oszt\u00e1ly az <code>Alert</code>.</p> <p>L\u00e1ssunk is egy p\u00e9ld\u00e1t:</p> <pre><code>Alert alert = new Alert(AlertType.INFORMATION);\nalert.setTitle(\"C\u00edm\");\nalert.setHeaderText(\"Az ablak tartalom fels\u0151 header r\u00e9sze\");\nalert.setContentText(\"R\u00e9szletesebb le\u00edr\u00e1s a header text alatt\");\n\nalert.showAndWait();\n</code></pre> <p>Az <code>Alert</code> t\u00f6bbf\u00e9le konstruktorral rendelkezik, de mindegyikn\u00e9l megtal\u00e1lhat\u00f3 az <code>AlertType</code> param\u00e9ter, mellyel megadhatjuk, hogy milyen t\u00edpus\u00fa dial\u00f3gus ablakot szeretn\u00e9nk l\u00e9trehozni. A k\u00f6vetkez\u0151 \u00e9rt\u00e9kek adhat\u00f3k meg:</p> <ul> <li><code>AlertType.INFORMATION</code></li> <li><code>AlertType.WARNING</code></li> <li><code>AlertType.ERROR</code></li> <li><code>AlertType.CONFIRMATION</code></li> <li><code>AlertType.NONE</code></li> </ul> <p>Ezek magukt\u00f3l \u00e9rtet\u0151dnek, de pr\u00f3b\u00e1ljuk ki mindegyiket, hogy l\u00e1ssuk a k\u00fcl\u00f6nbs\u00e9geket. A <code>NONE</code> csak egy csupasz dial\u00f3gus ablakot ad nek\u00fcnk.</p> <p>Egy <code>Alert</code>-nek 3 k\u00fcl\u00f6nb\u00f6z\u0151 sz\u00f6veg\u00e9t \u00e1ll\u00edthatjuk be, melyet a fenti p\u00e9lda is mutat. A dial\u00f3gus ablaknak van egy c\u00edme, egy <code>header</code>-je (kb egy \u00f6sszegz\u0151 sz\u00f6veg), \u00e9s egy r\u00e9szletesebb le\u00edr\u00e1sa (a <code>contentText</code>).</p> <p>Ahogy azt kor\u00e1bban a <code>Stage</code>-n\u00e9l l\u00e1ttuk, meg kell h\u00edvnunk a <code>show()</code> met\u00f3dust, mivel addig a pontig nem l\u00e1tszik az ablak.</p> <p>A dial\u00f3gus ablakainkat \u00e1ltal\u00e1ban mod\u00e1lisk\u00e9nt szeretj\u00fck t\u00e1lalni a felhaszn\u00e1l\u00f3 el\u00e9, teh\u00e1t nem akarjuk, hogy a rendszerben b\u00e1rmi m\u00e1st tudjon csin\u00e1lni a felhaszn\u00e1l\u00f3 ameddig a dial\u00f3gusablakr\u00f3l nem gondoskodott megfelel\u0151en. Ehhez a legegyszer\u0171bb, ha a fent is haszn\u00e1lt <code>showAndWait()</code> met\u00f3dust haszn\u00e1ljuk. Fontos, hogy a <code>showAndWait()</code> vissza is t\u00e9r egy <code>Optional&lt;ButtonType&gt;</code> eredm\u00e9nnyel, amelyb\u0151l megtudhatjuk, hogy a felhaszn\u00e1l\u00f3 melyik gombot nyomta meg, ami fontos lehet p\u00e9ld\u00e1ul egy <code>CONFIRMATION</code> t\u00edpus\u00fa dial\u00f3gusn\u00e1l.</p> <p>N\u00e9zz\u00fcnk egy p\u00e9ld\u00e1t:</p> <pre><code>package application;\n\nimport java.util.Optional;\n\nimport javafx.application.Application;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.Alert.AlertType;\nimport javafx.scene.control.ButtonType;\nimport javafx.stage.Stage;\n\npublic class Main extends Application {\n@Override\npublic void start(Stage primaryStage) {\n\nprimaryStage.setOnCloseRequest(e -&gt; {\nAlert confirm = new Alert(AlertType.CONFIRMATION, null, ButtonType.YES, ButtonType.NO);\nconfirm.setTitle(\"Are you sure you want to exit?\");\nconfirm.setHeaderText(\"Are you sure you want to exit?\");\n\nOptional&lt;ButtonType&gt; answer = confirm.showAndWait();\n\nif (answer.get() == ButtonType.NO) {\ne.consume();\n}\n});\n\nprimaryStage.setWidth(400);\nprimaryStage.setHeight(400);\nprimaryStage.show();\n\n}\n\npublic static void main(String[] args) {\nlaunch(args);\n}\n}\n</code></pre> <p>A p\u00e9ld\u00e1b\u00f3l t\u00f6bb mindent is tanulhatunk, egyr\u00e9szt az <code>Alert</code>-nek van egy olyan konstruktora is, ami a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>Alert(AlertType alertType, String contentText, ButtonType... buttons)\n</code></pre> <p>\u00cdgy egyszer\u0171en megadhatjuk a <code>contentText</code>-et, illetve megadhatjuk, hogy milyen gombokat szeretn\u00e9nk a dial\u00f3gusra rakni. Jelen helyzetben egy Yes \u00e9s egy No felirat\u00fa gombot helyez\u00fcnk el. Amennyiben ezeket megadjuk, akkor az alap\u00e9rtelmezett (OK \u00e9s Cancel) gombok nem lesznek r\u00e1pakolva az ablakra.</p> <p>A dial\u00f3gus akkor jelenik meg, ha megpr\u00f3b\u00e1ljuk bez\u00e1rni a f\u0151 ablakunkat. Ehhez az esem\u00e9nykezel\u0151t a <code>setOnCloseRequest(...)</code> met\u00f3dus seg\u00edts\u00e9g\u00e9vel \u00e1ll\u00edthatjuk be.</p> <p>A <code>showAndWait()</code> visszat\u00e9r\u00e9s\u00e9t elt\u00e1roljuk egy lok\u00e1lis v\u00e1ltoz\u00f3ban, majd meg\u00e1llap\u00edtjuk, hogy a NO gombot nyomta-e meg a felhaszn\u00e1l\u00f3. Ha m\u00e9gsem akar kil\u00e9pni az alkalmaz\u00e1sb\u00f3l, akkor az esem\u00e9nyt elkapjuk \u00e9s nem k\u00fcldj\u00fck tov\u00e1bb (ezt teszi a <code>consume()</code> h\u00edv\u00e1s). Ez azt jelenti, hogy a kil\u00e9p\u00e9si sz\u00e1nd\u00e9kunkat (az esem\u00e9nyt) nem tov\u00e1bb\u00edtjuk.</p> <p>A fenti p\u00e9ld\u00e1ban j\u00f3l l\u00e1that\u00f3, hogy mi magunk v\u00e1laszthatjuk ki, hogy milyen gombok jelenjenek meg a fel\u00fcleten. Ez rendben is van, de mi van akkor, ha magyar felirat\u00fa gombokat szeretn\u00e9nk? A rendszer alapb\u00f3l angol felirat\u00fa gombokat biztos\u00edt. Szerencs\u00e9re a JavaFX API erre is ad lehet\u0151s\u00e9get. Tekints\u00fck a k\u00f6vetkez\u0151 k\u00f3dr\u00e9szletet:</p> <p><code>ButtonType buttonTypeNo = new ButtonType(\"Nem\", ButtonData.NO);</code></p> <p>Ilyen m\u00f3don l\u00e9trehozhatunk egy \u00faj gombt\u00edpust, melynek a felirata a 'Nem' sz\u00f6veg, illetve viselked\u00e9s\u00e9t tekintve megegyezik a <code>ButtonType.NO</code> funkcionalit\u00e1s\u00e1val. Ezeket a viselked\u00e9seket a <code>ButtonData</code> adja meg, mint azt a p\u00e9lda is mutatja. \u00c9rdemes lehet a dokument\u00e1ci\u00f3t megtekinteni az \u00f6sszes lehets\u00e9ges vari\u00e1ns\u00e9rt.</p> <p>Tov\u00e1bbi be\u00e1ll\u00edt\u00e1si lehet\u0151s\u00e9gk\u00e9nt azt is megadhatjuk, hogy az ablak milyen elemekkel rendelkezzen. Ilyen p\u00e9ld\u00e1ul a st\u00edlusa.</p> <p><code>dialog.initStyle(StageStyle.UTILITY);</code></p> <p>Ebben az esetben az ablak csak a bez\u00e1r\u00f3 gombbal fog rendelkezni \u00e9s minimize, maximize gombokkal nem.</p> <p>Fontos lehet a sz\u00fcl\u0151t be\u00e1ll\u00edtani: <code>dialog.initOwner(parentWindow);</code></p> <p>Illetve megadhatjuk a modalit\u00e1s t\u00edpus\u00e1t is: <code>dialog.initModality(Modality.APPLICATION_MODAL);</code> Ennek eredm\u00e9nyek\u00e9ppen az ablakunk a teljes alkalmaz\u00e1sra n\u00e9zve lesz mod\u00e1lis nem pedig csak a sz\u00fcl\u0151re n\u00e9zve.</p>"},{"location":"legacy/02_gyakorlat/#tovabbi-dialogus-tipusok","title":"Tov\u00e1bbi dial\u00f3gus t\u00edpusok","text":"<p>Az <code>Alert</code>-en k\u00edv\u00fcl a JavaFX biztos\u00edt m\u00e9g n\u00e9h\u00e1ny tov\u00e1bbi be\u00e9p\u00edtett dial\u00f3gust. Ezeket nem fogjuk r\u00e9szletesen megn\u00e9zni. Haszn\u00e1latuk nagyban hasonl\u00edt az <code>Alert</code>-hoz. Ezek a k\u00f6vetkez\u0151ek:</p> <ul> <li><code>TextInputDialog</code>: egyszer\u0171 sz\u00f6veges input is tal\u00e1lhat\u00f3 a dial\u00f3gusablakon, melynek tartalm\u00e1t a <code>showAndWait()</code> adja vissza eredm\u00e9ny\u00fcl.</li> <li><code>ChoiceDialog</code>: Egy leg\u00f6rd\u00fcl\u0151 mez\u0151t tartalmaz\u00f3 dial\u00f3gus ablak. Amennyiben a felhaszn\u00e1l\u00f3 ad meg \u00e9rt\u00e9ket, akkor az elk\u00e9rhet\u0151 a <code>showAndWait()</code> visszat\u00e9r\u00e9si \u00e9rt\u00e9k\u00e9t\u0151l.</li> <li><code>Dialog</code>: A lehet\u0151 leg\u00e1ltal\u00e1nosabb dial\u00f3gus ablak, melynek minden r\u00e9sz\u00e9t egyedire szabhatunk ahogy csak akarunk.</li> </ul>"},{"location":"legacy/02_gyakorlat/#parancssori-parameterek-hasznalata-opcionalis","title":"Parancssori param\u00e9terek haszn\u00e1lata (Opcion\u00e1lis)","text":"<p>A <code>javafx.application.Application</code> oszt\u00e1ly biztos\u00edtja a megfelel\u0151 API h\u00edv\u00e1sokat, hogy a param\u00e9tereket k\u00f6nnyen el\u00e9rhess\u00fck. Ehhez h\u00edvjuk meg a <code>getParamters()</code> met\u00f3dust, amely egy <code>Application.Parameters</code> t\u00edpussal t\u00e9r vissza. Ebb\u0151l kihorg\u00e1szhat\u00f3ak a n\u00e9v n\u00e9lk\u00fcli \u00e9s a neves\u00edtett param\u00e9terek is. N\u00e9v n\u00e9lk\u00fcli lehet p\u00e9ld\u00e1ul: <code>--help</code>, \u00e9s neves\u00edtett p\u00e9ld\u00e1ul a <code>--inputDir=\"/home/valaki/input/\"</code> param\u00e9ter megad\u00e1s. A n\u00e9v n\u00e9lk\u00fcli param\u00e9tereket a <code>getUnnamed()</code> met\u00f3dussal k\u00e9rhetj\u00fck le, mely egy <code>List&lt;String&gt;</code>-et ad vissza az \u00f6sszes n\u00e9vtelen param\u00e9terrel. A n\u00e9vvel rendelkez\u0151 param\u00e9terek a <code>getNamed()</code> met\u00f3dussal kapjuk meg, mely egy <code>Map&lt;String, String&gt;</code> objektummal t\u00e9r vissza. Mivel a parancssori parm\u00e9tereket m\u00e1r nem m\u00f3dos\u00edthatjuk, ez\u00e9rt ezek read-only objektumok, azaz <code>final</code>-\u00f6k.</p> <p>Amennyiben nem szeretn\u00e9nk kett\u00e9v\u00e1lasztani a param\u00e9tereket t\u00edpus szerint (pl.: egy az egyben tov\u00e1bb akarjuk egy 3rd party libnek), akkor haszn\u00e1lhatjuk a <code>List&lt;String&gt; getRaw()</code> met\u00f3dust.</p> <p>Fontos lehet m\u00e9g, hogy a param\u00e9terek el\u00e9r\u00e9se a konstruktorban m\u00e9g nem el\u00e9rhet\u0151, viszont az <code>init()</code> met\u00f3dusban m\u00e1r igen.</p>"},{"location":"legacy/02_gyakorlat/#pelda","title":"P\u00e9lda","text":"<p>A JavaFX projekt\u00fcnkben csin\u00e1ljuk a k\u00f6vetkez\u0151ket:</p> <pre><code>@Override\npublic void start(Stage stage) {\n// Get application parameters\nParameters p = this.getParameters();\n\nMap&lt;String, String&gt; namedParams = p.getNamed();\nList&lt;String&gt; unnamedParams = p.getUnnamed();\nList&lt;String&gt; rawParams = p.getRaw();\n\nString paramStr = \"Named Parameters: \" + namedParams + \"\\n\" +\n\"Unnamed Parameters: \" + unnamedParams + \"\\n\" +\n\"Raw Parameters: \" + rawParams;\n\nTextArea ta = new TextArea(paramStr);\nta.setEditable(false);\nGroup root = new Group(ta);\n\nstage.setScene(new Scene(root));\nstage.setTitle(\"Application Parameters\");\nstage.show();\n}\n</code></pre> <p>A fenti k\u00f3d megjelen\u00edti a megadott param\u00e9tereket egy TextArea-ban. Ahhoz, hogy valami \u00e9rtelmeset is l\u00e1ssunk be kell \u00e1ll\u00edtanunk valamilyen command line param\u00e9tereket.</p> <p>JavaFX SDK haszn\u00e1lata eset\u00e9ben ez a szok\u00e1sos m\u00f3don megtehet\u0151 (Run Configurations), Maven-es projekt eset\u00e9ben a <code>javafx-maven-plugin</code>-t haszn\u00e1lva viszont a k\u00f6vetkez\u0151t kell megtenn\u00fcnk, ha p\u00e9ld\u00e1ul a <code>--help --inputDir=\"/home/valaki/input/\"</code> parancssori argumentumokat k\u00edv\u00e1njuk haszn\u00e1lni:</p> <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.openjfx&lt;/groupId&gt;\n&lt;artifactId&gt;javafx-maven-plugin&lt;/artifactId&gt;\n&lt;version&gt;0.0.4&lt;/version&gt;\n&lt;configuration&gt;\n&lt;mainClass&gt;hu.alkfejl.App&lt;/mainClass&gt;\n&lt;commandlineArgs&gt;--help --inputDir\"/home/valaki/input/\"&lt;/commandlineArgs&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre> <p>Futtat\u00e1skor a k\u00f6vetkez\u0151 eredm\u00e9nyt kapjuk:</p> <p></p> <p>Figyelem</p> <p>A <code>javafx-maven-plugin</code> eset\u00e9ben a param\u00e9terek sz\u00e9tv\u00e1laszt\u00e1sa nem megfelel\u0151en m\u0171k\u00f6dik, de a raw parameters mindig j\u00f3l ker\u00fcl \u00e1tad\u00e1sra.</p>"},{"location":"legacy/02_gyakorlat/#feladatok","title":"Feladatok","text":"<p>Counter (04_hazi_counter)</p> <p>K\u00e9sz\u00edts\u00fck el a k\u00f6vetkez\u0151h\u00f6z hasonl\u00f3 fel\u00fcletet JavaFX-ben!</p> <p></p> <ul> <li>A fel\u00fclet egy HBox-al dolgozik, melynek legyen valamekkora padding-je \u00e9s az elemek k\u00f6z\u00f6tt maradjon valamennyi hely.</li> <li>A fel\u00fcleten egy label, egy TextField \u00e9s egy gomb legyen megtal\u00e1lhat\u00f3.</li> <li>A TextField \u00e9rt\u00e9k\u00e9t a fel\u00fcleten ne \u00edrhassa be a felhaszn\u00e1l\u00f3 manu\u00e1lisan, annak kezd\u0151\u00e9rt\u00e9ke legyen 0.</li> <li>A count gomb megnyom\u00e1sakor a TextField \u00e9rt\u00e9k\u00e9t olvassuk ki \u00e9s n\u00f6velj\u00fck eggyel</li> </ul> Megold\u00e1s <pre><code>package hu.alkfejl.hazi;\n\nimport javafx.application.Application;\nimport javafx.geometry.Insets;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.TextField;\nimport javafx.scene.layout.HBox;\nimport javafx.scene.layout.StackPane;\nimport javafx.stage.Stage;\n\n/**\n * JavaFX App\n */\npublic class App extends Application {\n\n@Override\npublic void start(Stage stage) {\n\nHBox root = new HBox();\nroot.setPadding(new Insets(20));\nroot.setSpacing(20);\n\nLabel counterLabel = new Label(\"Counter\");\nTextField counterTF = new TextField(\"0\");\ncounterTF.setEditable(false);\n\nButton incBtn = new Button(\"Count\");\nincBtn.setOnAction(actionEvent -&gt; {\nInteger value = Integer.parseInt(counterTF.getText());\nvalue++;\ncounterTF.setText(value.toString());\n});\n\nroot.getChildren().addAll(counterLabel, counterTF, incBtn);\nvar scene = new Scene(root, 640, 480);\nstage.setScene(scene);\nstage.show();\n}\n\npublic static void main(String[] args) {\nlaunch();\n}\n\n}\n</code></pre> <p>Feladat (07_click-counter)</p> <p>\u00cdrjunk egy JavaFX programot, melyben sz\u00e1moljuk, hogy egy gombot h\u00e1nyszor nyomtak meg, illetve hogy \u00f6sszesen az alkalmaz\u00e1son bel\u00fcl h\u00e1ny kattint\u00e1s t\u00f6rt\u00e9nt (gombnyom\u00e1s is belesz\u00e1mol\u00f3dik)! Megfelel\u0151, ha az el\u0151z\u0151 programot terjesztj\u00fck ki az eg\u00e9rkattint\u00e1sokat figyel\u0151 esem\u00e9nykezel\u0151vel.</p> Megold\u00e1s <pre><code>package hu.alkfejl;\n\nimport javafx.application.Application;\nimport javafx.geometry.Pos;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.layout.StackPane;\nimport javafx.scene.layout.VBox;\nimport javafx.stage.Stage;\n\n\npublic class App extends Application {\n\nprivate int totalClicks = 0;\nprivate int buttonClicks = 0;\n\n@Override\npublic void start(Stage stage) {\n\n\n\nLabel totalClicksLabel = new Label(\"Total clicks: \" + totalClicks);\nLabel buttonClicksLabel = new Label(\"Button clicks: \" + buttonClicks);\nButton button = new Button(\"Increment Button Count\");\n\nbutton.setOnAction(actionEvent -&gt; {\nbuttonClicks++;\ntotalClicks++;\nbuttonClicksLabel.setText(\"Button clicks: \" + buttonClicks);\ntotalClicksLabel.setText(\"Total clicks: \" + totalClicks);\n});\n\nVBox vbox = new VBox(totalClicksLabel, buttonClicksLabel, button);\nvbox.setAlignment(Pos.CENTER);\nvbox.setSpacing(20.0);\n\nvar scene = new Scene(new StackPane(vbox), 640, 480);\n\nscene.setOnMouseClicked(mouseEvent -&gt; {\ntotalClicks++;\ntotalClicksLabel.setText(\"Total clicks: \" + totalClicks);\n});\n\nstage.setScene(scene);\nstage.show();\n}\n\npublic static void main(String[] args) {\nlaunch();\n}\n\n}\n</code></pre> <p>Accumulator (05_hazi_accumulator)</p> <p>K\u00e9sz\u00edts\u00fck el k\u00f6vetkez\u0151h\u00f6z hasonl\u00f3 fel\u00fcletet JavaFX-ben!</p> <p></p> <ul> <li>Legyen VBox a root elemem!</li> <li>Ezen bel\u00fcl legyenek HBox-ok!</li> <li>A fentiekre \u00e1ll\u00edtsak be valamilyen spacing-et, illetve a VBox-hoz paddinget is!</li> <li>K\u00e9t label \u00e9s k\u00e9t TextField legyen a fel\u00fcleten!</li> <li>Az els\u0151 TextField-be sz\u00e1mokat \u00edrhatok \u00e9s amennyiben megnyomom az entert, akkor a sum TextField aktu\u00e1lis \u00e9rt\u00e9k\u00e9hez adjam hozz\u00e1 az els\u0151 TextField \u00e9rt\u00e9k\u00e9t!</li> <li>a sum TextField \u00e9rt\u00e9ke 0-r\u00f3l indul \u00e9s nem szerkeszthet\u0151!</li> <li>Figyelj a hibakezel\u00e9sre is! Ha nem sz\u00e1mot \u00edrnak be akkor nem kell hozz\u00e1adni semmit sem a sumhoz!</li> </ul> Megold\u00e1s <pre><code>package hu.alkfejl.hazi;\n\nimport javafx.application.Application;\nimport javafx.geometry.Insets;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.TextField;\nimport javafx.scene.input.KeyCode;\nimport javafx.scene.layout.HBox;\nimport javafx.scene.layout.StackPane;\nimport javafx.scene.layout.VBox;\nimport javafx.stage.Stage;\n\n/**\n * JavaFX App\n */\npublic class App extends Application {\n\n@Override\npublic void start(Stage stage) {\nVBox root = new VBox();\nroot.setSpacing(20);\nroot.setPadding(new Insets(20));\n\nHBox firstRow = new HBox();\nfirstRow.setSpacing(10);\nLabel numLabel = new Label(\"Enter a number\");\nTextField numTF = new TextField();\n\nfirstRow.getChildren().addAll(numLabel, numTF);\n\n// M\u00e1sodik, summ\u00e1z\u00f3s sor\nHBox secondRow = new HBox();\nsecondRow.setSpacing(10);\nLabel accLabel = new Label(\"Accumulated sum\");\nTextField sumTF = new TextField(\"0.0\");\nsumTF.setEditable(false);\n\nsecondRow.getChildren().addAll(accLabel, sumTF);\n\nLabel msg = new Label(\"\");\n\n// Esem\u00e9nykezel\u00e9s\nnumTF.setOnKeyReleased(keyEvent -&gt; {\nif(keyEvent.getCode() == KeyCode.ENTER){\nDouble actSum = Double.parseDouble(sumTF.getText());\n\ntry{\nDouble num = Double.parseDouble(numTF.getText());\nactSum += num;\nsumTF.setText(actSum.toString());\nnumTF.setText(\"\");\nmsg.setText(\"\");\n}catch (NumberFormatException ex){\nmsg.setText(\"Please enter a valid number\");\nmsg.setStyle(\"-fx-text-fill: red\");\n}\n}\n});\n\n\nroot.getChildren().addAll(firstRow, secondRow, msg);\nScene scene = new Scene(root, 640, 480);\n\n\n\nstage.setScene(scene);\nstage.show();\n}\n\npublic static void main(String[] args) {\nlaunch();\n}\n\n}\n</code></pre>"},{"location":"legacy/02_gyakorlat/#daily-challange","title":"Daily Challange","text":"<p>Feladat</p> <p>A Chaos Game sor\u00e1n egy h\u00e1romsz\u00f6g (legyen szab\u00e1lyos) cs\u00facspontjai adottak (<code>A</code>, <code>B</code>, <code>C</code>). A 3 cs\u00facs mellett v\u00e1lasztunk egy v\u00e9letlenszer\u0171 pontot a s\u00edkon (<code>D</code>). Ezut\u00e1n egy iterat\u00edv algoritmust futtatunk, melynek minden l\u00e9p\u00e9s\u00e9ben v\u00e9letlenszer\u0171en v\u00e1lasztunk egy cs\u00facsot, majd a v\u00e1lasztott cs\u00facs \u00e9s a <code>D</code> pont \u00e1ltal alkotott szakasz felez\u0151pontj\u00e1t v\u00e1lasztjuk \u00faj <code>D</code> pontnak \u00e9s ki is rajzoljuk. Ezt az iter\u00e1ci\u00f3t a v\u00e9gtelens\u00e9gig folytathatjuk.</p> <p>Amennyiben j\u00f3l dolgoztunk, akkor megkapjuk a Sierpinszky-h\u00e1romsz\u00f6get.</p> <p></p> <p>A feladat sor\u00e1n j\u00f3l j\u00f6hetnek a k\u00f6vetkez\u0151 JavaFX oszt\u00e1lyok:</p> <ul> <li><code>Point2D</code>: k\u00e9t dimenzi\u00f3s pont</li> <li><code>Circle</code>: K\u00f6r\u00f6k kirajzol\u00e1s\u00e1hoz haszn\u00e1lhat\u00f3</li> <li><code>Timeline</code>: Anim\u00e1ci\u00f3 alkalmaz\u00e1s\u00e1hoz</li> </ul> <p>Az implement\u00e1ci\u00f3 sor\u00e1n \u00e1ltal\u00e1nos\u00edthatjuk a megval\u00f3s\u00edt\u00e1st tetsz\u0151leges szab\u00e1lyos soksz\u00f6gre, illetve akkor is m\u00e1s rajzolatokat kapunk, ha egym\u00e1s ut\u00e1n k\u00e9tszer nem v\u00e1laszthatjuk ugyanazt a cs\u00facsot.</p> Megold\u00e1s <pre><code>package hu.alkfejl;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport javafx.animation.KeyFrame;\nimport javafx.animation.Timeline;\nimport javafx.application.Application;\nimport javafx.geometry.Point2D;\nimport javafx.scene.Group;\nimport javafx.scene.Scene;\nimport javafx.scene.shape.Circle;\nimport javafx.stage.Stage;\nimport javafx.util.Duration;\n\npublic class App extends Application {\n\n//Configs\nprivate final double speed = 1;\nprivate final boolean canRepeatVertex = false;\nprivate final int numOfVertices = 5;\nprivate final int height = 600;\nprivate final int width = 600;\nprivate final int padding = 20;\nprivate final double radius = 1.0;\nprivate final double divDistance = 0.5;\n\nprivate List&lt;Point2D&gt; vertices = new ArrayList&lt;&gt;();\nprivate Point2D last; // half point\nprivate Point2D lastChoosenVertex = null;\nprivate Group root = new Group();\n\n@Override\npublic void init() throws Exception {\nsuper.init();\n\ndouble degreeStep = 360 / numOfVertices;\ndouble actDegree = 270;\n\ndouble actX = width / 2;\ndouble actY = padding;\n\nfor (int i = 0; i &lt; numOfVertices; i++) {\nactX = Math.cos(actDegree * Math.PI / 180) * (width / 2 - padding) + width / 2;\nactY = Math.sin(actDegree * Math.PI / 180) * (height / 2 - padding) + height / 2;\n\nPoint2D p = new Point2D(actX, actY);\nvertices.add(p);\n\nactDegree += degreeStep;\n}\n\n// init the starting point\nlast = new Point2D(Math.random() * width, Math.random() * height);\n}\n\nprivate double distance(Point2D p1, Point2D p2) {\nreturn Math.sqrt(Math.pow(p1.getX() - p2.getX(), 2) + Math.pow(p1.getY() - p2.getY(), 2));\n}\n\nprivate Point2D halfPoint(Point2D p1, Point2D p2) {\nreturn new Point2D((p1.getX() + p2.getX()) / 2, (p1.getY() + p2.getY()) / 2);\n}\n\nprivate Point2D newPoint(Point2D p1, Point2D p2) {\nreturn new Point2D((p1.getX() + p2.getX()) / (1 / divDistance), (p1.getY() + p2.getY()) / (1/divDistance) );\n}\n\nprivate void iterate() {\n// Choose the vertex\nint random;\nPoint2D choosenOne;\n\nif(canRepeatVertex) {\nrandom = (int) (Math.random() * numOfVertices);\nchoosenOne = vertices.get(random);\n}else {\ndo {\nrandom = (int) (Math.random() * numOfVertices);\nchoosenOne = vertices.get(random);\n}while(choosenOne == lastChoosenVertex);\n}\n\nPoint2D halfPoint = halfPoint(choosenOne, last);\n\nroot.getChildren().add(new Circle(halfPoint.getX(), halfPoint.getY(), radius));\n\nlast = halfPoint;\nlastChoosenVertex = choosenOne;\n}\n\n@Override\npublic void start(Stage stage) {\n\n// Drawing a Circle\nfor (Point2D p : vertices) {\nCircle circle = new Circle();\ncircle.setCenterX(p.getX());\ncircle.setCenterY(p.getY());\ncircle.setRadius(radius * 3);\nroot.getChildren().add(circle);\n}\n\nTimeline timeline = new Timeline(new KeyFrame(Duration.millis(speed), ae -&gt; iterate() ) );\ntimeline.setCycleCount(Timeline.INDEFINITE);\ntimeline.play();\n\nScene scene = new Scene(root, width, height);\nstage.setTitle(\"Chaos Game\");\nstage.setScene(scene);\nstage.show();\n\n}\n\npublic static void main(String[] args) {\nlaunch(args);\n}\n}\n</code></pre>"},{"location":"legacy/02_gyakorlat/#referenciak","title":"Referenci\u00e1k","text":"<ul> <li>FxDocs</li> <li>Oracle Docs Layouts</li> </ul>"},{"location":"legacy/03_gyakorlat/","title":"3. gyakorlat","text":"<p>Kor\u00e1bban l\u00e1ttuk, hogy hogyan lehet a JavaFX API-t felhaszn\u00e1lni arra, hogy grafikus felhaszn\u00e1l\u00f3i fel\u00fcleteket hozzunk l\u00e9tre. Ebben a fejezetben azt n\u00e9zz\u00fck meg, hogy hogyan lehet ezt m\u00e1sk\u00e9ppen deklarat\u00edv m\u00f3don megadni, mely\u00e9rt az FXML felel\u0151s.</p>"},{"location":"legacy/03_gyakorlat/#fxml","title":"FXML","text":"<p>Az FXML nem m\u00e1s, mint egy XML alap\u00fa le\u00edr\u00f3 nyelv, mely seg\u00edts\u00e9g\u00e9vel JavaFX alkalmaz\u00e1sok eset\u00e9n a felhaszn\u00e1l\u00f3i fel\u00fcletek szerkezete le\u00edrhat\u00f3, az alkalmaz\u00e1s k\u00f3dt\u00f3l teljesen elk\u00fcl\u00f6n\u00edtve, teh\u00e1t az FXML felel\u0151s a mit k\u00e9rd\u00e9sre v\u00e1laszolni, de a viselked\u00e9st m\u00e1r nem itt adjuk meg hanem Java k\u00f3dban.</p> <p>Tekints\u00fck a k\u00f6vetkez\u0151 JavaFX API-val \u00f6sszerakott fel\u00fcletet!</p> <pre><code>import javafx.scene.layout.VBox;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.Button;\n\nVBox root = new VBox();\nroot.getChildren().addAll(new Label(\"FXML is awesome\"), new Button(\"Yeah\"));\n</code></pre> <p>Ennek a fel\u00fcletnek az FXML megfelel\u0151je:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n\n&lt;?import javafx.scene.layout.VBox?&gt;\n&lt;?import javafx.scene.control.Label?&gt;\n&lt;?import javafx.scene.control.Button?&gt;\n\n&lt;VBox&gt;\n&lt;children&gt;\n&lt;Label text=\"FXML is awesome\"/&gt;\n&lt;Button text=\"Yeah\"/&gt;\n&lt;/children&gt;\n&lt;/VBox&gt;\n</code></pre> <p>FXML \u00e1llom\u00e1nyokat a <code>*.fxml</code> kiterjeszt\u00e9s\u0171 f\u00e1jlokban t\u00e1roljuk.</p> <p>Az els\u0151 sort m\u00e1r ismerj\u00fck (prolog sor), mely ut\u00e1n az importok k\u00f6vetkeznek, majd maguk grafikus komponensek.</p> <p>Megjegyz\u00e9s</p> <p>Az FXML \u00e1ltal\u00e1nosabb \u00e9rtelemben is haszn\u00e1lhat\u00f3, mivel az egy szerializ\u00e1l\u00e1si form\u00e1ja a Java objektumoknak, azaz nem csak a JavaFX GUI elemeinek le\u00edr\u00e1s\u00e1ra haszn\u00e1lhat\u00f3, hanem tetsz\u0151leges Java objektumok \u00e1llapot\u00e1nak ment\u00e9s\u00e9re.</p> <p>Amennyiben a fenti XML alap\u00fa f\u00e1jlt manu\u00e1lisan kellene szerkeszten\u00fcnk, akkor nyilv\u00e1n ink\u00e1bb a JavaFX API-t v\u00e1lasztan\u00e1nk nagy t\u00f6bbs\u00e9ggel, ugyanakkor az egyszer\u0171 form\u00e1ja miatt lehet\u0151s\u00e9g van arra, hogy k\u00fcl\u00f6nb\u00f6z\u0151 eszk\u00f6z\u00f6kkel grafikusan \u00e1ll\u00edtsuk el\u0151 a felhaszn\u00e1l\u00f3i interf\u00e9szeket. Erre a c\u00e9lra k\u00e9sz\u00fclt a SceneBuilder, melynek seg\u00edts\u00e9g\u00e9vel \"\u00f6sszeh\u00fazogathatjuk\" a grafikus elemeket (WYSWYG eszk\u00f6z).</p> <p>A SceneBuilder-t az IntelliJ alapb\u00f3l felk\u00edn\u00e1lja az <code>*.fxml</code> kiterjeszt\u00e9s\u0171 f\u00e1jlok szerkeszt\u00e9s\u00e9hez, \u00e1m a telep\u00edtett eszk\u00f6z futtathat\u00f3 f\u00e1jlj\u00e1t be kell \u00e1ll\u00edtani a <code>Settings-&gt;Languages&amp;Frameworks-&gt;JavaFX-&gt;Path to SceneBuilder</code> seg\u00edts\u00e9g\u00e9vel. Ezut\u00e1n tetsz\u0151leges FXML f\u00e1jlon jobb kattint\u00e1s, \u00e9s a legals\u00f3 men\u00fcpont a SceneBuilder, ami megnyitja az \u00e1llom\u00e1nyt a vizu\u00e1lis szerkeszt\u0151vel.</p> <p></p> <p>Megjegyz\u00e9s</p> <p>Az IntelliJ-n bel\u00fcl is lehet haszn\u00e1lni a SceneBuilder-t, mint bundle-t, de ekkor n\u00e9h\u00e1ny funkci\u00f3hoz nem f\u00e9r\u00fcnk hozz\u00e1.</p> <p>Az FXML alapjait egy kis p\u00e9lda feladaton fogjuk bemutatni.</p> <p>Feladat (01_fxml-basic)</p> <p>Hozzuk l\u00e9tre a SceneBuilder seg\u00edts\u00e9g\u00e9vel az al\u00e1bbi felhaszn\u00e1l\u00f3i fel\u00fcletet! A nyom\u00f3gomb megnyom\u00e1s\u00e1ra a sz\u00f6vegmez\u0151ben l\u00e9v\u0151 sz\u00f6veg \u00edr\u00f3djon ki konzolra.</p> <p></p> <p>Feladat l\u00e9p\u00e9sei:</p> <ol> <li>Induljunk ki egy \u00fcres JavaFX projektb\u0151l (amennyiben archetype-b\u00f3l indulunk ki, akkor t\u00f6r\u00f6lj\u00fcnk ki mindent)!</li> <li>Hozzunk l\u00e9tre egy sample.fxml f\u00e1jlt a <code>src/main/resources/hu/alkfejl</code> mapp\u00e1ban!</li> <li>Nyissuk meg SceneBuilder-ben a f\u00e1jlt (jobb klikk az fxml f\u00e1jlon -&gt; Open In SceneBuilder)</li> <li>\u00c1ll\u00edtsuk \u00f6ssze az ablakot (<code>HBox</code>-on bel\u00fcl egy gomb \u00e9s egy <code>TextField</code>)</li> <li>Cser\u00e9lj\u00fck a gomb felirat\u00e1t (Properties f\u00fcl alatt), \u00e9s \u00e1ll\u00edtsunk be <code>fx:id</code>-t az elemeknek (Inspector -&gt; Code)</li> <li>Ments\u00fck el, \u00e9s tanulm\u00e1nyozzuk a gener\u00e1lt fxml-t!</li> <li>Az <code>App.java</code>-ban t\u00f6lts\u00fck be az FXML-et, \u00e9s cser\u00e9lj\u00fck le a SceneGraph-ot a bet\u00f6lt\u00f6ttre</li> <li>Adjuk meg controller-t class-nak a <code>hu.alkfejl.App</code> oszt\u00e1lyt</li> <li>Vegy\u00fcnk fel egy <code>handleEcho</code> esem\u00e9nykezel\u0151t a gombhoz</li> <li>Implement\u00e1ljuk a met\u00f3dust \u00fagy, hogy gombnyom\u00e1s hat\u00e1s\u00e1ra a sz\u00f6vegmez\u0151 tartalma k\u00e9perny\u0151re \u00edr\u00f3djon (FXML dependency <code>pom.xml</code>-be, \u00e9s FXML annot\u00e1ci\u00f3k)</li> </ol> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n\n&lt;?import javafx.scene.control.Button?&gt;\n&lt;?import javafx.scene.control.TextField?&gt;\n&lt;?import javafx.scene.layout.HBox?&gt;\n\n\n&lt;HBox maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"hu.alkfejl.App\"&gt;\n&lt;children&gt;\n&lt;Button fx:id=\"myButton\" mnemonicParsing=\"false\" text=\"Button\" onAction=\"#buttonClick\" /&gt;\n&lt;TextField fx:id=\"myTextF\" /&gt;\n&lt;/children&gt;\n&lt;/HBox&gt;\n</code></pre> <p>Ez a k\u00f3dr\u00e9szlet annak felel meg, mintha l\u00e9trehozn\u00e1nk egy <code>HBox</code>, egy <code>Button</code> \u00e9s egy <code>TextField</code> komponenst, \u00e9s a <code>Buttont</code>-t, valamint a <code>TextField</code>-et hozz\u00e1adn\u00e1nk a <code>HBox</code> gyerekeihez.</p> <p>A gener\u00e1lt FXML el\u00e9gg\u00e9 intuit\u00edv ahhoz, hogy \u00e9rtelmezni lehessen, ugyanakkor n\u00e9h\u00e1ny elemet \u00e9rdemes k\u00f6zelebbr\u0151l megn\u00e9zn\u00fcnk.</p> <p>Az import sorok tervez\u00e9si id\u0151ben inform\u00e1lj\u00e1k a SceneBuilder-t vagy a bet\u00f6lt\u00e9skor az <code>FXMLLoader</code>-t, hogy mely JavaFX oszt\u00e1lyokat kell beh\u00fazni, kv\u00e1zi egyen\u00e9rt\u00e9k\u0171 a sima Java-s importtal.</p> <p>Figyelem</p> <p>Az FXML tartalma nincs s\u00e9ma \u00e1ltal valid\u00e1lva (XSD). A haszn\u00e1lt XML namespace-ekre az\u00e9rt van sz\u00fcks\u00e9g, hogy azok seg\u00edts\u00e9k az FXMLLoader, a SceneBuilder, illetve az IDE-k m\u0171k\u00f6d\u00e9s\u00e9t.</p> <p>A p\u00e9ld\u00e1ban az <code>fx</code> prefixet k\u00e9t helyen haszn\u00e1ljuk:</p> <ul> <li><code>fx:controller</code>: A legfels\u0151 elemen adhatjuk meg, mely fut\u00e1s id\u0151ben inform\u00e1lja az alkalmaz\u00e1sunkat, hogy melyik controller-el m\u0171k\u00f6dik egy\u00fctt ez az FXML \u00e1llom\u00e1ny. Itt tudjuk megadni majd az esem\u00e9nykezel\u0151 met\u00f3dusokat az adott elemekhez, m\u00e1rmint a t\u00e9nyleges met\u00f3dus defin\u00edci\u00f3kat. Fontos, hogy az itt megadott kontroller oszt\u00e1lyt az FXMLLoader p\u00e9ld\u00e1nyos\u00edtja.</li> <li><code>fx:id</code>: Minden elemhez hozz\u00e1rendelhet\u0151, mely egyedileg azonos\u00edtja az FXML-ben megadott Node-ot. Bet\u00f6lt\u00e9s ut\u00e1n a Node-okat ezen a n\u00e9ven \u00e9rhetj\u00fck el (ilyen nev\u0171 field-eket kell majd haszn\u00e1lnunk a controller-ben is, ha szeretn\u00e9nk az adott Node-ot a Java k\u00f3db\u00f3l is haszn\u00e1lni, m\u00e1sk\u00fcl\u00f6nben elhagyhat\u00f3 mind a field, mind az <code>fx:id</code> megad\u00e1s). </li> </ul> <p>Az FXML-ben az esem\u00e9nykezel\u0151ket is megadhatjuk, melyek defin\u00edci\u00f3ja a controller-ben van. A JavaFX API-t\u00f3l elt\u00e9r\u0151en itt a <code>set</code> el\u0151tagot nem kell ki\u00edrnunk. Teh\u00e1t p\u00e9ld\u00e1ul a <code>setOnAction()</code>-b\u0151l csak szimpl\u00e1n <code>onAction</code> attrib\u00fatum lesz az FXML-en bel\u00fcl. Az attrib\u00fatumban az esem\u00e9nykezel\u0151 met\u00f3dus nev\u00e9t kell megadnunk, illetve az el\u00e9 egy <code>#</code> jelet is el kell helyezn\u00fcnk (amennyiben az esem\u00e9nykezel\u0151 defin\u00edci\u00f3ja mag\u00e1ban az FXML-ben van megadva, p\u00e9ld\u00e1ul, <code>fx:script</code> tag-ek k\u00f6z\u00f6tt, akkor nem kell ki\u00edrni a <code>#</code> prefixet).</p> <pre><code>onAction=\"#buttonClick\"\n</code></pre> <p>A megadott met\u00f3dusoknak alapvet\u0151en illeszkedni\u00fck kell az <code>EventHandler&lt;T&gt;</code> interf\u00e9sz <code>void handle(T event)</code> met\u00f3dus\u00e1hoz, ahol a <code>T</code> t\u00edpus az esem\u00e9nynek megfelel\u0151en van megadva (gombnyom\u00e1s eset\u00e9n <code>ActionEvent</code>, eg\u00e9resem\u00e9nyek eset\u00e9n <code>MouseEvent</code>, stb.). Az <code>event</code> param\u00e9ter el is hagyhat\u00f3 abban az esetben, ha nincs r\u00e1 sz\u00fcks\u00e9g\u00fcnk.</p> <p>Megjegyz\u00e9s</p> <p>Az esem\u00e9nykezel\u0151ket nem csak a controllerben tudjuk megadni. Lehet\u0151s\u00e9g van arra is, hogy mag\u00e1ban az FXML-ben adjunk meg esem\u00e9nykezel\u0151ket:</p> <pre><code>&lt;?language JavaScript?&gt;\n&lt;?import javafx.scene.control.Button?&gt;\n\n&lt;fx:script&gt;\nfunction f1() {\n        java.lang.System.out.println(\"f1\");\n    };\n\n    function f2() {\n        java.lang.System.out.println(\"f2\");\n    };\n&lt;/fx:script&gt;\n&lt;Button text=\"Close\" onAction=\"f1();\"/&gt;\n</code></pre>"},{"location":"legacy/03_gyakorlat/#controller","title":"Controller","text":"<p>Az FXML-ben \u00f6ssze\u00e1ll\u00edtott user interface elmeivel term\u00e9szetesen tov\u00e1bbra is szeretn\u00e9nk az alkalmaz\u00e1sb\u00f3l kommunik\u00e1lni, de hogyan \u00e9rhetj\u00fck el \u0151ket Java k\u00f3db\u00f3l, ha az elemeket FXML-b\u0151l dinamikusan t\u00f6lti be az FXMLLoader, \u00e9s nem mi hoztuk k\u00e9zzel l\u00e9tre a k\u00f3dban a megfelel\u0151 GUI komponens t\u00edpus\u00fa v\u00e1ltoz\u00f3kat? A megold\u00e1s az <code>@FXML</code> annot\u00e1ci\u00f3 haszn\u00e1lata, mely a field neve alapj\u00e1n \u00e9s az FXML-ben tal\u00e1lhat\u00f3 <code>fx:id</code> alapj\u00e1n kezdem\u00e9nyezi az \u00f6sszek\u00f6ttet\u00e9st. Amennyiben a controller-ben ell\u00e1tunk field-eket/met\u00f3dusokat a <code>@FXML</code> marker annot\u00e1ci\u00f3val, akkor a field-eket/met\u00f3dusokat a SceneBuilder-ben is l\u00e1tni fogjuk \u00e9s megadhatjuk \u0151ket id-k\u00e9nt, illetve esem\u00e9nykezel\u0151k\u00e9nt.</p> <p>Megjegyz\u00e9s</p> <p>Amit a <code>@FXML</code> annot\u00e1ci\u00f3val ell\u00e1tunk nem sz\u00fcks\u00e9ges, hogy <code>public</code> l\u00e1that\u00f3s\u00e1ggal b\u00edrjon. Az annot\u00e1ci\u00f3 alkalmaz\u00e1sa az FXML-ben l\u00e1that\u00f3v\u00e1 teszi ak\u00e1r a private field-eket \u00e9s met\u00f3dusokat is. </p> <pre><code>@FXML\nTextField myTextF;\n...\nmyTextF.getText()\n</code></pre> <p>Az FXML \u00e9s a k\u00f3d k\u00f6zti kapcsolatot az annot\u00e1ci\u00f3 teremti meg, \u00e1m ahhoz hogy automatikusan tudja melyik FXML-ben deklar\u00e1lt <code>TextField</code>-et kell a v\u00e1ltoz\u00f3val \u00f6sszek\u00f6tni, a v\u00e1ltoz\u00f3 nev\u00e9nek meg kell egyeznie az FXML-ben deklar\u00e1lt elem <code>fx:id</code> attrib\u00fatum\u00e1val!</p> <p>Az FXML annot\u00e1ci\u00f3 haszn\u00e1lat\u00e1hoz r\u00e1ad\u00e1sul egy \u00faj f\u00fcgg\u0151s\u00e9get is fel kell venn\u00fcnk a POM.xml-be:</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;org.openjfx&lt;/groupId&gt;\n&lt;artifactId&gt;javafx-fxml&lt;/artifactId&gt;\n&lt;version&gt;11&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"legacy/03_gyakorlat/#fxml-betoltes","title":"FXML bet\u00f6lt\u00e9s","text":"<p>Az FXML-ben le\u00edrt user interface-eket be kell t\u00f6lteni az alkalmaz\u00e1s k\u00f3dban, hogy az ott le\u00edrt fel\u00fclet l\u00e9trej\u00f6jj\u00f6n, \u00e9s a <code>SceneGraph</code> el\u0151\u00e1lljon bel\u0151le, amit azt\u00e1n a szok\u00e1sos m\u00f3don meg tudunk jelen\u00edteni egy <code>Stage</code> tartalmak\u00e9nt. Erre a feladatra a Java k\u00f3dban az <code>FXMLLoader</code>-t haszn\u00e1ljuk.</p> <pre><code>FXMLLoader loader = new FXMLLoader(getClass().getResource(\"sample.fxml\"));\nParent root = loader.load();\nScene scene = new Scene(root, 300, 275);\n\nMyController controller = loader.getController();\n\nsetTitle(\"FXML Welcome\");\nsetScene(scene);\nshow();\n</code></pre> <p>Tipp</p> <p>A <code>sample.fxml</code> f\u00e1jlnak el\u00e9rhet\u0151nek kell lennie a class mellett, amit legegyszer\u0171bben \u00fagy tudunk el\u00e9rni, hogy az FXML \u00e1llom\u00e1nyokat az <code>src/main/resources</code> mappa al\u00e1 gy\u0171jtj\u00fck ugyanolyan mappa szerkezetben, amilyenben a bet\u00f6lt\u00e9st v\u00e9gz\u0151 oszt\u00e1ly csomag hierarchi\u00e1ja megk\u00f6vetel.</p> <p>A bet\u00f6lt\u00f6tt FXML tartalmat azt\u00e1n felhaszn\u00e1lhatjuk egy az egyben Scene Graph-k\u00e9nt (mivel, hogy az is) \u00e9s mint ahogyan a fenti p\u00e9ld\u00e1ban ak\u00e1r lehet ez a root node-ja egy <code>Scene</code>-nek, de az is el\u0151fordulhat, hogy csak egy r\u00e9szf\u00e1t t\u00f6lt\u00fcnk be egy FXML-b\u0151l \u00e9s az r\u00e9sze lesz egy komplexebb fel\u00fcletnek (\u00fajrafelhaszn\u00e1l\u00e1sn\u00e1l j\u00f3l j\u00f6het). Fontos, hogy az FXML \u00e1llom\u00e1nyokat fut\u00e1s k\u00f6zben t\u00f6lti be az <code>FXMLLoader</code>, \u00edgy csak ebben a pillanatban tudjuk meg, hogy az adott \u00e1llom\u00e1ny megfelel-e az FXML specifik\u00e1ci\u00f3j\u00e1nak.</p> <p>Az <code>FXMLLoader</code>-nek van statikus <code>load</code> met\u00f3dusa is, de javallott a fent bemutatott m\u00f3don haszn\u00e1lni, azaz p\u00e9ld\u00e1nyos\u00edtani, mivel \u00edgy k\u00e9rhet\u00fcnk referenci\u00e1t a controller-re is, mely sokszor j\u00f3 szolg\u00e1latot tesz. Ez azt is jelenti, hogy direktben nek\u00fcnk nem kell p\u00e9ld\u00e1nyos\u00edtanunk a controller-t, mivel azt elv\u00e9gzi helyett\u00fcnk az <code>FXMLLoader</code>.</p> <p>A haland\u00f3 embereknek \u00e1ltal\u00e1ban el\u00e9g lesz ez a sima konstruktor, mely az FXML \u00e1llom\u00e1nyra v\u00e1rja az URL hivatkoz\u00e1st, de \u00e9rdemes lehet a t\u00f6bbi konstruktort is megn\u00e9zni, mert van p\u00e9ld\u00e1ul, ami k\u00e9pes <code>ResourceBundle</code>-t fogadni, mely a t\u00f6bbnyelv\u0171 alkalmaz\u00e1sok \u00edr\u00e1s\u00e1t t\u00e1mogatja. P\u00e9ld\u00e1ul:</p> <pre><code>Locale locale = new Locale(\"en\");\nResourceBundle bundle = ResourceBundle.getBundle(\"messages\", locale); // messages_en.properties \u00e1llom\u00e1nyt t\u00f6lti be\nFXMLLoader fxmlLoader = new FXMLLoader(App.class.getResource(fxml + \".fxml\"), bundle);\n</code></pre> <p>Ezut\u00e1n az FXML-ben tal\u00e1lhat\u00f3 <code>text</code>-ekn\u00e9l megadhatunk <code>%_msg_id</code> alak\u00fa attrib\u00fatumokat, ahol <code>msg_id</code> a nyelvi f\u00e1jlokban az adott kulcs \u00e9rt\u00e9ke. P\u00e9ld\u00e1ul:</p> <pre><code>&lt;Button fx:id=\"secondaryButton\" text=\"%switch.to.primary\" onAction=\"#switchToPrimary\" /&gt;\n</code></pre> <p>mely sz\u00f6veg megfelel\u0151je a <code>messages_en.properties</code> f\u00e1jlban:</p> <pre><code>switch.to.primary=Switch to Primary View\n</code></pre> <p>A <code>ResourceBundle</code>-on fel\u00fcl megadhatunk a <code>builderFactory</code>-t, melyet az <code>FXMLLoader</code> haszn\u00e1l a k\u00fcl\u00f6nb\u00f6z\u0151 t\u00edpus\u00fa <code>Node</code>-ok l\u00e9trehoz\u00e1sakor, illetve ennek megfelel\u0151en az alap\u00e9rtelmezett callback-et is fel\u00fcl\u00edrhatjuk, mely a controller visszaad\u00e1s\u00e1t val\u00f3s\u00edtja meg (alapvet\u0151en a param\u00e9teres konstruktorral p\u00e9ld\u00e1nyos\u00edtja a controller-t a rendszer, de \u00edgy fel\u00fcl tudjuk ezt is \u00edrni). Ezen fel\u00fcl m\u00e9g az FXML dokumentumok parse-ol\u00e1sakor haszn\u00e1lt karakterk\u00f3dol\u00e1st is megadhatjuk (alap\u00e9rtelmezett UTF-8), tov\u00e1bb\u00e1 a bet\u00f6lt\u00e9shez haszn\u00e1land\u00f3 egy\u00e9b loader-eket. A fenti sorrendben megadott lehets\u00e9ges param\u00e9terekkel a legb\u0151vebb konstruktor a k\u00f6vetkez\u0151 m\u00f3don n\u00e9z ki:</p> <pre><code>FXMLLoader(\nURL location,\nResourceBundle resources,\nBuilderFactory BuilderFactory builderFactory,\nCallback&lt;Class&lt;?&gt;, Object&gt; controllerFactory,\nCharset charset,\nLinkedList&lt;FXMLLoader&gt; loaders\n)\n</code></pre> <p>Az els\u0151 k\u00e9t param\u00e9tert haszn\u00e1ljuk a leggyakrabban, a t\u00f6bbit csak nagyon speci\u00e1lis esetben kell haszn\u00e1lnunk.</p> <p>Az FXMLLoader objektumokon a fenti konstruktor param\u00e9terek alapj\u00e1n getter \u00e9s setter met\u00f3dusok is seg\u00edtik a munk\u00e1t, azaz egy-egy elem k\u00e9s\u0151bb is be\u00e1ll\u00edthat\u00f3 a hozz\u00e1tartoz\u00f3 setter-el (pl.: <code>setLocation(URL url)</code>), illetve k\u00e9s\u0151bb lek\u00e9rhet\u0151 az \u00e9rt\u00e9ke (pl.: <code>getCharset()</code>).</p> <p>Megjegyz\u00e9s</p> <p>Az <code>FXMLLoader</code> <code>load()</code> met\u00f3dusa generikus, mely seg\u00edts\u00e9g\u00e9vel megadhatjuk a root node t\u00edpus\u00e1t. P\u00e9ld\u00e1ul:</p> <pre><code>HBox rootNode = loader.&lt;HBox&gt;load();\n</code></pre> <p>Az FXMLLoader tov\u00e1bb\u00e1 t\u00e1mogatja az <code>InputStream</code>-b\u0151l t\u00f6rt\u00e9n\u0151 beolvas\u00e1st is.</p> <p>Az <code>FXMLLoader</code> haszn\u00e1lata sor\u00e1n, amikor bet\u00f6ltj\u00fck az FXML dokumentumot, akkor sokszor sz\u00fcks\u00e9g lehet arra, hogy az FXML-ben megadott grafikus elemeknek valamilyen kezd\u0151\u00e9rt\u00e9ket adjunk. Amennyiben a konstruktorban pr\u00f3b\u00e1ljuk be\u00e1ll\u00edtani az \u00e9rt\u00e9keket, akkor nagy val\u00f3sz\u00edn\u0171s\u00e9ggel <code>NullPointerException</code>-el tal\u00e1ljuk szembe magunkat, mivel a field injekt\u00e1l\u00e1sok m\u00e9g nem t\u00f6rt\u00e9nnek meg ilyenkor. Szerencs\u00e9re van egy egyszer\u0171 megold\u00e1s erre a probl\u00e9m\u00e1ra, mivel az <code>FXMLLoader</code> automatikusan megh\u00edvja az <code>initialize()</code> met\u00f3dust, akkor amikor a field injekt\u00e1l\u00e1sok megt\u00f6rt\u00e9ntek. Az <code>initailize()</code> met\u00f3dus fel\u00fcldefini\u00e1l\u00e1s\u00e1hoz implement\u00e1ljuk a <code>javafx.fxml.Initializable</code> interf\u00e9szt!</p> <pre><code>public class PrimaryController implements Initializable {\n\n@Override\npublic void initialize(URL location, ResourceBundle resources) {\n// itt lehet a fel\u00fcleti vez\u00e9rl\u0151k inicializ\u00e1l\u00e1s\u00e1t elv\u00e9gezni        \n}\n}\n</code></pre> <p>Feladat</p> <p>Hozzunk l\u00e9tre egy \u00faj projektet IntelliJ-n bel\u00fcl, melynek sor\u00e1n a <code>javafx-archetype-fxml</code>-t adjuk meg mint projekt archetype! Pr\u00f3b\u00e1ljuk meg meg\u00e9rteni a kapott projekt v\u00e1zat!</p> Megold\u00e1s <p></p>"},{"location":"legacy/03_gyakorlat/#fxml-nyalanksagok","title":"FXML nyal\u00e1nks\u00e1gok","text":"<p>A k\u00f6vetkez\u0151kben olyan FXML feature-\u00f6k ker\u00fclnek bemutat\u00e1sra, amelyek megk\u00f6nny\u00edthetik a munk\u00e1nkat, de n\u00e9lk\u00fcl\u00fck is teljes \u00e9letet \u00e9lhet\u00fcnk.</p>"},{"location":"legacy/03_gyakorlat/#ujrafelhasznalhato-objektumok-megadasa","title":"\u00dajrafelhaszn\u00e1lhat\u00f3 objektumok megad\u00e1sa","text":"<p>Az FXML-ben megadhatunk olyan elemeket, amiket t\u00f6bbsz\u00f6r is szeretn\u00e9nk felhaszn\u00e1lni. Ezeket az <code>fx:define</code> k\u00f6z\u00f6tt kell megadnunk, majd k\u00e9s\u0151bb az <code>fx:id</code>-ban megadott azonos\u00edt\u00f3t haszn\u00e1lhatjuk fel \u00fagy, hogy az el\u00e9 egy <code>$</code> jelet rakunk.</p> <pre><code>&lt;?import javafx.scene.layout.VBox?&gt;\n&lt;?import javafx.scene.control.Label?&gt;\n&lt;?import javafx.scene.control.Button?&gt;\n&lt;?import javafx.geometry.Insets?&gt;\n&lt;?import javafx.scene.control.ToggleGroup?&gt;\n&lt;?import javafx.scene.control.RadioButton?&gt;\n\n&lt;VBox fx:controller=\"hu.alkfejl.Test\" xmlns:fx=\"http://javafx.com/fxml\"&gt;\n&lt;fx:define&gt;\n&lt;Insets fx:id=\"margin\" top=\"5.0\" right=\"5.0\" bottom=\"5.0\" left=\"5.0\"/&gt;\n&lt;ToggleGroup fx:id=\"genderGroup\"/&gt;\n&lt;/fx:define&gt;\n\n&lt;Label text=\"Gender\" VBox.margin=\"$margin\"/&gt;\n&lt;RadioButton text=\"Male\" toggleGroup=\"$genderGroup\"/&gt;\n&lt;RadioButton text=\"Female\" toggleGroup=\"$genderGroup\"/&gt;\n&lt;RadioButton text=\"Unknown\" toggleGroup=\"$genderGroup\" selected=\"true\"/&gt;\n&lt;Button text=\"Close\" VBox.margin=\"$margin\"/&gt;\n&lt;/VBox&gt;\n</code></pre> <p>A <code>$</code>-al kezd\u0151d\u0151 megad\u00e1sokat a rendszer objektum referenciak\u00e9nt kezeli. Amennyiben a <code>$</code> az azonos\u00edt\u00f3 r\u00e9sz\u00e9t k\u00e9pezi akkor escape-elj\u00fck <code>\\$</code>-al!</p>"},{"location":"legacy/03_gyakorlat/#location-megadasa","title":"Location megad\u00e1sa","text":"<p>A <code>@</code>-al kezd\u0151d\u0151 attrib\u00fatum \u00e9rt\u00e9kek mindig egy helyre (f\u00e1jlra, pl.: egy k\u00e9pre, vagy FXML \u00e1llom\u00e1nyra) mutatnak. A <code>@/</code>-el kezd\u0151d\u0151 megad\u00e1s a classpath-hoz viszony\u00edtott relat\u00edv megad\u00e1si m\u00f3d. Amennyiben <code>/</code> n\u00e9lk\u00fcl haszn\u00e1ljuk akkor az adott FXML f\u00e1jlhoz viszony\u00edtott relat\u00edv megad\u00e1si m\u00f3dot k\u00f6vet\u00fcnk.</p> <p>A k\u00f6vetkez\u0151 p\u00e9ld\u00e1ban egy <code>ImageView</code>-ban megjelen\u00edteni k\u00edv\u00e1nt k\u00e9p URL-j\u00e9t adjuk meg (classpath-hoz viszony\u00edtva):</p> <pre><code>&lt;ImageView&gt;\n&lt;Image url=\"@/resources/images/logo.jpg\"/&gt;\n&lt;/ImageView&gt;\n</code></pre>"},{"location":"legacy/03_gyakorlat/#fxml-include","title":"FXML include","text":"<p>Az FXML dokumentumok k\u00f6z\u00f6tt haszn\u00e1lhatunk include-ot is, azaz az egyik FXML dokumentumb\u00f3l haszn\u00e1lhatunk egy m\u00e1sikat include form\u00e1j\u00e1ban. Ennek form\u00e1ja a k\u00f6vetkez\u0151:</p> <pre><code>&lt;fx:include source=\"other_fxml_doc\"/&gt;\n</code></pre> <p>A szab\u00e1ly az, hogy minden FXML dokumentumnak egy kontrollere lehet. Amikor egym\u00e1sba \u00e1gyazunk FXML dokumentumokat, akkor is mindegyiknek lehet saj\u00e1t kontroller oszt\u00e1lya.</p>"},{"location":"legacy/03_gyakorlat/#konstansok-hasznalata","title":"Konstansok haszn\u00e1lata","text":"<p>Az FXML-ben felhaszn\u00e1lhatjuk a Java oszt\u00e1lyokban megadott static final konstansok \u00e9rt\u00e9k\u00e9t. Ezeket az \u00e9rt\u00e9keket az <code>fx:constant</code>-al hivatkozhatjuk. P\u00e9ld\u00e1ul a <code>Long</code> oszt\u00e1ly <code>MAX_VALUE</code> \u00e9rt\u00e9k\u00e9t a k\u00f6vetkez\u0151k\u00e9ppen haszn\u00e1lhatjuk:</p> <pre><code>&lt;Long fx:constant=\"MAX_VALUE\"/&gt;\n</code></pre> <p>Egy nagyobb p\u00e9ldak\u00e9nt tekints\u00fck a k\u00f6vetkez\u0151t:</p> <pre><code>&lt;VBox xmlns:fx=\"http://javafx.com/fxml\"&gt;\n&lt;fx:define&gt;\n&lt;Integer fx:constant=\"MAX_VALUE\" fx:id=\"maxInt\"/&gt;\n&lt;/fx:define&gt;\n&lt;alignment&gt;&lt;Pos fx:constant=\"CENTER\"/&gt;&lt;/alignment&gt;\n\n&lt;TextField text=\"$maxInt\"/&gt;\n&lt;TextField&gt;\n&lt;text&gt;&lt;Long fx:constant=\"MIN_VALUE\"/&gt;&lt;/text&gt;\n&lt;/TextField&gt;\n&lt;/VBox&gt;\n</code></pre> <p>A p\u00e9ld\u00e1ban egy <code>VBox</code>-ban k\u00e9t <code>TextField</code>-et jelen\u00edt\u00fcnk meg, az egyiknek az <code>Integer</code> legkisebb \u00e9rt\u00e9k\u00e9t adjuk sz\u00f6vegk\u00e9nt, m\u00edg a m\u00e1siknak a legnagyobbat. Ezen fel\u00fcl l\u00e1thatunk p\u00e9ld\u00e1t a <code>VBox</code> <code>alignment</code> tulajdons\u00e1g\u00e1nak be\u00e1ll\u00edt\u00e1s\u00e1ra is.</p>"},{"location":"legacy/03_gyakorlat/#fxml-elemek-hivatkozasa","title":"FXML elemek hivatkoz\u00e1sa","text":"<p>Egy FXML dokumentumon bel\u00fcl hivatkozhatunk az elemekre az <code>fx:reference</code> elem haszn\u00e1lat\u00e1val.</p> <pre><code>&lt;VBox xmlns:fx=\"http://javafx.com/fxml\"&gt;\n&lt;fx:define&gt;\n&lt;Image url=\"resources/images/test.jpg\" fx:id=\"myImg\"/&gt;\n&lt;/fx:define&gt;\n&lt;ImageView&gt;\n&lt;image&gt;\n&lt;fx:reference source=\"myImg\"/&gt;\n&lt;/image&gt;\n&lt;/ImageView&gt;\n&lt;/VBox&gt;\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban az <code>ImageView</code>-ban megjelen\u00edtend\u0151 k\u00e9pet egy referenci\u00e1val adjuk meg. A fenti k\u00f3d ekvivalens a k\u00f6vetkez\u0151vel:</p> <pre><code>&lt;VBox xmlns:fx=\"http://javafx.com/fxml\"&gt;\n&lt;fx:define&gt;\n&lt;Image url=\"resources/images/test.jpg\" fx:id=\"myImg\"/&gt;\n&lt;/fx:define&gt;\n&lt;ImageView image=\"$myImg\"/&gt;\n&lt;/VBox&gt;\n</code></pre>"},{"location":"legacy/03_gyakorlat/#elemek-masolasa","title":"Elemek m\u00e1sol\u00e1sa","text":"<p>El\u0151fordulhat, hogy egy FXML elemet le szeretn\u00e9nk m\u00e1solni az \u00f6sszes attrib\u00fatum\u00e1val egy\u00fctt. Erre az <code>&lt;fx:copy&gt;</code>-t haszn\u00e1lhatjuk.</p> <pre><code>&lt;fx:copy source=\"fx:id of the source object\" /&gt;\n</code></pre> <p>Ahhoz, hogy a <code>copy</code> m\u0171k\u00f6dj\u00f6n az adott oszt\u00e1lynak rendelkeznie kell egy copy konstruktorral, azaz olyan konstruktorral, amely az adott oszt\u00e1ly egy objektum\u00e1t v\u00e1rja. P\u00e9ld\u00e1ul:</p> <pre><code>public class Person {\n\nprivate Long id;\nprivate String name;\n\npublic Person() {\n}\n\n// The copy constructor\npublic Person(Person person) {\nthis.id = person.id + 100;\nthis.name = person.name + \" (Copied)\";\n}\n...\n}\n</code></pre>"},{"location":"legacy/03_gyakorlat/#stiluslapok-hasznalata","title":"St\u00edluslapok haszn\u00e1lata","text":"<p>Ahogyan a webes k\u00f6rnyezetben is, JavaFX-ben is lehet\u0151s\u00e9g van, hogy a megjelen\u00e9st, a form\u00e1z\u00e1st szem\u00e9lyre szabjuk \u00e9s ezen szab\u00e1lyok \u00f6sszess\u00e9g\u00e9t lev\u00e1lasszuk magukr\u00f3l a UI elemekr\u0151l \u00e9s egy szepar\u00e1lt helyen adjuk meg \u0151ket. A nagyszer\u0171 az eg\u00e9szben, hogy nem kell egy \u00faj dolgot megtanulni, mivel haszn\u00e1lhatunk CSS st\u00edluslapokat a form\u00e1z\u00e1sok megad\u00e1s\u00e1hoz.</p> <p>Egy p\u00e9lda, amely m\u00e1r JavaFX-ben haszn\u00e1lhat\u00f3 (\u00e9s egy kis eml\u00e9keztet\u0151):</p> <pre><code>.button {\n-fx-background-color: red;\n-fx-text-fill: white;\n}\n</code></pre> <p>A <code>.button</code> az \u00fagynevezett selector, melyhez property-value p\u00e1rosokat adhatunk meg a k\u00edv\u00e1nt form\u00e1z\u00e1sok el\u00e9r\u00e9s\u00e9nek \u00e9rdek\u00e9ben. A f\u0151 k\u00fcl\u00f6nbs\u00e9g, hogy a property-k megad\u00e1s\u00e1n\u00e1l a <code>-fx-</code> prefixet is meg kell adnunk!</p> <p>A fent megadott st\u00edluslapot ments\u00fck el p\u00e9ld\u00e1ul <code>resources/css/style.css</code> n\u00e9ven! Ezut\u00e1n v\u00e1lasszuk ki azt a <code>Scene</code>-t, amelyikre szeretn\u00e9nk az adott CSS-t alkalmazni \u00e9s a k\u00f6vetkez\u0151 k\u00f3ddal tegy\u00fck is ezt meg!</p> <pre><code>scene.getStylesheets().add(\"/css/style.css\");\n</code></pre> <p>A <code>scene.getStylesheets</code> egy <code>ObservableList</code>-et ad vissza, melyhez hozz\u00e1adhatunk egy vagy t\u00f6bb st\u00edluslapot, amit az adott <code>Scene</code>-re \u00e9rtelmezni szeretn\u00e9nk. A st\u00edluslapok <code>Node</code>-okhoz rendel\u00e9se azonban nem korl\u00e1toz\u00f3dik puszt\u00e1n a <code>Scene</code>-re. St\u00edluslapokat rendelhet\u00fcnk a <code>Parent</code> t\u00edpus\u00fa elemekhez is.</p>"},{"location":"legacy/03_gyakorlat/#nevkonvenciok","title":"N\u00e9vkonvenci\u00f3k","text":"<p>A JavaFX-ben tal\u00e1lhat\u00f3 oszt\u00e1lyokb\u00f3l haszn\u00e1lt objektumokat (\u00f6sszeset) a class-selectorral tudjuk kiv\u00e1lasztani, de csupa kisbet\u0171vel kell \u00edrnunk az oszt\u00e1ly nev\u00e9t. P\u00e9ld\u00e1ul a <code>Button</code> t\u00edpus\u00fa objektumokat a <code>.button</code>-el.</p> <p>Amikor \u00f6sszetett neve van egy oszt\u00e1lynak (pl.: ComboBox), akkor szint\u00e9n csak kisbet\u0171ket haszn\u00e1lunk, de a szavak k\u00f6z\u00e9 k\u00f6t\u0151jelet \u00edrunk (pl.: combo-box). A Java oszt\u00e1lyok haszn\u00e1lat\u00e1r\u00f3l k\u00e9s\u0151bb m\u00e9g r\u00e9szletesebben \u00edrunk.</p>"},{"location":"legacy/03_gyakorlat/#alapertelmezett-stiluslap","title":"Alap\u00e9rtelmezett st\u00edluslap","text":"<p>A JavaFX egy be\u00e9p\u00edtett, alap\u00e9rtelmezett st\u00edluslapot haszn\u00e1l, melyet <code>MODENA</code>-nak h\u00edvnak. Mi magunk is lek\u00e9rhetj\u00fck \u00e9s be\u00e1ll\u00edthatjuk az alap\u00e9rtelmezett st\u00edluslapot, melyet alkalmaz\u00e1sszinten fog haszn\u00e1lni a rendszer.</p> <pre><code>Application.setUserAgentStylesheet(Application.STYLESHEET_CASPIAN); // A Caspian volt a r\u00e9gebbi alap\u00e9rtelmez\u00e9s\nApplication.getUserAgentStylesheet(); // itt csak egy st\u00edluslap adhat\u00f3 meg ez\u00e9rt nem list\u00e1t ad vissza\n</code></pre> <p>A getter adhat vissza <code>null</code>-t is, ami azt jelzi, hogy a rendszer az alap\u00e9rtelmez\u00e9st haszn\u00e1lja.</p>"},{"location":"legacy/03_gyakorlat/#inline-stilus","title":"Inline st\u00edlus","text":"<p>Az eddig l\u00e1tottak alapj\u00e1n k\u00fcls\u0151 st\u00edluslapokat tudunk megadni, ugyanakkor a <code>Node</code> t\u00edpus\u00fa objektumok rendelkeznek inline st\u00edlussal is, melyhez a k\u00f6vetkez\u0151 met\u00f3dusok adnak seg\u00edts\u00e9get:</p> <pre><code>setStyle(String inlineStyle)\ngetStyle()\n</code></pre> <p>P\u00e9ld\u00e1ul egy gomb inline form\u00e1z\u00e1s\u00e1nak megad\u00e1s\u00e1hoz:</p> <pre><code>Button btn = new Button(\"Button\");\nbtn.setStyle(\"-fx-text-fill: red; -fx-font-weight: bold;\");\n</code></pre>"},{"location":"legacy/03_gyakorlat/#stilusok-prioritasa","title":"St\u00edlusok priorit\u00e1sa","text":"<p>Egy-egy vez\u00e9rl\u0151elemre t\u00f6bb forr\u00e1sb\u00f3l is \u00e9rkezhetnek form\u00e1z\u00e1si szab\u00e1lyok (pl.: egy k\u00fcls\u0151 st\u00edluslapb\u00f3l, a default st\u00edlusb\u00f3l, inline, property-b\u0151l, stb.). Tekints\u00fck az al\u00e1bbi p\u00e9ld\u00e1t:</p> <p><code>style.css</code> <pre><code>.button {\n-fx-font-size: 24px;\n}\n</code></pre></p> <p><code>App.java</code> <pre><code>Button btn = new Button(\"Button\");\nbtn.setStyle(\"-fx-font-size: 16px\"); //inline style\nbtn.setFont(new Font(10)); // property setting\n\nScene scene = new Scene(btn);\nscene.getStylesheets().addAll(\"resources/css/style.css\");\n</code></pre></p> <p>A megadott <code>font-size</code>-ok k\u00f6z\u00fcl melyiket fogja \u00e9rtelmezni a rendszer? A priorit\u00e1s a k\u00f6vetkez\u0151 (legmagasabbt\u00f3l a legalacsonyabb priorit\u00e1sig):</p> <ul> <li>Inline style (legmagasabb, azaz fel\u00fcl\u00edr minden egy\u00e9b helyen megadottat)</li> <li>Sz\u00fcl\u0151 st\u00edluslapja</li> <li>Scene st\u00edluslapja</li> <li>JavaFX API seg\u00edts\u00e9g\u00e9vel be\u00e1ll\u00edtott tulajdons\u00e1gok (<code>btn.setFont(new Font(10));</code>)</li> <li>Alap\u00e9rtelmezett st\u00edluslapok (legkisebb priorit\u00e1s)</li> </ul>"},{"location":"legacy/03_gyakorlat/#selector-ok","title":"Selector-ok","text":"<p>JavaFX-ben is haszn\u00e1lhatunk k\u00fcl\u00f6nb\u00f6z\u0151 selector-okat, melyek k\u00f6z\u00fcl a legfontosabbakat vessz\u00fck sorra.</p>"},{"location":"legacy/03_gyakorlat/#class-selector","title":"Class selector","text":"<p>Minden <code>Node</code> t\u00edpus\u00fa elem rendelkezik a <code>styleClass</code> v\u00e1ltoz\u00f3val, melynek t\u00edpusa <code>ObservableList&lt;String&gt;</code>, azaz egy <code>Node</code>-ot t\u00f6bb oszt\u00e1lyhoz is hozz\u00e1rendelhet\u00fcnk.</p> <p>Fontos</p> <p>Ne keverj\u00fck \u00f6ssze az objektum oszt\u00e1ly\u00e1t (t\u00edpus\u00e1t), a CSS oszt\u00e1llyal!</p> <p>A class selector hasonl\u00f3an m\u0171k\u00f6dik, mint hagyom\u00e1nyos CSS k\u00f6rnyezetben, azaz a <code>.</code> prefixszel kell ell\u00e1tnunk ezeket a selector-okat a CSS-ben.</p> <p>Kor\u00e1bban l\u00e1ttuk, hogy az \u00f6sszes gombot is kiv\u00e1laszthatjuk ha a <code>.button</code> selector-t haszn\u00e1ljuk. Ennek oka, hogy a JavaFX sok esetben alap\u00e9rtelmezett styleClass-t is megad az elemekhez, mely az adott objektum t\u00edpus\u00e1nak kisbet\u0171s\u00edtett \u00e9s k\u00f6t\u0151jeles\u00edtett v\u00e1ltozata. Fontos megjegyezni, hogy a kont\u00e9ner oszt\u00e1lyokhoz nem rendel hozz\u00e1 alap\u00e9rtelmezett styleClass-t a rendszer.</p> <p>Az alap\u00e9rtelmezett styleClass-ok beleker\u00fclnek az eml\u00edtett <code>ObservableList&lt;String&gt;</code> t\u00edpus\u00fa list\u00e1ba, \u00edgy egy adott elemre lek\u00e9rhetj\u00fck azok list\u00e1j\u00e1t, pl.: <code>btn.getStyleClass()</code>.</p>"},{"location":"legacy/03_gyakorlat/#id-selector","title":"id selector","text":"<p>Hasonl\u00f3k\u00e9ppen a hagyom\u00e1nyos CSS-hez, itt is haszn\u00e1lhatunk id alap\u00fa selector-t, melyhez a <code>#</code> prefixet kell haszn\u00e1lnunk! Pl.:</p> <pre><code>#myBtn{\n-fx-font-size: 24px;\n}\n</code></pre> <pre><code>Button btn = new Button(\"Push me\");\nbtn.setId(\"myBtn\"); // FXML-ben az fx:id-val is ugyanezt a hat\u00e1st \u00e9rhetj\u00fck el\n...\n</code></pre>"},{"location":"legacy/03_gyakorlat/#egyeb-selector-ok","title":"Egy\u00e9b selector-ok","text":"<ul> <li>JavaFX-ben is haszn\u00e1lhat\u00f3 az univerz\u00e1lis selector, azaz a <code>*</code>, mely minden <code>Node</code>-ra illeszkedik.</li> <li>T\u00f6bb selector csoportos\u00edt\u00e1sakor haszn\u00e1lhat\u00f3 a felsorol\u00e1s, melynek sor\u00e1n a selector-ok k\u00f6z\u00e9 <code>,</code>-t kell tenn\u00fcnk (<code>.hbox, .button</code> -&gt; hbox \u00e9s button st\u00edlusoszt\u00e1llyal rendelkez\u0151 elemek egy\u00fcttes kiv\u00e1laszt\u00e1sa)</li> <li>Lesz\u00e1rmazott kiv\u00e1laszt\u00e1sn\u00e1l a selectorok k\u00f6z\u00e9 space-t kell tenn\u00fcnk (pl.: <code>.hbox .button</code> -&gt; hbox st\u00edlus\u00fa elemeken bel\u00fcli gombok kiv\u00e1laszt\u00e1sa)</li> <li>child selector-t a <code>&gt;</code> haszn\u00e1lat\u00e1val alkalmazhatunk (pl.: <code>.hbox &gt; .button</code> -&gt; hbox-on bel\u00fcli button gyerekek kiv\u00e1laszt\u00e1sa)</li> <li>A testv\u00e9r (sibling) \u00e9s az attrib\u00fatum selector-ok NEM t\u00e1mogatottak JavaFX-ben!</li> <li>\u00e1llapot alap\u00fa selectorok a <code>:</code>-al adhat\u00f3ak meg (pl.: <code>.button:hover</code>)</li> </ul> <p>A selector-okat nem csak a CSS-ben haszn\u00e1lhatjuk fel, arra is j\u00f3k, hogy egy <code>Node</code> keres\u00e9s\u00e9n\u00e9l felhaszn\u00e1ljuk \u0151ket. A <code>Scene</code> \u00e9s maga a <code>Node</code> is rendelkezik egy <code>lookup(String selector)</code> met\u00f3dussal, melynek param\u00e9terk\u00e9nt megadhat\u00f3 tetsz\u0151leges selector, majd a met\u00f3dus ez alapj\u00e1n visszaadja a megtal\u00e1lt <code>Node</code>-ot. A <code>Scene</code> met\u00f3dusa a teljes SceneGraph-ban keres, m\u00edg a <code>Node</code>-ra h\u00edvott az \u00e1ltala tartalmazott <code>Node</code>-ok k\u00f6z\u00f6tt keres (mag\u00e1t is bele\u00e9rtve). Amennyiben t\u00f6bb <code>Node</code>-ot szeretn\u00e9nk egyszerre kiv\u00e1lasztani, akkor haszn\u00e1lhatjuk a <code>lookupAll(String selector)</code> met\u00f3dust, mely <code>Set&lt;Node&gt;</code>-al t\u00e9r vissza. Pl.:</p> <pre><code>Node node = scene.lookup(\"#myBtn\");\nNodes buttons = scene.lookupAll(\".button\");\n</code></pre>"},{"location":"legacy/03_gyakorlat/#videok","title":"Vide\u00f3k","text":"<ul> <li>FXML Alapok</li> <li>FXML field injection \u00e9s esem\u00e9nykezel\u00e9s</li> <li>FXMLLoader \u00e9s ResourceBundle haszn\u00e1lata</li> <li>Initializable interf\u00e9sz \u00e9s Node-ok keres\u00e9se</li> <li>FXML archetype</li> <li>St\u00edluslapok haszn\u00e1lata JavaFX-ben</li> </ul>"},{"location":"legacy/03_gyakorlat/#referenciak","title":"Referenci\u00e1k","text":"<ul> <li>FXML referencia</li> <li>CSS referencia</li> </ul>"},{"location":"legacy/04_gyakorlat/","title":"4. gyakorlat","text":"<p>A k\u00f6vetkez\u0151kben megismerked\u00fcnk a JavaFX Property-kkel.</p>"},{"location":"legacy/04_gyakorlat/#mik-a-property-k","title":"Mik a Property-k?","text":"<p>Egy Java oszt\u00e1ly k\u00e9tf\u00e9le member-t tartalmazhat:</p> <ul> <li>field-eket</li> <li>met\u00f3dusokat</li> </ul> <p>Egy oszt\u00e1ly field-jei meghat\u00e1rozz\u00e1k majd az oszt\u00e1lyb\u00f3l k\u00e9sz\u00edtett objektumok \u00e1llapot\u00e1t, mely \u00e1llapotot \u00e1ltal\u00e1ban elrejt\u00fcnk (<code>private</code> field-eket haszn\u00e1lunk). A private field-ek kiolvas\u00e1s\u00e1t \u00e9s be\u00e1ll\u00edt\u00e1s\u00e1t/m\u00f3dos\u00edt\u00e1s\u00e1t publikus met\u00f3dusokon kereszt\u00fcl v\u00e9gezz\u00fck, melyeket accessorok-nak (getter \u00e9s setter) nevez\u00fcnk. \u00c1ltal\u00e1noss\u00e1g\u00e1ban, az olyan oszt\u00e1lyokat, melyek hozz\u00e1f\u00e9r\u00e9st engednek a private field-jeikhez publikus accessor-okon kereszt\u00fcl, tov\u00e1bb\u00e1 van publikus param\u00e9ter n\u00e9lk\u00fcli konstruktoruk, illetve szerializ\u00e1lhat\u00f3ak Java Bean-eknek nevezz\u00fck. A Java Bean-ek accessor-ai egyben defini\u00e1lj\u00e1k a Bean property-jeit is. Att\u00f3l f\u00fcgg\u0151en, hogy milyen publikus accessor-ok vannak megadva egy Java Bean-hez besz\u00e9lhet\u00fcnk</p> <ul> <li>Csak olvashat\u00f3</li> <li>Csak \u00edrhat\u00f3</li> <li>Olvashat\u00f3 \u00e9s \u00cdrhat\u00f3</li> </ul> <p>property-kr\u0151l is.</p> <p>P\u00e9lda olvashat\u00f3/\u00edrhat\u00f3 property-re:</p> <pre><code>public class Person {\n\nprivate String name;\n\npublic String getName() {\nreturn name;\n}\n\npublic void setName(String name) {\nthis.name = name;\n}\n}\n</code></pre> <p>Ebben a p\u00e9ld\u00e1ban a property neve: <code>name</code>.</p> <p>A Java Bean-ek egyik nagy el\u0151nye, hogy k\u00fcls\u0151 alkalmaz\u00e1sok k\u00f6nnyen felhaszn\u00e1lhatj\u00e1k \u0151ket. Ezen fel\u00fcl egy-egy property megfigyelhet\u0151v\u00e9 (<code>Observable</code>) tehet\u0151, azaz m\u00e1sik feliratkozhatnak a property v\u00e1ltoz\u00e1s\u00e1nak esem\u00e9ny\u00e9re, mely alapj\u00e1n automatikus m\u0171veleteket v\u00e9gezhetnek el.</p> <p>A fenti p\u00e9ld\u00e1ban haszn\u00e1lt egyszer\u0171 <code>name</code> property mellett l\u00e9teznek tov\u00e1bbi property t\u00edpusok is:</p> <ul> <li>indexed property: Property-k egy list\u00e1ja, melyeken bel\u00fcl index-ekkel \u00e9r\u00fcnk el egy-egy property-t.</li> <li>bound property: Olyan property, mely k\u00e9pes \u00e9rtes\u00edteni az \u00e9rt\u00e9k\u00e9nek v\u00e1ltoz\u00e1s\u00e1r\u00f3l a feliratkoz\u00f3kat</li> <li>constrained property: Egy olyan speci\u00e1lis v\u00e1ltozata a bound property-nek, melynek sor\u00e1n az esem\u00e9nykezel\u0151 k\u00e9pes megv\u00e9t\u00f3zni egy-egy v\u00e1ltoztat\u00e1st.</li> </ul>"},{"location":"legacy/04_gyakorlat/#mik-azok-a-kotesek-azaz-binding-ok","title":"Mik azok a k\u00f6t\u00e9sek, azaz Binding-ok?","text":"<p>A programoz\u00e1sban sokszor haszn\u00e1ljuk a binding megnevez\u00e9st, de jelen esetben az adatk\u00f6t\u00e9sekr\u0151l (Data Binding) lesz sz\u00f3. Az adatk\u00f6t\u00e9s sor\u00e1n adatok k\u00f6z\u00f6tti kapcsolatokat defini\u00e1lunk (\u00e1ltal\u00e1ban v\u00e1ltoz\u00f3k k\u00f6z\u00f6tt), mely seg\u00edts\u00e9g\u00e9vel a friss\u00edt\u00e9sek sor\u00e1n biztos\u00edtsuk a szinkroniz\u00e1ci\u00f3t. P\u00e9ldak\u00e9nt vegy\u00fck a k\u00f6vetkez\u0151t:</p> <pre><code>x = y + z;\n</code></pre> <p>Erre az \u00e9rt\u00e9kad\u00e1sra tekinthet\u00fcnk \u00fagy, mint egy adatk\u00f6t\u00e9sre, hiszen <code>x</code> \u00e9rt\u00e9ke f\u00fcgg <code>y</code> \u00e9s <code>z</code> \u00e9rt\u00e9k\u00e9t\u0151l. Azonban fontos, hogy az \u00e9rt\u00e9kad\u00e1snak mi az id\u0151belis\u00e9ge. Amennyiben az <code>y</code> \u00e9rt\u00e9k\u00e9\u00e9t m\u00f3dos\u00edtom az \u00e9rt\u00e9kad\u00e1s ut\u00e1n, akkor x \u00e9rt\u00e9ke nem fog friss\u00fclni. Sok esetben azt szeretn\u00e9nk, hogy egy hosszabb idej\u0171 k\u00f6t\u00e9s j\u00f6jj\u00f6n l\u00e9tre, melynek sor\u00e1n, ha m\u00f3dosul valamilyen t\u00e9nyez\u0151 (v\u00e1ltoz\u00f3\u00e9rt\u00e9k), akkor a v\u00e1ltoz\u00e1s kihat\u00e1ssal legyen a f\u00fcgg\u0151 \u00e9rt\u00e9kre is. A fentiek alapj\u00e1n megk\u00fcl\u00f6nb\u00f6ztet\u00fcnk f\u00fcgg\u0151 \u00e9rt\u00e9ket (dependant), illetve annak f\u00fcgg\u0151s\u00e9geit (dependencies).</p> <p>Az adatk\u00f6t\u00e9seket t\u00f6bbf\u00e9lek\u00e9ppen is csoportos\u00edthatjuk. Egyr\u00e9szt az adatk\u00f6t\u00e9s ki\u00e9rt\u00e9kel\u00e9si strat\u00e9gi\u00e1ja szerint lehet:</p> <ul> <li>eager binding: a f\u00fcgg\u0151s\u00e9gek m\u00f3dos\u00edt\u00e1sakor azonnal \u00fajrakalkul\u00e1ljuk a f\u00fcgg\u0151 \u00e9rt\u00e9ket</li> <li>lazy binding: csak a k\u00f6vetkez\u0151 kiolvas\u00e1skor friss\u00edtj\u00fck az \u00e9rt\u00e9ket (hiszen t\u00f6bbsz\u00f6r is m\u00f3dosulhatnak a f\u00fcgg\u0151s\u00e9gek addig, amig egy\u00e1ltal\u00e1n sz\u00fcks\u00e9g\u00fcnk lesz a f\u00fcgg\u0151 \u00e9rt\u00e9kre)</li> </ul> <p>M\u00e1sr\u00e9szt a f\u00fcgg\u0151s\u00e9gek ir\u00e1ny\u00e1t tekintve besz\u00e9lhet\u00fcnk:</p> <ul> <li>egyir\u00e1ny\u00fa (unidirectional): Egyir\u00e1ny\u00fa, azaz a f\u00fcgg\u0151s\u00e9gekben bek\u00f6vetkez\u0151 v\u00e1ltoz\u00e1sok kihat\u00e1ssal vannak a f\u00fcgg\u0151 \u00e9rt\u00e9kre, de ford\u00edtva nem igaz </li> <li>k\u00e9tir\u00e1ny\u00fa (bidirectional): Oda-vissza ir\u00e1nyul\u00f3 f\u00fcgg\u0151s\u00e9g eset\u00e9n \u00e1ltal\u00e1ban k\u00e9t v\u00e1ltoz\u00f3 k\u00f6z\u00f6tti adatszinkroniz\u00e1ci\u00f3t \u00e9rt\u00fcnk (pl.: <code>Person</code> objektum <code>name</code> property-je f\u00fcgg egy <code>TextField</code> aktu\u00e1lis \u00e9rt\u00e9k\u00e9t\u0151l).</li> </ul>"},{"location":"legacy/04_gyakorlat/#javabeans-api-tamogatas-kotesekhez","title":"JavaBeans API t\u00e1mogat\u00e1s k\u00f6t\u00e9sekhez","text":"<p>A JavaBeans API m\u00e1r r\u00e9g\u00f3ta ad t\u00e1mogat\u00e1st az adatk\u00f6t\u00e9sekhez, mely sor\u00e1n a k\u00e9t legfontosabb oszt\u00e1ly:</p> <ul> <li><code>java.beans.PropertyChangeListener</code></li> <li><code>java.beans.PropertyChangeSupport</code></li> </ul> <p>Tekints\u00fck meg a <code>Person</code> bean oszt\u00e1ly kieg\u00e9sz\u00edt\u00e9s\u00e9t:</p> <pre><code>public class Person {\n\nprivate String name;\nprivate PropertyChangeSupport pcs = new PropertyChangeSupport(this);\n\npublic Person(String name){\nthis.name = name;\n}\n\npublic String getName() {\nreturn name;\n}\n\npublic void setName(String newName) {\nString oldName = this.name;\nthis.name = newName;\n// Notify the registered listeners about the change\npcs.firePropertyChange(\"name\", oldName, newName);\n}\n\npublic void addPropertyChangeListener(PropertyChangeListener listener) {\npcs.addPropertyChangeListener(listener);\n}\n\npublic void removePropertyChangeListener(PropertyChangeListener listener) {\npcs.removePropertyChangeListener(listener);\n}\n}\n</code></pre> <p>A p\u00e9ld\u00e1ban szerepl\u0151 <code>name</code> property olvashat\u00f3 \u00e9s \u00edrhat\u00f3 is, tov\u00e1bb\u00e1 egy bound property, mivel m\u00f3dos\u00edt\u00e1s sor\u00e1n \u00e9rtes\u00edt\u00e9st k\u00fcld a feliratkozott esem\u00e9nykezel\u0151knek a m\u00f3dos\u00edt\u00e1s t\u00e9ny\u00e9r\u0151l a <code>pcs.firePropertyChange(\"name\", oldName, newName);</code> h\u00edv\u00e1s seg\u00edts\u00e9g\u00e9vel. Az \u00e9rdekl\u0151d\u0151k a k\u00e9t megadott met\u00f3dus seg\u00edts\u00e9g\u00e9vel tudnak fel- illetve leiratkozni az esem\u00e9nyr\u0151l (<code>addPropertyChangeListener</code> \u00e9s <code>removePropertyChangeListener</code>). A v\u00e1ltoztat\u00e1sok detekt\u00e1l\u00e1shoz k\u00e9sz\u00edts\u00fcnk egy oszt\u00e1lyt, melyben ki is haszn\u00e1ljuk a fenti lehet\u0151s\u00e9geket!</p> <pre><code>public class Main {\n\npublic static void main(String[] args) {\nfinal Person p = new Person(\"Kiss B\u00e9la\");\n// Add a property change listener\np.addPropertyChangeListener(Main::handlePropertyChange);\np.setName(\"Dr. Kiss B\u00e9la\");\n}\n\npublic static void handlePropertyChange(PropertyChangeEvent e) {\nString propertyName = e.getPropertyName();\nif (\"name\".equals(propertyName)) {\nSystem.out.print(\"Name has changed. \");\nSystem.out.print(\"Old:\" + e.getOldValue());\nSystem.out.println(\", New:\" + e.getNewValue());\n}\n}\n}\n</code></pre> <p>A <code>main</code>-ben l\u00e9trehozunk egy <code>Person</code> objektumot, majd feliratkoztatjuk a statikus met\u00f3dusunkat a <code>PropertyChangeEvent</code>-ekre. Amikor \u00e1t\u00e1ll\u00edtjuk a <code>Person</code> objektum <code>name</code> property-j\u00e9t, akkor a setter bel\u00fcl megh\u00edvja a <code>pcs.firePropertyChange(\"name\", oldName, newName);</code> met\u00f3dust, mely \u00e9rtes\u00edti az \u00f6sszes feliratkoz\u00f3t, \u00e9s ennek eredm\u00e9nyek\u00e9ppen ki\u00edrjuk a r\u00e9gi \u00e9s \u00faj \u00e9rt\u00e9keket a konzolra.</p>"},{"location":"legacy/04_gyakorlat/#property-k-hasznalata-javafx-ben","title":"Property-k haszn\u00e1lata JavaFX-ben","text":"<p>Az el\u0151z\u0151leg bemutatott technika az alacsonyszint\u0171 Java Beans API-t haszn\u00e1lta a v\u00e1ltoz\u00e1sok automatikus detekt\u00e1l\u00e1s\u00e1ra. A JavaFX egy szinttel feljebb l\u00e9p \u00e9s komplexebb, rugalmasabb lehet\u0151s\u00e9geket ny\u00fajt a sz\u00e1munkra. Az automatikus v\u00e1ltoztat\u00e1s detekt\u00e1l\u00e1shoz a legt\u00f6bbsz\u00f6r az Observer tervez\u00e9si mint\u00e1t alkalmazz\u00e1k (t\u00f6bbek k\u00f6z\u00f6tt esem\u00e9nykezel\u00e9sekn\u00e9l is). JavaFX-ben az \u00f6sszes property automatikusan <code>Observable</code> is lesz, mely seg\u00edts\u00e9g\u00e9vel automatikusan detekt\u00e1lhatjuk, ha az adott property \u00e9rt\u00e9ke invalidd\u00e1 v\u00e1lik (v\u00e1ltozott egy f\u00fcgg\u0151s\u00e9g\u00e9nek \u00e9rt\u00e9ke), illetve azt is ha az \u00e9rt\u00e9ke megv\u00e1ltozott.</p> <p>A JavaFX-ben haszn\u00e1latos property-k lehetnek csak olvashat\u00f3, illetve olvashat\u00f3/\u00edrhat\u00f3 property-k. Az olvashat\u00f3/\u00edrhat\u00f3 property-k teljes m\u00e9rt\u00e9kben t\u00e1mogatj\u00e1k az adatk\u00f6t\u00e9st, csak olvashat\u00f3 esetben viszont az adott property nem f\u00fcgghet m\u00e1st\u00f3l, de t\u0151le f\u00fcgghetnek.</p> <p>JavaFX-ben a k\u00fcl\u00f6nb\u00f6z\u0151 t\u00edpus\u00fa property-khez k\u00fcl\u00f6nb\u00f6z\u0151 property oszt\u00e1lyok tartoznak, melyek egy hierarchi\u00e1t alkotnak. P\u00e9ld\u00e1ul a <code>StringProperty</code>, <code>DoubleProperty</code>, <code>IntegerProperty</code> rendre a <code>String</code>, <code>double</code> \u00e9s az <code>int</code> t\u00edpusokhoz tartoz\u00f3 property oszt\u00e1lyok. Az el\u0151bbiek mind-mind absztrakt oszt\u00e1lyok, melyek k\u00e9t megval\u00f3s\u00edt\u00e1ssal rendelkeznek. Egy megval\u00f3s\u00edt\u00e1s az olvashat\u00f3/\u00edrhat\u00f3 viselked\u00e9shez, egy pedig a csak olvashat\u00f3 viselked\u00e9shez. P\u00e9ld\u00e1ul a <code>SimpleDoubleProperty</code> oszt\u00e1ly haszn\u00e1lhat\u00f3 olvashat\u00f3/\u00edrhat\u00f3 property-khez, illetve a <code>ReadOnlyDoubleProperty</code> a csak olvashat\u00f3 <code>double</code> property-khez.</p> <p>Az al\u00e1bbi p\u00e9lda egy <code>int</code> property-t deklar\u00e1l, melynek kezd\u0151\u00e9rt\u00e9k\u00e9t 42-re \u00e1ll\u00edtja:</p> <pre><code>IntegerProperty intProperty = new SimpleIntegerProperty(42);\n</code></pre> <p>A property oszt\u00e1lyokhoz k\u00e9tf\u00e9le <code>getter</code> \u00e9s <code>setter</code> tartozik:</p> <ul> <li><code>get()</code> \u00e9s <code>set()</code>: primit\u00edv t\u00edpusokkal oper\u00e1lnak</li> <li><code>getValue()</code> \u00e9s <code>setValue()</code>: objektumokkal oper\u00e1lnak</li> </ul> <p>A csak olvashat\u00f3 property-kkel val\u00f3 munka egy kicsit tr\u00fckk\u00f6sebb. A <code>ReadOnlyXXXWrapper</code> oszt\u00e1ly bel\u00fcl k\u00e9t property-t t\u00e1rol: egy olvashat\u00f3/\u00edrhat\u00f3t \u00e9s egy csak olvashat\u00f3t is. Ezek a property-k folyamatosan szinkronban vannak. A <code>ReadOnlyXXXProperty</code> t\u00edpus\u00fa property-t a Wrapper-t\u0151l kell elk\u00e9rn\u00fcnk a <code>getReadOnlyProperty()</code> met\u00f3dush\u00edv\u00e1ssal. L\u00e1ssunk egy pici p\u00e9ld\u00e1t is!</p> <pre><code>ReadOnlyIntegerWrapper intWrapper = new ReadOnlyIntegerWrapper(42);\nReadOnlyIntegerProperty intProp = intWrapper.getReadOnlyProperty();\n\nSystem.out.println(\"intWrapper:\" + intWrapper.get());\nSystem.out.println(\"intProp:\" + intProp.get());\n\n// Change the value\nidWrapper.set(1337);\nSystem.out.println(\"intWrapper:\" + intWrapper.get());\nSystem.out.println(\"intProp:\" + intProp.get());\n</code></pre> <p>A fenti p\u00e9lda alapj\u00e1n sejthet\u0151, hogy amennyiben a Wrapper-t publikusan kiengedn\u00e9nk, akkor nem lenne semmi \u00e9rtelme, mert ugyan\u00fagy m\u00f3dos\u00edthat\u00f3 lenne a property \u00e9rt\u00e9ke. Ez\u00e9rt a Wrapper-t \u00e1ltal\u00e1ban private field-k\u00e9nt haszn\u00e1ljuk egy-egy oszt\u00e1lyon bel\u00fcl \u00e9s csak a <code>ReadOnlyXXXProperty</code>-t tessz\u00fck publikusan el\u00e9rhet\u0151v\u00e9.</p> <p>A k\u00f6vetkez\u0151 egyszer\u0171 (csak egy \u00e9rt\u00e9ket t\u00e1rol\u00f3) t\u00edpusokhoz haszn\u00e1lhatunk property oszt\u00e1lyokat:</p> <ul> <li>int</li> <li>long</li> <li>float</li> <li>double</li> <li>boolean</li> <li>String</li> <li>Object</li> </ul> <p>Egy-egy property a k\u00f6vetkez\u0151 inform\u00e1ci\u00f3kat t\u00e1rolja:</p> <ul> <li>Referencia a bean objektumra, amely \u0151t t\u00e1rolja</li> <li>A property nev\u00e9t</li> <li>A property \u00e9rt\u00e9k\u00e9t</li> </ul> <p>Ez alapj\u00e1n tal\u00e1lhatunk konstruktorokat is az adott property-khez, melyekb\u0151l a legteljesebb peram\u00e9terlist\u00e1val rendelkez\u0151 a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki (p\u00e9ld\u00e1ban int-re, de \u00e1ltal\u00e1nosan \u00e9rv\u00e9nyes ez a szab\u00e1ly):</p> <pre><code>public class Person {\n\nprivate StringProperty name = new SimpleStringProperty(this, \"name\", \"Dr. Kiss B\u00e9la\");\n//...\n}\n</code></pre> <p>A property-k nem mindig tartoznak bean-hez, \u00edgy besz\u00e9lhet\u00fcnk egyed\u00fcl\u00e1ll\u00f3 (standalone) property-kr\u0151l. Ilyenkor a konstruktorban a bean-t \u00e1ll\u00edthatjuk <code>null</code>-ra. Amennyiben az \u00e9rt\u00e9keket nem adjuk meg, akkor numerikus \u00e9rt\u00e9kek eset\u00e9ben 0 lesz az \u00e9rt\u00e9k, boolean-ra <code>false</code>, tov\u00e1bb\u00e1 a referencia t\u00edpusok a <code>null</code> \u00e9rt\u00e9ket veszik fel. Amennyiben a property nev\u00e9t nem \u00e1ll\u00edtjuk be, akkor annak neve egy \u00fcres string lesz.</p> <p>A property objektumokt\u00f3l a <code>getBean()</code> \u00e9s a <code>getName()</code> met\u00f3dusokkal k\u00e9rhetj\u00fck el a tartalmaz\u00f3 bean referenci\u00e1j\u00e1t, illetve a property nev\u00e9t (a <code>get()</code> \u00e9s <code>getValue()</code> haszn\u00e1lat\u00e1val pedig az \u00e9rt\u00e9ket, ahogy azt kor\u00e1bban l\u00e1ttuk m\u00e1r).</p> <p>Ezek ut\u00e1n \u00edrjuk \u00fajra a <code>Person</code> oszt\u00e1lyt \u00fagy, hogy a sima String helyett StringProperty-t haszn\u00e1l.</p> <pre><code>public class Person {\nprivate StringProperty name = new SimpleStringProperty(this, \"name\", \"John Doe\");\n\npublic final StringProperty nameProperty() {\nreturn name;\n}\n\npublic final String getName() {\nreturn name.get();\n}\n\npublic final void setName(String name) {\nthis.name.set(name);\n}\n}\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban l\u00e1thatjuk, hogy az accessorok, hogyan m\u00f3dosulnak a property megad\u00e1soknak megfelel\u0151en. Erre az\u00e9rt van sz\u00fcks\u00e9g, mert tov\u00e1bbra is szeretn\u00e9nk, hogy a rendszer\u00fcnk m\u0171k\u00f6dj\u00f6n (3rd party alkalmaz\u00e1sok is haszn\u00e1lhatj\u00e1k a rendszer\u00fcnket esetlegesen). Azzal, hogy az accessorokat megtartjuk nem okozunk breaking change-t, viszont nyer\u00fcnk egy hatalmasat, mivel kihaszn\u00e1lhatjuk a property-k el\u0151nyeit.</p>"},{"location":"legacy/04_gyakorlat/#lusta-inicializalas","title":"Lusta inicializ\u00e1l\u00e1s","text":"<p>A property-k el\u0151nye n\u00e9mi h\u00e1tr\u00e1nnyal is j\u00e1r. A primit\u00edv t\u00edpusok kevesebb mem\u00f3ri\u00e1t esznek, viszont but\u00e1bbak is. Amennyiben egy nagy rendszer\u00fcnk van, akkor a feltehet\u0151leg ritk\u00e1bban haszn\u00e1lt property-ket \u00e9rdemes lehet lust\u00e1n inicializ\u00e1lni, ami egy kis plusz k\u00f3ddal j\u00e1r, viszont cser\u00e9be nyerhet\u00fcnk egy ki mem\u00f3ri\u00e1t. A lusta inicializ\u00e1l\u00e1st akkor \u00e9rdemes haszn\u00e1lni, ha az adott property \u00e9rt\u00e9ke legt\u00f6bbsz\u00f6r egy alap\u00e9rtelmezett \u00e9rt\u00e9ket vesz fel vagy legt\u00f6bbsz\u00f6r nem haszn\u00e1lja ki az adatk\u00f6t\u00e9s adta lehet\u0151s\u00e9geket.</p> <p>Vegy\u00fcnk p\u00e9ld\u00e1ul egy <code>Monitor</code> oszt\u00e1lyt, melyben a monitor t\u00edpus\u00e1t is t\u00e1roljuk. Mivel a t\u00edpusa legt\u00f6bbsz\u00f6r \"flat\" lesz, \u00edgy ezt felhaszn\u00e1lhatjuk.</p> <pre><code>public class Monitor {\n\npublic static final String DEFAULT_SCREEN_TYPE = \"flat\";\nprivate StringProperty screenType;\n\npublic String getScreenType() {\nreturn (screenType == null) ? DEFAULT_SCREEN_TYPE : screenType.get();\n}\n\npublic void setScreenType(String newScreenType) {\nif (screenType != null || !DEFAULT_SCREEN_TYPE.equals(newScreenType)) {\nscreenTypeProperty().set(newScreenType);\n}\n}\n\npublic StringProperty screenTypeProperty() {\nif (screenType == null) {\nscreenType = new SimpleStringProperty(this, \"screenType\", DEFAULT_SCREEN_TYPE);\n}\n\nreturn screenType;\n}\n}\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban megadjuk az alap\u00e9rtelmezett \u00e9rt\u00e9ket, illetve t\u00e1rolunk egy referenci\u00e1t mag\u00e1ra a <code>StringProperty</code>-re. Azonban a property-t csak abban az esetben hozzuk l\u00e9tre t\u00e9nylegesen, amikor valaki t\u00e9nylegesen szeretn\u00e9 a <code>StringProperty</code> t\u00edpus\u00fa objektumot haszn\u00e1lni (pl.: adatk\u00f6t\u00e9s l\u00e9trehoz\u00e1s\u00e1hoz). A getter eg\u00e9szen addig csak a default \u00e9rt\u00e9ket adja vissza ameddig a default \u00e9rt\u00e9ken nem v\u00e1ltoztatunk. Amint egy olyan setter h\u00edv\u00e1s t\u00f6rt\u00e9nik, amikor nem a default \u00e9rt\u00e9ket akarja be\u00e1ll\u00edtani a felhaszn\u00e1l\u00f3, akkor l\u00e9trej\u00f6n maga a property is (<code>screenTypeProperty().set(newScreenType);</code> h\u00edv\u00e1s eredm\u00e9nyek\u00e9ppen).</p> <p>A fenti p\u00e9ld\u00e1ban nem nyer\u00fcnk olyan sokat, de p\u00e9ld\u00e1ul a primit\u00edv t\u00edpusokn\u00e1l elj\u00e1rhatunk \u00fagy, hogy eg\u00e9szen addig egy primit\u00edv t\u00edpusban t\u00e1roljuk az \u00e9rt\u00e9ket, ameddig mag\u00e1t a property-t nem k\u00e9ri el valaki.</p>"},{"location":"legacy/04_gyakorlat/#property-hierarchia","title":"Property hierarchia","text":"Property hierarchia <p>A hierarchia legtetej\u00e9n az <code>Observable</code> interf\u00e9sz \u00e1ll, mely valamilyen adatot becsomagol \u00e9s k\u00e9pes \u00e9rtes\u00edt\u00e9seket k\u00fcldeni, amikor a tartalmazott adat invalidd\u00e1 v\u00e1lik. Ezekre az esem\u00e9nyekre <code>InvalidationListener</code>-ekkel tudunk feliratkozni, melyek \u00e9rtes\u00fclnek az esem\u00e9nyr\u0151l. Fontos, hogy ha egyszer a tartalom invalidd\u00e1 v\u00e1lt, akkor a k\u00f6vetkez\u0151kben nem gener\u00e1l\u00f3dik \u00faj esem\u00e9ny, \u00edgy minimaliz\u00e1lva a rendszerben l\u00e9trej\u00f6v\u0151 esem\u00e9nyek sz\u00e1m\u00e1t. Az adat \u00fajrasz\u00e1mol\u00e1sa ut\u00e1n ism\u00e9t validd\u00e1 v\u00e1lik.</p> <p>Fontos</p> <p>JavaFX-ben minden property egyben <code>Observable</code> is!</p> <p>Az invalid \u00e1llapotba l\u00e9p\u00e9s nem felt\u00e9tlen\u00fcl egyezik meg az adat megv\u00e1ltoz\u00e1s\u00e1val. P\u00e9ld\u00e1ul egy <code>ObservableList&lt;T&gt;</code> rendez\u00e9se sor\u00e1n az \u00e9rt\u00e9kek nem v\u00e1ltoznak benne, viszont invalidd\u00e1 v\u00e1lik. Ez a megk\u00fcl\u00f6nb\u00f6ztet\u00e9s fontos, mivel a k\u00e9tf\u00e9le esem\u00e9ny elt\u00e9r\u0151en viszonyul az azonnali (eager) \u00e9s lusta (lazy) ki\u00e9rt\u00e9kel\u00e9shez. Amikor az adat invalidd\u00e1 v\u00e1lik, akkor lusta ki\u00e9rt\u00e9kel\u00e9s eset\u00e9n nem sz\u00e1moljuk \u00fajra az \u00e9rt\u00e9k\u00e9t csak akkor amikor legk\u00f6zelebb haszn\u00e1lni szeretn\u00e9nk az adatot. Mivel az adat v\u00e1ltoz\u00e1s\u00e1r\u00f3l (<code>ChangeListener</code>-el kezelhetj\u00fck) csak akkor tudunk nyilatkozni, ha \u00fajrasz\u00e1moljuk annak \u00e9rt\u00e9k\u00e9t, \u00edgy az nem t\u00e1mogatja a lusta ki\u00e9rt\u00e9kel\u00e9st. Ezt a fajta megk\u00fcl\u00f6nb\u00f6ztet\u00e9st m\u00e1r az <code>ObservableValue&lt;T&gt;</code> interf\u00e9sz adja sz\u00e1munkra, azaz annyival tud t\u00f6bbet az <code>Observable</code>-h\u00f6z k\u00e9pest, hogy tud \u00e9rtes\u00edt\u00e9seket k\u00fcldeni a t\u00e1rolt \u00e9rt\u00e9k v\u00e1ltoz\u00e1s\u00e1r\u00f3l, melyet egy <code>ChangeListener</code>-el kezelhet\u00fcnk. A property-kben haszn\u00e1lt <code>T getValue();</code> met\u00f3dus az <code>ObservableValue&lt;T&gt;</code> interf\u00e9szb\u0151l j\u00f6n. Egy <code>ChangeListener&lt;T&gt;</code> rendelkezik a <code>changed()</code> met\u00f3dussal, mely megkapja param\u00e9ter\u00fcl a referenci\u00e1t az <code>ObservableValue&lt;T&gt;</code>-re, illetve a r\u00e9gi \u00e9s \u00faj \u00e9rt\u00e9keket.</p> <p>Fontos</p> <p>Az <code>InvalidationListener</code>-ek haszn\u00e1lata optim\u00e1lisabb lehet, mivel \u00edgy haszn\u00e1lhatunk lusta ki\u00e9rt\u00e9kel\u00e9st. Amennyiben viszont az <code>InvalidationListener</code>-en bel\u00fcl sz\u00fcks\u00e9g\u00fcnk van az \u00e9rt\u00e9kre, akkor az olvas\u00e1si m\u0171velet v\u00e9gs\u0151 soron \u00fagyis triggerelne egy \u00fajrasz\u00e1mol\u00e1st, teh\u00e1t ilyen esetben haszn\u00e1ljunk <code>ChangeListener</code>-t!</p> <p>A <code>ReadOnlyProperty&lt;T&gt;</code> interf\u00e9sz tov\u00e1bb b\u0151v\u00edti az <code>ObservableValue&lt;T&gt;</code> interf\u00e9szt \u00e9s \u00e1ltal\u00e1nos v\u00e1zat ad az \u00f6sszes olvashat\u00f3 property sz\u00e1m\u00e1ra, mellyel \u00edgy m\u00e1r lek\u00e9rdezhetj\u00fck a tartalmaz\u00f3 bean-t (<code>Object getBean()</code>) \u00e9s a property nev\u00e9t (<code>String getName()</code>).</p> <p>Az oszt\u00e1ly hierarchi\u00e1b\u00f3l l\u00e1tszik, hogy a teljes \u00e9rt\u00e9k\u0171 <code>Property&lt;T&gt;</code> property-k az \u00edr\u00e1ssal/adat m\u00f3dos\u00edt\u00e1ssal kapcsolatos m\u0171veleteit a <code>WritableValue&lt;T&gt;</code> interf\u00e9szb\u0151l kapj\u00e1k. Maga a <code>Property&lt;T&gt;</code> interf\u00e9sz hozza be az adatk\u00f6t\u00e9s t\u00e1mogat\u00e1s\u00e1t a k\u00f6vetkez\u0151 met\u00f3dusok t\u00e1mogat\u00e1s\u00e1val:</p> <ul> <li><code>void bind(ObservableValue&lt;? extends T&gt; observable)</code></li> <li><code>void unbind()</code></li> <li><code>void bindBidirectional(Property&lt;T&gt; other)</code></li> <li><code>void unbindBidirectional(Property&lt;T&gt; other)</code></li> <li><code>boolean isBound()</code></li> </ul> <p>Egyir\u00e1ny\u00fa k\u00f6t\u00e9st a <code>bind</code> met\u00f3dus seg\u00edts\u00e9g\u00e9vel hozhatunk l\u00e9tre, melyben megadjuk, hogy az aktu\u00e1lis property \u00e9rt\u00e9ke, mely m\u00e1sik \u00e9rt\u00e9khez legyen k\u00f6tve, azaz mit\u0151l f\u00fcgg az \u00e9rt\u00e9ke. K\u00e9tir\u00e1ny\u00fa k\u00f6t\u00e9st a <code>bindBidirectional</code> met\u00f3dus h\u00edv\u00e1ssal v\u00e9gezhet\u00fcnk. A param\u00e9terek t\u00edpus\u00e1b\u00f3l m\u00e1r l\u00e1tszik n\u00e9h\u00e1ny dolog. K\u00e9tir\u00e1ny\u00fa k\u00f6t\u00e9s nem lehet csak \u00edrhat\u00f3/olvashat\u00f3 property-k k\u00f6z\u00f6tt, m\u00edg egyir\u00e1ny\u00fa k\u00f6t\u00e9sn\u00e9l f\u00fcgghet\u00fcnk csak olvashat\u00f3 \u00e9rt\u00e9kt\u0151l is. Fontos, hogy a generikus param\u00e9tereknek meg kell egyezni\u00fck, mert nyilv\u00e1n egy <code>StringProperty</code> \u00e9rt\u00e9ke nem f\u00fcgghet egy <code>DoubleProperty</code> \u00e9rt\u00e9k\u00e9t\u0151l (k\u00e9s\u0151bb az\u00e9rt l\u00e1tunk majd tr\u00fckk\u00f6ket, hogy hogyan lehet konverzi\u00f3kat v\u00e9gezni). A t\u00f6bbi met\u00f3dus el\u00e9gg\u00e9 intuit\u00edv, \u00edgy azokat nem magyar\u00e1zzuk el.</p>"},{"location":"legacy/04_gyakorlat/#kotesek-hasznalata-javafx-ben","title":"K\u00f6t\u00e9sek haszn\u00e1lata JavaFX-ben","text":"<p>Az adatk\u00f6t\u00e9s nem m\u00e1s, mint egy kifejez\u00e9s, aminek ki\u00e9rt\u00e9kel\u00e9se ut\u00e1n egy darab \u00e9rt\u00e9ket kapunk. A k\u00f6t\u00e9s egy vagy t\u00f6bb <code>ObervableValue&lt;T&gt;</code>-b\u00f3l tev\u0151dik \u00f6ssze, melyek egyben a k\u00f6t\u00e9s f\u00fcgg\u0151s\u00e9geit is jelentik. A k\u00f6t\u00e9s objektum figyeli a f\u00fcgg\u0151s\u00e9geinek v\u00e1ltoz\u00e1sait \u00e9s ilyenkor \u00fajrasz\u00e1molja a kifejez\u00e9s \u00e9rt\u00e9k\u00e9t. A JavaFX adatk\u00f6t\u00e9sei mind lusta ki\u00e9rt\u00e9kel\u00e9ssel m\u0171k\u00f6dnek, \u00edgy valamelyik f\u00fcgg\u0151s\u00e9g invalidd\u00e1 v\u00e1l\u00e1sakor maga a k\u00f6t\u00e9s is invalidd\u00e1 v\u00e1lik. Amikor \u00fajra k\u00e9ri valaki a k\u00f6t\u00e9s eredm\u00e9ny\u00e9t, akkor ker\u00fcl sor a kifejez\u00e9s \u00fajb\u00f3li ki\u00e9rt\u00e9kel\u00e9s\u00e9re (<code>get()</code> vagy <code>getValue()</code> h\u00edv\u00e1s hat\u00e1s\u00e1ra). Az \u00f6sszes JavaFX property oszt\u00e1ly t\u00e1mogat\u00e1st ad az adatk\u00f6t\u00e9sekhez.</p> <p>Vegy\u00fcnk egy egyszer\u0171 p\u00e9ld\u00e1t, melyben <code>sum = x + y</code> kifejez\u00e9st adunk meg egy k\u00f6t\u00e9s seg\u00edts\u00e9g\u00e9vel. Ez a k\u00f6vetkez\u0151k\u00e9ppen adhat\u00f3 meg:</p> <pre><code>IntegerProperty x = new SimpleIntegerProperty(42);\nIntegerProperty y = new SimpleIntegerProperty(1337);\n\nNumberBinding sum = x.add(y);\n</code></pre> <p>A k\u00f6t\u00e9seknek van egy <code>isValid()</code> met\u00f3dusa, mellyel lek\u00e9rhetj\u00fck, hogy az adott binding \u00e9rt\u00e9ke valid-e. A <code>NumberBinding</code> aktu\u00e1lis \u00e9rt\u00e9k\u00e9nek lek\u00e9r\u00e9s\u00e9hez haszn\u00e1lhatjuk az <code>intValue()</code>, <code>longValue()</code>, <code>floatValue()</code>, \u00e9s <code>doubleValue()</code> met\u00f3dusokat, melyek rendre a megfelel\u0151 t\u00edpus\u00fa \u00e9rt\u00e9kkel t\u00e9rnek vissza.</p> <p>Egy k\u00f6t\u00e9s bel\u00fcl az \u00f6sszes f\u00fcgg\u0151s\u00e9g\u00e9hez l\u00e9trehoz egy-egy <code>InvalidationListener</code>-t, melyek alapj\u00e1n figyeli azokat. Amennyiben egy f\u00fcgg\u0151s\u00e9g invalidd\u00e1 v\u00e1lik, akkor maga is invalid lesz.</p> <p>Egy k\u00f6t\u00e9s objektum \u00e9rt\u00e9k\u00e9hez ak\u00e1r egy property-t is hozz\u00e1k\u00f6thet\u00fcnk, mivel maga a <code>Binding&lt;T&gt;</code> oszt\u00e1ly maga is sz\u00e1rmazik az <code>ObservableValue&lt;T&gt;</code> oszt\u00e1lyb\u00f3l (\u00e9s egy egyir\u00e1ny\u00fa k\u00f6t\u00e9s megad\u00e1sakor a <code>bind()</code> param\u00e9tere pontosan ez kell, hogy legyen). L\u00e1ssunk is egy p\u00e9ld\u00e1t:</p> <pre><code>IntegerProperty x = new SimpleIntegerProperty(42);\nIntegerProperty y = new SimpleIntegerProperty(1337);\nIntegerProperty z = new SimpleIntegerProperty();\n\nz.bind(x.add(y));\n</code></pre> <p>Ilyen esetben a <code>z</code> property m\u00e1r a kor\u00e1bban eml\u00edtett bound property kateg\u00f3ri\u00e1ba esik. Amennyiben szeretn\u00e9nk megsz\u00fcntetni a k\u00f6t\u00e9st, akkor haszn\u00e1ljuk az <code>unbind()</code> met\u00f3dust!</p> <p>Fontos</p> <p>Amennyiben egy property \u00e9rt\u00e9k\u00e9t f\u00fcgg\u0151v\u00e9 tessz\u00fck, akkor az \u00e9rt\u00e9k\u00e9nek direkt be\u00e1ll\u00edt\u00e1sa (pl.: <code>z.set(21);</code>) <code>RuntimeException</code>-t eredm\u00e9nyez.</p> <p>Tov\u00e1bb\u00e1 az is szab\u00e1ly, hogy egy property-nek egyszerre csak egy darab egyir\u00e1ny\u00fa k\u00f6t\u00e9se lehet. Ha belegondolunk, akkor ez nem nagy meglepet\u00e9s. Mi lenne akkor, ha egyszerre szeretn\u00e9nk a k\u00f6vetkez\u0151k teljes\u00fcl\u00e9s\u00e9t <code>z = x + y</code> \u00e9s <code>z = a + b</code>? Ugyanakkor nem fog fut\u00e1sk\u00f6zbeni hib\u00e1t eredm\u00e9nyezni egy \u00fajabb <code>bind()</code> h\u00edv\u00e1s csup\u00e1n az el\u0151z\u0151 k\u00f6t\u00e9st fel\u00fcl\u00edrja a rendszer, azaz nem kell az \u00faj k\u00f6t\u00e9s el\u0151tt megh\u00edvni az <code>unbind()</code>-ot.</p> <p>Ezek a korl\u00e1toz\u00e1sok a k\u00e9tir\u00e1ny\u00fa k\u00f6t\u00e9sek eset\u00e9ben nem \u00e9lnek, puszt\u00e1n az \u00f6sszes property szinkronban lesz.</p>"},{"location":"legacy/04_gyakorlat/#binding-api","title":"Binding API","text":"<p>Az el\u0151z\u0151ekben m\u00e1r mad\u00e1rt\u00e1vlatb\u00f3l l\u00e1ttuk a k\u00f6t\u00e9sek m\u0171k\u00f6d\u00e9s\u00e9t, most viszont r\u00e9szleteiben is megvizsg\u00e1ljuk a Binding API-t. A Binding API-t k\u00e9t r\u00e9szre oszthatjuk:</p> <ul> <li>Magas szint\u0171</li> <li>Alacsony szint\u0171</li> </ul> <p>A magas szint\u0171 API-t a JavaFX oszt\u00e1lyai alkotj\u00e1k, melyek seg\u00edts\u00e9g\u00e9vel a legt\u00f6bb esetben meg tudjuk adni az \u00f6sszes k\u00f6t\u00e9ssel kapcsolatos ig\u00e9ny\u00fcnket. Amennyiben m\u00e9gsem megoldhat\u00f3 a k\u00f6t\u00e9ssel kapcsolatos \u00f6sszes elv\u00e1r\u00e1sunk, akkor az alacsony szint\u0171 API haszn\u00e1lat\u00e1hoz le kell sz\u00e1rmaztatnunk egy saj\u00e1t oszt\u00e1lyt a magas szint\u0171ekb\u0151l \u00e9s itt kell kifejten\u00fcnk a k\u00f6t\u00e9s\u00fcnk pontos viselked\u00e9s\u00e9t.</p>"},{"location":"legacy/04_gyakorlat/#magas-szintu-binding-api","title":"Magas szint\u0171 Binding API","text":"<p>A magas szint\u0171 Binding API k\u00e9t r\u00e9szb\u0151l tev\u0151dik \u00f6ssze. Egyr\u00e9szt a Fluent API-v\u00f3l \u00e9s m\u00e1sr\u00e9szt a <code>Binding</code>oszt\u00e1lyb\u00f3l. K\u00f6t\u00e9seket l\u00e9trehozhatunk a kiz\u00e1r\u00f3lag az egyik haszn\u00e1lat\u00e1val vagy a kett\u0151t tetsz\u0151leges kombin\u00e1lva is.</p>"},{"location":"legacy/04_gyakorlat/#fluent-api","title":"Fluent API","text":"<p>A Fluent API, mint olyan egy \u00e1ltal\u00e1nos fogalom, illetve tervez\u00e9si elv, melynek k\u00f6z\u00e9ppontj\u00e1ban a met\u00f3dus l\u00e1ncol\u00e1s \u00e1ll, \u00edgy megk\u00f6nny\u00edtve a be\u00e1ll\u00edt\u00e1sokat. A neve innen is eredeztethet\u0151, mivel ilyen m\u00f3don \"foly\u00e9konyabban\" \u00edrhat\u00f3 a k\u00f3d. A Fluent API-kn\u00e1l nagyon fontos a visszat\u00e9r\u00e9si t\u00edpus, hogy a met\u00f3dus l\u00e1ncol\u00e1sokat el tudjuk v\u00e9gezni. Mag\u00e1r\u00f3l a Fluent API-r\u00f3l t\u00f6bbet olvashatsz itt.</p> <p>Vegy\u00fcnk egy egyszer\u0171 esetet, amikor 3 property \u00e9rt\u00e9k\u00e9t szeretn\u00e9nk \u00f6sszeadni. Legyen ez a 3 property <code>x</code>, <code>y</code> \u00e9s <code>z</code>! Alapesetben ezt \u00edrn\u00e1nk, felt\u00e9ve, hogy mind a 3 property mondjuk <code>IntegerProperty</code>:</p> <pre><code>x.add(y);\nx.add(z);\n</code></pre> <p>A Fluent API kihaszn\u00e1l\u00e1s\u00e1val viszont ez \u00edgy is \u00edrhat\u00f3:</p> <pre><code>x.add(y).add(z);\n</code></pre> <p>A kulcs, hogy az <code>add()</code> met\u00f3dus maga is egy <code>NumberBinding</code>-ot ad vissza, aminek szint\u00e9n van <code>add</code> met\u00f3dusa, melyek egy helyr\u0151l \"j\u00f6nnek\". Ahhoz, hogy jobban \u00e1tl\u00e1ssuk a teljes k\u00e9pet vizsg\u00e1ljuk meg a kapcsol\u00f3d\u00f3 oszt\u00e1ly hierarchi\u00e1t!</p> Fluent API oszt\u00e1ly hierarchia <p>A fenti \u00e1bra az IntegerProperty-re f\u00f3kusz\u00e1lva mutatja be az \u00f6r\u00f6kl\u0151d\u00e9si hierarchi\u00e1t, de a t\u00f6bbi t\u00edpusn\u00e1l is hasonl\u00f3 a fel\u00e9p\u00edt\u00e9s. A hierarchia egy r\u00e9sz\u00e9t m\u00e1r ismerj\u00fck, azonban vannak fontos tov\u00e1bbi elemek is. Az oszt\u00e1lyok k\u00f6z\u00f6tt vannak olyanok is, amik az automatikus boxing \u00e9s unboxing miatt vannak jelen. A fluent API meg\u00e9rt\u00e9s\u00e9hez az <code>XXXExpression</code> \u00e9s az <code>XXXBinding</code> oszt\u00e1lyokra \u00e9s interf\u00e9szekre kell f\u00f3kusz\u00e1lnunk!</p> <p>Az <code>XXXExpression</code> interf\u00e9szek tartalmazz\u00e1k az \u00f6sszes olyan met\u00f3dust, melyek seg\u00edtenek az adatk\u00f6t\u00e9snek megadott kifejez\u00e9sek specifik\u00e1l\u00e1s\u00e1ban. P\u00e9ld\u00e1ul a fent haszn\u00e1lt <code>add</code> met\u00f3dus a <code>NumberExpression</code> interf\u00e9szb\u0151l j\u00f6n. Az <code>add</code> mellett haszn\u00e1lhat\u00f3 a <code>negate()</code>, <code>subtract()</code>, <code>multiply()</code>, <code>divide()</code> met\u00f3dusok hada is. Tov\u00e1bb\u00e1 tal\u00e1lunk itt rel\u00e1ci\u00f3s m\u0171veleteket is, melyek <code>BooleanBinding</code>-ot adnak vissza, illetve egy tov\u00e1bbi fontos csoportot adnak az <code>asString</code> met\u00f3dusok, melyek <code>StringBinding</code>-ot adnak vissza (az adatk\u00f6t\u00e9sek vil\u00e1g\u00e1ban tekinthet\u0151 kv\u00e1zi a <code>toString()</code>-nek).</p> <p>Miel\u0151tt ezen az \u00e1gon tov\u00e1bbhaladn\u00e1nk, vizsg\u00e1ljuk meg a m\u00e1sik k\u00f6zponti elemet, mag\u00e1t a <code>Binding&lt;T&gt;</code> interf\u00e9szt! A <code>Binding&lt;T&gt;</code> interf\u00e9sz reprezent\u00e1lja azt az \u00e9rt\u00e9ket, melynek \u00e9rt\u00e9ke egy vagy t\u00f6bb m\u00e1sik\u00e9t\u00f3l f\u00fcgg. \u00cdgy az al\u00e1bbi met\u00f3dusokat biztos\u00edtja:</p> <ul> <li><code>public void dispose()</code>: Jelezhetj\u00fck, hogy a <code>Binding</code>-ot m\u00e1r nem haszn\u00e1ljuk, \u00edgy a f\u00fcgg\u0151s\u00e9gekre val\u00f3 referenci\u00e1kat eldobja a rendszer (GC miatt lehet r\u00e1 sz\u00fcks\u00e9g)</li> <li><code>public ObservableList&lt;?&gt; getDependencies()</code>: Nem m\u00f3dos\u00edthat\u00f3 list\u00e1t ad vissza. Ezen kereszt\u00fcl nem tudunk \u00fajabb f\u00fcgg\u0151s\u00e9geket felvenni, csup\u00e1n debug c\u00e9lokat szolg\u00e1l, \u00edgy azt production k\u00f3dban soha ne haszn\u00e1ljuk!</li> <li><code>public void invalidate()</code>: A k\u00f6t\u00e9st invalid \u00e1llapotba helyezi</li> <li><code>public boolean isValid()</code>: \u00e1llapot lek\u00e9rdez\u00e9shez</li> </ul> <p>A <code>NumberBinding</code> puszt\u00e1n egy marker interf\u00e9sz az \u00f6sszes sz\u00e1m alap\u00fa k\u00f6t\u00e9shez, melyet azt\u00e1n a t\u00e9nyleges implement\u00e1ci\u00f3k megval\u00f3s\u00edtanak, mint p\u00e9ld\u00e1ul az <code>IntegerBinding</code>, <code>DoubleBinding</code>, stb.</p> <p>A m\u00e1sik \u00f6r\u00f6kl\u0151d\u00e9si \u00e1gr\u00f3l egy <code>IntegerProperty</code> megkapja a kor\u00e1bban m\u00e1r kifejtett <code>NumberExpression</code> \u00e1ltal megadott met\u00f3dusokat. Ezen fel\u00fcl az <code>ObservableNumberValue</code> interf\u00e9sz biztos\u00edtja az <code>intValue()</code>, <code>longValue()</code>, stb. met\u00f3dusokat. A <code>NumberExpression</code> oszt\u00e1ly egy konkr\u00e9t megval\u00f3s\u00edt\u00e1sa a <code>NumberExpressionBase</code>.</p> <p>A fentiek meg\u00e9rt\u00e9se ut\u00e1n m\u00e1r el\u00e9g j\u00f3 benyom\u00e1sunk van a magasszint\u0171 Binding API haszn\u00e1lat\u00e1r\u00f3l, de a <code>Binding</code> oszt\u00e1lyokat haszn\u00e1ljam vagy a property \u00e9rt\u00e9k\u00e9t vessem al\u00e1 adatk\u00f6t\u00e9snek? N\u00e9zz\u00fcnk egy p\u00e9ld\u00e1t, ahol a k\u00f6r ter\u00fclet\u00e9t sz\u00e1moljuk ki annak sugara alapj\u00e1n. A p\u00e9ld\u00e1ban megmutatjuk mindk\u00e9t megk\u00f6zel\u00edt\u00e9st:</p> <pre><code>public class CircleTest {\n\npublic static void main(String[] args) {\n\nDoubleProperty r = new SimpleDoubleProperty(5.0);\n// Binding a k\u00f6r ter\u00fclet\u00e9re\nDoubleBinding area = r.multiply(r).multiply(Math.PI);\nSystem.out.println(\"r = \" + r.get() + \", ter\u00fclet = \" + area.get());\nr.set(10.0);\nSystem.out.println(\"r = \" + r.get() + \", ter\u00fclet = \" + area.get());\n\n// DoubleProperty \u00e9rt\u00e9k\u00e9nek k\u00f6t\u00e9se egy kifejez\u00e9shez, ami a ter\u00fcletet adja meg\nDoubleProperty area2 = new SimpleDoubleProperty();\narea2.bind(r.multiply(r).multiply(Math.PI));\nSystem.out.println(\"r = \" + r.get() + \", ter\u00fclet2 = \" + area2.get());\n}\n}\n</code></pre> <p>A sz\u00e1mok mellett \u00e9rdemes lehet megn\u00e9zni a <code>StringProperty</code>-hez tartoz\u00f3 Fluent API-t is, mivel a String m\u00e1r referencia t\u00edpus, nem pedig primit\u00edv.</p> String Fluent API oszt\u00e1ly hierarchia <p>Az <code>ObservableStringValue</code> <code>get()</code> met\u00f3dusa nyilv\u00e1n egy String-et ad vissza. A <code>StringExpression</code> nem aritmetikai m\u0171veleteket t\u00e1mogat, hanem string m\u0171veleteket, mint p\u00e9ld\u00e1ul konkaten\u00e1ci\u00f3, \u00f6sszehasonl\u00edt\u00e1s, null check, stb. A <code>getValue()</code> met\u00f3dus mellett rendelkez\u00fcnk ebben az esetben egy <code>getValueSafe()</code> met\u00f3dussal is, mely <code>null</code> eset\u00e9n \u00fcres <code>String</code>-et ad vissza.</p>"},{"location":"legacy/04_gyakorlat/#extrak","title":"Extr\u00e1k","text":"<p>Az <code>ObjectExpression</code> \u00e9s az <code>ObjectBinding</code> seg\u00edts\u00e9g\u00e9vel tetsz\u0151leges objektumokra t\u00f6rt\u00e9n\u0151 k\u00f6t\u00e9sek hozhat\u00f3k l\u00e9tre. A hierarchia nagyon hasonl\u00f3 a <code>String</code>-n\u00e9l l\u00e1tottakhoz. L\u00e1ssunk egy p\u00e9ld\u00e1t a haszn\u00e1lat\u00e1ra</p> <pre><code>public class PersonBindingTest {\npublic static void main(String[] args) {\n\nPerson p1 = new Person(\"Kiss B\u00e9la\");\nPerson p2 = new Person(\"Nagy J\u00e1nos\");\n\nObjectProperty&lt;Person&gt; person1 = new SimpleObjectProperty&lt;&gt;(p1);\nObjectProperty&lt;Person&gt; person2 = new SimpleObjectProperty&lt;&gt;(p2);\n\n// K\u00f6t\u00e9s, ami \u00f6sszehasonl\u00edtja a k\u00e9t property egyenl\u0151s\u00e9g\u00e9t\nBooleanBinding isEqual = person1.isEqualTo(person1);\nSystem.out.println(isEqual.get());\nperson2.set(p1);\nSystem.out.println(isEqual.get());\n}\n}\n</code></pre> <p>A Binding API biztos\u00edt a sz\u00e1munkra ternary oper\u00e1tort is a <code>When</code> oszt\u00e1ly form\u00e1j\u00e1ban:</p> <pre><code>new When(condition).then(value1).otherwise(value2)\n</code></pre> <p><code>value1</code>-nek \u00e9s <code>value2</code>-nek ugyanolyan t\u00edpus\u00fanak kell lennie.</p> <p>A fentiek mellett az API ad sz\u00e1munkra m\u00e9g egy <code>Bindings</code> oszt\u00e1lyt, mely rengeteg statikus met\u00f3dust tartalmaz. L\u00e9nyege, hogy egyszer\u0171en \u00e9s gyorsan lehet k\u00f6t\u00e9seket l\u00e9trehozni. Mivel a lista igen hossz\u00fa \u00edgy itt azt nem mutatjuk be (illetve t\u00f6bb dolog i kiv\u00e1lthat\u00f3 vele amit m\u00e1r r\u00e9szletesen megn\u00e9zt\u00fcnk).</p>"},{"location":"legacy/04_gyakorlat/#alacsony-szintu-binding-api","title":"Alacsony szint\u0171 Binding API","text":"<p>El\u0151fordulhatnak estek amikor a magas szint\u0171 Binding API nem megfelel\u0151 az ig\u00e9nyeinknek. P\u00e9ld\u00e1ul egy <code>Observable</code> sz\u00e1mnak nem tudjuk a n\u00e9gyzetgy\u00f6k\u00e9t kisz\u00e1moltatni. Ilyenkor saj\u00e1t kiterjeszt\u00e9seket \u00edrhatunk, melyek megval\u00f3s\u00edtj\u00e1k az ig\u00e9nyelt funkcionalit\u00e1st. Ennek 3 l\u00e9p\u00e9se van:</p> <ol> <li>Az egyik l\u00e9tez\u0151 <code>Binding</code> oszt\u00e1lyt terjessz\u00fck ki (sz\u00e1rmaztassunk bel\u0151le). A n\u00e9gyzetgy\u00f6k\u00f6s p\u00e9ld\u00e1n\u00e1l maradva haszn\u00e1lhatjuk a <code>DoubleBinding</code>-ot.</li> <li>Mindig h\u00edvjuk meg a parent <code>bind()</code> met\u00f3dus\u00e1t a f\u00fcgg\u0151s\u00e9gek k\u00f6t\u00e9s\u00e9hez! Itt az \u00f6sszes f\u00fcgg\u0151s\u00e9get adjuk meg.</li> <li>A l\u00e9nyeg pedig, hogy a <code>computeValue()</code> met\u00f3dust \u00edrjuk fel\u00fcl! (Amennyiben egy\u00e9b funkcionalit\u00e1s is sz\u00fcks\u00e9ges, akkor term\u00e9szetesen t\u00f6bb met\u00f3dust is fel\u00fcl\u00edrhatunk)</li> </ol> <p>P\u00e9ld\u00e1ul a n\u00e9gyzetgy\u00f6k kisz\u00e1m\u00edt\u00e1s\u00e1hoz a k\u00f6vetkez\u0151t \u00edrhatjuk:</p> <pre><code>DoubleProperty num = new SimpleDoubleProperty(25);\nDoubleProperty sqrtOfNum = new SimpleDoubleProperty();\n\nDoubleBinding squareRoot = new DoubleBinding() {\n{\nthis.bind(num);\n}\n\n@Override\nprotected double computeValue() {\ndouble n = num.get();\nreturn Math.sqrt(n);\n}\n};\n\nsqrtOfNum.bind(squareRoot);\n</code></pre> <p>Mivel a fenti p\u00e9ld\u00e1ban anonymous class-t haszn\u00e1ltunk (aminek ugyeb\u00e1r nincs konstruktora), \u00edgy az init blokkban h\u00edvtuk meg a <code>bind()</code> met\u00f3dust. Amennyiben t\u00f6bbsz\u00f6r is szeretn\u00e9nk felhaszn\u00e1lni a k\u00f6t\u00e9s t\u00edpusunkat, akkor \u00e9rdemes neves\u00edteni az oszt\u00e1lyt, ami n\u00e9zhet ki az al\u00e1bbihoz hasonl\u00f3an:</p> <pre><code>public class SquareRootBinding extends DoubleBinding {\nprivate ObservableNumberValue value;\n\npublic SquareRootBinding(ObservableNumberValue o) {\nthis.value = o;\nthis.bind(o);\n}\n\n@Override\nprotected double computeValue() {\nreturn Math.sqrt(this.value.doubleValue());\n}\n}\n</code></pre> <p>A haszn\u00e1lat helye:</p> <pre><code>DoubleProperty num = new SimpleDoubleProperty(25.0);\nDoubleProperty sqrtOfNum = new SimpleDoubleProperty();\n\nDoubleBinding squareRootBinding = new SquareRootBinding(num);\nsqrtOfNum.bind(squareRootBinding);\n\nSystem.out.println(sqrtOfNum.get());\nnum.set(100.0);\nSystem.out.println(sqrtOfNum.get());\n</code></pre> <p>Mivel ak\u00e1r eg\u00e9sz sz\u00e1mokat is haszn\u00e1lhatunk, \u00edgy nem szor\u00edtjuk meg t\u00fals\u00e1gosan azt, hogy milyen <code>Observable</code> objektumokat kaphatunk param\u00e9ter\u00fcl, viszont arra sz\u00fcks\u00e9g\u00fcnk van, hogy a megadott <code>Observable</code> objektumt\u00f3l le tudjuk k\u00e9rni a <code>double</code> \u00e9rt\u00e9k\u00e9t, mivel n\u00e9gyzetgy\u00f6k\u00f6t csak erre tudunk sz\u00e1molni. Emiatt az <code>ObservableNumberValue</code> t\u00edpust v\u00e1lasztjuk, mely tartalmazza a <code>doubleValue()</code> met\u00f3dust.</p>"},{"location":"legacy/04_gyakorlat/#osszegzes","title":"\u00d6sszegz\u00e9s","text":"<p>A property-k \u00e9s az adatk\u00f6t\u00e9sek rendk\u00edv\u00fcl fontos r\u00e9sz\u00e9t k\u00e9pezik az eg\u00e9sz JavaFX API-nak. Amennyiben megvizsg\u00e1ljuk a grafikus vez\u00e9rl\u0151elemeket, azt fogjuk tapasztalni, hogy az \u00f6sszes adatot property form\u00e1j\u00e1ban t\u00e1rolj\u00e1k.</p> <p>P\u00e9ld\u00e1ul egy <code>TextField</code> az aktu\u00e1lis sz\u00f6veg \u00e9rt\u00e9k\u00e9t egy property-ben t\u00e1rolja:</p> <pre><code>TextField tf = new TextField(\"Foo Bar\");\nStringProperty textProp = tf.textProperty();\n</code></pre> <p>Ez hatalmas el\u0151nyt ad a kez\u00fcnkbe, mivel a k\u00fcl\u00f6nb\u00f6z\u0151 fel\u00fcleti elemek adatai k\u00f6z\u00f6tt rugalmasan hozhatunk l\u00e9tre adatk\u00f6t\u00e9seket. Ezen fel\u00fcl ak\u00e1r a model oszt\u00e1lyainkat is meg\u00edrhatjuk property-k seg\u00edts\u00e9g\u00e9vel, melyeket \u00edgy k\u00f6nnyebben szinkronban tarthatunk a fel\u00fcleti vez\u00e9rl\u0151kkel.</p>"},{"location":"legacy/04_gyakorlat/#feladatok","title":"Feladatok","text":"<p>Feladat</p> <p>Csin\u00e1ljunk egy egyszer\u0171 JavaFX alkalmaz\u00e1st, ahol <code>Label</code> elemek seg\u00edts\u00e9g\u00e9vel az ablak aktu\u00e1lis m\u00e9ret\u00e9t mutatjuk! A feladat megold\u00e1sa sor\u00e1n haszn\u00e1ljunk property-ket \u00e9s k\u00f6t\u00e9seket!</p> <p>Feladat</p> <p>K\u00e9sz\u00edts\u00fcnk egy saj\u00e1t, alacsony szint\u0171 Binding-ot, mely k\u00e9pes a sz\u00e1m <code>sin</code>-\u00e1t kisz\u00e1m\u00edtani! Sz\u00e1rmaztassunk le a <code>DoubleBinding</code> oszt\u00e1lyb\u00f3l!</p>"},{"location":"legacy/04_gyakorlat/#videok","title":"Vide\u00f3k","text":"<ul> <li>Property bevezet\u0151</li> <li>Adatk\u00f6t\u00e9sek, Java Beans Property figyel\u00e9s</li> <li>JavaFX Property-k</li> <li>ReadOnlyProperty \u00e9s lusta ki\u00e9rt\u00e9kel\u00e9s</li> <li>Property hierarchia</li> <li>Binding-ok haszn\u00e1lata</li> <li>Magas szint\u0171 Binding API</li> <li>Alacsony szint\u0171 Binding API</li> </ul>"},{"location":"legacy/05_gyakorlat/","title":"5. gyakorlat","text":""},{"location":"legacy/05_gyakorlat/#mvc-bevezetes","title":"MVC bevezet\u00e9s","text":"<p>Az MVC architektur\u00e1lis model az egyik legegyszer\u0171bb mind k\u00f6z\u00fcl. 3 j\u00f3l elk\u00fcl\u00f6n\u00edthet\u0151 r\u00e9teget defini\u00e1l melyek:</p> <ul> <li>Model (M)</li> <li>View (V)</li> <li>Controller (C)</li> </ul> <p>A r\u00e9tegek k\u00f6z\u00fcl a felhaszn\u00e1l\u00f3 a View-n kereszt\u00fcl kommunik\u00e1l. A felhaszn\u00e1l\u00f3i interakci\u00f3 valamilyen esem\u00e9nyeket gener\u00e1l, melyre a Controller a megfelel\u0151 h\u00edv\u00e1sokat ejtheti meg. A Controller tekinthet\u0151 egy k\u00f6z\u00e9ps\u0151 r\u00e9tegnek, mert a Model r\u00e9teget csak \u0151 k\u00e9pes adatm\u00f3dos\u00edt\u00e1si c\u00e9llal el\u00e9rni. Teh\u00e1t a View-b\u00f3l p\u00e9ld\u00e1ul sosem kezdem\u00e9nyez\u00fcnk adatb\u00e1zis m\u0171veleteket, mert az vesz\u00e9lyes lenne az alkalmaz\u00e1s szempontj\u00e1b\u00f3l, illetve a View-nak nem is kell tudnia arr\u00f3l, hogy az adat honnan j\u00f6n \u00e9s hogyan van t\u00e1rolva. Sz\u00e1m\u00e1ra az a l\u00e9nyeg, hogy tudja hogy milyen adatokat kell megjelen\u00edtenie a felhaszn\u00e1l\u00f3 sz\u00e1m\u00e1ra.</p> <p>A Controller-ben v\u00e9gz\u00fcnk minden \u00fczleti logik\u00e1val kapcsolatos tev\u00e9kenys\u00e9get. P\u00e9ld\u00e1ul bizonyos mez\u0151k \u00e9rt\u00e9ke alapj\u00e1n egy\u00e9b \u00e9rt\u00e9keket \u00e1ll\u00edthatunk be automatikusan, melyet m\u00e1r a felhaszn\u00e1l\u00f3 nem l\u00e1t.</p> <p>A Model r\u00e9teg t\u00f6bb dolgot foglalhat mag\u00e1ban. Egyr\u00e9szt a Bean oszt\u00e1lyainkat rendre itt szoktuk l\u00e9trehozni (A Bean defin\u00edci\u00f3j\u00e1t l\u00e1sd k\u00e9s\u0151bb). M\u00e1sr\u00e9szt az \u00fagynevezett DAO is itt szokott helyet foglalni, mely az adatel\u00e9r\u00e9s\u00e9rt felel\u0151s, legyen az egy adatb\u00e1zisban vagy egy f\u00e1jlban.</p> <p>Ezen fel\u00fcl a View r\u00e9tegnek nyilv\u00e1n sz\u00fcks\u00e9ge lehet magukra a Bean-ekre is, ez\u00e9rt \u0151 haszn\u00e1lhat ilyen jelleg\u0171 olvas\u00e1si m\u0171veleteket k\u00f6zvetlen\u00fcl a Model r\u00e9tegb\u0151l.</p> <p>Az im\u00e9nt le\u00edrtak grafikusan szeml\u00e9ltetve:</p> <p></p>"},{"location":"legacy/05_gyakorlat/#mvc-alkalmazas-implementalasa","title":"MVC alkalmaz\u00e1s implement\u00e1l\u00e1sa","text":"<p>Feladat</p> <p>K\u00e9sz\u00edts\u00fcnk egy egyszer\u0171 c\u00edmjegyz\u00e9k alkalmaz\u00e1st!</p> <p>A c\u00edmjegyz\u00e9kbe az al\u00e1bbi funkci\u00f3knak kell el\u00e9rhet\u0151nek lennie:</p> <ul> <li> <p>\u00daj kontakt hozz\u00e1ad\u00e1sa, melyn\u00e9l a k\u00f6vetkez\u0151 inform\u00e1ci\u00f3kat kell lehet megadni:</p> <ul> <li>N\u00e9v (K\u00f6telez\u0151)</li> <li>Email (K\u00f6telez\u0151)</li> <li>Telefonsz\u00e1m (Opcion\u00e1lis) - lehet t\u00f6bb is \u00e9s meg lehet adni a t\u00edpus\u00e1t (work, home)</li> <li>Lakc\u00edm (Opcion\u00e1lis)</li> <li>Sz\u00fclet\u00e9snap (K\u00f6telez\u0151)</li> <li>Szervezet (Opcion\u00e1lis)</li> <li>Poz\u00edci\u00f3/Beoszt\u00e1s (Opcion\u00e1lis)</li> </ul> </li> </ul> <ul> <li>Kontakt szerkeszt\u00e9se</li> <li>Kontakt t\u00f6rl\u00e9se</li> <li>Kontaktok list\u00e1z\u00e1sa</li> <li> <p>Kontaktok k\u00f6z\u00f6tti keres\u00e9s a k\u00f6vetkez\u0151k alapj\u00e1n</p> <ul> <li>N\u00e9v</li> <li>Email</li> </ul> </li> </ul> <ul> <li>Export \u00e9s import funkci\u00f3k t\u00e1mogat\u00e1sa (vCard), melyhez tetsz\u0151leges 3rd party lib haszn\u00e1lhat\u00f3</li> </ul>"},{"location":"legacy/05_gyakorlat/#maven-multimodule","title":"Maven Multimodule","text":"<p>Maven seg\u00edts\u00e9g\u00e9vel l\u00e9trehozhatunk \u00fagynevezett multi-module projekteket is, ahol van egy parent pom, mely a projekt gy\u00f6ker\u00e9ben tal\u00e1lhat\u00f3 \u00e9s \u00e9s a package-el\u00e9se POM-ra van \u00e1ll\u00edtva. Ebben a parent pom-ban, melyet aggregator POM-nak is szok\u00e1s nevezni, megadjuk a module-okat, melyek az eddig l\u00e1tott projektekt\u0151l semmiben sem k\u00fcl\u00f6nb\u00f6znek, csup\u00e1n meg kell adnunk a <code>&lt;parent&gt;</code> elemek k\u00f6z\u00f6tt a parent POM-ot.</p> <p>Miel\u0151tt a konkr\u00e9t p\u00e9ld\u00e1t megn\u00e9zn\u00e9nk, vegy\u00fck sorra, hogy milyen el\u0151ny\u00f6ket szolg\u00e1ltat a sz\u00e1munkra ennek a konstrukci\u00f3nak a haszn\u00e1lata: </p> <ul> <li>Duplik\u00e1ci\u00f3k cs\u00f6kkent\u00e9se, mivel a modulokat t\u00f6bb helyen is felhaszn\u00e1lhatjuk</li> <li>K\u00f6z\u00f6s konfigur\u00e1ci\u00f3k kiszervez\u00e9se a parent POM-ba (vagy m\u00e1s n\u00e9ven Super POM-ba)</li> </ul>"},{"location":"legacy/05_gyakorlat/#cimjegyzek-projekt-letrehozas","title":"C\u00edmjegyz\u00e9k projekt l\u00e9trehoz\u00e1s","text":"<p>K\u00e9sz\u00edts\u00fcnk egy \u00faj projektet (<code>File -&gt; New -&gt; Project</code>), melynek t\u00edpus\u00e1t Maven-re \u00e1ll\u00edtsuk! A nev\u00e9nek adjuk a <code>contacts</code>-ot, illetve <code>groupId</code>-nak haszn\u00e1lhatjuk a <code>hu.alkfejl</code> elnevez\u00e9st! A l\u00e9trej\u00f6v\u0151 projektben az <code>src</code> mappa t\u00f6r\u00f6lhet\u0151 is, mivel itt majd csak almodulokat hozunk l\u00e9tre!</p> <p>Ezut\u00e1n a projektre jobb klikkel\u00fcnk \u00e9s a <code>New-&gt; Module</code> opci\u00f3 alatt szint\u00e9n Maven projektet adjunk meg. A k\u00f6vetkez\u0151 oldalon a <code>Parent</code> \u00e9rt\u00e9k\u00e9t m\u00e1r fel is k\u00edn\u00e1lja, hogy legyen az a <code>contacts</code>. Ezut\u00e1n adjuk neki a <code>contacts-core</code> nevet! Ennek eredm\u00e9nyek\u00e9ppen a <code>Project View</code> f\u00fcl\u00f6n a <code>contacts</code> al\u00e1 ker\u00fcl be a <code>contacts-core</code>, mely saj\u00e1t <code>pom.xml</code>-el rendelkezik.</p> <p>A <code>contacts/pom.xml</code> tartalma a k\u00f6vetkez\u0151 lehet:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n&lt;groupId&gt;hu.alkfejl&lt;/groupId&gt;\n&lt;artifactId&gt;contacts&lt;/artifactId&gt;\n&lt;packaging&gt;pom&lt;/packaging&gt;\n&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n&lt;modules&gt;\n&lt;module&gt;contacts-core&lt;/module&gt;\n&lt;/modules&gt;\n\n&lt;properties&gt;\n&lt;maven.compiler.source&gt;11&lt;/maven.compiler.source&gt;\n&lt;maven.compiler.target&gt;11&lt;/maven.compiler.target&gt;\n&lt;/properties&gt;\n\n&lt;/project&gt;\n</code></pre> <p>Vegy\u00fck \u00e9szre, hogy a parent POM package-el\u00e9se <code>pom</code> lett, illetve a <code>contacts-core</code> megjelenik a modulok alatt (ami a buildel\u00e9s miatt fontos).</p> <p>M\u00e9g egy dolgunk lehet, hogy a k\u00f6z\u00f6s property-ket csak a parent <code>pom.xml</code>-ben adjuk meg (Pl.: <code>&lt;maven.compiler.source&gt;11&lt;/maven.compiler.source&gt;</code>), \u00edgy azt a submodule majd \u00fagyis \u00f6r\u00f6kli (persze ett\u0151l f\u00fcggetlen\u00fcl a submodule b\u00e1rmikor fel\u00fcl\u00edrhatja a megadott property-ket).</p> <p>A <code>contacts/contacts-core/pom.xml</code> ezut\u00e1n valahogy \u00edgy n\u00e9zhet ki:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n&lt;parent&gt;\n&lt;artifactId&gt;contacts&lt;/artifactId&gt;\n&lt;groupId&gt;hu.alkfejl&lt;/groupId&gt;\n&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n&lt;/parent&gt;\n&lt;packaging&gt;jar&lt;/packaging&gt;\n&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n&lt;artifactId&gt;contacts-core&lt;/artifactId&gt;\n&lt;/project&gt;\n</code></pre> <p>A projekt package-el\u00e9s\u00e9t nem musz\u00e1j <code>jar</code>-ra \u00e1ll\u00edtani, mivel ez az alap\u00e9rtelmezett, de a jelenlegi c\u00e9lunk nyomat\u00e9kos\u00edt\u00e1sa v\u00e9gett most megadtuk. A fontos r\u00e9sz a <code>parent</code> elemek k\u00f6z\u00f6tt tal\u00e1lhat\u00f3, ahol megadjuk a hivatkoz\u00e1st a parent pom-ra. Vegy\u00fck \u00e9szre, hogy jelen esetben nem kell megadnunk a <code>groupId</code>-t \u00e9s a <code>version</code>-t, mivel a submodule ezeket a parent pom-b\u00f3l \u00e1tveszi az effective pom-ba.</p> <p>Ezut\u00e1n ha kiadunk egy <code>mvn package</code> parancsot a parent k\u00f6nyvt\u00e1r\u00e1ban, akkor az \u00f6sszes a <code>modules</code> elem alatt megadott submodule-t buildeli a rendszer (f\u00fcgg\u0151s\u00e9geket is figyelembe veszi).</p>"},{"location":"legacy/05_gyakorlat/#model-reteg","title":"Model r\u00e9teg","text":"<p>A model oszt\u00e1lyok lesznek azok, akiket mind asztali, mind webes k\u00f6rnyezetb\u0151l szeretn\u00e9nk majd haszn\u00e1lni, \u00edgy azokat a <code>contacts-core</code> submodule-on bel\u00fcl hozzuk l\u00e9tre.</p>"},{"location":"legacy/05_gyakorlat/#bean-osztalyok","title":"Bean oszt\u00e1lyok","text":"<p>K\u00e9sz\u00edts\u00fcnk egy <code>hu.alkfejl.model</code> package-et, melyben l\u00e9trehozunk egy <code>Contact.java</code> \u00e1llom\u00e1nyt! Ez egy \u00fagynevezett <code>Bean</code> oszt\u00e1ly lesz, melynek n\u00e9h\u00e1ny fontos tulajdons\u00e1ggal rendelkeznie kell. Ez eset\u00fcnkben kev\u00e9sb\u00e9 lesz fontos, viszont a keretrendszerek (pl. ORM-ek, mint p\u00e9ld\u00e1ul a Hibernate) ezeket massz\u00edvan haszn\u00e1lj\u00e1k, \u00edgy k\u00f6vetend\u0151 p\u00e9lda m\u00e1r most a megfelel\u0151 m\u00f3don el\u0151k\u00e9sz\u00edten\u00fcnk alkalmaz\u00e1sainkat.</p> <p>3 tulajdons\u00e1ggal kell rendelkeznie egy <code>Bean</code> oszt\u00e1lynak:</p> <ul> <li>Van publikus default konstruktora</li> <li>Minden adattaghoz tartozik publikus getter/setter (m\u00e1sn\u00e9ven accessorok)</li> <li>Az oszt\u00e1lynak szerializ\u00e1lhat\u00f3nak kell lennie</li> </ul> <p>Az els\u0151 kett\u0151t tal\u00e1n nem kell elmagyar\u00e1zni, de mi is az a szerializ\u00e1lhat\u00f3s\u00e1g? A Java rendelkezik az \u00fagynevezett objektum szerializ\u00e1l\u00e1ssal, ami szerint egy objektum reprezent\u00e1lhat\u00f3 egy b\u00e1jt stream-mel, mely tartalmazza az objektum t\u00edpus\u00e1t, illetve hogy maga az objektum milyen t\u00edpus\u00fa fieldekkel rendelkezik, tov\u00e1bb\u00e1 a konkr\u00e9t adatot is ezekhez a fieldekhez. M\u00e1ssz\u00f3val a b\u00e1jtstreamben benne van az objektum aktu\u00e1lis \u00e1llapota (melyik field milyen \u00e9rt\u00e9ket t\u00e1rol). Amennyiben ezt a b\u00e1jtfolyamot valahova elmentj\u00fck ezt nevezz\u00fck szerializ\u00e1ci\u00f3nak. Ez megfelel az objektum aktu\u00e1lis \u00e1llapot\u00e1nak elment\u00e9s\u00e9vel. P\u00e9ld\u00e1ul lementhetj\u00fck egy objektum \u00e1llapot\u00e1t ilyen m\u00f3don egy f\u00e1jlba is, de p\u00e9ld\u00e1ul az is szerializ\u00e1ci\u00f3, amikor egy objektumot JSON form\u00e1ra alak\u00edtunk (k\u00f6zkedvelt keretrendszer a Jackson ennek haszn\u00e1lat\u00e1ra). Amikor az elmentett \u00e1llapotot visszat\u00f6ltj\u00fck (a mem\u00f3ri\u00e1ba), akkor deszerializ\u00e1ci\u00f3r\u00f3l besz\u00e9l\u00fcnk. Ahhoz, hogy egy oszt\u00e1ly objektumai szerializ\u00e1lhat\u00f3ak legyenek egyszer\u0171en meg kell val\u00f3s\u00edtanunk a <code>Serializable</code> interface-t. Eset\u00fcnkben egyel\u0151re nem fogjuk alkalmazni az interf\u00e9szt. Amint sz\u00fcks\u00e9g\u00fcnk lesz r\u00e1, akkor azt \u00fagyis k\u00f6nnyen megtehetj\u00fck.</p> <p>Mivel a model oszt\u00e1lyainkat property-k haszn\u00e1lat\u00e1val szeretn\u00e9nk elk\u00e9sz\u00edteni, \u00edgy sz\u00fcks\u00e9g\u00fcnk lesz egy f\u00fcgg\u0151s\u00e9gre, melyet a <code>contacts/contacts-core/pom.xml</code>-ban adunk meg:</p> <pre><code>&lt;dependencies&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.openjfx&lt;/groupId&gt;\n&lt;artifactId&gt;javafx-base&lt;/artifactId&gt;\n&lt;version&gt;11&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre> <p>A property-k a <code>javafx-base</code> modulban tal\u00e1lhat\u00f3ak, \u00edgy el\u00e9g ezt a dependency-t haszn\u00e1lnunk (ne felejts\u00fck el friss\u00edteni a Maven modulokat).</p> <p>Ezek ut\u00e1n l\u00e1ssuk a <code>Contact.java</code> bean oszt\u00e1lyunkat!</p> <pre><code>public class Contact {\nprivate IntegerProperty id = new SimpleIntegerProperty(this, \"id\");\nprivate StringProperty name = new SimpleStringProperty(this, \"name\");\nprivate StringProperty email = new SimpleStringProperty(this, \"email\");\nprivate ObjectProperty&lt;ObservableList&lt;Phone&gt;&gt; phones = new SimpleObjectProperty&lt;&gt;(this, \"phones\");\nprivate StringProperty address = new SimpleStringProperty(this, \"address\");\nprivate ObjectProperty&lt;LocalDate&gt; dateOfBirth = new SimpleObjectProperty&lt;&gt;(this, \"dateOfBirth\");\nprivate StringProperty company = new SimpleStringProperty(this, \"company\");\nprivate StringProperty position = new SimpleStringProperty(this, \"position\");\n\n// generated getters \u00e9s setters: Alt+Insert -&gt; Getter and setter\n}\n</code></pre> <p>A <code>StringProperty</code>-ket m\u00e1r l\u00e1ttuk, viszont \u00e9rdemes megn\u00e9zni a telefonsz\u00e1mok t\u00e1rol\u00e1s\u00e1t! A telefonsz\u00e1mokat egy saj\u00e1t <code>Phone</code> oszt\u00e1lyban adjuk meg, ahol a telefonsz\u00e1moknak van egy <code>PhoneType</code>-ja (pl.: otthoni vagy munkahelyi), illetve maga a telefonsz\u00e1m (hamarosan l\u00e1tjuk a r\u00e9szleteket). Mivel t\u00f6bb telefonsz\u00e1mot szeretn\u00e9nk t\u00e1rolni, \u00edgy azokat egy <code>ObservableList&lt;&gt;</code>-ben fogjuk megadni, melyet szint\u00e9n elhelyezhet\u00fcnk egy <code>ObjectProperty</code>-ben.</p> <p>A <code>Date</code> oszt\u00e1lyhoz nincs hozz\u00e1 tartoz\u00f3 property oszt\u00e1ly, \u00edgy azt <code>ObjectProperty</code>-k\u00e9nt tudjuk t\u00e1rolni. A k\u00f6nnyebb k\u00f6t\u00e9sek kialak\u00edt\u00e1sa v\u00e9gett a <code>java.util.Date</code> helyett a <code>java.time.LocalDate</code> oszt\u00e1lyt haszn\u00e1ljuk, mivel a fel\u00fcleten haszn\u00e1lni k\u00edv\u00e1nt <code>DatePicker</code> is <code>LocalDate</code>-et haszn\u00e1l bel\u00fcl property-k\u00e9nt.</p> <p>Megjegyz\u00e9s</p> <p>A Lombok projekt egy olyan library, ami a motorikus feladatok elimin\u00e1l\u00e1s\u00e1val megk\u00f6nny\u00edti a fejleszt\u00e9st. P\u00e9ld\u00e1ul a getter/setter met\u00f3dusokat egyetlen annot\u00e1ci\u00f3val jelezhetj\u00fck a rendszer sz\u00e1m\u00e1ra, illetve a loggol\u00e1shoz haszn\u00e1lt field-eket is egy r\u00f6vidke annot\u00e1ci\u00f3val rendelkez\u00e9sre bocs\u00e1thatjuk. A fenti <code>Contact</code> oszt\u00e1lyt a k\u00f6vetkez\u0151k\u00e9ppen is \u00edrhattuk volna: </p> <pre><code>@Data\npublic class Contact{\n// properties\n}\n</code></pre> <p>A <code>@Data</code> annot\u00e1ci\u00f3 legener\u00e1lja a getter-eket \u00e9s setter-eket is, tov\u00e1bb\u00e1 param\u00e9teres konstruktor, <code>toString()</code>, <code>equals()</code>, <code>hashCode()</code> met\u00f3dusokat is biztos\u00edt. Az alkalmazhat\u00f3 feature-\u00f6k list\u00e1j\u00e1\u00e9rt l\u00e1sd a Lombok weboldal\u00e1t!</p> <p>IntelliJ-hez el\u00e9rhet\u0151 a Lombok plugin, melyet telep\u00edten\u00fcnk kell., ezen fel\u00fcl a projekthez hozz\u00e1 kell adnunk a k\u00f6vetkez\u0151 Maven f\u00fcgg\u0151s\u00e9get:</p> <pre><code>&lt;dependencies&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n&lt;artifactId&gt;lombok&lt;/artifactId&gt;\n&lt;version&gt;1.18.16&lt;/version&gt;\n&lt;scope&gt;provided&lt;/scope&gt;\n&lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre> <p>A Lombok projekt igen hasznos tud lenni, azonban a property-k eset\u00e9ben nem megfelel\u0151en gener\u00e1lja a getter/setter \u00e9s XXXProperty() met\u00f3dusokat, \u00edgy jelen esetben nem haszn\u00e1ljuk.</p> <p>A <code>Phone</code> oszt\u00e1ly a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9zhet ki:</p> <pre><code>public class Phone {\n\npublic enum PhoneType{\nHOME(\"Home\"),\nWORK(\"Work\"),\nMOBILE(\"Mobile\"),\nUNKNOWN(\"Unknown\");\n\nprivate final StringProperty value = new SimpleStringProperty(this, \"value\");\n\npublic String getValue() {\nreturn value.get();\n}\n\npublic StringProperty valueProperty() {\nreturn value;\n}\n\nPhoneType(String value) {\nthis.value.set(value);\n}\n\n@Override\npublic String toString() {\nreturn getValue();\n}\n}\n\n\nprivate IntegerProperty id = new SimpleIntegerProperty(this, \"id\");\nprivate StringProperty number = new SimpleStringProperty(this, \"number\");\nprivate ObjectProperty&lt;PhoneType&gt; phoneType= new SimpleObjectProperty&lt;&gt;(this, \"phoneType\");\n\n// getters, setters\n}\n</code></pre> <p>Mivel a <code>PhoneType</code> szorosan kapcsol\u00f3dik a <code>Phone</code>-hoz, \u00edgy az ezt reprezent\u00e1l\u00f3 <code>enum</code>-ot a <code>Phone</code> oszt\u00e1lyon bel\u00fcl adjuk meg, mely els\u0151 k\u00f6rben 4 f\u00e9le \u00e9rt\u00e9ket ad meg lehets\u00e9gesk\u00e9nt. Mag\u00e1t a <code>PhoneType</code>-ot is egy <code>ObjectProperty</code>-k\u00e9nt tartjuk sz\u00e1mon.</p>"},{"location":"legacy/05_gyakorlat/#data-access-object-dao","title":"Data Access Object (DAO)","text":"<p>Miut\u00e1n elk\u00e9sz\u00fcltek a bean-ek, elkezdhet\u00fcnk dolgozni a DAO-n. A DAO (Data Access Object) az adatel\u00e9r\u00e9si r\u00e9teget adja meg, mely a model r\u00e9tegen bel\u00fclre sorolhat\u00f3. A konkr\u00e9t hozz\u00e1ad\u00e1s \u00e9s list\u00e1z\u00e1s itt t\u00f6rt\u00e9nik (m\u00e1rmint az adatok t\u00e1rol\u00e1sa, legyen az mem\u00f3ria, adatb\u00e1zis, f\u00e1jl vagy b\u00e1rmi egy\u00e9b). A controller r\u00e9teg\u00fcnk majd ezt fogja felhaszn\u00e1lni. Fontos, hogy itt tartsuk mindig szem el\u0151tt, hogy interface m\u00f6g\u00e9 rejts\u00fck az aktu\u00e1lis implement\u00e1ci\u00f3t, mely biztos\u00edtja, hogy k\u00f6nnyen cser\u00e9lhet\u0151 legyen a megval\u00f3s\u00edt\u00e1s.</p> <p>El\u0151sz\u00f6r k\u00e9sz\u00edts\u00fck el a j\u00f3l defini\u00e1lt interface-t! Ehhez k\u00e9sz\u00edts\u00fcnk egy \u00faj interface-t <code>ContactDAO</code> n\u00e9ven a <code>hu.alkfejl.dao</code> csomagba!</p> <pre><code>public interface ContactDAO {\n\nList&lt;Contact&gt; findAll();\nContact save(Contact contact);\nvoid delete(Contact contact);\n\n}\n</code></pre> <p>Els\u0151 k\u00f6rben 3 implement\u00e1land\u00f3 met\u00f3dussal rendelkezik, melyek m\u00e1r felhaszn\u00e1lj\u00e1k ez el\u0151z\u0151leg defini\u00e1lt bean oszt\u00e1lyunkat. A 3 megadott met\u00f3dus lenyomat az \u00f6sszes kontakt list\u00e1z\u00e1s\u00e1hoz, egy kontakt ment\u00e9s\u00e9hez/m\u00f3dos\u00edt\u00e1s\u00e1hoz \u00e9s a t\u00f6rl\u00e9shez lesz majd haszn\u00e1lhat\u00f3. A hozz\u00e1ad\u00e1sn\u00e1l fontos, hogy visszaadunk egy <code>Contact</code> \u00e9rt\u00e9ket is, melynek szerepe, hogy a controller fel\u00e9 jelezze, hogy sikeresen megt\u00f6rt\u00e9nt a besz\u00far\u00e1s vagy valami hiba v\u00e9gett ez meghi\u00fasult (ebben az esetben adhat vissza <code>null</code>-t is ak\u00e1r). Nyilv\u00e1n nem t\u00fal szofisztik\u00e1lt azt k\u00f6z\u00f6lni a felhaszn\u00e1l\u00f3val, hogy 'Valami hiba t\u00f6rt\u00e9nt', mivel a felhaszn\u00e1l\u00f3 \u00e1ltal\u00e1ban arra is k\u00edv\u00e1ncsi, hogy mi volt a hiba oka. Erre most nem t\u00e9r\u00fcnk ki, de b\u0151v\u00edt\u00e9si lehet\u0151s\u00e9gk\u00e9nt mindenki elk\u00e9sz\u00edtheti saj\u00e1t maga sz\u00e1m\u00e1ra.</p> <p>Miut\u00e1n megvan az interface, el kell k\u00e9sz\u00edten\u00fcnk egy t\u00e9nyleges implement\u00e1ci\u00f3t is hozz\u00e1. Ehhez k\u00e9sz\u00edts\u00fcnk egy oszt\u00e1lyt az interface mell\u00e9 <code>ContactDAOImpl</code> n\u00e9ven. A megval\u00f3s\u00edt\u00e1sunk jelen esetben egy SQLite adatb\u00e1zist fog haszn\u00e1lni, ugyanakkor a konkr\u00e9t adatb\u00e1zis nem jelenik meg a k\u00f3dban, hiszen a JDBC - Java Database Connectivity API-t haszn\u00e1ljuk. A JDBC egys\u00e9ges interf\u00e9szt ad a k\u00fcl\u00f6nb\u00f6z\u0151 adatb\u00e1zisok kezel\u00e9s\u00e9hez, melyeket ak\u00e1r kombin\u00e1lhatjuk is egy alkalmaz\u00e1son bel\u00fcl. A konkr\u00e9t megval\u00f3s\u00edt\u00e1sokat, melyeket az adatb\u00e1zis gy\u00e1rt\u00f3k (vendorok) szolg\u00e1ltatj\u00e1k, a JDBC <code>DriverManager</code> oszt\u00e1ly\u00e1n kereszt\u00fcl regisztr\u00e1lhatjuk. A <code>DriverManager</code> tov\u00e1bb\u00e1 egy <code>Connection</code> factoryk\u00e9nt is funkcion\u00e1l, azaz t\u0151le tudunk adatb\u00e1zis kapcsolati objektumokat k\u00e9rni a <code>getConnection()</code> factory met\u00f3duson kereszt\u00fcl. A JDBC seg\u00edts\u00e9g\u00e9vel mind DDL (Data Definition Language) \u00e9s DML (Data Manipulation Language) parancsokat is kiadhatunk, tov\u00e1bb\u00e1 t\u00e1rolt elj\u00e1r\u00e1sokat is megh\u00edvhatunk. Az SQL utas\u00edt\u00e1sokhoz a JDBC a k\u00f6vetkez\u0151 oszt\u00e1lyokat biztos\u00edtja:</p> <ul> <li>Statement: Egyszer\u0171 param\u00e9ter n\u00e9lk\u00fcli utas\u00edt\u00e1sokhoz. P\u00e9ld\u00e1ul <code>SELECT * FROM CONTACT</code>.</li> <li>PreparedStatement: Param\u00e9teres lek\u00e9rdez\u00e9sekhez. P\u00e9ld\u00e1ul: <code>SELECT * FROM CONTACT WHERE id = ?</code>, ahol az <code>id</code> \u00e9rt\u00e9k\u00e9t a valamilyen tetsz\u0151leges \u00e9rt\u00e9kre \u00e1ll\u00edthatjuk majd be.</li> <li>CallableStatement: T\u00e1rolt elj\u00e1r\u00e1sok haszn\u00e1lat\u00e1hoz/megh\u00edv\u00e1s\u00e1hoz. P\u00e9ld\u00e1ul: <code>{call proc_name(?,?)}</code>.</li> </ul> <p>Ezek k\u00f6z\u00fcl a k\u00e9s\u0151bbiekben az els\u0151 kett\u0151t fogjuk haszn\u00e1lni. A JDBC tov\u00e1bb\u00e1 t\u00e1mogatja a tranzakci\u00f3kezel\u00e9st is, de ezzel a kurzuson nem foglalkozunk.</p> <p>Mag\u00e1hoz a JDBC haszn\u00e1lat\u00e1hoz nem kell semmilyen f\u00fcgg\u0151s\u00e9get sem megadnunk, hiszen a JDBC r\u00e9sz\u00e9t k\u00e9pezi a Java SE-nek, azaz benne van az JDK-ban. Viszont az adott adatb\u00e1zis driver-\u00e9t biztos\u00edtani kell fut\u00e1sk\u00f6zben, \u00edgy adjuk hozz\u00e1 az SQLite drivert a <code>contacts-core</code> f\u00fcgg\u0151s\u00e9geihez!</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;org.xerial&lt;/groupId&gt;\n&lt;artifactId&gt;sqlite-jdbc&lt;/artifactId&gt;\n&lt;version&gt;3.34.0&lt;/version&gt;\n&lt;scope&gt;runtime&lt;/scope&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Miut\u00e1n ezzel megvagyunk, akkor m\u00e9g \u00e9rdemes lehet egy command line eszk\u00f6zt telep\u00edteni, mellyel az SQLite-ot kezelhetj\u00fck. Ehhez az SQLite honlapj\u00e1r\u00f3l t\u00f6lts\u00fck le a <code>sqlite-tools-win32-x86-3340100.zip</code> \u00e1llom\u00e1nyt vagy a neki megfelel\u0151 Linux-os vagy  Mac-es zip-et! Benne megtal\u00e1lhatjuk az <code>sqlite3</code> bin\u00e1rist, melynek mapp\u00e1j\u00e1t a kicsomagol\u00e1s ut\u00e1n adjuk hozz\u00e1 a <code>PATH</code> k\u00f6rnyezeti v\u00e1ltoz\u00f3hoz a k\u00f6nnyebb kezelhet\u0151s\u00e9g v\u00e9gett. Ezut\u00e1n pr\u00f3b\u00e1ljuk ki a command-line tool-t:</p> <pre><code>C:\\&gt;sqlite3\n\nSQLite version 3.34.1 2021-01-20 14:10:07\nEnter \".help\" for usage hints.\nConnected to a transient in-memory database.\nUse \".open FILENAME\" to reopen on a persistent database.\nsqlite&gt;\n</code></pre> <p>Az alap parancs kiad\u00e1sakor egy in-memory adatb\u00e1zis j\u00f6n l\u00e9tre, azaz amikor kil\u00e9p\u00fcnk az sqlite3-b\u00f3l, akkor elv\u00e9sz az \u00f6sszes addigi adat. L\u00e1that\u00f3, hogy a <code>.open FILENAME</code> parancs kiad\u00e1s\u00e1val haszn\u00e1lhatunk egy f\u00e1jlt, mint adatb\u00e1zist, melyben az adatok perzisztensek lesznek, azaz megmaradnak a le\u00e1ll\u00edt\u00e1s ut\u00e1n is, hiszen azt a lemezen tart\u00f3san t\u00e1roljuk. A <code>.help</code> parancs kiad\u00e1s\u00e1val t\u00f6bbet is megtudhatunk a command-line eszk\u00f6z haszn\u00e1lat\u00e1r\u00f3l. Egy igen hasznos parancs p\u00e9ld\u00e1ul a <code>.read FILENAME</code>, mellyel k\u00fcls\u0151 f\u00e1jlban megadott SQL parancsokat futtathatunk (p\u00e9ld\u00e1ul egy <code>ddl.sql</code> f\u00e1jlban megadjuk a DDL utas\u00edt\u00e1sokat, majd azokat a <code>.read ddl.sql</code> paranccsal le tudjuk futtatni). </p> <p>A command-line tool haszn\u00e1lat\u00e1t ki is v\u00e1lthatjuk, ha az IntelliJ-n bel\u00fcl a jobb fels\u0151 sarokban a <code>Database</code> f\u00fclre navig\u00e1lunk.</p> <p> </p> <p>Ezut\u00e1n a Database f\u00fcl\u00f6n a bal fels\u0151 sarokban szerepl\u0151 + jelre kattintva egy \u00faj adatb\u00e1zist adathatunk hozz\u00e1. Ehhez v\u00e1lasszuk a leny\u00edl\u00f3 men\u00fcben a <code>Data Source -&gt; SQLite</code> men\u00fcpontot! A Data Source-nak adhatunk egy tetsz\u0151leges nevet, majd a General be\u00e1ll\u00edt\u00e1sokn\u00e1l a f\u00e1jl alatt megadhatjuk, hogy melyik l\u00e9tez\u0151 adatb\u00e1zisf\u00e1jlb\u00f3l dolgozunk. Amennyiben \u00faj \u00e1llom\u00e1nyt szeretn\u00e9nk haszn\u00e1lni, akkor File megad\u00e1sa sor v\u00e9g\u00e9n v\u00e1lasszuk a + jelet \u00e9s adjuk meg az adatb\u00e1zis f\u00e1jl hely\u00e9t. Az URL-t a JDBC-n bel\u00fcl is haszn\u00e1lni fogjuk majd, mivel ezzel az URL-el tudunk kapcsolatot l\u00e9tes\u00edteni az adatb\u00e1zis fel\u00e9. Amennyiben az IntelliJ-n bel\u00fcl nincs m\u00e9g let\u00f6ltve az SQLite Driver, akkor <code>Properties</code> lapon be\u00e1ll\u00edthatjuk (ut\u00f3lag jobb klikk az adatb\u00e1zis kapcsolatra \u00e9s <code>Properties</code> men\u00fcpont kiv\u00e1laszt\u00e1sa). Ezut\u00e1n megjelenik a megfelel\u0151 nev\u0171 adatb\u00e1zis a list\u00e1ban, amelyet lenyitva megtekinthetj\u00fck az adatb\u00e1zishoz tartoz\u00f3 s\u00e9m\u00e1kat. Itt a <code>main</code>-re jobb klikk ut\u00e1n <code>New -&gt; Table</code> men\u00fcpontot v\u00e1lasztva l\u00e9trehozhatjuk a k\u00edv\u00e1nt t\u00e1bl\u00e1kat (k\u00e9s\u0151bb egy t\u00e1bl\u00e1ra jobb klikk, majd <code>Modify Table</code> opci\u00f3val m\u00f3dos\u00edthatjuk annak \u00f6sszet\u00e9tel\u00e9t).</p> <p> </p> <p>Miut\u00e1n l\u00e9trehoztuk a megfelel\u0151 t\u00e1bl\u00e1kat jobb klikk a <code>main</code> s\u00e9m\u00e1ra, majd <code>SQL Scripts -&gt; Generate DDL to Query Console</code>. Itt l\u00e1thatjuk a legener\u00e1lt DDL utas\u00edt\u00e1sokat, mely \u00edgy n\u00e9z ki:</p> <pre><code>create table CONTACT\n(\nid INTEGER not null\nconstraint CONTACT_pk\nprimary key autoincrement,\nname text not null,\nemail text not null,\naddress text,\ndateOfBirth text not null,\ncompany text,\nposition text\n);\n\ncreate unique index CONTACT_email_uindex\non CONTACT (email);\n\ncreate table PHONE\n(\nid integer not null\nconstraint PHONE_pk\nprimary key autoincrement,\nnumber text not null,\nphoneType integer not null,\ncontact_id int\nreferences CONTACT\n);\n</code></pre> <p>Mivel az adatb\u00e1zis el\u00e9r\u00e9s\u00e9t t\u00f6bbsz\u00f6r is haszn\u00e1lni k\u00edv\u00e1njuk majd, \u00edgy c\u00e9lszer\u0171 ezt az \u00e9rt\u00e9ket kiszervezn\u00fcnk egy \u00e1llom\u00e1nyba. Hozzunk l\u00e9tre a <code>contacts-core/resources</code> al\u00e1 egy <code>application.properties</code> \u00e1llom\u00e1nyt majd adjuk meg benne a k\u00f6vetkez\u0151t:</p> <pre><code>db.url=jdbc:sqlite:C:/projects/contacts/contacts-core/src/main/resources/contacts.db\n</code></pre> <p>Az URL-t mindenki m\u00f3dos\u00edtsa a saj\u00e1t k\u00f6rnyezet\u00e9nek megfelel\u0151en! Ezut\u00e1n k\u00e9sz\u00edts\u00fcnk egy seg\u00e9doszt\u00e1lyt, mely beolvassa ezt a <code>properties</code> \u00e1llom\u00e1nyt, melyben a kulcs-\u00e9rt\u00e9k p\u00e1rokat adjuk meg (itt b\u00e1rmilyen tetsz\u0151leges p\u00e1rokat felvehet\u00fcnk, amit majd k\u00e9s\u0151bb haszn\u00e1lni szeretn\u00e9nk). Erre a c\u00e9lra k\u00e9sz\u00edts\u00fcnk a <code>hu.alkfejl.config</code> csomag al\u00e1 egy <code>ContactConfiguration</code> nev\u0171 oszt\u00e1lyt, melynek a tartalma a k\u00f6vetkez\u0151:</p> <pre><code>public class ContactConfiguration {\n\nprivate static Properties props = new Properties();\n\nstatic{\ntry {\nprops.load(ContactConfiguration.class.getResourceAsStream(\"/application.properties\"));\n} catch (IOException e) {\n// TODO: logging\ne.printStackTrace();\n}\n\n}\n\npublic static Properties getProps() {\nreturn props;\n}\n\npublic static String getValue(String key) {\nreturn props.getProperty(key);\n}\n}\n</code></pre> <p>Mivel egy statikus met\u00f3dusokat k\u00edn\u00e1l\u00f3 oszt\u00e1lyr\u00f3l lesz sz\u00f3, \u00edgy a statikus init blokkban adjuk meg a properties f\u00e1jl bet\u00f6lt\u00e9s\u00e9t. Ezut\u00e1n a property-ket elt\u00e1roljuk egy lok\u00e1lis v\u00e1ltoz\u00f3ban, melyeket a <code>getValue</code> seg\u00edts\u00e9g\u00e9vel \u00e9rhet\u00fcnk el.</p> <p>Ezut\u00e1n v\u00e9gre elk\u00e9sz\u00edthetj\u00fck a DAO megval\u00f3s\u00edt\u00e1s\u00e1t. El\u0151sz\u00f6r n\u00e9zz\u00fck a field-eket \u00e9s a <code>findAll</code> met\u00f3dust!</p> <pre><code>public class ContactDAOImpl implements ContactDAO{\n\n// SQL Statements\nprivate static final String SELECT_ALL_CONTACTS = \"SELECT * FROM CONTACT\";\nprivate static final String INSERT_CONTACT = \"INSERT INTO CONTACT (name, email, address, dateOfBirth, company, position) VALUES (?,?,?,?,?,?)\";\nprivate static final String UPDATE_CONTACT = \"UPDATE CONTACT SET name=?, email = ?, address = ?, dateOfBirth=?, company=?, position = ? WHERE id=?\";\nprivate static final String DELETE_CONTACT = \"DELETE FROM CONTACT WHERE id = ?\";\nprivate String connectionURL;\n\npublic ContactDAOImpl() {\nconnectionURL = ContactConfiguration.getValue(\"db.url\"); // obtaining DB URL\n}\n\n@Override\npublic List&lt;Contact&gt; findAll() {\n\nList&lt;Contact&gt; result = new ArrayList&lt;&gt;();\n\ntry(Connection c = DriverManager.getConnection(connectionURL);\nStatement stmt = c.createStatement();\nResultSet rs = stmt.executeQuery(SELECT_ALL_CONTACTS)\n){\n\nwhile(rs.next()){\nContact contact = new Contact();\ncontact.setId(rs.getInt(\"id\"));\ncontact.setName(rs.getString(\"name\"));\ncontact.setEmail(rs.getString(\"email\"));\ncontact.setAddress(rs.getString(\"address\"));\nDate date = Date.valueOf(rs.getString(\"dateOfBirth\"));\ncontact.setDateOfBirth(date == null ? LocalDate.now() : date.toLocalDate());\ncontact.setCompany(rs.getString(\"company\"));\ncontact.setPosition(rs.getString(\"position\"));\n\nresult.add(contact);\n}\n\n} catch (SQLException throwables) {\nthrowables.printStackTrace();\n}\n\nreturn result;\n\n}\n}\n</code></pre> <p>Els\u0151k\u00e9nt l\u00e9trehozzuk a kapcsolatot az adatb\u00e1zis fel\u00e9, melyet a JDBC <code>DriverManager</code> oszt\u00e1ly <code>getConnection</code> factory met\u00f3dus\u00e1val tudunk megtenni. Mivel az \u00f6sszes kontakt lek\u00e9r\u00e9shez nincs sz\u00fcks\u00e9g param\u00e9terre, \u00edgy egy sima <code>Statement</code>-et haszn\u00e1lunk. Az \u00f6sszes lek\u00e9rdez\u0151 SQL utas\u00edt\u00e1shoz haszn\u00e1ljuk az <code>executeQuery</code> met\u00f3dust, mely az eredm\u00e9nyt egy <code>ResultSet</code> objektumban adja vissza. Ezen oszt\u00e1lyok mind implement\u00e1lj\u00e1k az <code>AutoClosable</code> interf\u00e9szt, \u00edgy haszn\u00e1lhat\u00f3ak a try-with-resources konstrukci\u00f3val.</p> <p>Ezut\u00e1n a <code>ResultSet</code>-en v\u00e9gigl\u00e9peget\u00fcnk a <code>next()</code> h\u00edv\u00e1ssal, mely mindaddig igazat ad vissza ameddig van m\u00e9g sor az eredm\u00e9ny objketumban. A ciklusmagban minden alkalommal l\u00e9trehozunk egy \u00faj <code>Contact</code> objektumot, majd be\u00e1ll\u00edtjuk a megfelel\u0151 field \u00e9rt\u00e9keit, melyeket az <code>getXXX</code> met\u00f3dussal olvasunk ki a <code>ResultSet</code> objektumb\u00f3l, ahol <code>XXX</code> valamilyen alapt\u00edpus. Mivel az SQLite nem tud d\u00e1tumot t\u00e1rolni, \u00edgy azt <code>String</code>-k\u00e9nt adtuk meg (<code>TEXT</code> t\u00edpus\u00fa oszlop az adatb\u00e1zis s\u00e9m\u00e1ban), \u00edgy ilyen m\u00f3don is olvassuk ki. Ezt egy <code>Date</code> objektumm\u00e1 alak\u00edtjuk majd a <code>toLocalDate()</code> h\u00edv\u00e1ssal alak\u00edtjuk <code>LocalDate</code> t\u00edpus\u00fara.</p> <p>A k\u00f6vetkez\u0151 k\u00f3dr\u00e9szlet a hozz\u00e1ad\u00e1s/ment\u00e9s opci\u00f3t szolg\u00e1ltatja sz\u00e1munkra. <pre><code>@Override\npublic Contact save(Contact contact) {\ntry(Connection c = DriverManager.getConnection(connectionURL);\nPreparedStatement stmt = contact.getId() &lt;= 0 ? c.prepareStatement(INSERT_CONTACT, Statement.RETURN_GENERATED_KEYS) : c.prepareStatement(UPDATE_CONTACT)\n){\nif(contact.getId() &gt; 0){ // UPDATE\nstmt.setInt(7, contact.getId());\n}\n\nstmt.setString(1, contact.getName());\nstmt.setString(2, contact.getEmail());\nstmt.setString(3, contact.getAddress());\nstmt.setString(4, contact.getDateOfBirth().toString());\nstmt.setString(5, contact.getCompany());\nstmt.setString(6, contact.getPosition());\n\nint affectedRows = stmt.executeUpdate();\nif(affectedRows == 0){\nreturn null;\n}\n\nif(contact.getId() &lt;= 0){ // INSERT\nResultSet genKeys = stmt.getGeneratedKeys();\nif(genKeys.next()){\ncontact.setId(genKeys.getInt(1));\n}\n}\n\n} catch (SQLException throwables) {\nthrowables.printStackTrace();\nreturn null;\n}\n\nreturn contact;\n}\n</code></pre></p> <p>Az els\u0151 \u00e9rdekes dolog, hogy itt egy param\u00e9teres lek\u00e9rdez\u00e9s\u00fcnk lesz, \u00edgy egy <code>PreparedStatement</code>-et haszn\u00e1lunk. Ugyanakkor, dinamikusan d\u00f6ntj\u00fck el, hogy egy megl\u00e9v\u0151 rekord friss\u00edt\u00e9s\u00e9r\u0151l vagy egy \u00faj sor besz\u00far\u00e1s\u00e1r\u00f3l van sz\u00f3. Ezt \u00fagy d\u00f6ntj\u00fck el, hogy megvizsg\u00e1ljuk a megkapott kontakt <code>id</code>-j\u00e1t, mely egy 0-n\u00e1l nagyobb eg\u00e9sz \u00e9rt\u00e9k abban az esetben, ha az m\u00e1r l\u00e9tezik \u00e9s 0, amennyiben az m\u00e9g nem szerepel az adatb\u00e1zisban.</p> <p>A k\u00f6vetkez\u0151 \u00e9rdekes momentum, hogy \u00faj kontakt l\u00e9trehoz\u00e1sakor a <code>c.prepareStatement(INSERT_CONTACT, Statement.RETURN_GENERATED_KEYS)</code> lek\u00e9rdez\u00e9st adjuk meg, melyben vegy\u00fck \u00e9szre a <code>RETURN_GENERATED_KEYS</code> megad\u00e1st. Ennek seg\u00edts\u00e9g\u00e9vel az <code>executeUpdate</code> h\u00edv\u00e1s ut\u00e1n a <code>ResultSet</code>-ben el\u00e9rhet\u0151v\u00e9 v\u00e1lik az \u00f6sszes gener\u00e1lt oszlop \u00e9rt\u00e9ke, azaz p\u00e9ld\u00e1ul az <code>id</code>, mely egy gener\u00e1lt \u00e9rt\u00e9k lek\u00e9rhet\u0151v\u00e9 v\u00e1lik, melyet be is \u00e1ll\u00edtunk a mentett kontakt sz\u00e1m\u00e1r, majd ezt az objektumot adjuk vissza. Az <code>executeUpdate</code> met\u00f3dus azt adja vissza, hogy h\u00e1ny sor m\u00f3dosult az SQL utas\u00edt\u00e1s hat\u00e1s\u00e1ra, mely eset\u00fcnkben 1 kell hogy legyen mind a besz\u00far\u00e1s \u00e9s mind a friss\u00edt\u00e9s eset\u00e9ben is.</p> <p>V\u00e9g\u00fcl l\u00e1ssuk a t\u00f6rl\u00e9st, melyben sok \u00fajdons\u00e1got nem l\u00e1tunk, kiv\u00e9ve azt, hogy itt nem haszn\u00e1ljuk fel az <code>executeUpdate</code> eredm\u00e9ny\u00e9t.</p> <pre><code>@Override\npublic void delete(Contact contact) {\n\ntry(Connection c = DriverManager.getConnection(connectionURL);\nPreparedStatement stmt = c.prepareStatement(DELETE_CONTACT);\n) {\nstmt.setInt(1, contact.getId());\nstmt.executeUpdate();\n\n} catch (SQLException throwables) {\nthrowables.printStackTrace();\n}\n\n}\n</code></pre> <p>Ha megvagyunk a kontaktok kezel\u00e9s\u00e9vel, akkor \u00e9rdemes elk\u00e9sz\u00edteni a <code>PhoneDAO</code>-t is, mely a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>public interface PhoneDAO {\n\nList&lt;Phone&gt; findAllByContactId(Contact contact);\nList&lt;Phone&gt; findAllByContactId(int contactId);\nPhone save(Phone p, int contactId);\nvoid delete(Phone p);\n}\n</code></pre> <p>L\u00e1that\u00f3, hogy szeretn\u00e9nk majd kontakt alapj\u00e1n visszakapni a hozz\u00e1tartoz\u00f3 telefonsz\u00e1mokat, egy kontakthoz l\u00e9trehozni egy telefonsz\u00e1mot, illetve t\u00f6r\u00f6lni egy megadott telefonsz\u00e1mot.</p> <p>Ezut\u00e1n k\u00e9sz\u00edts\u00fck el a konkr\u00e9t implement\u00e1ci\u00f3t, melyben a <code>findAllByContactId</code> met\u00f3dus a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>public class PhoneDAOImpl implements PhoneDAO{\n\nprivate static final String SELECT_PHONES_BY_CONTACT_ID = \"SELECT * FROM PHONE WHERE contact_id=?\";\nprivate static final String INSERT_PHONE = \"INSERT INTO PHONE (number, phoneType, contact_id) VALUES (?,?,?)\";\nprivate static final String UPDATE_PHONE = \"UPDATE PHONE SET number = ?, phoneType = ? WHERE id = ?\";\nprivate static final String DELETE_PHONE = \"DELETE FROM PHONE WHERE id = ?\";\nprivate String connectionUrl;\n\npublic PhoneDAOImpl() {\nthis.connectionUrl = ContactConfiguration.getValue(\"db.url\");\n}\n\n@Override\npublic List&lt;Phone&gt; findAllByContactId(Contact contact) { // convenience method\nreturn findAllByContactId(contact.getId());\n}\n\n@Override\npublic List&lt;Phone&gt; findAllByContactId(int contactId) {\nList&lt;Phone&gt; result = new ArrayList&lt;&gt;();\n\ntry(Connection c = DriverManager.getConnection(connectionUrl);\nPreparedStatement statement = c.prepareStatement(SELECT_PHONES_BY_CONTACT_ID)){\n\nstatement.setInt(1, contactId);\nResultSet rs = statement.executeQuery();\nwhile(rs.next()){\nPhone phone = new Phone();\nphone.setId(rs.getInt(\"id\"));\nphone.setNumber(rs.getString(\"number\"));\nint ordinalValue = rs.getInt(\"phoneType\");\n\nOptional&lt;Phone.PhoneType&gt; pt = Arrays.stream(Phone.PhoneType.values()).filter(phoneType -&gt; phoneType.ordinal() == ordinalValue).findAny();\nphone.setPhoneType(pt.orElse(Phone.PhoneType.UNKNOWN));\n\nresult.add(phone);\n\n}\n\n} catch (SQLException throwables) {\nthrowables.printStackTrace();\n}\n\nreturn result;\n}\n</code></pre> <p>Alapvet\u0151en nincs a megval\u00f3s\u00edt\u00e1sban semmilyen extra, de n\u00e9zz\u00fck meg, hogy az enum \u00e9rt\u00e9k\u00e9t hogyan t\u00e1roljuk, hiszen ilyet m\u00e9g eddig nem csin\u00e1ltunk. A <code>PhoneType</code> attrib\u00fatumot az adatb\u00e1zisban egy eg\u00e9sz \u00e9rt\u00e9kk\u00e9nt t\u00e1roljuk (megjegyzem, hogy t\u00e1rolhatn\u00e1nk <code>String</code>-k\u00e9nt is), \u00edgy amikor azt kinyerj\u00fck akkor a <code>PhoneType</code> enum \u00f6sszes lehets\u00e9ges \u00e9rt\u00e9k\u00e9n (<code>Phone.PhoneType.values()</code>) v\u00e9gigiter\u00e1lva (Stream API seg\u00edts\u00e9g\u00e9vel), megkeress\u00fck azt amelyiknek megegyezik az eg\u00e9sz \u00e9rt\u00e9ke (azaz az ordinal \u00e9rt\u00e9ke) az adatb\u00e1zisban megadott sz\u00e1mmal. Amennyiben nem tal\u00e1lt ilyet a filterez\u00e9s\u00fcnk, \u00fagy az <code>UNKNOWN</code> enum \u00e9rt\u00e9ket \u00e1ll\u00edtjuk be a l\u00e9trehozott <code>Phone</code> objektum <code>PhoneType</code> attrib\u00fatumak\u00e9nt.</p> <p>Az al\u00e1bbi k\u00f3dr\u00e9szlet, melyben a ment\u00e9st (\u00faj rekord vagy rekord update) v\u00e9gezz\u00fck szint\u00e9n nincs t\u00fal nagy \u00fajdons\u00e1g, ugyanakkor figyelj\u00fcnk arra, hogy a <code>PhoneType</code>-ot a megfelel\u0151 eg\u00e9sz \u00e9rt\u00e9kk\u00e9nt az <code>ordinal</code> \u00e9rt\u00e9k\u00e9vel ments\u00fck!</p> <pre><code>@Override\npublic Phone save(Phone phone, int contactId) {\ntry(Connection c = DriverManager.getConnection(connectionUrl);\nPreparedStatement stmt = phone.getId() &lt;= 0 ? c.prepareStatement(INSERT_PHONE, Statement.RETURN_GENERATED_KEYS) : c.prepareStatement(UPDATE_PHONE)\n){\nif(phone.getId() &gt; 0){ // UPDATE\nstmt.setInt(3, phone.getId());\n}else{ //INSERT\nstmt.setInt(3, contactId);\n}\n\nstmt.setString(1, phone.getNumber());\nstmt.setInt(2, phone.getPhoneType().ordinal());\n\nint affectedRows = stmt.executeUpdate();\nif(affectedRows == 0){\nreturn null;\n}\n\nif(phone.getId() &lt;= 0){ // INSERT\nResultSet genKeys = stmt.getGeneratedKeys();\nif(genKeys.next()){\nphone.setId(genKeys.getInt(1));\n}\n}\n\n} catch (SQLException throwables) {\nthrowables.printStackTrace();\nreturn null;\n}\n\nreturn phone;\n}\n</code></pre> <p>V\u00e9gezet\u00fcl a t\u00f6rl\u00e9st l\u00e1thatjuk, mely nagyon hasonl\u00f3 a kontaktn\u00e1l l\u00e1tottakkal:</p> <pre><code>@Override\npublic void delete(Phone phone) {\ntry(Connection c = DriverManager.getConnection(connectionUrl);\nPreparedStatement stmt = c.prepareStatement(DELETE_PHONE);\n) {\nstmt.setInt(1, phone.getId());\nstmt.executeUpdate();\n\n} catch (SQLException throwables) {\nthrowables.printStackTrace();\n}\n}\n</code></pre>"},{"location":"legacy/05_gyakorlat/#view-reteg","title":"View r\u00e9teg","text":"<p>A megjelen\u00edt\u00e9si r\u00e9teg jelen esetben egy m\u00e1sik submodule-ban fog helyet kapni, \u00edgy k\u00e9sz\u00edts\u00fck is el az el\u0151z\u0151eknek megfelel\u0151en az \u00faj submodule <code>contacts-desktop</code> n\u00e9ven! A l\u00e9trehoz\u00e1skor a m\u00e1r megismert <code>javafx-maven-archetype</code>-ot adjuk meg \u00e9s \u00e1ll\u00edtsuk a parent-et szint\u00e9n a <code>contacts</code>-ra. A property-ket a parent pom-b\u00f3l kapjuk, \u00edgy a submodule <code>pom.xml</code>-ben tal\u00e1lhat\u00f3 property-ket kit\u00f6r\u00f6lhetj\u00fck.</p> <p>Ezut\u00e1n a pr\u00f3b\u00e1ljuk ki, hogy a <code>contacts-desktop</code> modulb\u00f3l el\u00e9rj\u00fck-e a <code>Contact</code> oszt\u00e1lyt! Els\u0151re nyilv\u00e1n nem, viszont Alt + Enter eset\u00e9n fel is k\u00edn\u00e1lja a rendszer, hogy <code>Add dependency on module 'contacts-core'</code>. Ekkor a <code>contacts-desktop/pom.xml</code>-be beleker\u00fcl a k\u00f6vetkez\u0151:</p> <pre><code>...\n&lt;dependency&gt;\n&lt;groupId&gt;hu.alkfejl&lt;/groupId&gt;\n&lt;artifactId&gt;contacts-core&lt;/artifactId&gt;\n&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n&lt;scope&gt;compile&lt;/scope&gt;\n&lt;/dependency&gt;\n...\n</code></pre> <p>, amely megadja a kapcsolatot a k\u00e9t modul k\u00f6z\u00f6tt. Ezut\u00e1n, ha buildelj\u00fck a parent project-et (<code>mvn install</code>), majd elind\u00edtjuk a desktop alkalmaz\u00e1sunkat a <code>javafx:run</code> plugin goal-al, akkor mindennek megfelel\u0151en m\u0171k\u00f6dnie kell. Fontos, hogy az <code>mvn install</code>-t haszn\u00e1ljuk, hiszen \u00edgy a legy\u00e1rtott <code>contacts-core</code> JAR \u00e1llom\u00e1ny beleker\u00fcl a lok\u00e1lis Maven repository-ba, ahonnan m\u00e1r tudja haszn\u00e1lni a <code>contacts-desktop</code> alkalmaz\u00e1s.</p> <p>Ezut\u00e1n a <code>contacts-desktop</code> alkalmaz\u00e1sban a <code>resources</code> alatt hozzunk l\u00e9tre egy <code>fxml</code> k\u00f6nyvt\u00e1rat, melyben az FXML \u00e1llom\u00e1nyainkat fogjuk t\u00e1rolni! Hozzunk is l\u00e9tre egy <code>main_window.fxml</code> \u00e1llom\u00e1nyt ide! Az FXML \u00e1llom\u00e1nyokhoz controller-eket is fogunk haszn\u00e1lni, \u00edgy ezeket a <code>contacts-desktop</code>-on bel\u00fcl a <code>hu.alkfejl.controller</code> package-ben fogjuk t\u00e1rolni. Hozzuk ide l\u00e9tre a <code>MainWindowController</code> oszt\u00e1lyt, majd adjuk meg ezt a controller-t az im\u00e9nt l\u00e9trehozott FXML \u00e1llom\u00e1nynak.</p> <p>A SceneBuilder seg\u00edts\u00e9g\u00e9vel szerkessz\u00fck az \u00e1llom\u00e1nyt, melynek eredm\u00e9nyek\u00e9ppen a k\u00f6vetkez\u0151 layout-ot kapjuk:</p> <p></p> <p>Hasonl\u00f3 eredm\u00e9ny el\u00e9r\u00e9s\u00e9hez figyelj\u00fck meg a bal oldali tree view-t! Amennyiben ez alapj\u00e1n nem siker\u00fclne \u00f6sszerakni az alkalmaz\u00e1s f\u0151 ablak\u00e1t, akkor seg\u00edthet az FXML k\u00f3d tanulm\u00e1nyoz\u00e1sa (melyben m\u00e1r l\u00e1thatjuk a megadott <code>fx:id</code>-kat is):</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n\n&lt;?import javafx.geometry.*?&gt;\n&lt;?import javafx.scene.control.*?&gt;\n&lt;?import javafx.scene.layout.*?&gt;\n&lt;?import javafx.scene.text.*?&gt;\n\n&lt;BorderPane prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/11\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"hu.alkfejl.controller.MainWindowController\"&gt;\n&lt;top&gt;\n&lt;MenuBar BorderPane.alignment=\"CENTER\"&gt;\n&lt;menus&gt;\n&lt;Menu mnemonicParsing=\"false\" text=\"File\"&gt;\n&lt;items&gt;\n&lt;MenuItem mnemonicParsing=\"false\" text=\"Close\" /&gt;\n&lt;/items&gt;\n&lt;/Menu&gt;\n&lt;Menu mnemonicParsing=\"false\" text=\"Edit\"&gt;\n&lt;items&gt;\n&lt;MenuItem mnemonicParsing=\"false\" text=\"Add Contact\" /&gt;\n&lt;/items&gt;\n&lt;/Menu&gt;\n&lt;Menu mnemonicParsing=\"false\" text=\"Help\"&gt;\n&lt;items&gt;\n&lt;MenuItem mnemonicParsing=\"false\" text=\"About\" /&gt;\n&lt;/items&gt;\n&lt;/Menu&gt;\n&lt;/menus&gt;\n&lt;/MenuBar&gt;\n&lt;/top&gt;\n&lt;center&gt;\n&lt;VBox prefHeight=\"200.0\" prefWidth=\"100.0\" BorderPane.alignment=\"CENTER\"&gt;\n&lt;children&gt;\n&lt;Label text=\"List of contacts\"&gt;\n&lt;font&gt;\n&lt;Font name=\"System Bold\" size=\"24.0\" /&gt;\n&lt;/font&gt;\n&lt;VBox.margin&gt;\n&lt;Insets bottom=\"10.0\" right=\"10.0\" top=\"10.0\" /&gt;\n&lt;/VBox.margin&gt;\n&lt;/Label&gt;\n&lt;TableView fx:id=\"contactTable\" prefHeight=\"200.0\" prefWidth=\"200.0\"&gt;\n&lt;columns&gt;\n&lt;TableColumn fx:id=\"nameColumn\" prefWidth=\"179.0\" text=\"Name\" /&gt;\n&lt;TableColumn fx:id=\"emailColumn\" prefWidth=\"195.0\" text=\"E-mail\" /&gt;\n&lt;TableColumn fx:id=\"actionsColumn\" minWidth=\"0.0\" prefWidth=\"124.0\" text=\"Actions\" /&gt;\n&lt;/columns&gt;\n&lt;/TableView&gt;\n&lt;/children&gt;\n&lt;/VBox&gt;\n&lt;/center&gt;\n&lt;left&gt;\n&lt;VBox prefHeight=\"200.0\" prefWidth=\"100.0\" BorderPane.alignment=\"CENTER\" /&gt;\n&lt;/left&gt;\n&lt;/BorderPane&gt;\n</code></pre> <p>Ezut\u00e1n k\u00e9sz\u00edtsek el a <code>MainWindowController</code> \u00e1llom\u00e1nyt \u00e9s t\u00f6lts\u00fck be az adatb\u00e1zisb\u00f3l a kontaktok list\u00e1j\u00e1t! Amennyiben nem a <code>javafx-archetype-fxml</code>-el hoztunk l\u00e9tre a submodule-t, akkor ne felejts\u00fck el hozz\u00e1adni a k\u00f6vetkez\u0151 f\u00fcgg\u0151s\u00e9get!</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;org.openjfx&lt;/groupId&gt;\n&lt;artifactId&gt;javafx-fxml&lt;/artifactId&gt;\n&lt;version&gt;11&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>A fenti f\u00fcgg\u0151s\u00e9g sz\u00fcks\u00e9ges lesz a control elemek injekt\u00e1l\u00e1s\u00e1hoz (<code>@FXML</code>), illetve az <code>Initializable</code> interface haszn\u00e1lat\u00e1hoz.</p> <p>A t\u00e1bl\u00e1zat \u00e9rt\u00e9kekkel val\u00f3 felt\u00f6lt\u00e9s\u00e9hez a k\u00f6vetkez\u0151 field injekt\u00e1l\u00e1sokra lesz sz\u00fcks\u00e9g\u00fcnk, illetve mag\u00e1ra a <code>ContactDAO</code>-ra:</p> <pre><code>public class MainWindowController implements Initializable {\n\nContactDAO dao = new ContactDAOImpl();\n\n@FXML\nprivate TableView&lt;Contact&gt; contactTable;\n@FXML\nprivate TableColumn&lt;Contact, String&gt; nameColumn;\n@FXML\nprivate TableColumn&lt;Contact, String&gt; emailColumn;\n...\n}\n</code></pre> <p>A <code>TableView&lt;Contact&gt;</code> t\u00edpusn\u00e1l a generikus param\u00e9terben azt adhatjuk meg, hogy milyen t\u00edpus\u00fa elemeket tartalmaz a t\u00e1bl\u00e1zat. A <code>TableColumn&lt;Contact, String&gt;</code> megad\u00e1sokn\u00e1l a m\u00e1sodik t\u00edpusparam\u00e9ter az aktu\u00e1lis oszlopban megjelen\u00edtett elem t\u00edpusa, m\u00edg az els\u0151 mindig megegyezik a <code>TableView</code>-nak megadott generikus param\u00e9terrel.</p> <p>Ezut\u00e1n az <code>initialize</code> met\u00f3dus \u00e9s a <code>refreshTable</code> a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>private void refreshTable() {\ncontactTable.getItems().setAll(dao.findAll());\n}\n\n@Override\npublic void initialize(URL location, ResourceBundle resources) {\nrefreshTable();\n\nnameColumn.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\"name\"));\nemailColumn.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\"email\"));\n}\n</code></pre> <p>Mivel t\u00f6bb helyen is sz\u00fcks\u00e9g lehet majd a t\u00e1bl\u00e1zat friss\u00edt\u00e9s\u00e9re, \u00edgy ezen m\u0171veletet a <code>refreshTable</code> met\u00f3dusban adjuk meg. A t\u00e1bl\u00e1zathoz hozz\u00e1rendelt\u00fck az adatokat, amik a sorokat adj\u00e1k, viszont a <code>Contact</code> objektumok fieldjeit le kell k\u00e9pezni a t\u00e1bl\u00e1zat oszlopaihoz. Ezt a c\u00e9lt szolg\u00e1lja a <code>setCellValueFactory</code> h\u00edv\u00e1s a fenti k\u00f3dban, mely a cell\u00e1k \u00e9rt\u00e9k\u00e9t adja meg. Alapvet\u0151en a k\u00f6vetkez\u0151k\u00e9ppen lehet haszn\u00e1lni:</p> <pre><code>nameColumn.setCellValueFactory(new Callback&lt;CellDataFeatures&lt;Contact, String&gt;, ObservableValue&lt;String&gt;&gt;() {\npublic ObservableValue&lt;String&gt; call(CellDataFeatures&lt;Contact, String&gt; c) {\n// p.getValue() returns the Contact instance for a particular TableView row\nreturn c.getValue().nameProperty();\n}\n});\n</code></pre> <p>Itt eleven\u00edts\u00fck fel, hogy a <code>Callback</code> els\u0151 generikus param\u00e9tere a callback met\u00f3dus param\u00e9ter\u00e9nek t\u00edpus\u00e1t adja meg (<code>call(CellDataFeatures&lt;Contact, String&gt; c)</code>), m\u00edg a m\u00e1sodik a visszat\u00e9r\u00e9si t\u00edpus\u00e1t (<code>ObservableValue&lt;String&gt;</code>). A <code>CellDataFeatures</code> egy wrapper oszt\u00e1ly a cell\u00e1khoz, hogy minden kapcsol\u00f3d\u00f3 adatot el\u00e9rhess\u00fcnk az adott <code>TableColumn</code> megad\u00e1sn\u00e1l. P\u00e9ld\u00e1ul a cell\u00e1hoz tartoz\u00f3 <code>Contact</code> objektumot a <code>c.getValue()</code> h\u00edv\u00e1ssal kaphatjuk meg, de hozz\u00e1f\u00e9rhet\u00fcnk mag\u00e1hoz a <code>TableColumn</code> \u00e9s a <code>TableView</code> objektumokhoz is. A fenti p\u00e9ldak\u00f3dban a <code>nameProperty</code>-t adjuk vissza, mely l\u00e9v\u00e9n egy <code>StringProperty</code> \u00edgy <code>ObservableValue&lt;String&gt;</code> is egyben. Mivel sokszor van sz\u00fcks\u00e9g arra, hogy egy bean property-j\u00e9t haszn\u00e1ljuk az adott oszlopban, \u00edgy erre a JavaFX biztos\u00edt egy k\u00fcl\u00f6n megval\u00f3s\u00edt\u00e1st, mely a <code>PropertyValueFactory</code>. A fenti k\u00f3dr\u00e9szlet megfelel\u0151je, \u00edgy a <code>nameColumn.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\"name\"));</code> sor.</p> <p>Miel\u0151tt belemenn\u00e9nk az <code>actionColumn</code> rejtelmeibe, t\u00f6lts\u00fck be az FXML-t az alkalmaz\u00e1s f\u0151 bel\u00e9p\u00e9si pontj\u00e1n. Mivel t\u00f6bb helyen is haszn\u00e1lhatunk ilyen jelleg\u0171 bet\u00f6lt\u00e9st, \u00edgy ezt egy statikus met\u00f3dusba szervezz\u00fck ki, mely az FXML \u00e1llom\u00e1ny URL-j\u00e9t v\u00e1rja.</p> <pre><code>public class App extends Application {\n\nprivate static Stage stage;\n\n@Override\npublic void start(Stage stage) {\nApp.stage = stage;\nApp.loadFXML(\"/fxml/main_window.fxml\");\nstage.show();\n}\n\npublic static FXMLLoader loadFXML(String fxml){\n\nFXMLLoader loader = new FXMLLoader(App.class.getResource(fxml));\nScene scene = null;\ntry {\nParent root = loader.load();\nscene = new Scene(root);\n} catch (IOException e) {\ne.printStackTrace();\n}\n\nstage.setScene(scene);\nreturn loader;\n}\n\npublic static void main(String[] args) {\nlaunch();\n}\n}\n</code></pre> <p>A <code>start</code> met\u00f3dusban elmentj\u00fck a kapott <code>stage</code>-et, majd megh\u00edvjuk a <code>loadFXML</code> met\u00f3dust. Fontos, hogy visszaadjuk az FXMLLoader objektumot, amit jelen esetben nem haszn\u00e1lunk ugyan fel, de k\u00e9s\u0151bb m\u00e9g j\u00f3l j\u00f6het olyan esetben, amikor sz\u00fcks\u00e9g\u00fcnk lehet a controller-re.</p> <p>Ezen a ponton pr\u00f3b\u00e1ljuk ki, hogy megjelenik-e a t\u00e1bl\u00e1zatban a megfelel\u0151 adat! Ne felejts\u00fcnk el az adatb\u00e1zishoz hozz\u00e1adni adatokat, melyet az IDE-n bel\u00fcl k\u00f6nnyen megtehet\u00fcnk, ha a <code>CONTACT</code> t\u00e1bl\u00e1ra kattintunk a Database alatt! A megjelen\u0151 adatok felett a + jelre kattintva egy \u00faj sort adhatunk a t\u00e1bl\u00e1hoz. Miut\u00e1n megadtuk a sz\u00fcks\u00e9ges adatokat, ne felejts\u00fck el commit-\u00e1lni a v\u00e1ltoztat\u00e1sokat a  gomb megnyom\u00e1s\u00e1val. Az adatb\u00e1zis mellett ellen\u0151rizz\u00fck azt is, hogy az FXML-ben az <code>fx:id</code> megad\u00e1sok szerepelnek-e!</p> <p>Ezut\u00e1n adjuk meg a m\u0171veleteket megjelen\u00edt\u0151 oszlopot is (<code>actionsColumn</code>)! Els\u0151k\u00e9nt injekt\u00e1ljuk ezt a controllerbe, illetve adjuk meg a megfelel\u0151 helyen az FXML-ben is az <code>fx:id</code>-t!</p> <pre><code>@FXML\nprivate TableColumn&lt;Contact, Void&gt; actionsColumn;\n</code></pre> <p>Az els\u0151 dolog, hogy a <code>TableColumn</code> m\u00e1sodik generikus param\u00e9ter\u00e9ben a <code>Void</code> t\u00edpust adjuk meg, hiszen ez az oszlop nem egy konkr\u00e9t property-hez kapcsol\u00f3dik, \u00edgy az \u00e9rt\u00e9k t\u00edpus\u00e1t sem tudjuk megadni, ez\u00e9rt ez <code>Void</code> lesz. Ennek k\u00f6vetkezm\u00e9nyek\u00e9ppen nem is adunk meg <code>cellValueFactory</code>-t, hiszen a cella \u00e9rt\u00e9ke <code>Void</code>. Ugyanakkor ez sz\u00e1munkra nem is probl\u00e9ma, mert csak gombokat szeretn\u00e9nk elhelyezni ebben az oszlopban. Azt, hogy az adott cell\u00e1ban mi jelenjen meg (a renderel\u00e9s szempontj\u00e1b\u00f3l megk\u00f6zel\u00edtve), azt a <code>cellFactory</code> hat\u00e1rozza meg. Ennek f\u00fcggv\u00e9ny\u00e9ben az <code>initialize(...)</code> met\u00f3dust a k\u00f6vetkez\u0151k\u00e9ppen eg\u00e9sz\u00edts\u00fck ki:</p> <pre><code>actionsColumn.setCellFactory(param -&gt; new TableCell&lt;&gt;(){\nprivate final Button deleteBtn = new Button(\"Delete\");\nprivate final Button editBtn = new Button(\"Edit\");\n\n{\ndeleteBtn.setOnAction(event -&gt; {\nContact c = getTableRow().getItem();\ndeleteContact(c);\nrefreshTable();\n});\n\neditBtn.setOnAction(event -&gt; {\nContact c = getTableRow().getItem();\neditContact(c);\nrefreshTable();\n});\n}\n\n@Override\nprotected void updateItem(Void item, boolean empty) {\nsuper.updateItem(item, empty);\nif(empty){\nsetGraphic(null);\n}\nelse{\nHBox container = new HBox();\ncontainer.getChildren().addAll(editBtn, deleteBtn);\ncontainer.setSpacing(10.0);\nsetGraphic(container);\n}\n}\n});\n</code></pre> <p>A <code>setCellFactory</code> param\u00e9ter\u00e9ben egy <code>Callback &lt;TableColumn&lt;S,\u200bT&gt;,\u200bTableCell&lt;S,\u200bT&gt;&gt; value</code> param\u00e9tert v\u00e1r, melyet lambda kifejez\u00e9s form\u00e1j\u00e1ban meg is adunk. Ebb\u0151l ugye l\u00e1tszik, hogy egy <code>\u200bTableCell&lt;S,\u200bT&gt;</code> t\u00edpus\u00fa elemet kell visszaadnunk, melyet meg is adunk \u00fagy, hogy k\u00f6zben a <code>TableCell</code> oszt\u00e1lyt kiterjesztj\u00fck (hasonl\u00f3an az anonymous inner class-okhoz, de itt oszt\u00e1lyra alkalmazzunk, interface helyett). A kiterjeszt\u00e9sben k\u00e9t <code>Button</code> field-et adunk hozz\u00e1, illetve az init blokkban (mivel a lesz\u00e1rmaztatott oszt\u00e1lynak nincs neve itt) megadjuk ezen gombok m\u0171k\u00f6d\u00e9s\u00e9t is. Egy <code>TableCell</code> objektum k\u00e9pes lek\u00e9rni a sort amihez tartozik (<code>getTableRow</code>), mely sorhoz tartoz\u00f3 elemet a <code>getItem</code>-el k\u00e9rhet\u00fcnk le, amelynek t\u00edpusa megegyezik a <code>TableCell&lt;S,T&gt;</code> <code>S</code> param\u00e9ter\u00e9vel, jelen esetben a <code>Contact</code>-al. A <code>deleteContact</code> \u00e9s <code>editContact</code> met\u00f3dusokat azonnal l\u00e1tjuk, de el\u0151tte f\u00f3kusz\u00e1ljunk az <code>updateItem</code> met\u00f3dus fel\u00fcl\u00edr\u00e1s\u00e1ra. Az <code>updateItem</code>-et soha ne h\u00edvjuk meg manu\u00e1lisan (annak h\u00edv\u00e1sa a grafikus elem, jelen dolga), ugyanakkor, ha egy cella kin\u00e9zet\u00e9t szeretn\u00e9nk szem\u00e9lyre szabni, akkor ahhoz ezt a met\u00f3dust a legc\u00e9lszer\u0171bb fel\u00fcldefini\u00e1lni. Itt k\u00e9t szab\u00e1ly van:</p> <ul> <li>Mindig h\u00edvjuk meg a <code>super.updateItem(item, empty);</code> met\u00f3dus\u00e1t</li> <li>Mindig csekkoljuk az \u00fcres cell\u00e1kat (el\u0151fordulhat, hogy egy sorban nincs semmilyen megjelen\u00edtend\u0151 elem) \u00e9s ott \u00e1ll\u00edtsuk <code>null</code>-ra a hozz\u00e1tartoz\u00f3 grafik\u00e1t, m\u00e1r ha ilyen esetben t\u00e9nyleg nem akarunk semmit l\u00e1tni a cell\u00e1ban</li> </ul> <p>A fentiek ut\u00e1n egy <code>HBox</code>-ra egyszer\u0171en elhelyezz\u00fck a k\u00e9t gombot, majd ezt a kont\u00e9nert rajzoltatjuk ki.</p> <p>Miut\u00e1n a fentieket meg\u00e9rtett\u00fck, l\u00e1ssuk a <code>deleteContact</code> met\u00f3dust:</p> <pre><code>private void deleteContact(Contact c) {\nAlert confirm = new Alert(Alert.AlertType.CONFIRMATION, \"Are you sure you want to delete contact: \" + c.getName(), ButtonType.YES, ButtonType.NO);\nconfirm.showAndWait().ifPresent(buttonType -&gt; {\nif(buttonType.equals(ButtonType.YES)){\ndao.delete(c);\n}\n});\n}\n</code></pre> <p>Miel\u0151tt egyb\u0151l kit\u00f6r\u00f6ln\u00e9nk az adott kontaktot, meger\u0151s\u00edt\u00e9st v\u00e1runk a felhaszn\u00e1l\u00f3t\u00f3l, melyet az <code>Alert</code> oszt\u00e1ly haszn\u00e1lat\u00e1val tudjuk megval\u00f3s\u00edtani.</p> <pre><code>@Override\npublic void start(Stage stage) {\nFXMLLoader loader = new FXMLLoader(getClass().getResource(\"/fxml/main_window.fxml\"));\nScene scene = null;\ntry {\nParent parent = loader.load();\nscene = new Scene(parent);\n\n} catch (IOException e) {\ne.printStackTrace();\n}\n\nstage.setScene(scene);\nstage.show();\n}\n</code></pre> <p>A k\u00f6vetkez\u0151 gyakorlaton innen folytatjuk majd.</p>"},{"location":"legacy/05_gyakorlat/#videok","title":"Vide\u00f3k","text":"<ul> <li>Contacts projekt 1.</li> <li>Contacts projekt 2.</li> </ul>"},{"location":"legacy/05_gyakorlat/#referenciak","title":"Referenci\u00e1k","text":"<ul> <li>Maven multi module project</li> <li>Oracle JDBC Tutorial</li> </ul>"},{"location":"legacy/06_gyakorlat/","title":"6. gyakorlat","text":""},{"location":"legacy/06_gyakorlat/#contact-alkalmazas-folytatasa","title":"Contact alkalmaz\u00e1s folytat\u00e1sa","text":"<p>Az el\u0151z\u0151 \u00f3ra v\u00e9g\u00e9n a list\u00e1b\u00f3l a kontaktok t\u00f6rl\u00e9s\u00e9t megval\u00f3s\u00edtottuk. Miel\u0151tt a m\u00f3dos\u00edt\u00e1st megcsin\u00e1ln\u00e1nk elk\u00e9sz\u00edtj\u00fck a f\u0151 ablak men\u00fcj\u00e9ben a <code>Close</code> men\u00fcpont esem\u00e9nykezel\u00e9s\u00e9t.</p> <pre><code>public class MainWindowController {\n...\n\n@FXML\npublic void onExit(){\nPlatform.exit();\n}\n}\n</code></pre> <p>Az FXML-ben a k\u00f6vetkez\u0151nek kell szerepelnie, melyet a SceneBuilder-rel is megadhatunk (<code>Code -&gt; onAction</code>):</p> <pre><code>&lt;MenuItem mnemonicParsing=\"false\" text=\"Close\" onAction=\"#onExit\"/&gt;\n</code></pre> <p>Ezzel meg is vagyunk, \u00edgy n\u00e9zz\u00fck az <code>editContact</code> met\u00f3dust! Mivel a szerkeszt\u00e9shez egy \u00faj ablakra lesz sz\u00fcks\u00e9g\u00fcnk, ahol mag\u00e1t a kontaktot szerkeszteni tudjuk, \u00edgy l\u00e9tre is fogunk hozni egyet <code>/fxml/add_edit_contact.fxml</code> n\u00e9ven a <code>resources</code> mappa alatt \u00e9s ezt az FXML \u00e1llom\u00e1nyt fogjuk bet\u00f6lteni. Ezt a formot majd a hozz\u00e1ad\u00e1sn\u00e1l is haszn\u00e1lhatjuk, \u00edgy ilyen szeml\u00e9lettel alak\u00edtjuk ki a fel\u00fcletet, illetve a neve is ezt t\u00fckr\u00f6zi.</p> <pre><code>private void editContact(Contact c) {\nFXMLLoader fxmlLoader = App.loadFXML((\"/fxml/add_edit_contact.fxml\"));\nAddEditContactController controller = fxmlLoader.getController();\ncontroller.setContact(c);\n}\n\n@FXML\npublic void onAddNewContact(){ // k\u00f6ss\u00fck be az Edit/Add al\u00e1\nFXMLLoader fxmlLoader = App.loadFXML((\"/fxml/add_edit_contact.fxml\"));\nAddEditContactController controller = fxmlLoader.getController();\ncontroller.setContact(new Contact()); // ennyi a k\u00fcl\u00f6nbs\u00e9g\n}\n</code></pre> <p>Mivel a form-on szeretn\u00e9nk majd megjelen\u00edteni a szerkeszteni k\u00edv\u00e1nt kontakt inform\u00e1ci\u00f3it, \u00edgy ezt \u00e1t fogjuk adni a controller sz\u00e1m\u00e1ra. Hozzuk is l\u00e9tre az FXML \u00e1llom\u00e1nyt \u00e9s a hozz\u00e1 tartoz\u00f3 AddEditContactController-t! K\u00e9sz\u00edts\u00fck el a fel\u00fcletet mely a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki a SceneBuilder-ben: A bal oldalon l\u00e1that\u00f3 TreeView seg\u00edts\u00e9get ny\u00fajt a pontos elrendez\u00e9s kialak\u00edt\u00e1s\u00e1ban</p> <p></p> <p>Az elemek pontos tulajdons\u00e1g\u00e1n\u00e1l seg\u00edts\u00e9get ny\u00fajt az FXML k\u00f3d, melyb\u0151l l\u00e1thatjuk a megadott <code>fx:id</code>-kat \u00e9s az esem\u00e9nykezel\u0151ket is:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n\n&lt;?import javafx.geometry.*?&gt;\n&lt;?import javafx.scene.control.*?&gt;\n&lt;?import javafx.scene.layout.*?&gt;\n&lt;?import javafx.scene.text.*?&gt;\n\n&lt;GridPane prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"hu.alkfejl.controller.AddEditContactController\"&gt;\n&lt;rowConstraints&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints maxHeight=\"60.0\" minHeight=\"10.0\" percentHeight=\"36.0\" prefHeight=\"33.0\" /&gt;\n&lt;RowConstraints maxHeight=\"28.0\" minHeight=\"0.0\" percentHeight=\"8.0\" prefHeight=\"27.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"8.0\" prefHeight=\"30.0\" /&gt;\n&lt;/rowConstraints&gt;\n&lt;columnConstraints&gt;\n&lt;ColumnConstraints minWidth=\"10.0\" percentWidth=\"30.0\" prefWidth=\"100.0\" /&gt;\n&lt;ColumnConstraints minWidth=\"10.0\" percentWidth=\"70.0\" prefWidth=\"100.0\" /&gt;\n&lt;ColumnConstraints minWidth=\"10.0\" percentWidth=\"70.0\" prefWidth=\"100.0\" /&gt;\n&lt;/columnConstraints&gt;\n&lt;children&gt;\n&lt;StackPane prefHeight=\"150.0\" prefWidth=\"200.0\" GridPane.columnSpan=\"2\"&gt;\n&lt;children&gt;\n&lt;Label text=\"Add or Edit Contact\"&gt;\n&lt;font&gt;\n&lt;Font size=\"20.0\" /&gt;\n&lt;/font&gt;\n&lt;/Label&gt;\n&lt;/children&gt;\n&lt;/StackPane&gt;\n&lt;Label text=\"Name\" GridPane.rowIndex=\"1\" /&gt;\n&lt;Label text=\"Email\" GridPane.rowIndex=\"2\" /&gt;\n&lt;Label text=\"Phone Numbers\" GridPane.rowIndex=\"3\" /&gt;\n&lt;Label text=\"Address\" GridPane.rowIndex=\"4\" /&gt;\n&lt;Label text=\"Date of Birth\" GridPane.rowIndex=\"5\" /&gt;\n&lt;Label text=\"Company\" GridPane.rowIndex=\"6\" /&gt;\n&lt;Label text=\"Position\" GridPane.rowIndex=\"7\" /&gt;\n&lt;HBox alignment=\"CENTER\" prefHeight=\"100.0\" prefWidth=\"200.0\" spacing=\"10.0\" GridPane.columnSpan=\"2\" GridPane.rowIndex=\"8\"&gt;\n&lt;children&gt;\n&lt;Button fx:id=\"saveBtn\" mnemonicParsing=\"false\" onAction=\"#onSave\" text=\"Save\" /&gt;\n&lt;Button mnemonicParsing=\"false\" onAction=\"#onCancel\" text=\"Cancel\" /&gt;\n&lt;/children&gt;\n&lt;padding&gt;\n&lt;Insets bottom=\"10.0\" left=\"10.0\" right=\"10.0\" top=\"10.0\" /&gt;\n&lt;/padding&gt;\n&lt;/HBox&gt;\n&lt;TextField fx:id=\"name\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"1\" /&gt;\n&lt;TextField fx:id=\"email\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"2\" /&gt;\n&lt;TextField fx:id=\"address\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"4\" /&gt;\n&lt;TextField fx:id=\"company\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"6\" /&gt;\n&lt;TextField fx:id=\"position\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"7\" /&gt;\n&lt;DatePicker fx:id=\"dateOfBirth\" prefHeight=\"25.0\" prefWidth=\"421.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"5\" /&gt;\n&lt;VBox prefHeight=\"200.0\" prefWidth=\"100.0\" spacing=\"10.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"3\"&gt;\n&lt;children&gt;\n&lt;ListView fx:id=\"phones\" prefHeight=\"200.0\" prefWidth=\"200.0\" /&gt;\n&lt;Button mnemonicParsing=\"false\" onAction=\"#addNewPhone\" text=\"Add\"&gt;\n&lt;VBox.margin&gt;\n&lt;Insets bottom=\"5.0\" /&gt;\n&lt;/VBox.margin&gt;\n&lt;/Button&gt;\n&lt;/children&gt;\n&lt;/VBox&gt;\n&lt;Label fx:id=\"nameErrors\" textFill=\"RED\" GridPane.columnIndex=\"2\" GridPane.rowIndex=\"1\" /&gt;\n&lt;Label fx:id=\"emailErrors\" textFill=\"RED\" GridPane.columnIndex=\"2\" GridPane.rowIndex=\"2\" /&gt;\n&lt;/children&gt;\n&lt;/GridPane&gt;\n</code></pre> <p>Ezen a ponton ellen\u0151rizz\u00fck, hogy az edit contact gomb megnyom\u00e1sa eset\u00e9n siker\u00fcl-e bet\u00f6lteni az FXML \u00e1llom\u00e1nyt, de ehhez el\u0151sz\u00f6r sz\u00fcks\u00e9g\u00fcnk van a <code>setContact</code> met\u00f3dus defin\u00edci\u00f3j\u00e1ra.</p> <pre><code>public class AddEditContactController {\n\nprivate Contact contact;\n\npublic void setContact(Contact c) {\nthis.contact = c;\n}\n}\n</code></pre> <p>Fejlessz\u00fck tov\u00e1bb az <code>AddEditContactController</code>-t \u00fagy, hogy az FXML-ben megadott vez\u00e9rl\u0151ket injekt\u00e1ljuk a controller-be:</p> <pre><code>public class AddEditContactController {\n...\n@FXML\nprivate Button saveBtn;\n\n@FXML\nprivate TextField name;\n@FXML\nprivate TextField email;\n\n@FXML\nListView&lt;Phone&gt; phones;\n\n@FXML\nprivate TextField address;\n@FXML\nprivate DatePicker dateOfBirth;\n@FXML\nprivate TextField company;\n@FXML\nprivate TextField position;\n</code></pre> <p>Ezut\u00e1n a fel\u00fcleti vez\u00e9rl\u0151k \u00e9rt\u00e9k\u00e9t (a fent injekt\u00e1lt elemek) be szeretn\u00e9m \u00e1ll\u00edtani a megkapott contact megfelel\u0151 property \u00e9rt\u00e9keire. \u00cdgy itt k\u00f6t\u00e9seket fogok alkalmazni, melyet akkor hozok l\u00e9tre, amikor a <code>setContact</code>-ot megh\u00edvja valaki (azaz \u00faj kontakt ker\u00fcl a fel\u00fclethez). A <code>setContact</code> ennek megfelel\u0151en a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>public void setContact(Contact c) {\nthis.contact = c;\n\nList&lt;Phone&gt; phonesList = phoneDAO.findAllByContactId(c.getId());\ncontact.setPhones(FXCollections.observableArrayList(phonesList));\n\nname.textProperty().bindBidirectional(contact.nameProperty());\nemail.textProperty().bindBidirectional(contact.emailProperty());\nphones.itemsProperty().bindBidirectional(contact.phonesProperty());\naddress.textProperty().bindBidirectional(contact.addressProperty());\ndateOfBirth.valueProperty().bindBidirectional(contact.dateOfBirthProperty());\ncompany.textProperty().bindBidirectional(contact.companyProperty());\nposition.textProperty().bindBidirectional(contact.positionProperty());\n\n}\n</code></pre> <p>Mivel a contact alapvet\u0151en nem tud a hozz\u00e1 tartoz\u00f3 phone-okr\u00f3l, \u00edgy ezt a phoneDAO-t\u00f3l k\u00e9rj\u00fck le, melyet field-k\u00e9nt adjunk is meg a controller-ben:</p> <pre><code>private PhoneDAO phoneDAO = new PhoneDAOImpl();\n</code></pre> <p>A <code>ListView</code> minket \u00e9rdekl\u0151 property-je az <code>itemsProperty</code>, mely a benne l\u00e9v\u0151 elemeket adja meg <code>ObjectProperty &lt;ObservableList &lt;T&gt;&gt;</code> form\u00e1j\u00e1ban, ahol a <code>T</code> t\u00edpusparam\u00e9ter jelen esetben nyilv\u00e1n <code>Phone</code>. A <code>Contact</code> bean-ben nem v\u00e9letlen\u00fcl ilyen m\u00f3don adjuk meg a telefonokat (<code>ObjectProperty&lt;ObservableList&lt;Phone&gt;&gt;</code>). A <code>dateOfBirth</code> vez\u00e9rl\u0151 egy <code>valueProperty</code>-vel rendelkezik, mely visszaad egy <code>ObjectProperty&lt;T&gt;</code> property-t, ahol <code>T</code> jelenleg <code>LocalDate</code>, melyet szint\u00e9n ilyen m\u00f3don adtunk meg a <code>Contact</code> oszt\u00e1lyban.</p> <p>A k\u00e9tir\u00e1ny\u00fa k\u00f6t\u00e9s inicializ\u00e1l\u00e1sa fontos, m\u00e9gpedig olyan szempontb\u00f3l, hogy az \u00e9rt\u00e9keket szinkronba fogjuk hozni \u00e9s \u00edgy az egyik property elveszti a jelenlegi \u00e9rt\u00e9k\u00e9t. Ha vessz\u00fck p\u00e9ld\u00e1ul a <code>name</code> property k\u00f6t\u00e9s\u00e9t, akkor a <code>name</code> fel\u00fcleti vez\u00e9rl\u0151 \u00e9rt\u00e9k\u00e9t k\u00f6tj\u00fck hozz\u00e1 a <code>contact</code> <code>nameProperty</code>-j\u00e9hez, azaz a <code>contact</code> \u00e9rt\u00e9ke m\u00e1sol\u00f3dik a <code>name</code> fel\u00fcleti vez\u00e9rl\u0151 property-j\u00e9be. Ford\u00edtott esetben, azaz: <code>contact.nameProperty().bindBidirectional(name.textProperty());</code> eset\u00e9ben a <code>contact</code> objektumunk elvesztette volna az aktu\u00e1lis \u00e9rt\u00e9k\u00e9t \u00e9s a fel\u00fcleten sem jelenne meg semmilyen \u00e9rt\u00e9k.</p> <p>Ezen a ponton ellen\u0151rizz\u00fck, hogy a megadott elemek megjelennek-e a fel\u00fcleten (Az adatb\u00e1zisban adjunk meg ).</p> <p>A telefonok list\u00e1j\u00e1ban, azaz a <code>ListView&lt;Phone&gt;</code> elemben az egy cell\u00e1ban megjelen\u0151 elemekre alapb\u00f3l a <code>toString()</code>-et h\u00edvja a rendszer \u00e9s ezt \u00edrja ki a cell\u00e1ba, ez\u00e9rt l\u00e1thatunk rosszul megjelen\u0151 (<code>Object oszt\u00e1ly toString()</code> alap\u00fa) adatokat. Nincs m\u00e1s teend\u0151, mint a <code>Phone</code> oszt\u00e1ly <code>toString</code> met\u00f3dus\u00e1t elk\u00e9sz\u00edteni:</p> <pre><code>public class Phone {\n...\n\n@Override\npublic String toString() {\nreturn number.getValue() + \" (\"+ phoneType.getValue() + \")\";\n}\n}\n</code></pre> <p>Ha ezekkel megvagyunk akkor j\u00f6het a t\u00e9nyleges ment\u00e9s, de el\u0151tte implement\u00e1ljuk a Cancel gomb esem\u00e9nykezel\u00e9s\u00e9t, mely szimpl\u00e1n annyit tesz, hogy visszat\u00f6lti a f\u0151 ablakot.</p> <pre><code>@FXML\npublic void onCancel(){\nApp.loadFXML(\"/fxml/main_window.fxml\");\n}\n</code></pre> <p>A ment\u00e9shez sz\u00fcks\u00e9g\u00fcnk lesz egy <code>ContactDAO</code>-ra, \u00edgy a k\u00f6vetkez\u0151 field megad\u00e1st is haszn\u00e1ljuk:</p> <pre><code>private ContactDAO contactDAO = new ContactDAOImpl();\n</code></pre> <p>Maga a ment\u00e9s a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>@FXML\npublic void onSave(){\ncontact = contactDAO.save(contact);\nphoneDAO.deleteAll(contact.getId());\ncontact.getPhones().forEach(phone -&gt; {\nphone.setId(0);\nphoneDAO.save(phone, contact.getId());\n});\nApp.loadFXML(\"/fxml/main_window.fxml\");\n}\n</code></pre> <p>Els\u0151re fur\u00e1n n\u00e9zhet ki a telefonsz\u00e1mok t\u00f6rl\u00e9se, majd l\u00e9trehoz\u00e1sa. Ezt az\u00e9rt csin\u00e1ljuk ilyen m\u00f3don, mert majd a telefonsz\u00e1mokat is m\u00f3dos\u00edtani szeretn\u00e9nk, ugyanakkor azokat egyb\u0151l nem szeretn\u00e9nk menteni, csak akkor amikor a kontakt szerkeszt\u00e9s/hozz\u00e1ad\u00e1s fel\u00fcleten megnyomjuk a Save gombot. Mivel kicsit nehezebb \u00edgy sz\u00e1montartani, hogy mi v\u00e1ltozott, a legegyszer\u0171bb az, ha minden sz\u00e1mot kit\u00f6rl\u00fcnk \u00e9s \u00fajra hozz\u00e1adjuk \u0151ket (lehet, hogy nem is v\u00e1ltozott semmi, de ett\u0151l m\u00e9g m\u0171k\u00f6dni fog a fenti k\u00f3dr\u00e9szlet csak kis plusz mel\u00f3t v\u00e9gez).</p> <p>A <code>deleteAll</code> <code>phoneDAO</code> met\u00f3dus m\u00e9g nem l\u00e9tezik, de azt nagyon k\u00f6nnyen implement\u00e1lhatjuk (nyilv\u00e1n adjuk hozz\u00e1 az interface-hez is a met\u00f3dus fejl\u00e9c\u00e9t):</p> <pre><code>@Override\npublic void deleteAll(int contactId) {\nfindAllByContactId(contactId).forEach(this::delete);\n}\n</code></pre> <p>Miut\u00e1n elmentett\u00fck a <code>contact</code>-ot \u00e9s a telefonsz\u00e1mokat, ebben az esetben is visszat\u00e9r\u00fcnk a f\u0151 ablakhoz.</p> <p>A telefonok list\u00e1j\u00e1n\u00e1l v\u00e9gigvihetj\u00fck a kontakt t\u00e1bl\u00e1zatban l\u00e1tott megval\u00f3s\u00edt\u00e1st is, amikor az <code>Edit</code> \u00e9s a <code>Delete</code> gombokat hozz\u00e1adtuk egy k\u00fcl\u00f6n oszlopban. A <code>ListView</code>-n\u00e1l ez annyiban k\u00fcl\u00f6nb\u00f6zne, hogy valamilyen <code>Label</code>-t is hozz\u00e1adn\u00e1nk, melyen mag\u00e1t a telefonsz\u00e1mot adjuk meg, tov\u00e1bb\u00e1 a k\u00e9t gombot is. Ez az\u00e9rt kell mert a <code>ListView</code> csak elemek sora, azaz olyan mintha egy egy oszlopos <code>TableView</code>-nk lenne. Annak \u00e9rdek\u00e9ben, hogy egy \u00fajabb lehet\u0151s\u00e9get ismerj\u00fcnk meg, \u00edgy egy <code>ContextMenu</code> fogunk k\u00e9sz\u00edteni (jobb klikk az adott <code>ListView</code> elemen), melyben az <code>Edit</code> \u00e9s a <code>Delete</code> men\u00fcpontokat fogjuk elhelyezni. Ehhez sz\u00fcks\u00e9g\u00fcnk lesz az <code>initialize</code> met\u00f3dusra, \u00edgy a controllert implement\u00e1lja az <code>Initializable</code> interface-t! Maga az <code>initialize</code> a k\u00f6vetkez\u0151k\u00e9ppen alakul:</p> <pre><code>@Override\npublic void initialize(URL location, ResourceBundle resources) {\nphones.setCellFactory(param -&gt; {\nListCell&lt;Phone&gt; cell = new ListCell&lt;&gt;();\nContextMenu contextMenu = new ContextMenu();\n\nMenuItem editItem = new MenuItem(\"Edit\");\nMenuItem deleteItem = new MenuItem(\"Delete\");\n\ncontextMenu.getItems().addAll(editItem, deleteItem);\n\neditItem.setOnAction(event -&gt; {\n...\n});\ndeleteItem.setOnAction(event -&gt; {\n...\n});\n\nStringBinding cellTextBinding = new When(cell.itemProperty().isNotNull()).then(cell.itemProperty().asString()).otherwise(\"\");\ncell.textProperty().bind(cellTextBinding);\n\ncell.emptyProperty().addListener((observable, wasEmpty, isNowEmpty) -&gt; {\nif(isNowEmpty){\ncell.setContextMenu(null);\n} else{\ncell.setContextMenu(contextMenu);\n}\n\n});\nreturn cell;\n\n});\n}\n</code></pre> <p>A <code>setCellFactory\u200b(Callback &lt;ListView&lt;T&gt;,\u200bListCell&lt;T&gt;&gt; value)</code>-ban megadott <code>CAllback</code> egy <code>ListCell&lt;T&gt;</code> ad vissza. Ezt a cell\u00e1t l\u00e9tre is hozzuk \u00e9s k\u00e9s\u0151bb fel is haszn\u00e1ljuk, el\u0151tte azonban l\u00e9trehozzuk a <code>ContextMenu</code>-t \u00e9s hozz\u00e1adjuk a k\u00e9t <code>MenuItem</code> objektumot, amelyeket szint\u00e9n itt hoztunk l\u00e9tre. A gombok viselked\u00e9s\u00e9t k\u00e9s\u0151bb n\u00e9zz\u00fck meg, most el\u00e9g a t\u00f6bbi r\u00e9szt \u00e9rtelmezn\u00fcnk, ahhoz, hogy a context men\u00fct meg tudjuk jelen\u00edteni. Mivel egy <code>ListView</code> tartalmazhat t\u00f6bb sort, mint amennyi t\u00e9nyleges <code>Phone</code> van benne \u00edgy kezeln\u00fcnk kell azt az esetet, ha az adott sor \u00fcres. A cella sz\u00f6veg\u00e9t ett\u0151l tessz\u00fck f\u00fcgg\u0151v\u00e9 a <code>new When(cell.itemProperty().isNotNull()).then(cell.itemProperty().asString()).otherwise(\"\");</code> k\u00f6t\u00e9s l\u00e9trehoz\u00e1s\u00e1val, mely k\u00f6t\u00e9s aktu\u00e1lis \u00e9rt\u00e9k\u00e9t hozz\u00e1k\u00f6tj\u00fck a cella <code>textProperty-k\u00e9hez</code>.</p> <p>Ezen fel\u00fcl csin\u00e1lunk egy <code>ChangeListener</code>-t is, mely azt figyeli, hogy ha az adott cella \u00e9rt\u00e9ke \u00fcres lesz akkor nem ad hozz\u00e1 context men\u00fct (<code>cell.setContextMenu(null);</code>), illetve ha van \u00e9rt\u00e9k a sorban, akkor hozz\u00e1adja a context men\u00fct.</p> <p>V\u00e9g\u00fcl visszaadjuk mag\u00e1t a <code>cell</code>-t.</p> <p>Ezut\u00e1n n\u00e9zz\u00fck az esem\u00e9nykezel\u0151ket! A legfontosabb, hogy tudnunk kell, hogy melyik soron kattintottunk a kontextus men\u00fc elemekre (melyik <code>Phone</code> objektumot szeretn\u00e9nk m\u00f3dos\u00edtani vagy t\u00f6r\u00f6lni). Ehhez a <code>cell.getItem()</code> met\u00f3dus ad seg\u00edts\u00e9get, mely visszaadja a cell\u00e1hoz rendelt <code>Phone</code> objektumot. Kezdj\u00fck a t\u00f6rl\u00e9ssel, mert az egyszer\u0171bb:</p> <pre><code>deleteItem.setOnAction(event -&gt; {\ncontact.getPhones().remove(cell.getItem());\n});\n</code></pre> <p>Mivel a <code>contact</code> ment\u00e9s\u00e9n\u00e9l t\u00f6rl\u00fcnk minden az adott contact-hoz rendelt <code>Phone</code>-t, majd ut\u00e1na a k\u00f6vetkez\u0151k\u00e9ppen mentj\u00fck a telefonsz\u00e1mokat: <code>contact.getPhones().forEach(...)</code>, \u00edgy elegend\u0151, ha a <code>contact.getPhones()</code> list\u00e1b\u00f3l kit\u00f6r\u00f6lj\u00fck azt a <code>Phone</code>-t, amelynek cell\u00e1j\u00e1ban a context men\u00fc t\u00f6rl\u00e9st kiv\u00e1lasztottuk. Fontos l\u00e1tni, hogy ezen a ponton az adatb\u00e1zisban semmit sem matattunk.</p> <p>A m\u00f3dos\u00edt\u00e1shoz sz\u00fcks\u00e9g lesz egy form-ra, melyet egy mod\u00e1lis ablakban (nem lehet bel\u0151le kikattintani) szeretn\u00e9nk megjelen\u00edteni. Ez\u00e9rt itt h\u00edvjuk meg a <code>showPhoneDialog</code> met\u00f3dust az adott <code>Phone</code> t\u00edpus\u00fa param\u00e9terrel!</p> <pre><code>editItem.setOnAction(event -&gt; {\nPhone item = cell.getItem();\nshowPhoneDialog(item);\n});\n</code></pre> <p>Maga a <code>showPhoneDialog</code> a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>private void showPhoneDialog(Phone phone) {\nStage stage = new Stage();\nstage.initModality(Modality.APPLICATION_MODAL);\n\nFXMLLoader loader = new FXMLLoader(getClass().getResource(\"/fxml/add_edit_phone.fxml\"));\n\ntry {\nParent root = loader.load();\nAddEditPhoneController controller = loader.getController();\ncontroller.init(stage, phone, contact);\nstage.setScene(new Scene(root));\nstage.showAndWait();\n\n} catch (IOException e) {\ne.printStackTrace();\n}\n}\n</code></pre> <p>A k\u00f3d nagy r\u00e9sze megegyezik azzal amit az <code>App.loadFXML</code>-en bel\u00fcl megcsin\u00e1ltunk. Itt egy saj\u00e1t <code>Stage</code>-be szeretn\u00e9m belerakni a tartalmat, \u00edgy a fenti megk\u00f6zel\u00edt\u00e9st alkalmazom. Ami fontos, hogy a kontrolleren be\u00e1ll\u00edtjuk a <code>stage</code>, <code>phone</code> \u00e9s <code>contact</code> objektumokat, mivel ezekre sz\u00fcks\u00e9g lesz (k\u00e9s\u0151bb l\u00e1tjuk).</p> <p>Challenge</p> <p>Oldjuk meg \u00fagy, hogy az eddigi h\u00edv\u00e1sokat ne kelljen \u00e1t\u00edrnunk, viszont legyen lehet\u0151s\u00e9g arra is, hogy a fenti probl\u00e9m\u00e1t kik\u00fcsz\u00f6b\u00f6lj\u00fck. Az egyik probl\u00e9ma az, hogy van olyan eset, amikor m\u0171veleteket is szeretn\u00e9nk elv\u00e9gezni a controller-en, a m\u00e1sik egyszer\u0171bb probl\u00e9ma, hogy mi legyen a <code>Stage</code>-el.</p> Megold\u00e1s <p>Az <code>App.java</code> a k\u00f6vetkez\u0151k\u00e9ppen v\u00e1ltozik:</p> <pre><code>public static FXMLLoader loadFXML(String fxml){\nreturn loadFXML(fxml, stage, o -&gt; {});\n}\n\npublic static &lt;T&gt; FXMLLoader loadFXML(String fxml, Stage stage, Consumer&lt;T&gt; controllerOps){\nFXMLLoader loader = new FXMLLoader(App.class.getResource(fxml));\nScene scene = null;\ntry {\nParent root = loader.load();\ncontrollerOps.accept(loader.getController());\nscene = new Scene(root);\nstage.setScene(scene);\n} catch (IOException e) {\ne.printStackTrace();\n}\n\nreturn loader;\n\n}\n</code></pre> <p>Ilyen m\u00f3don sehol nem kell v\u00e1ltoztatnunk a megl\u00e9v\u0151 <code>loadFXML</code> h\u00edv\u00e1sokon, azonban a <code>showPhoneDialog</code>-on bel\u00fcl tudjuk a k\u00f6vetkez\u0151t csin\u00e1lni:</p> <pre><code>Stage stage = new Stage();\nstage.initModality(Modality.APPLICATION_MODAL);\nApp.&lt;AddEditPhoneController&gt;loadFXML(\"/fxml/add_edit_phone.fxml\", stage, (controller) -&gt; {\ncontroller.init(stage, phone, contact);\n});\nstage.showAndWait();\n</code></pre> <p>K\u00f6ss\u00fck be az Add gombhoz is a <code>showPhoneDialog</code>-ot (<code>onAction</code> legyen be\u00e1ll\u00edtva a gombon):</p> <pre><code>...\n@FXML\npublic void addNewPhone(){\nshowPhoneDialog();\n}\n\nprivate void showPhoneDialog(){\nshowPhoneDialog(new Phone());\n}\n...\n</code></pre> <p>Ezut\u00e1n hozzuk l\u00e9tre az <code>/fxml/add_edit_phone.fxml</code> \u00e1llom\u00e1nyt, illetve a hozz\u00e1 tartoz\u00f3 <code>AddEditPhoneController</code>-t. Hozzuk is l\u00e9tre a controller-ben az init met\u00f3dust:</p> <pre><code>public class AddEditPhoneController implements Initializable {\n\nprivate Stage stage;\nprivate Phone phone;\nprivate Contact contact;\n\npublic void init(Stage stage, Phone phone, Contact contact) {\nthis.stage = stage;\nthis.phone = phone;\nthis.contact = contact;\n}\n}\n</code></pre> <p>Miut\u00e1n ezzel megvagyunk, alak\u00edtsuk ki a k\u00f6vetkez\u0151 fel\u00fcletet a SceneBuilder seg\u00edts\u00e9g\u00e9vel (itt is seg\u00edt a bal oldali tree view):</p> <p></p> <p>Az FXML-hez tartoz\u00f3, gener\u00e1lt FXML k\u00f3d a k\u00f6vetket\u0151:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n\n&lt;?import javafx.geometry.*?&gt;\n&lt;?import javafx.scene.control.*?&gt;\n&lt;?import javafx.scene.layout.*?&gt;\n\n&lt;GridPane prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"hu.alkfejl.controller.AddEditPhoneController\"&gt;\n&lt;rowConstraints&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"10.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"10.0\" prefHeight=\"30.0\" /&gt;\n&lt;RowConstraints minHeight=\"10.0\" percentHeight=\"10.0\" prefHeight=\"30.0\" /&gt;\n&lt;/rowConstraints&gt;\n&lt;columnConstraints&gt;\n&lt;ColumnConstraints minWidth=\"10.0\" percentWidth=\"50.0\" prefWidth=\"100.0\" /&gt;\n&lt;ColumnConstraints minWidth=\"10.0\" percentWidth=\"50.0\" prefWidth=\"100.0\" /&gt;\n&lt;/columnConstraints&gt;\n&lt;children&gt;\n&lt;Label text=\"Number\" /&gt;\n&lt;Label text=\"PhoneType\" GridPane.rowIndex=\"1\" /&gt;\n&lt;HBox alignment=\"CENTER\" prefHeight=\"100.0\" prefWidth=\"200.0\" spacing=\"10.0\" GridPane.columnSpan=\"2\" GridPane.rowIndex=\"2\"&gt;\n&lt;children&gt;\n&lt;Button mnemonicParsing=\"false\" onAction=\"#onSave\" text=\"Save\" /&gt;\n&lt;Button mnemonicParsing=\"false\" onAction=\"#onCancel\" text=\"Cancel\" /&gt;\n&lt;/children&gt;\n&lt;/HBox&gt;\n&lt;TextField fx:id=\"number\" GridPane.columnIndex=\"1\" /&gt;\n&lt;ComboBox fx:id=\"phoneType\" prefHeight=\"25.0\" prefWidth=\"298.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"1\" /&gt;\n&lt;/children&gt;\n&lt;padding&gt;\n&lt;Insets bottom=\"10.0\" left=\"10.0\" right=\"10.0\" top=\"10.0\" /&gt;\n&lt;/padding&gt;\n&lt;/GridPane&gt;\n</code></pre> <p>Az egyetlen \u00faj vez\u00e9rl\u0151 a <code>ComboBox</code>, melyet a <code>PhoneType</code>-n\u00e1l alkalmazunk. Ezen a ponton ellen\u0151rizhetj\u00fck, hogy megfelel\u0151en bet\u00f6lti-e az oldalt az alkalmaz\u00e1s (mind az Add \u00e9s mind az Edit eset\u00e9n).</p> <p>Ezut\u00e1n a controllerbe injekt\u00e1ljuk a sz\u00fcks\u00e9ges grafikus vez\u00e9rl\u0151 elemeket:</p> <pre><code>@FXML\nprivate TextField number;\n\n@FXML\nprivate ComboBox&lt;Phone.PhoneType&gt; phoneType;\n</code></pre> <p>A <code>ComboBox</code> v\u00e1laszthat\u00f3 elemeinek a megad\u00e1s\u00e1hoz haszn\u00e1ljuk az <code>Initializable</code> interface <code>initialize</code> met\u00f3dus\u00e1t:</p> <pre><code>phoneType.getItems().setAll(Phone.PhoneType.values());\n</code></pre> <p>Itt lek\u00e9rj\u00fck az \u00f6sszes lehets\u00e9ges enum \u00e9rt\u00e9ket \u00e9s ezt \u00e1ll\u00edtjuk be leny\u00edl\u00f3 doboznak.</p> <p>A kor\u00e1bban meg\u00edrt <code>init</code> met\u00f3dusban ezut\u00e1n a kapott <code>Phone</code> tulajdons\u00e1gok alapj\u00e1n hozzuk l\u00e9tre a fel\u00fcleti k\u00f6t\u00e9seket, hasonl\u00f3an mint ahogy azt a <code>Contact</code> eset\u00e9ben is megtett\u00fck:</p> <pre><code>public void init(Stage stage, Phone phone, Contact contact) {\nthis.stage = stage;\nthis.phone = phone;\nthis.contact = contact;\n\nnumber.textProperty().bindBidirectional(this.phone.numberProperty());\nphoneType.valueProperty().bindBidirectional(this.phone.phoneTypeProperty());\n\nif(phoneType.getSelectionModel().isEmpty()){\nphoneType.getSelectionModel().selectFirst(); }\n}\n</code></pre> <p>A k\u00f6t\u00e9sek l\u00e9trehoz\u00e1sa ut\u00e1n megvizsg\u00e1ljuk, hogy az adott <code>Phone</code>-hoz tartozik-e <code>phoneType</code> (k\u00f6t\u00e9s miatt ezt l\u00e1tjuk m\u00e1r), amennyiben nem akkor egy \u00faj telefonr\u00f3l van sz\u00f3 \u00e9s ilyen esetben az els\u0151 lehets\u00e9ges opci\u00f3t v\u00e1lasztjuk ki az enum \u00e9rt\u00e9kei k\u00f6z\u00fcl.</p> <p>A fel\u00fcleten elhelyezett <code>Cancel</code> gomb hat\u00e1s\u00e1ra az init-ben be\u00e1ll\u00edtott stage-et fogom bez\u00e1rni:</p> <pre><code>@FXML\npublic void onCancel(){\nstage.close();\n}\n</code></pre> <p>A <code>Save</code> egy kicsit fura fel\u00e9p\u00edt\u00e9s\u0171 lesz:</p> <pre><code>@FXML\npublic void onSave(){\ncontact.getPhones().remove(phone);\ncontact.getPhones().add(phone);\nstage.close();\n}\n</code></pre> <p>A t\u00f6rl\u00e9s \u00e9s ut\u00e1na hozz\u00e1ad\u00e1s ugyanarra az objektumra redund\u00e1nsnak t\u0171nik, de mivel ez felel\u0151s a hozz\u00e1ad\u00e1s \u00e9s a m\u00f3dos\u00edt\u00e1s\u00e9rt is, \u00edgy van l\u00e9tjogosults\u00e1ga (\u00faj elem eset\u00e9n nyilv\u00e1n nem tudja kit\u00f6r\u00f6lni, csak hozz\u00e1adni).</p>"},{"location":"legacy/06_gyakorlat/#ellenorzesek-es-kiegeszitesek","title":"Ellen\u0151rz\u00e9sek \u00e9s kieg\u00e9sz\u00edt\u00e9sek","text":"<p>Az els\u0151 egy apr\u00f3 kieg\u00e9sz\u00edt\u00e9s a kontakt t\u00f6rl\u00e9shez, mivel a kontakthoz rendelt telefonsz\u00e1mokat nem t\u00f6r\u00f6lt\u00fck ki. A meger\u0151s\u00edt\u00e9s ut\u00e1n ezt megtehetj\u00fck a k\u00f6vetkez\u0151k\u00e9ppen:</p> <pre><code>private void deleteContact(Contact c) {\nAlert confirm = new Alert(Alert.AlertType.CONFIRMATION, \"Are you sure you want to delete contact: \" + c.getName(), ButtonType.YES, ButtonType.NO);\nconfirm.showAndWait().ifPresent(buttonType -&gt; {\nif(buttonType.equals(ButtonType.YES)){\nphoneDAO.deleteAll(c.getId());  // hozzuk l\u00e9tre a phoneDAO fieldet is!\ndao.delete(c);\n}\n});\n}\n</code></pre>"},{"location":"legacy/06_gyakorlat/#contact-ellenorzesek","title":"Contact ellen\u0151rz\u00e9sek","text":"<p>Ezut\u00e1n v\u00e9gezz\u00fcnk el a k\u00f6telez\u0151 elemek megad\u00e1s\u00e1nak ellen\u0151rz\u00e9s\u00e9t az <code>AddEditContactController</code>-ben: El\u0151sz\u00f6r is le szeretn\u00e9nk tiltani a gombot (nem lehet megnyomni), addig am\u00edg van \u00e9rv\u00e9nytelen adat. Helyezz\u00fck el a k\u00e9t <code>Label</code>-t a fel\u00fcleten, ahova a hiba\u00fczeneteket fogjuk \u00edrni, illetve injekt\u00e1ljuk is ezeket a controllerbe:</p> <pre><code>@FXML\nprivate Button saveBtn;\n\n@FXML\nprivate Label nameErrors;\n\n@FXML\nprivate Label emailErrors;\n</code></pre> <p>Az <code>initialize</code> met\u00f3dust ezut\u00e1n a k\u00f6vetkez\u0151k\u00e9ppen m\u00f3dos\u00edtjuk:</p> <pre><code>saveBtn.disableProperty().bind(name.textProperty().isEmpty()\n.or(email.textProperty().isEmpty()\n.or(dateOfBirth.valueProperty().isNull())));\n\nname.textProperty().addListener((observable, oldValue, newValue) -&gt; {\nif(newValue != null &amp;&amp; newValue.isEmpty()){\nnameErrors.setText(\"Name is required\");\n}\nelse{\nnameErrors.setText(\"\");\n}\n});\n\nemail.textProperty().addListener((observable, oldValue, newValue) -&gt; {\nif(newValue != null &amp;&amp; newValue.isEmpty()){\nemailErrors.setText(\"Email is required\");\n} else{\nemailErrors.setText(\"\");\n}\n});      </code></pre> <p>\u00cdgy, a gomb eg\u00e9szen addig <code>disabled</code> \u00e1llapotban lesz, ameddig vagy a name vagy az email vagy a sz\u00fclet\u00e9si d\u00e1tum \u00fcres/null. Az egyes hibajelz\u0151 <code>Label</code>-ek \u00e9rt\u00e9k\u00e9t <code>ChangeListener</code>-ek alapj\u00e1n \u00e1ll\u00edtjuk be.</p>"},{"location":"legacy/06_gyakorlat/#kereses-a-kontaktok-listajaban","title":"Keres\u00e9s a kontaktok list\u00e1j\u00e1ban","text":"<p>El\u0151sz\u00f6r alak\u00edtsuk ki a fel\u00fcleti vez\u00e9rl\u0151ket a <code>main_window.fxml</code> oldalon. A <code>BorderPane</code> bal oldali elem\u00e9hez adjuk hozz\u00e1 a k\u00f6vetkez\u0151ket:</p> <pre><code>&lt;BorderPane prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"hu.alkfejl.controller.MainWindowController\"&gt;\n...\n   &lt;left&gt;\n&lt;VBox spacing=\"10.0\" prefHeight=\"200.0\" prefWidth=\"100.0\" BorderPane.alignment=\"CENTER\"&gt;\n&lt;children&gt;\n&lt;Label text=\"Search by Name\" /&gt;\n&lt;TextField fx:id=\"nameSearch\" onKeyReleased=\"#onSearch\" /&gt;\n&lt;Label text=\"Search by Email\" /&gt;\n&lt;TextField fx:id=\"emailSearch\" onKeyReleased=\"#onSearch\" /&gt;\n&lt;/children&gt;&lt;/VBox&gt;\n&lt;/left&gt;\n&lt;/BorderPane&gt;\n</code></pre> <p>A <code>MainWindowController</code>-en bel\u00fcl injekt\u00e1ljuk a k\u00e9t <code>TextField</code> objektumot, majd k\u00e9sz\u00edts\u00fck el az <code>onSearch</code> met\u00f3dust. Jelen esetben nem adat\u00e1zism\u0171veletk\u00e9nt val\u00f3s\u00edtjuk meg a keres\u00e9st (b\u00e1r val\u00f3s k\u00f6rnyezetben \u00edgy volna sz\u00e9p), hanem a lek\u00e9rt teljes list\u00e1t filterezz\u00fck. Emiatt a <code>refreshTable</code>-t m\u00f3dos\u00edtjuk \u00fagy, hogy a kontaktok list\u00e1j\u00e1t egy field-ben \u00e1lt\u00e1roljuk.</p> <pre><code>private List&lt;Contact&gt; all;\n\n@FXML\nprivate TextField nameSearch;\n\n@FXML\nprivate TextField emailSearch;\n\nprivate void refreshTable() {\nall = dao.findAll();\ncontactTable.getItems().setAll(all);\n}\n\n@FXML\npublic void onSearch(){\nList&lt;Contact&gt; filtered = all.stream().filter(contact -&gt; contact.getName().contains(nameSearch.getText()) &amp;&amp; contact.getEmail().contains(emailSearch.getText())).collect(Collectors.toList());\ncontactTable.getItems().setAll(filtered);\n}\n</code></pre> <p>Az <code>onSearch</code>-\u00f6n bel\u00fcl Stream API-t haszn\u00e1lunk az elemek sz\u0171r\u00e9s\u00e9hez, majd ezt \u00e1ll\u00edtjuk be a t\u00e1bl\u00e1zat elemeik\u00e9nt.</p>"},{"location":"legacy/06_gyakorlat/#videok","title":"Vide\u00f3k","text":"<ul> <li>Contacts projekt 3.</li> <li>Contacts projekt 4.</li> </ul>"},{"location":"legacy/06_gyakorlat/#gyakorlo-projekt-pizzazas","title":"Gyakorl\u00f3 Projekt - Pizz\u00e1z\u00e1s","text":"<p>A feladat egy pizzanyilv\u00e1ntart\u00f3 program elk\u00e9sz\u00edt\u00e9se Java nyelven, amely k\u00f6veti az MVC modellt. A programnak a k\u00f6vetkez\u0151 funkcionalit\u00e1sokat kell t\u00e1mogatnia.</p>"},{"location":"legacy/06_gyakorlat/#pizza-felvetele","title":"Pizza felv\u00e9tele","text":"<p>A programnak t\u00e1mogatnia kell a pizza felv\u00e9tel\u00e9t, ahol a k\u00f6vetkez\u0151 adatokat kell felvennie:</p> <ul> <li>Pizza neve, ami sz\u00f6vegesen adhat\u00f3 meg</li> <li>Pizza le\u00edr\u00e1sa, ami tartalmazza, hogy milyen \u00f6sszetev\u0151i vannak a pizz\u00e1nak</li> <li>Veget\u00e1ri\u00e1nus jelz\u0151 (Checkbox)</li> <li>\u00c9s v\u00e9g\u00fcl az \u00e1ra, ami egy eg\u00e9sz sz\u00e1m (Spinner, Slider)</li> </ul> <p>Megszor\u00edt\u00e1sok, k\u00f6vetelm\u00e9nyek:</p> <ul> <li>A pizza besz\u00far\u00e1sakor kapjon egy egyedi azonos\u00edt\u00f3t.</li> <li>A sikeres besz\u00far\u00e1skor egy ablak jelenjen meg, amely megmondja a besz\u00fart pizza sorsz\u00e1m\u00e1t.</li> <li>A rendszer nem t\u00e1rolhat k\u00e9t ugyanolyan nev\u0171 pizz\u00e1t. Ha ugyanolyan nev\u0171 pizz\u00e1t akarunk besz\u00farni, akkor a rendszer adjon hiba\u00fczenetet (de ne z\u00e1rja be a beviteli ablakot).</li> </ul> <p></p> <p></p>"},{"location":"legacy/06_gyakorlat/#pizzak-listazasa","title":"Pizz\u00e1k list\u00e1z\u00e1sa","text":"<p>A programnak t\u00e1mogatnia kell a pizz\u00e1k list\u00e1z\u00e1s\u00e1t. Nem kell, hogy automatikusan t\u00f6rt\u00e9njen, elegend\u0151 valamilyen funkcionalit\u00e1st biztos\u00edtani erre.</p> <p></p>"},{"location":"legacy/06_gyakorlat/#pizza-rendeles","title":"Pizza rendel\u00e9s","text":"<p>A programnak t\u00e1mogatni kell a pizza rendel\u00e9st is. Ez azt jelenti, hogy a felhaszn\u00e1l\u00f3 kiv\u00e1laszthatja, hogy milyen pizz\u00e1t szeretne rendelni, mekkora m\u00e9ret\u0171t, h\u00e1ny darabot, \u00e9s akkor megrendelheti.</p> <ul> <li>A pizz\u00e1t kiv\u00e1lasztani a leg\u00f6rd\u00fcl\u0151 men\u00fc seg\u00edts\u00e9g\u00e9vel lehet, ahol az \u00f6sszes el\u00e9rhet\u0151 pizza k\u00f6z\u00fcl lehet v\u00e1lasztani.<ul> <li>A kiv\u00e1lasztott pizza tulajdons\u00e1gai jelenjen meg alatta.</li> </ul> </li> <li>A kicsi pizza 20%-kal olcs\u00f3bb, mint a norm\u00e1l m\u00e9ret\u0171, m\u00edg a nagy 20%-kal dr\u00e1g\u00e1bb.</li> </ul> <p></p>"},{"location":"legacy/06_gyakorlat/#tipushibak","title":"T\u00edpushib\u00e1k","text":""},{"location":"legacy/06_gyakorlat/#forditasi-hibak","title":"Ford\u00edt\u00e1si hib\u00e1k","text":"<ul> <li>Nem implement\u00e1lt \u00f6r\u00f6k\u00f6lt met\u00f3dus</li> <li>Absztrakt oszt\u00e1ly p\u00e9ld\u00e1nyos\u00edt\u00e1sa</li> <li>FXML<ul> <li>Rossz oszt\u00e1ly van megadva</li> <li>@FXML annot\u00e1ci\u00f3 hi\u00e1nya</li> <li>Rossz az FXML f\u00e1jl \u00fatvonala</li> </ul> </li> <li>Rossz import: <code>javafx.valami</code> helyett  p\u00e9ld\u00e1ul <code>java.awt.valami</code></li> <li>\u00d6r\u00f6k\u00f6lt met\u00f3dus l\u00e1that\u00f3s\u00e1ga cs\u00f6kken</li> </ul>"},{"location":"legacy/06_gyakorlat/#futasi-hibak","title":"Fut\u00e1si hib\u00e1k","text":""},{"location":"legacy/06_gyakorlat/#adatbazis-dao","title":"Adatb\u00e1zis, DAO","text":"<ul> <li>Rossz az SQL parancs, ami l\u00e9trehozza a kapcsolatot az adatb\u00e1zis fel\u00e9</li> <li><code>getConnection(\"jdbc:sqlite:\" + DBFILE);</code> helyett<ul> <li><code>getConnection(\"jdbc:sqlite\" + DBFILE);</code></li> <li><code>getConnection(\"jdbc:sqlite: + DBFILE\");</code></li> <li><code>getConnection(\"jdbc.sqlite:\" + DBFILE);</code></li> </ul> </li> <li><code>INSERT INTO Pizza (Nev, Leiras, Vega, Ar) VALUES (?, ?, ?, ?)</code> hib\u00e1s<ul> <li>Hib\u00e1s t\u00e1blan\u00e9v, mez\u0151v\u00e9s</li> <li><code>VALUES</code> helyett <code>VALUE</code></li> </ul> </li> <li><code>PreparedStatement</code> eset\u00e9ben a <code>setXXX</code> eset\u00e9ben az indexel\u00e9snek 1-t\u0151l kell indulnia, \u00e9s nem 0-t\u00f3l</li> <li>A DAO-ban Adatb\u00e1zis f\u00e1jl rosszul van megadva</li> </ul>"},{"location":"legacy/06_gyakorlat/#view","title":"View","text":"<ul> <li>Rosszul \u00f6sszerakott GUI</li> <li>Egy elem k\u00e9tszer is el\u0151fordul a f\u00e1ban</li> </ul>"},{"location":"legacy/06_gyakorlat/#logikai-hibak","title":"Logikai hib\u00e1k","text":"<p>Olyan hib\u00e1k, amelyek nem vezetnek fut\u00e1si hib\u00e1hoz, de nem j\u00f3l m\u0171k\u00f6dik a program</p> <ul> <li>A DAO vagy Controller eset\u00e9ben az interf\u00e9sznek kell lennie a statikus t\u00edpusnak, \u00e9s a konkr\u00e9t megval\u00f3s\u00edt\u00e1s a dinamikus t\u00edpus</li> <li>DAO-ban a list eset\u00e9ben nem t\u00f6r\u00f6lj\u00fck a list\u00e1t, miel\u0151tt ism\u00e9t felt\u00f6lten\u00e9nk</li> <li><code>ConstructTable</code> t\u00f6bbsz\u00f6ri megh\u00edv\u00e1sa (plusz oszlopok lesznek minden h\u00edv\u00e1sn\u00e1l)</li> <li>Rossz k\u00e9pletek, inicializ\u00e1latlan \u00e9rt\u00e9kek, objektumok</li> </ul>"},{"location":"legacy/07_gyakorlat/","title":"7. gyakorlat","text":""},{"location":"legacy/07_gyakorlat/#parhuzamositas","title":"P\u00e1rhuzamos\u00edt\u00e1s","text":"<p>Az eddig bemutatott projektek eset\u00e9n a programok egy sz\u00e1lon futottak szekvenci\u00e1lisan. Ez azt jelenti, hogy a v\u00e9grehajt\u00e1s \"sorr\u00f3l sorra\" t\u00f6rt\u00e9nik (a ford\u00edt\u00e1s optimaliz\u00e1ci\u00f3it \u00e9s a JVM tr\u00fckkjeit figyelmen k\u00edv\u00fcl hagyva).</p> <p>A Java nyelv egy t\u00f6bbsz\u00e1l\u00fa programoz\u00e1si nyelv, ami azt jelenti, hogy olyan programok k\u00e9sz\u00edthet\u0151k a seg\u00edts\u00e9g\u00e9vel, melyek egyszerre t\u00f6bb sz\u00e1lon futnak. Mivel a legt\u00f6bb mai sz\u00e1m\u00edt\u00f3g\u00e9p (m\u00e9g a be\u00e1gyazott rendszerek is) t\u00e1mogatja ezt a futtat\u00e1si m\u00f3dszert, \u00edgy kihaszn\u00e1lhat\u00f3 a nyelv adta lehet\u0151s\u00e9g.</p> <p>A p\u00e1rhuzamos programoz\u00e1s t\u00f6bb k\u00e9rd\u00e9st vet fel, melyek egy r\u00e9sze a k\u00f6z\u00f6s er\u0151forr\u00e1s haszn\u00e1lat\u00e1r\u00f3l \u00e9s a sz\u00e1lak k\u00f6z\u00f6tti szinkroniz\u00e1ci\u00f3r\u00f3l sz\u00f3lnak. Ezek egy r\u00e9sz\u00e9vel a kurzus el\u0151ad\u00e1s\u00e1n \u00e9s Oper\u00e1ci\u00f3s rendszerek kurzuson tal\u00e1lkoztak a hallgat\u00f3k. Jelen gyakorlat f\u0151leg a JavaFX-ben alkalmazhat\u00f3 megold\u00e1sokkal foglalkozik.</p>"},{"location":"legacy/07_gyakorlat/#maximumkereses-parhuzamositasa","title":"Maximumkeres\u00e9s p\u00e1rhuzamos\u00edt\u00e1sa","text":"<p>A k\u00f6vetkez\u0151 p\u00e9lda szeml\u00e9lteti a naiv maximumkeres\u00e9st egy konzolos alkalmaz\u00e1sban.</p> <p>Az alkalmaz\u00e1s l\u00e9trehoz\u00e1sa (Programoz\u00e1s-I ism\u00e9tl\u00e9s):</p> <ol> <li>IntelliJ IDEA: File - New Project</li> <li>Java (nem kell kiv\u00e1lasztani semmilyen frameworkot) - Next</li> <li>Create project from template - Command Line App</li> <li>A projekt helye \u00e9s a csomag tetsz\u0151leges (pl. Asztal, <code>hu.alkfejl.max</code>)</li> </ol> <p>Amennyiben a fenti l\u00e9p\u00e9sek alapj\u00e1n nem siker\u00fclt l\u00e9trehozni a projektet, az IntelliJ honlapj\u00e1n k\u00e9pekkel illusztr\u00e1lva ugyanez a le\u00edr\u00e1s megtal\u00e1lhat\u00f3.</p> <p>A k\u00f6vetkez\u0151 k\u00f3dr\u00e9szlet k\u00e9sz\u00edt egy <code>ARRAY_SIZE</code> m\u00e9ret\u0171 t\u00f6mb\u00f6t \u00e9s felt\u00f6lti v\u00e9letlenszer\u0171en gener\u00e1lt adatokkal. A t\u00f6mb\u00f6n v\u00e9gig kell iter\u00e1lni \u00e9s meghat\u00e1rozni a maxim\u00e1lis \u00e9rt\u00e9k\u0171 elem\u00e9t.</p> <pre><code>  int ARRAY_SIZE = 500000000;\n\ndouble[] arr = new double[ARRAY_SIZE];\nfor (int i = 0; i &lt; arr.length; i++) {\narr[i] = Math.random();\n}\n</code></pre> <p>A c\u00e9l az, hogy az algoritmus fut\u00e1si idej\u00e9t m\u00e9rj\u00fck \u00e9s \u00f6sszehasonl\u00edtsuk a p\u00e1rhuzamos futtat\u00e1s eredm\u00e9ny\u00e9vel. Ezt a <code>System.nanoTime()</code> h\u00edv\u00e1sok seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg az al\u00e1bbi form\u00e1ban.</p> <pre><code>  long singleThreadStart = System.nanoTime();\ndouble max = Double.MIN_VALUE;\nfor (double value : arr) {\nif (value &gt; max)\nmax = value;\n}\nlong singleThreadTime = (System.nanoTime() - singleThreadStart) / 1000000;\n</code></pre> <p>Az \u00edgy el\u0151\u00e1llt programot futtatva \u00e9s ki\u00edratva a <code>max</code> \u00e9s a <code>singleThreadTime</code> \u00e9rt\u00e9keit az al\u00e1bbi kimenetet kapjuk:</p> <pre><code>Maximum value: 0.9999999940819203\nSingle thread execution time: 398 ms\n</code></pre> <p>A fut\u00e1sid\u0151 a haszn\u00e1lt sz\u00e1m\u00edt\u00f3g\u00e9p er\u0151forr\u00e1sait\u00f3l f\u00fcgg\u0151en v\u00e1ltozhat (\u00e9s minden futtat\u00e1s sor\u00e1n egy kicsit v\u00e1ltozik is), de ez az \u00e9rt\u00e9k tekintend\u0151 alapvonalnak, amihez k\u00e9pest a p\u00e1rhuzamos megval\u00f3s\u00edt\u00e1s \"j\u00f3s\u00e1g\u00e1t\" vizsg\u00e1ljuk.</p> <p>Az az \u00f6tlet\u00fcnk t\u00e1madhat, hogy a nagy elemsz\u00e1m\u00fa t\u00f6mb\u00f6t t\u00f6bb kis r\u00e9szre osztjuk (teoretikusan, m\u00e1sol\u00e1s n\u00e9lk\u00fcl) \u00e9s a kis r\u00e9szeken egyszerre kellene v\u00e9grehajtani a maximumkeres\u00e9st. Az egyes lok\u00e1lis maximumokat megv\u00e1rva azok k\u00f6z\u00fcl kiv\u00e1laszthat\u00f3 a t\u00e9nyleges, glob\u00e1lis maximum \u00e9rt\u00e9ke.</p> <p>Ahhoz, hogy a maximumkeres\u00e9s t\u00f6bb sz\u00e1lon legyen v\u00e9grehajtva, egy \u00faj oszt\u00e1lyt kell l\u00e9trehozni, mely a <code>Thread</code> oszt\u00e1lyb\u00f3l \u00f6r\u00f6kl\u0151dik \u00e9s a <code>run()</code> met\u00f3dust fel\u00fcldefini\u00e1lja. Az oszt\u00e1ly a k\u00f6vetkez\u0151k\u00e9ppen \u00e9p\u00fcl fel.</p> <pre><code>public class MaxSearchThread extends Thread {\ndouble localMaximum = Double.MIN_VALUE;\nint fromIndex;\nint toIndex;\nfinal double[] array;\n\npublic MaxSearchThread(double[] array, int fromIndex, int toIndex) {\nthis.fromIndex = fromIndex;\nthis.toIndex = toIndex;\nthis.array = array;\n}\n\n@Override\npublic void run() {\nfor (int i = fromIndex; i &lt; toIndex; i++) {\nif (array[i] &gt; localMaximum)\nlocalMaximum = array[i];\n}\n}\n}\n</code></pre> <p>A konstruktorban \u00e1t kell adni a vizsg\u00e1land\u00f3 t\u00f6mb\u00f6t \u00e9s azt, hogy a t\u00f6mb melyik r\u00e9sz\u00e9n v\u00e9gezze el a keres\u00e9st. Az, hogy h\u00e1ny r\u00e9szre van osztva a keres\u00e9si t\u00e9r a sz\u00e1lak sz\u00e1m\u00e1t\u00f3l f\u00fcgg.</p> <pre><code>int NUMBER_OF_THREADS = 4;\nArrayList&lt;MaxSearchThread&gt; threads = new ArrayList&lt;&gt;();\n\nfor (int i = 0; i &lt; NUMBER_OF_THREADS; i++) {\nint from = i * (arr.length / NUMBER_OF_THREADS);\nint to = (i + 1) * (arr.length / NUMBER_OF_THREADS);\n\nMaxSearchThread thread = new MaxSearchThread(arr, from, to);\nthreads.add(thread);\nthread.start();\n}\n</code></pre> <p>A sz\u00e1lak sz\u00e1m\u00e1t\u00f3l f\u00fcgg\u0151en feldaraboljuk a t\u00f6mb\u00f6t, 4 sz\u00e1l eset\u00e9n 4 r\u00e9szre \u00e9s mindegyik sz\u00e1l az egyiken dolgozik. A <code>threads</code> lista sz\u00fcks\u00e9ges ahhoz, hogy a sz\u00e1lak \u00e1ltal produk\u00e1lt eredm\u00e9nyeket el\u00e9rj\u00fck. A <code>thread.start()</code> h\u00edv\u00e1s ut\u00e1n a program fut\u00e1sa \u00fagymond \"kett\u00e9v\u00e1lik\", a <code>for</code> ciklus is folytat\u00f3dik, illetve a <code>thread</code> objektum fut\u00e1sa egy k\u00fcl\u00f6n sz\u00e1lon megkezd\u0151dik.</p> <p>A p\u00e9ld\u00e1ban 4 db sz\u00e1l k\u00fcl\u00f6n \u00e9letet \u00e9l, viszont a <code>main</code> f\u00fcggv\u00e9nyben szeretn\u00e9nk a lok\u00e1lis maximum\u00e9rt\u00e9keiket megszerezni. Ahhoz hogy megv\u00e1rjuk egy sz\u00e1l fut\u00e1s\u00e1nak v\u00e9g\u00e9t, a <code>.join()</code> h\u00edv\u00e1ssal blokkolhat\u00f3 a f\u0151 sz\u00e1l am\u00edg a k\u00edv\u00e1nt sz\u00e1l <code>run</code> met\u00f3dusa v\u00e9get nem \u00e9r.</p> <pre><code>double multipleThreadsMax = Double.MIN_VALUE;\nfor (MaxSearchThread findMaxThread : threads) {\ntry {\nfindMaxThread.join();\nif (findMaxThread.localMaximum &gt; multipleThreadsMax)\nmultipleThreadsMax = findMaxThread.localMaximum;\n} catch (InterruptedException e) { e.printStackTrace(); }\n}\n</code></pre> <p>A <code>join()</code> met\u00f3dus <code>InterruptedException</code> kiv\u00e9telt dobhat, \u00edgy <code>try-catch</code> blokkba kell tenni \u00e9s lekezelni az esetlegesen dobott kiv\u00e9telt.</p> <p>A sz\u00e1lak l\u00e9trehoz\u00e1sa el\u00e9 \u00e9s a glob\u00e1lis maximum\u00e9rt\u00e9k meghat\u00e1roz\u00e1sa m\u00f6g\u00e9 besz\u00farva <code>System.nanoTime()</code> h\u00edv\u00e1sokat, lem\u00e9rhet\u0151 a p\u00e1rhuzamos megval\u00f3s\u00edt\u00e1s fut\u00e1sideje.</p> <pre><code>Single thread max:   0.9999999982963121\nMultiple thread max: 0.9999999982963121\n\nSingle thread time:   409 ms\nMultiple thread time: 246 ms\n</code></pre> <p>L\u00e1that\u00f3, hogy ugyanazt a maximum\u00e9rt\u00e9ket tal\u00e1lt\u00e1k meg (elv\u00e1rt viselked\u00e9s), illetve a p\u00e1rhuzamos fut\u00e1s 163 ms-sel gyorsabban v\u00e9gzett. A sz\u00e1lak menedzsel\u00e9se \u00e9s a kontextusv\u00e1lt\u00e1sok plusz terhet jelentenek a JVM sz\u00e1m\u00e1ra, \u00edgy t\u00fal sok sz\u00e1lat ind\u00edtani nem \u00e9rdemes, illetve kis adaton (kis t\u00f6mbm\u00e9ret eset\u00e9n) nem fog t\u00fal sok javul\u00e1st hozni.</p> <p>Ha a <code>MaxSearchThread::call</code> \u00e9s a <code>main</code> met\u00f3dusokban elhelyezz\u00fck a <code>System.out.println(Thread.currentThread().getName());</code> sort, akkor a konzolon k\u00f6vethet\u0151, hogy milyen nev\u0171 threadek lettek l\u00e9trehozva, illetve melyik fut.</p> <pre><code>main\nThread-0\nThread-1\nThread-2\nThread-3\n</code></pre> <p>Feladat</p> <ol> <li> <p>M\u00f3dos\u00edtsuk az <code>ARRAY_SIZE</code> \u00e9rt\u00e9k\u00e9t: pr\u00f3b\u00e1ljuk ki milyen fut\u00e1sid\u0151k sz\u00fcletnek, amennyiben sokkal kisebb, vagy sokkal nagyobb t\u00f6mb\u00f6n kell keresni. Esetleg sz\u00fcks\u00e9ges lehet a <code>heap</code> m\u00e9ret\u00e9t megn\u00f6velni, melyhez itt tal\u00e1lhat\u00f3 le\u00edr\u00e1s.</p> </li> <li> <p>M\u00f3dos\u00edtsuk a <code>NUMBER_OF_THREADS</code> \u00e9rt\u00e9k\u00e9t: kevesebb vagy t\u00f6bb sz\u00e1l futtat\u00e1sa eset\u00e9n milyen eredm\u00e9nyek sz\u00fcletnek?</p> </li> </ol> <p>A megval\u00f3s\u00edtott projekt megtal\u00e1lhat\u00f3 <code>pub/Alkalmaz\u00e1sfejleszt\u00e9s-I/07</code> mapp\u00e1ban,  01_ParallelCommandLine n\u00e9ven.</p>"},{"location":"legacy/07_gyakorlat/#javafx","title":"JavaFX","text":"<p>Felhaszn\u00e1l\u00f3i fel\u00fcletek eset\u00e9n is fontos szerepe van a p\u00e1rhuzamos\u00edt\u00e1snak. Az eddigi gyakorlatok sor\u00e1n minden esetben egy helyi SQLite adatb\u00e1zishoz kapcsol\u00f3dott az alkalmaz\u00e1s, \u00edgy nem tapasztaltunk k\u00e9sleltet\u00e9st. Amennyiben az adatb\u00e1zis egy szerveren van, a szerver terhelts\u00e9ge \u00e9s h\u00e1l\u00f3zati k\u00e9sleltet\u00e9s f\u00fcggv\u00e9ny\u00e9ben ak\u00e1r m\u00e1sodperceket is v\u00e1rhatunk a v\u00e1laszra. A v\u00e1rakoz\u00e1s sor\u00e1n a felhaszn\u00e1l\u00f3i fel\u00fclet teljesen le van fagyva.</p> <p>A modern kor felhaszn\u00e1l\u00f3ja nem tud v\u00e1rni, b\u00e1rmi t\u00f6rt\u00e9nik reszponz\u00edv kell maradjon az alkalmaz\u00e1s: g\u00f6rgetni, nyomkodni lehessen. Ez el\u00e9rhet\u0151 olyan form\u00e1ban, hogy a potenci\u00e1lisan hosszan tart\u00f3 folyamatokat k\u00fcl\u00f6n sz\u00e1l v\u00e9gzi el, mely \"vissza sz\u00f3l\" a UI-nak, ha k\u00e9sz van.</p> <p>JavaFX eset\u00e9ben van egy kit\u00fcntetett sz\u00e1l, amin az \u00f6sszes UI esem\u00e9ny feldolgoz\u00e1sa zajlik. Ezt a sz\u00e1lat h\u00edvj\u00e1k JavaFX Application Thread-nek. A SceneGraph Node-jai nem Thread-safe-ek, azaz t\u00f6bb sz\u00e1lon t\u00f6rt\u00e9n\u0151 hozz\u00e1f\u00e9r\u00e9s\u00fck nem enged\u00e9lyezett. Ennek el\u0151nye, hogy gyorsabb, mert nem kell szinkron blokkokkal oper\u00e1lni, ugyanakkor nem tudjuk csak egy sz\u00e1lr\u00f3l haszn\u00e1lni \u0151ket. A UI elemekhez csak az Application Thread-r\u0151l f\u00e9rhet\u00fcnk hozz\u00e1. Ennek eredm\u00e9nyek\u00e9ppen aj\u00e1nlatos a hosszan fut\u00f3 feladatokat elker\u00fclni a fel\u00fcleten, mivel az Application Thread addig blokkolva lesz \u00e9s \u00edgy egy nem reszponz\u00edv fel\u00fcletet kapunk.</p> <p>N\u00e9zz\u00fcnk egy egyszer\u0171 p\u00e9ld\u00e1t:</p> <pre><code>public class App extends Application {\n\nprivate Label label = new Label(\"Initial state\");\nprivate Button goBtn = new Button(\"Go\");\nprivate Button exitBtn = new Button(\"Exit\");\n\n@Override\npublic void start(Stage stage) {\ngoBtn.setOnAction(e -&gt; runTask());\nexitBtn.setOnAction(e -&gt; Platform.exit());\n\nHBox buttons = new HBox(10, goBtn, exitBtn);\n\nVBox root = new VBox(10, label, buttons);\n\nvar scene = new Scene(root, 640, 480);\nstage.setScene(scene);\nstage.show();\n}\n\nprivate void runTask() {\nint maxIter = 5;\nfor(int i = 0; i &lt; maxIter; i++) {\ntry {\nString status = \"Processing \" + (i+1)  + \" of \" + maxIter;\nSystem.out.println(status);\nlabel.setText(status);\nThread.sleep(2000);\n}\ncatch (InterruptedException e) {\ne.printStackTrace();\n}\n}\n}\n\npublic static void main(String[] args) {\nlaunch();\n}\n\n}\n</code></pre> <p>Amikor a <code>Go</code> gombot megnyomja a felhaszn\u00e1l\u00f3 akkor a konzolon l\u00e1tszik, hogy hanyadik iter\u00e1ci\u00f3ban tart a program (<code>Processing 5 of 5</code>), ugyanakkor a UI-on eg\u00e9szen addig az <code>Initial state</code> sz\u00f6veg l\u00e1tsz\u00f3dik a <code>Label</code>-en, ameddig mind az 5 iter\u00e1ci\u00f3 le nem ment, azaz addig blokkolva van a UI. Mik\u00f6zben fut a <code>Go</code>, pr\u00f3b\u00e1ljuk megnyomni az <code>Exit</code> gombot. Azt tapasztaljuk, hogy ez csak akkor fog lefutni, azaz akkor l\u00e9p ki az alkalmaz\u00e1sb\u00f3l, amikor a <code>runTask</code> lefutott. </p> <p>A fenti probl\u00e9ma megold\u00e1sa, hogy ne futtassunk hossz\u00fa feladatokat az esem\u00e9nykezel\u0151kben, pontosabban azokat egy k\u00fcl\u00f6n sz\u00e1lon ind\u00edtsuk el a h\u00e1tt\u00e9rben, ne pedig az Application Thread-et blokkoljuk ezzel.</p> <p>Els\u0151k\u00e9nt l\u00e1ssunk egy rossz p\u00e9ld\u00e1t, melynek sor\u00e1n egy k\u00fcl\u00f6n thread-ben ind\u00edtjuk a <code>runTask</code>-ot. A <code>start</code>-on bel\u00fcl csak az esem\u00e9nykezel\u0151t \u00edrjuk \u00e1t a k\u00f6vetkez\u0151k\u00e9ppen:</p> <p><pre><code>@Override\npublic void start(Stage stage) {\ngoBtn.setOnAction(e -&gt; startTaskOnThread());\n...\n}\n\nprivate void startTaskOnThread() {\nRunnable task = () -&gt; runTask();\nThread longRunningThread = new Thread(task);\n\nlongRunningThread.setDaemon(true); // ha meg\u00e1l\u00edtjuk az alkalmaz\u00e1sunkat, akkor vele hal ez a sz\u00e1l is\nlongRunningThread.start();\n}\n</code></pre> A megold\u00e1s a k\u00f6vetkez\u0151 hib\u00e1t fogja eredm\u00e9nyezni:</p> <pre><code>java.lang.IllegalStateException: Not on FX application thread; currentThread = Thread-3`\n</code></pre> <p>, mely a <code>label.setText(status);</code> utas\u00edt\u00e1son keletkezik. A JavaFX Runtime ellen\u0151rzi, hogy UI-t befoly\u00e1sol\u00f3 utas\u00edt\u00e1sokat csak az Application Thread-r\u0151l adhatunk ki.</p> <p>A helyes megold\u00e1s csak kicsiben k\u00fcl\u00f6nb\u00f6zik a fentit\u0151l. A sima <code>label.setText(status)</code> h\u00edv\u00e1s helyett a k\u00f6vetkez\u0151t kell haszn\u00e1lni:</p> <pre><code>Platform.runLater(() -&gt; label.setText(status));\n</code></pre> <p>A <code>Platform.runLater</code> a param\u00e9terben megadott <code>Runnable</code>-t futtatja valamikor a j\u00f6v\u0151ben az Application Thread-en, \u00edgy nem okoz olyan probl\u00e9m\u00e1t, mint amit az el\u0151z\u0151 esetben tapasztaltunk.</p> <p>A fenitek csak idealiz\u00e1lt k\u00f6rnyezetben alkalmazhat\u00f3k, illetve van egy szab\u00e1ly, amit m\u00e1r meg is s\u00e9rt\u00fcnk, hiszen k\u00fcl\u00f6n sz\u00e1lb\u00f3l visszasz\u00f3lunk az Application Thread-nek, hogy friss\u00edtse a <code>label</code> sz\u00f6veg\u00e9t, ami kor\u00e1ntsem eleg\u00e1ns. Ezen fel\u00fcl ebben a k\u00f6rnyezetben a task nem tud visszaadni eredm\u00e9nyt, nincs megb\u00edzhat\u00f3 kiv\u00e9telkezel\u00e9s, nem tudunk megb\u00edzhat\u00f3an le\u00e1ll\u00edtani, \u00fajraind\u00edtani \u00e9s \u00fctemezni task futtat\u00e1sokat. A k\u00f6vetkez\u0151kben ezeket a probl\u00e9m\u00e1kat oldjuk meg a JavaFX Concurrency API seg\u00edts\u00e9g\u00e9vel.</p>"},{"location":"legacy/07_gyakorlat/#javafx-concurrency-api","title":"JavaFX Concurrency API","text":"<p>A JavaFX Concurrency API a hagyom\u00e1nyos concurrency API-ra \u00e9p\u00edt, azaz a <code>java.util.concurrent</code> csomag alatt tal\u00e1lhat\u00f3 elemekre. Maga a JavaFX Concurrency API egy\u00e1ltal\u00e1n nem terjedelmes, viszont ann\u00e1l hasznosabb kieg\u00e9sz\u00edt\u00e9seket tartalmaz a GUI alkalmaz\u00e1sok t\u00f6bbsz\u00e1l\u00fas\u00edt\u00e1s\u00e1hoz.</p> <p>Az egyik k\u00f6zponti elem a <code>Worker&lt;V&gt;</code> interface, mely egy feladatot (task-ot) reprezent\u00e1l, amit egy vagy t\u00f6bb h\u00e1tt\u00e9rsz\u00e1lon kell v\u00e9grehajtani. Ami nagyon fontos, hogy a <code>Worker</code> st\u00e1tusz\u00e1t az Application Thread k\u00f6vetni tudja. A <code>Worker</code> h\u00e1rom implement\u00e1ci\u00f3j\u00e1t is megkapjuk, melyek a k\u00f6vetkez\u0151 absztrakt oszt\u00e1lyok:</p> <ul> <li><code>Task&lt;V&gt;</code>: \"Egyszer haszn\u00e1latos\" feladat futtat\u00e1s\u00e1hoz.</li> <li><code>Service&lt;V&gt;</code>: T\u00f6bbsz\u00f6r is futtathat\u00f3 feladat futtat\u00e1s\u00e1hoz</li> <li><code>ScheduledService&lt;V&gt;</code>: A <code>Service</code> kiterjeszt\u00e9se \u00fagy, hogy meghat\u00e1rozott id\u0151intervallumonk\u00e9nt futtatja a rendszer.</li> </ul> <p>A fenti oszt\u00e1lyok generikus param\u00e9tere a <code>Worker</code> visszat\u00e9r\u00e9si t\u00edpus\u00e1t adja meg. Amennyiben egy <code>Worker</code> nem ad vissza eredm\u00e9nyt, \u00fagy haszn\u00e1ljuk a <code>Void</code> megad\u00e1st!</p>"},{"location":"legacy/07_gyakorlat/#worker-allapotai","title":"Worker \u00e1llapotai","text":"<p>Egy <code>Worker</code> a k\u00f6vetkez\u0151 \u00e1llapotok egyik\u00e9ben lehet, melyet a <code>Worker.State</code> enum \u00edr le:</p> <ul> <li><code>READY</code></li> <li><code>SCHEDULED</code></li> <li><code>RUNNING</code></li> <li><code>SUCCEEDED</code></li> <li><code>CANCELLED</code></li> <li><code>FAILED</code></li> </ul> <p>Az \u00e1llapotok k\u00f6z\u00f6tti lehets\u00e9ges \u00e1tmeteket a k\u00f6vetkez\u0151 \u00e1bra mutatja be.</p> <p> </p> <p>Amikor egy <code>Worker</code>-t l\u00e9trehozunk, akkor a <code>READY</code> \u00e1llapotba ker\u00fcl. A v\u00e9grehajt\u00e1s el\u0151tt \u00fctemezett, azaz <code>SCHEDULED</code> \u00e1llapotba ker\u00fcl, melyb\u0151l a fut\u00f3 (<code>RUNNING</code>) \u00e1llapotba ker\u00fclhet. Ezut\u00e1n 3 f\u00e9le forgat\u00f3k\u00f6nyv l\u00e9tezik:</p> <ul> <li>Fut\u00e1s k\u00f6zben kezeletlen kiv\u00e9tel keletkezik -&gt; <code>FAILED</code></li> <li><code>cancel()</code> met\u00f3dus h\u00edv\u00e1s eredm\u00e9nyek\u00e9ppen <code>CANCELLED</code> \u00e1llapotba ker\u00fcl. Mivel b\u00e1rmikor d\u00f6nthet\u00fcnk \u00fagy, hogy m\u00e9gsem szeretn\u00e9nk futtatni a <code>Worker</code>-t, \u00edgy nem csak a <code>RUNNING</code>, hanem a <code>READY</code> \u00e9s <code>SCHEDULED</code> \u00e1llapotokb\u00f3l is \u00e1tker\u00fclhet\u00fcnk <code>CANCELLED</code> \u00e1llapotba</li> <li>Emellett nyilv\u00e1n sikeresen is lefuthat egy <code>Worker</code>, melynek eredm\u00e9nyek\u00e9ppen a <code>SUCCEEDED</code> \u00e1llapotba ker\u00fcl</li> </ul> <p>A Service-ek ezen 3 \u00e1llapotb\u00f3l visszaker\u00fclnek a READY \u00e1llapotba, hogy a futtat\u00e1s megism\u00e9telhet\u0151 legyen (az \u00e1br\u00e1n ezt a szaggatott vonalak jelzik).</p> <p>Az \u00e1llapotok k\u00f6z\u00f6tti v\u00e1lt\u00e1sok <code>WorkerStateEvent</code> esem\u00e9nyeket is gener\u00e1lnak, \u00edgy k\u00f6nnyen kezelhetj\u00fck, azt hogy p\u00e9ld\u00e1ul mi t\u00f6rt\u00e9njen hiba eset\u00e9n (pl.: n\u00e9h\u00e1nyszor pr\u00f3b\u00e1lkozunk m\u00e9g az \u00fajrafuttat\u00e1ssal ut\u00e1na viszont jelezz\u00fck a probl\u00e9m\u00e1t).</p>"},{"location":"legacy/07_gyakorlat/#worker-property-jei","title":"Worker property-jei","text":"<p>Minden <code>Worker</code> a k\u00f6vetkez\u0151 property-kkel rendelkezik, melyeket a l\u00e9trehoz\u00e1skor lehet\u0151s\u00e9g\u00fcnk van megadni:</p> <ul> <li><code>title</code>: a task neve</li> <li><code>message</code>: visszajelz\u00e9sek k\u00fcld\u00e9s\u00e9re haszn\u00e1latos (pl.: <code>Processed 1 out of 10</code>)</li> <li><code>running</code>: megmondja, hogy a feladat \u00e9ppen fut-e (<code>SCHEDULED</code> is m\u00e1r igazat ad vissza)</li> <li><code>state</code>: az el\u0151z\u0151 fejezetben bemutatott \u00e1llapotok k\u00f6z\u00fcl adja vissza az \u00e9ppen aktu\u00e1lisat</li> <li><code>workDone, totalWork, progress</code>: a feladat k\u00e9sz\u00fclts\u00e9g\u00e9t lehet jelezni vele</li> <li><code>value</code>: A <code>Worker</code> eredm\u00e9ny\u00e9t adja vissza</li> <li><code>exception</code>: Amennyiben a <code>Worker</code> <code>FAILED</code> \u00e1llapotba ker\u00fclt, akkor a kiv\u00e9tel ide ker\u00fcl, mely <code>Throwable</code> t\u00edpus\u00fa, azaz tov\u00e1bb is dobhatjuk az Application Thread-en, ha \u00fagy tartja kedv\u00fcnk</li> </ul> <p>Ha a fut\u00f3 <code>Worker</code> \u00e1llapot\u00e1r\u00f3l szeretn\u00e9nk inform\u00e1ci\u00f3kat megjelen\u00edteni, akkor nyugodtan k\u00f6ss\u00fcnk vez\u00e9rl\u0151ket ezekhez a property-khez, illetve haszn\u00e1lhatunk <code>Invalidation</code>- \u00e9s <code>ChangeListener</code>-eket is, melyekben UI elemeket hivatkozunk.</p> <p>N\u00e9zz\u00fck, hogyan lehet <code>Task</code> haszn\u00e1lata mellett elv\u00e9gezni az el\u0151z\u0151 feladatokat:</p> <pre><code>public class App extends Application {\n\nprivate Label label = new Label(\"Initial state\");\nprivate Label progressLabel = new Label(\"Progress: 0%\");\nprivate Label valueLabel = new Label(\"Current Value: \");\nprivate Label stateLabel = new Label(\"Current State: \");\nprivate Button goBtn = new Button(\"Go\");\nprivate Button cancelBtn = new Button(\"Cancel Task\");\nprivate Button exitBtn = new Button(\"Exit\");\nTask&lt;Integer&gt; task = new Task&lt;&gt;() {\n{\nthis.setOnSucceeded(event -&gt; {\nupdateProgress(1,1); // set progress to done (100%)\n});\n}\n\n@Override\nprotected Integer call() throws Exception {\nint i, maxIter = 5;\nfor(i = 0; i &lt; maxIter; i++) {\ntry {\nString status = \"Processing \" + (i+1)  + \" of \" + maxIter;\nthis.updateMessage(status);\nthis.updateValue(i);\nthis.updateProgress(i, maxIter);\nThread.sleep(2000);\n}\ncatch (InterruptedException e) {\nif(this.isCancelled()) {\nbreak;\n}\n}\n}\nreturn i;\n}\n};\n\n@Override\npublic void start(Stage stage) {\ngoBtn.setOnAction(event -&gt; startTaskOnThread());\ncancelBtn.setOnAction(event -&gt; task.cancel());\nexitBtn.setOnAction(event -&gt; Platform.exit());\n\n//bindings\nlabel.textProperty().bind(task.messageProperty());\nprogressLabel.textProperty().bind(Bindings.concat(\"Progress: \", task.progressProperty().multiply(100).asString().concat(\"%\")));\nvalueLabel.textProperty().bind(Bindings.concat(\"Current Value: \", task.valueProperty().asString()));\nstateLabel.textProperty().bind(Bindings.concat(\"Current State: \", task.stateProperty().asString()));\n\ngoBtn.disableProperty().bind(task.stateProperty().isNotEqualTo(Worker.State.READY));\ncancelBtn.disableProperty().bind(task.stateProperty().isNotEqualTo(Worker.State.RUNNING));\n\n\nHBox buttons = new HBox(10, goBtn, cancelBtn, exitBtn);\n\nVBox root = new VBox(10, label, progressLabel, valueLabel, stateLabel, buttons);\n\nvar scene = new Scene(root, 640, 480);\nstage.setScene(scene);\nstage.show();\n}\n\nprivate void startTaskOnThread() {\nThread longRunningThread = new Thread(task);\n\nlongRunningThread.setDaemon(true);\nlongRunningThread.start();\n}\n\npublic static void main(String[] args) {\nlaunch();\n}\n}\n</code></pre> <p>Az els\u0151 \u00e9s legfontosabb, hogy a feladatot egy <code>Task</code> form\u00e1j\u00e1ban adjuk meg, melyet egy field-ben el is t\u00e1rolunk. Az init blokkban megadunk egy esem\u00e9nykezel\u0151t is, mely akkor fut le, ha a task <code>SUCCEEDED</code> \u00e1llapotba ker\u00fcl. Hasonl\u00f3 esem\u00e9nykezel\u0151ket tal\u00e1lhatunk a k\u00fcl\u00f6nb\u00f6z\u0151 \u00e1llapotokhoz, illetve van egy \u00e1ltal\u00e1nos esem\u00e9nykezel\u0151 is, melynek meg lehet adni az esem\u00e9ny t\u00edpus\u00e1t:</p> <pre><code>task.addEventHandler(WorkerStateEvent.WORKER_STATE_SUCCEEDED, event -&gt; {\nSystem.out.println(\"Success\");\n});\n</code></pre> <p>Az absztrakt <code>call</code> met\u00f3dus kifejt\u00e9s\u00e9ben annyi v\u00e1ltozik, hogy a property-k \u00e9rt\u00e9k\u00e9t friss\u00edtj\u00fck az <code>updateXXX</code> met\u00f3dusok haszn\u00e1lat\u00e1val, \u00edgy a folyamatr\u00f3l a UI-on is megjelen\u00edthet\u00fcnk inform\u00e1ci\u00f3kat, ahogy azt meg is tessz\u00fck majd jelen esetben. Amennyiben <code>InterruptedException</code>-t kapunk, akkor le\u00e1ll\u00edtjuk a for ciklus fut\u00e1s\u00e1t \u00e9s visszat\u00e9r\u00fcnk az aktu\u00e1lis i \u00e9rt\u00e9kkel (ilyenkor vizsg\u00e1ljuk, hogy az\u00e9rt kaptunk-e ilyen kiv\u00e9telt, mert valaki a <code>cancel()</code>-t megh\u00edvta-e).</p> <p>Ezut\u00e1n a fel\u00fcletre kivezet\u00fcnk n\u00e9h\u00e1ny property-t (binding-ok seg\u00edts\u00e9g\u00e9vel), hogy k\u00f6vetni tudjuk a h\u00e1tt\u00e9rben fut\u00f3 feladat \u00e1llapot\u00e1t.</p> <p>Megjegyz\u00e9s</p> <p>A <code>Service</code> oszt\u00e1ly bel\u00fcl egy <code>Task</code>-ot tartalmaz, illetve haszn\u00e1lata nagyban megegyezik a <code>Task</code> haszn\u00e1lat\u00e1val. Itt nem fogjuk bemutatni r\u00e9szletesen sem a <code>Service</code> sem pedig a <code>ScheduledService</code> haszn\u00e1lat\u00e1t.</p>"},{"location":"legacy/07_gyakorlat/#kontakt-alkalmazas-tovabbfejlesztese","title":"Kontakt alkalmaz\u00e1s tov\u00e1bbfejleszt\u00e9se","text":"<p>A kiindul\u00f3 projekt megtal\u00e1lhat\u00f3 a <code>pub/Alkalmaz\u00e1sfejleszt\u00e9s-I/06/01_contacts_final</code> mapp\u00e1ban.</p> <p>Figyelem</p> <p>Ne felejts\u00fck el \u00e1t\u00edrni az <code>application.properties</code> f\u00e1jlban az adatb\u00e1zis el\u00e9r\u00e9s\u00e9t!</p> <p>A t\u00e1bl\u00e1zat jobb oldal\u00e1n, minden sorban tal\u00e1lhat\u00f3 egy \"Delete\" \u00e9s egy \"Edit\" gomb. Tegy\u00fck fel, hogy ezek hat\u00e1s\u00e1ra egy lass\u00fa h\u00e1l\u00f3zati kommunik\u00e1ci\u00f3n kereszt\u00fcli akci\u00f3 fut le, ami blokkolja a UI fel\u00fcletet \u00e9s nem lehet g\u00f6rgetni m\u00e9g be nem fejez\u0151dik. Ennek imit\u00e1l\u00e1s\u00e1hoz egy 5 m\u00e1sodperces v\u00e1rakoz\u00e1st tegy\u00fcnk be a DAO megval\u00f3s\u00edt\u00e1s\u00e1ba.</p> <pre><code>@Override\npublic void delete(Contact contact) {\n\ntry(Connection c = DriverManager.getConnection(connectionURL);\nPreparedStatement stmt = c.prepareStatement(DELETE_CONTACT);\n) {\nstmt.setInt(1, contact.getId());\nTimeUnit.SECONDS.sleep(5);\nstmt.executeUpdate();\n\n} catch (SQLException | InterruptedException throwables) {\nthrowables.printStackTrace();\n}\n\n}\n</code></pre> <p>Ami a kontextusban v\u00e1ltozott: a <code>stmt.executeUpdate();</code> el\u00e9 ker\u00fclt egy sleep. A v\u00e1rakoz\u00e1st jelent\u0151 f\u00fcggv\u00e9nyh\u00edv\u00e1s is dobhat <code>InterruptedException</code> kiv\u00e9telt, amit le kell kezelni! A <code>catch</code> \u00e1g k\u00e9pes arra, hogy t\u00f6bb kiv\u00e9teloszt\u00e1lyt is elkapjon egyszerre, \u00e9s az oszt\u00e1lyokat <code>|</code> (vagy) jellel kell elv\u00e1lasztani. Ugyanez a m\u00f3dos\u00edt\u00e1s ker\u00fclj\u00f6n bele az \u00f6sszes Contact DAO met\u00f3dusba, kiv\u00e9ve a <code>findAll</code>-t.</p> <p>A m\u00f3dosult met\u00f3dusok: <code>save</code>, <code>delete</code>.</p> <p>A futtat\u00e1s ut\u00e1ni elv\u00e1rt eredm\u00e9ny, hogy az alkalmaz\u00e1s indul\u00e1sa ut\u00e1n minden m\u0171velet sok\u00e1ig tart \u00e9s addig a t\u00e1bl\u00e1zat nem g\u00f6rgethet\u0151, hozz\u00e1ad\u00e1s ablak kifagy.</p> <p>Ahhoz hogy reszponz\u00edv maradjon a UI, am\u00edg a back-end fut, a k\u00f6vetkez\u0151 v\u00e1ltoztat\u00e1sok sz\u00fcks\u00e9gesek.</p>"},{"location":"legacy/07_gyakorlat/#mainwindowscontroller","title":"MainWindowsController","text":"<p>A <code>hu.alkfejl.controller</code> csomagban tal\u00e1lhat\u00f3 <code>MainWindowController</code> oszt\u00e1ly <code>deleteContact</code> met\u00f3dus\u00e1t kell felokos\u00edtani ahhoz, hogy a <code>PersonController.getInstance().delete(p);</code> met\u00f3dush\u00edv\u00e1s ne legyen blokkol\u00f3. Ehhez az el\u0151bb ismertetett Thread-eket kell alkalmazni.</p> <pre><code>private void deleteContact(Contact c) {\nAlert confirm = new Alert(Alert.AlertType.CONFIRMATION, \"Are you sure you want to delete contact: \" + c.getName(), ButtonType.YES, ButtonType.NO);\nconfirm.showAndWait().ifPresent(buttonType -&gt; {\nif(buttonType.equals(ButtonType.YES)){\n\nTask&lt;Void&gt; task = new Task&lt;&gt;() {\n@Override\nprotected Void call() throws Exception {\nphoneDAO.deleteAll(c.getId());\ndao.delete(c);\nreturn null;\n}\n};\n\ntask.setOnSucceeded(event1 -&gt; refreshTable());\n\nThread deleteThread = new Thread(task);\ndeleteThread.start();\n\n}\n});\n}\n</code></pre> <p>Amikor a felhaszn\u00e1l\u00f3 meger\u0151s\u00edti, hogy t\u00e9nylegesen ki akarja t\u00f6r\u00f6lni a kiv\u00e1lasztott sort, akkor egy <code>Task</code> (<code>javafx.concurrent.Task</code>) objektumot hozunk l\u00e9tre. Az IDEA legener\u00e1lja a sz\u00fcks\u00e9ges k\u00f3dr\u00e9szletet, \u00e9s a call met\u00f3dust kell megval\u00f3s\u00edtani. Jelen esetben ez csak tov\u00e1bb h\u00edv a DAO-ba (eddig is ezt csin\u00e1lta az itt tal\u00e1lt k\u00f3dr\u00e9szlet).</p> <p>Mint ahogy azt m\u00e1r l\u00e1ttuk, a <code>Task</code> objektum \u00f6nmag\u00e1ban nem futtathat\u00f3, egy <code>Thread</code>-et kell l\u00e9trehozni bel\u0151le, ami tudja futtatni. Az esem\u00e9nykezel\u0151 feladata, hogy friss\u00edtse a t\u00e1bl\u00e1zatot a <code>Task</code> fut\u00e1s\u00e1nak v\u00e9gezt\u00e9vel (elv\u00e1rhat\u00f3, hogy a t\u00f6r\u00f6lt sor nem jelenik meg \u00fajra).</p>"},{"location":"legacy/07_gyakorlat/#addeditcontactcontroller","title":"AddEditContactController","text":"<p>\u00daj kontakt hozz\u00e1ad\u00e1s\u00e1n\u00e1l \u00e9s a m\u00f3dos\u00edt\u00e1s\u00e1n\u00e1l is a <code>onSave</code> met\u00f3dus fut le. Ami elt\u00e9r az el\u0151z\u0151 fejezett\u0151l az az,hogy most kellene tudnunk azt is, hogy milyen eredm\u00e9nnyel futott le a m\u00f3dos\u00edt\u00e1s \u00e9s ennek f\u00fcggv\u00e9ny\u00e9ben jelezni a felhaszn\u00e1l\u00f3 fel\u00e9, hogy sikeres-e a m\u0171velet. Az al\u00e1bbi k\u00f3dr\u00e9szlet a <code>onSave</code> f\u00fcggv\u00e9nyt taglalja.</p> <pre><code>@FXML\npublic void onSave(){\nTask&lt;Boolean&gt; task = new Task&lt;&gt;() {\n@Override\nprotected Boolean call() throws Exception {\ncontact = contactDAO.save(contact);\nif(contact == null){\nreturn false;\n}\nphoneDAO.deleteAll(contact.getId());\n\ncontact.getPhones().forEach(phone -&gt; {\nphone.setId(0);\nphoneDAO.save(phone, contact.getId());\n});\nreturn true;\n}\n};\n\nThread updateThread = new Thread(task);\nupdateThread.start();\n\nApp.&lt;MainWindowController&gt;loadFXML(\"/fxml/main_window.fxml\", App.getStage(), mainWindowController -&gt; {\ntask.setOnSucceeded(event -&gt; {\nBoolean result = task.getValue();\nif(result) {\nAlert alert = new Alert(Alert.AlertType.INFORMATION, \"Saving contact was successful\", ButtonType.OK);\nalert.showAndWait();\nmainWindowController.refreshTable();\n\n} else {\nAlert alert = new Alert(Alert.AlertType.ERROR, \"Saving contact failed\", ButtonType.OK);\nalert.showAndWait();\n}\n});\n});\n}\n</code></pre> <p>A <code>call</code> nem sokban k\u00fcl\u00f6nb\u00f6zik az el\u0151z\u0151t\u0151l. Ut\u00e1na viszont haszn\u00e1t vessz\u00fck a meg\u00edrt <code>loadFXML</code> met\u00f3dusnak, mivel friss\u00edten\u00fcnk kell majd a t\u00e1bl\u00e1zatunkat a f\u0151 ablakon. A <code>refreshTable</code> met\u00f3dust publikusra kellett m\u00f3dos\u00edtanunk, de ez rendben van, hiszen mi\u00e9rt ne friss\u00edthetn\u00e9nk a t\u00e1bl\u00e1zatot egy-egy k\u00e9r\u00e9s alkalm\u00e1val.</p> <p>A m\u00f3dos\u00edt\u00e1sok ut\u00e1n a UI reszponz\u00edv marad, de 5 m\u00e1sodperc ut\u00e1n ad visszajelz\u00e9st, a k\u00e9rt esem\u00e9ny lefut\u00e1sa ut\u00e1n.</p>"},{"location":"legacy/07_gyakorlat/#videok","title":"Vide\u00f3k","text":"<ul> <li>Sz\u00e1lak Bevezet\u00e9s</li> <li>JavaFX sz\u00e1lak bevezet\u00e9s</li> <li>JavaFX Worker sz\u00e1lak (JavaFX Concurrency API)</li> <li>Contacts alkalmaz\u00e1s sz\u00e1lakkal</li> </ul>"},{"location":"legacy/07_gyakorlat/#referenciak","title":"Referenci\u00e1k","text":"<ul> <li>P\u00e1rhuzamos programoz\u00e1s jegyzet - A. Kert\u00e9sz, L. Schrettner, /pub</li> <li>Java Multithreading, TutorialsPoint</li> <li>Concurrency in JavaFX</li> </ul>"},{"location":"legacy/08_gyakorlat/","title":"8. gyakorlat","text":""},{"location":"legacy/08_gyakorlat/#servletek","title":"Servletek","text":""},{"location":"legacy/08_gyakorlat/#mik-azok-a-servletek","title":"Mik azok a servletek?","text":"<p>A servletek egy Web- vagy Alkalmaz\u00e1sszerveren programok, melyek egyfajta k\u00f6ztes r\u00e9tegk\u00e9nt szolg\u00e1lnak a k\u00e9r\u00e9sek (HTTP k\u00e9r\u00e9sek) \u00e9s az adatb\u00e1zis \u00e9s/vagy m\u00e1s alkalmaz\u00e1sok k\u00f6z\u00f6tt.</p> <p>A servletek seg\u00edts\u00e9g\u00e9vel elk\u00fcldhet\u00fcnk a szervernek user form adatokat, adatokat mutathatunk webes fel\u00fcleten a felhaszn\u00e1l\u00f3nak, melyek az adatb\u00e1zisb\u00f3l \u00e9rkeznek, tov\u00e1bb\u00e1 a statikus HTML tartalmak mellett dinamikusan \u00e1ll\u00edthatunk el\u0151 HTML tartalmakat. Innen a n\u00e9v: Java Dinamikus Web.</p> <p>A Java servleteket Java oszt\u00e1lyok seg\u00edts\u00e9g\u00e9vel val\u00f3s\u00edthatjuk meg, melyek a k\u00f6vetkez\u0151 package-ekben tal\u00e1lhat\u00f3ak meg:</p> <ul> <li><code>javax.servlet</code></li> <li><code>javax.servlet.http</code></li> </ul> <p>A servleteket ugyan\u00fagy le kell ford\u00edtani, mint b\u00e1rmelyik m\u00e1sik Java oszt\u00e1lyt.</p>"},{"location":"legacy/08_gyakorlat/#hello-world-servlet","title":"Hello World Servlet","text":"<p>A servletek fejleszt\u00e9s\u00e9hez sz\u00fcks\u00e9g\u00fcnk van n\u00e9h\u00e1ny eszk\u00f6zre. Mint azt m\u00e1r fent olvashattuk kell egy szerver, amin majd fut az alkalmaz\u00e1sunk. Eset\u00fcnkben az Apache Tomcat alkalmaz\u00e1sszervert fogjuk haszn\u00e1lni.</p> <p>Az \u00e1ltalunk haszn\u00e1lt verzi\u00f3 a 9-es, melyet let\u00f6lthet\u00fcnk innen.</p> <p>\u00c9n csak a zip-et mutatom meg, mivel ezt egys\u00e9gesen lehet kezelni minden platformon. Teh\u00e1t t\u00f6lts\u00fck le a zippelt verzi\u00f3t! Ezut\u00e1n csomagoljuk ki egy kellemes helyre (p\u00e9ld\u00e1ul <code>C:\\apps\\apache-tomcat-9.0.31</code>). Az alverzi\u00f3ban lehetnek elt\u00e9r\u00e9sek, de ez n\u00e1lunk nem fog semmit sem befoly\u00e1solni.</p> <p>Ezut\u00e1n ind\u00edtsuk el az IntelliJ-t \u00e9s k\u00e9sz\u00edts\u00fcnk egy \u00faj Maven\u00a0projektet!</p> <p></p> <p>Java 11-et fogunk haszn\u00e1lni, \u00edgy az legyen let\u00f6ltve, illetve be\u00e1ll\u00edtva a <code>$Path</code> \u00e9s a <code>$JAVA_HOME</code> k\u00f6rnyezeti v\u00e1ltoz\u00f3kban. A projekt SDK-j\u00e1t is 11-re \u00e1ll\u00edtjuk, mint ahogy a k\u00e9pen ez l\u00e1tszik is. Nyomjuk meg a Next-et! A project nev\u00e9hez adjuk meg a <code>HelloWorld</code>-\u00f6t! Az Artifact Coordinates alatt adjuk meg a groupId-t (pl: <code>hu.alkfejl</code>), majd Next \u00e9s Finish.</p> <p>Eredm\u00e9nyk\u00e9ppen a projekt strukt\u00far\u00e1ja valahogy \u00edgy kell kin\u00e9zzen:</p> <p></p> <p>Ha ezzel megvagyunk, akkor a jobb fels\u0151 sarokban adjunk hozz\u00e1 egy \u00faj konfigur\u00e1ci\u00f3t, itt fogjuk megadni, hogy a Tomcat szerveren futassa az alkalmaz\u00e1sunkat a rendszer.</p> <p></p> <p>A felugr\u00f3 ablakban a bal oldalon a V\u00e1lasszuk ki a Template-ek k\u00f6z\u00fcl a Tomcat Server/Local men\u00fcpontot! Ezut\u00e1n a jobb oldalon a Server f\u00fcl alatt az Application Server-n\u00e9l nyomjuk a Configure... gombra! A felugr\u00f3 ablakon adjuk meg a Tomcat server mapp\u00e1j\u00e1t (pl: <code>C:\\apps\\apache-tomcat-9.0.31</code>)! Nyomjuk meg az Ok gombot! A Server f\u00fcl t\u00f6bbi eleme maradhat alap\u00e9rtelmezetten, tal\u00e1n a legfels\u0151 <code>Name</code> sort \u00e9rdemes lehet \u00e1t\u00edrni Tomcat-re. A jobb fels\u0151 sarokban, ha r\u00e1nyomunk a create configuration-re, akkor ezt a szerverbe\u00e1llt\u00e1st m\u00e1s alkalmaz\u00e1sokn\u00e1l is haszn\u00e1lhatjuk majd, \u00edgy \u00e9rdemes lehet erre kattintani. Ekkor viszont alul ki\u00edrja a <code>Warning: No artifacts marked for deployment</code> sz\u00f6veget a rendszer. Kattintsunk a fix-re gombra \u00e9s v\u00e1lasszuk ki az <code>&lt;alkalmaz\u00e1sunk neve&gt;:war</code> elemet (Pl: <code>Test:war</code>)! Ezut\u00e1n Apply \u00e9s Ok!</p> <p>Ha ezekkel megvagyunk, akkor mehet a z\u00f6ld play gomb. Miut\u00e1n elinul a Tomcat server, akkor automatikusan felrakja az alkalmaz\u00e1sunkat a rendszer a Tomcat-re \u00e9s egy b\u00f6ng\u00e9sz\u0151ben elind\u00edtja azt.</p> <p>Vide\u00f3 a folyamatr\u00f3l: </p> <p>Ha a fentiekkel megvagyunk akkor l\u00e9tre is hozhatunk egy t\u00e9nyleges servletet. Az eddigi egy statikus HTML oldallal m\u00e9g nem dinamikus web. A maven archetype alapb\u00f3l nem gener\u00e1l nek\u00fcnk java forr\u00e1st, \u00edgy jobb klikk a main-re a project strukt\u00far\u00e1n bel\u00fcl, majd <code>New</code>-&gt;<code>Directiory</code>&gt;<code>java</code>. Eut\u00e1n ebbe a k\u00f6nyvt\u00e1rba hozzunk l\u00e9tre egy \u00faj oszt\u00e1lyt. Class name-nek adjuk meg a <code>HelloWorldServlet</code>-et! \u00cdrjuk bele az al\u00e1bbiakat a f\u00e1jlba! <pre><code>import java.io.IOException;\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@WebServlet(\"/HelloWorldServlet\")\npublic class HelloWorldServlet extends HttpServlet {\n\nprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nresponse.getWriter().append(\"Served at: \").append(request.getContextPath());\n}\n\n}\n</code></pre> A fenti k\u00f3dot nem tudja \u00e9rtelmezni a rendszer, hiszen hi\u00e1nyzik egy fontos maven dependency. Tegy\u00fck be a k\u00f6vetkez\u0151 maven dependency-t a pom.xml-be! <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n&lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;\n&lt;version&gt;4.0.1&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre></p> <p>Figyelem</p> <p>10-es Tomcat eset\u00e9ben t\u00f6bb dolgot m\u00e1sk\u00e9ppen kell csin\u00e1lnunk, mivel breaking change-ek l\u00e9ptek fel. P\u00e9ld\u00e1ul a fenti f\u00fcgg\u0151s\u00e9g m\u00e1r nem megfelel\u0151, mivel a 10-es Tomcat m\u00e1r nem a <code>javax.servlet-api</code>-t haszn\u00e1lja, hanem a <code>jakarta.servlet-api</code>-t, melyhez tartoz\u00f3 Maven dependency:</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;jakarta.servlet&lt;/groupId&gt;\n&lt;artifactId&gt;jakarta.servlet-api&lt;/artifactId&gt;\n&lt;version&gt;5.0.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Emiatt az \u00f6sszes helyen, ahol a f\u00fcgg\u0151s\u00e9g oszt\u00e1lyait haszn\u00e1ljuk, az importokat is meg kell v\u00e1ltoztatni. A <code>servlet-api</code> mellett a JSP is megv\u00e1ltozott <code>javax.servlet.jsp</code>-r\u00f3l <code>jakarta.servlet.jsp</code>-re, tov\u00e1bb\u00e1 a k\u00e9s\u0151bb haszn\u00e1lni k\u00edv\u00e1nt EL (Expression Language) f\u00fcgg\u0151s\u00e9g is megv\u00e1ltozott a <code>javax.el</code>-r\u0151l <code>jakarta.el</code>-re.</p> <p>A v\u00e1ltoz\u00e1sok teljes list\u00e1ja megtal\u00e1lhat\u00f3 itt.</p> <p>A fenti v\u00e1ltoztat\u00e1sok miatt a Tomcat 9.x.x verzi\u00f3j\u00e1t javasoljuk haszn\u00e1lni, mivel a p\u00e9ldak\u00f3dok mind ezzel k\u00e9sz\u00fcltek.</p> <p>A kis z\u00f6ld play gomb helyett most egy \u00fajraj\u00e1tsz\u00e1s gomb van (amennyiben m\u00e9g fut a Tomcat), melyre ha r\u00e1nyomunk \u00e9s a redeploy-t v\u00e1lasztjuk, akkor a Tomcat szerverre \u00fajrat\u00f6lti az alkalmaz\u00e1sunkat a rendszer, azaz \u00fajra leford\u00edtja egy war-r\u00e1 (ez a jar webes megfelel\u0151je: Web Archive-b\u00f3l j\u00f6n a n\u00e9v) \u00e9s beletolja az alkalmaz\u00e1sszerverbe. Ugyanezt a lenti a Server-&gt;Deployment-&gt;Deploy all gombra kattintva is megtehetj\u00fck.</p> <p>Ezzel meg is van a minta projekt\u00fcnk. A tov\u00e1bbiakban k\u00f6zelebbr\u0151l is megn\u00e9zz\u00fck a gener\u00e1lt projektet \u00e9s a gener\u00e1lt f\u00e1jlok tartalm\u00e1t.</p> <p>Vide\u00f3 az els\u0151 szervlet l\u00e9trehoz\u00e1s\u00e1r\u00f3l: </p>"},{"location":"legacy/08_gyakorlat/#servletek-eletciklusa","title":"Servletek \u00e9letciklusa","text":"<p>A servletek \u00e9letciklusa 3 f\u0151 r\u00e9szre oszthat\u00f3:</p> <ul> <li><code>init()</code>: a servlet l\u00e9trej\u00f6ttekor h\u00edv\u00f3dik meg (csak egyszer). \u00c1ltal\u00e1ban egy servlet akkor j\u00f6n l\u00e9tre, amikor el\u0151sz\u00f6r k\u00e9r hozz\u00e1f\u00e9r\u00e9st egy felhaszn\u00e1l\u00f3, de rendelkezhet\u00fcnk m\u00e1sk\u00e9ppen is (pl. a szerver ind\u00edt\u00e1sakor t\u00f6lt\u0151dj\u00f6n be a servlet is).</li> <li><code>service()</code>: a felhaszn\u00e1l\u00f3i k\u00e9r\u00e9seket (eset\u00fcnkben HTTP k\u00e9r\u00e9sek) a service szolg\u00e1lja ki</li> <li><code>destroy()</code>: a servlet megsemmis\u00edt\u00e9sekor h\u00edv\u00f3dik</li> </ul> <p>A fenti met\u00f3dusokat a szervlet kont\u00e9ner h\u00edvja meg. </p> <p>A servlet l\u00e9trehoz\u00e1sa ut\u00e1n, amikor a felhaszn\u00e1l\u00f3 k\u00e9r\u00e9st k\u00fcld egy szervernek, akkor a servletb\u0151l egy p\u00e9ld\u00e1ny l\u00e9tezik \u00e9s a k\u00e9r\u00e9seket k\u00fcl\u00f6n sz\u00e1lak kezelik. Ezeket a k\u00e9r\u00e9seket a servlet <code>service()</code> met\u00f3dusa kezeli (mindet k\u00fcl\u00f6n sz\u00e1lon). A service met\u00f3dus bel\u00fcl \"sz\u00e9tv\u00e1logatja\" a k\u00e9r\u00e9sek t\u00edpus\u00e1t \u00e9s megh\u00edvja, a <code>doGet(...)</code>, <code>doPost(...)</code>, stb. met\u00f3dusokat. A fenti p\u00e9ld\u00e1ban csak a GET k\u00e9r\u00e9seket kezelj\u00fck. GET k\u00e9r\u00e9s p\u00e9ld\u00e1ul, ha az URL-re navig\u00e1lunk. A doGet-nek, ahogyan minden doXXX met\u00f3dusnak k\u00e9t param\u00e9tere van melyek igen fontosak, hiszen \u00edgy tudhatunk meg inform\u00e1ci\u00f3kat a k\u00e9r\u00e9s pontos mivolt\u00e1r\u00f3l, illetve a v\u00e1laszba \u00edgy helyezhet\u00fcnk el inform\u00e1ci\u00f3kat (v\u00e1lasz st\u00e1tusz k\u00f3dja, v\u00e1lasz header-\u00f6k, cookie-k, stb). A k\u00e9t param\u00e9ter t\u00edpusa:</p> <ul> <li><code>HttpServletRequest</code>: a k\u00e9r\u00e9s t\u00edpusa</li> <li><code>HttpServletResponse</code>: a v\u00e1lasz t\u00edpusa</li> </ul> <p></p>"},{"location":"legacy/08_gyakorlat/#adatok-kuldese-a-szervernek","title":"Adatok k\u00fcld\u00e9se a szervernek","text":"<p>Az alkalmaz\u00e1sunk m\u0171k\u00f6d\u00e9sekor biztosan sz\u00fcks\u00e9g\u00fcnk lesz valamilyen inform\u00e1ci\u00f3kra, melyet a felhaszn\u00e1l\u00f3 k\u00fcld az alkalmaz\u00e1sszervernek. A GET \u00e9s a POST eset\u00e9ben elt\u00e9r\u0151 opci\u00f3ink vannak.</p> <p>A GET eset\u00e9ben az \u00fagynevezett queryString-ben szok\u00e1s k\u00fcldeni inform\u00e1ci\u00f3kat. Pl.:</p> <p>http://www.test.com/hello?key1=value1&amp;key2=value2</p> <p>Az adatokat az URL-ben k\u00fcldj\u00fck el a szervernek. Az URL-ben a query string kezdet\u00e9t a '?' jelzi, majd ut\u00e1na <code>key=value</code> form\u00e1ban adhatjuk meg az adatokat, melyeket '&amp;' v\u00e1laszt el egym\u00e1st\u00f3l. Ezeket a param\u00e9terek a servlet megkapja \u00e9s ezt fel tudjuk majd haszn\u00e1lni.</p> <p>POST eset\u00e9ben is haszn\u00e1lhatunk queryString-et, de a POST k\u00e9r\u00e9s rendelkezik t\u00f6rzzsel is. Szerencs\u00e9re a t\u00f6rzsben \u00e9s a queryString-ben \u00e9rkez\u0151 param\u00e9tereket egys\u00e9gesen \u00e9rhetj\u00fck el, nem kell k\u00fcl\u00f6n-k\u00fcl\u00f6n vizsg\u00e1lnunk \u0151ket.</p> <p>Az adatok kinyer\u00e9s\u00e9re a servletben 4 f\u0151 met\u00f3dus haszn\u00e1lhat\u00f3:</p> <ul> <li><code>getParameter()</code></li> <li><code>getParameterValues()</code></li> <li><code>getParameterNames()</code></li> <li><code>getParameterMap()</code></li> </ul> <p>N\u00e9zz\u00fcnk erre egy p\u00e9ld\u00e1t! Az el\u0151z\u0151 p\u00e9ld\u00e1t m\u00f3dos\u00edthatjuk egyel\u0151re:</p> <pre><code>import java.io.IOException;\nimport java.io.PrintWriter;\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@WebServlet(\"/HelloWorldServlet\")\npublic class HelloWorldServlet extends HttpServlet {\n\npublic void doGet(HttpServletRequest request, HttpServletResponse response)\nthrows ServletException, IOException {\n\n// Be\u00e1ll\u00edtjuk, hogy milyen mime t\u00edpus\u00fa v\u00e1laszunk lesz\nresponse.setContentType(\"text/html\");\n\nPrintWriter out = response.getWriter(); // \u00edgy tudunk majd a v\u00e1lasz objektumba t\u00f6rzs\u00e9be \u00edrni\n\nout.println(\n\"&lt;html&gt;\\n\" +\n\"&lt;head&gt;&lt;title&gt;Param\u00e9terek haszn\u00e1lata&lt;/title&gt;&lt;/head&gt;\\n\" +\n\"&lt;body&gt;\\n\" +\n\"&lt;ul&gt;\\n\" +\n\"  &lt;li&gt;First Name: \"\n+ request.getParameter(\"first_name\") + \"\\n\" +\n\"  &lt;li&gt;Last Name: \"\n+ request.getParameter(\"last_name\") + \"\\n\" +\n\"&lt;/ul&gt;\\n\" +\n\"&lt;/body&gt;\" +\n\"&lt;/html&gt;\"\n);\n}\n\n}\n</code></pre> <p>A p\u00e9ld\u00e1ban csak a doGet met\u00f3dust defini\u00e1ljuk, melyben a v\u00e1lasznak be\u00e1ll\u00edtjuk a tartalom t\u00edpus\u00e1t (mime type), majd a response objektum-hoz lek\u00e9rj\u00fck a <code>PrintWriter</code>-t \u00e9s ezen kereszt\u00fcl fogjuk \u00edrni a v\u00e1laszt. A v\u00e1laszba egy HTML-t gener\u00e1lunk, melybe belerakjuk az el\u0151zetesen elk\u00fcld\u00f6tt <code>first_name</code> \u00e9s <code>last_name</code> param\u00e9tereket.</p> <p>Miut\u00e1n elk\u00e9sz\u00edtett\u00fck a servlet\u00fcnket \u00e9s futtatjuk azt a Tomcat server\u00fcnk\u00f6n, \u00edrjuk be a k\u00f6vetkez\u0151t a b\u00f6ng\u00e9sz\u0151 c\u00edmsor\u00e1ba:</p> <pre><code>http://localhost:8080/HelloWorld/HelloWorldServlet?first_name=John&amp;last_name=Doe\n</code></pre> <p>A szerver \u00e1ltal k\u00fcld\u00f6tt v\u00e1laszba \u00edgy beleker\u00fclnek az elk\u00fcld\u00f6tt adatok.</p> <p></p> <p>Most n\u00e9zz\u00fck meg ugyanezt egy form haszn\u00e1lat\u00e1val! Ehhez k\u00e9sz\u00edts\u00fcnk egy HTML \u00e1llom\u00e1nyt! Az is megfelel\u0151 ha az index.jsp-t \u00edrjuk \u00e1t:</p> <pre><code>&lt;html&gt;\n   &lt;body&gt;\n      &lt;form action = \"HelloWorldServlet\" method = \"GET\"&gt;\n         First Name: &lt;input type = \"text\" name = \"first_name\"&gt;\n         &lt;br /&gt;\n         Last Name: &lt;input type = \"text\" name = \"last_name\" /&gt;\n         &lt;input type = \"submit\" value = \"Submit\" /&gt;\n      &lt;/form&gt;\n   &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Amit nagyon fontos \u00e9szrevenni, hogy a <code>form</code> rendelkezik egy <code>action</code> \u00e9s egy <code>method</code> attrib\u00fatummal. Az <code>action</code>-ben mondhatjuk meg, hogy ki fogja kezelni a k\u00e9r\u00e9st, melynek t\u00edpus\u00e1t pedig a <code>method</code>-ban adhatjuk meg (jelenleg GET).</p> <p>A fenti servlet-et egy az egyben haszn\u00e1lhatjuk. Miut\u00e1n megnyomjuk a submit gombot egy GET k\u00e9r\u00e9st k\u00fcld\u00fcnk a <code>HelloWorldServlet</code>-nek, ami az el\u0151z\u0151vel megegyez\u0151 kimenetet adja, ha a formba ugyanazokat az adatokat \u00edrjuk, mint amit a queryString-ben megadtunk. A form-on bel\u00fcl fontos az input elemeknek a <code>name</code> attrib\u00fatuma, mivel a servlet ilyen n\u00e9ven fogja el\u00e9rni ezeket a param\u00e9tereket. Azt is fontos l\u00e1tni, hogy a form nem a query stringben k\u00fcldi a param\u00e9tereket, hanem a form data-ban, viszont a szerver oldalon (a szervletben) egys\u00e9gesen tudjuk a param\u00e9tereket kiolvasni \u00e9s nem kell azzal foglalkoznunk, hogy azt hol adt\u00e1k meg.</p> <p>A fenti p\u00e9ld\u00e1ban, ha \u00e1t\u00edrjuk az index.jsp-ben, hogy GET helyett POST-ot haszn\u00e1ljunk, akkor nem fog m\u0171k\u00f6dni a t\u00f6rt\u00e9net, de nagyon egyszer\u0171en megoldhat\u00f3. A servletben hozzunk l\u00e9tre egy <code>doPost(...)</code> met\u00f3dust is, mely a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>@Override\npublic void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\ndoGet(req, resp);\n}\n</code></pre> <p>A fenti k\u00f3dr\u00e9szlet nemes egyszer\u0171s\u00e9ggel tov\u00e1bbadja a doGet-nek a feladatot (tov\u00e1bb\u00edtja a k\u00e9r\u00e9s \u00e9s a v\u00e1lasz objektumokat is). Az eredm\u00e9ny pedig ugyanaz lesz, de ezennel POST k\u00e9r\u00e9st\u00edpust haszn\u00e1ltunk.</p> <p>A k\u00f6vetkez\u0151 p\u00e9ld\u00e1ban az \u00f6sszes elk\u00fcld\u00f6tt param\u00e9tert ki\u00edrjuk a v\u00e1laszban.</p> <pre><code>public void doGet(HttpServletRequest request, HttpServletResponse response)\nthrows ServletException, IOException {\n\nresponse.setContentType(\"text/html\");\n\nPrintWriter out = response.getWriter();\nout.append(\n\"&lt;html&gt;\\n\" +\n\"&lt;head&gt;&lt;title&gt;Param\u00e9terek&lt;/title&gt;&lt;/head&gt;\\n\" +\n\"&lt;body&gt;\\n\" +\n\"&lt;table&gt;\\n\"\n);\n\nEnumeration&lt;String&gt; params = request.getParameterNames();\n\nwhile(params.hasMoreElements()) {\nString p = params.nextElement();\n\nout.append(\"&lt;tr&gt;\"\n+ \"&lt;td&gt;\" + p + \"&lt;/td&gt;\"\n+ \"&lt;td&gt;\" + request.getParameter(p) + \"&lt;/td&gt;\"\n+ \"&lt;/tr&gt;\");\n\n}\n\nout.append(\"&lt;/table&gt;\\n\" +\n\"&lt;/body&gt;\" +\n\"&lt;/html&gt;\");\n}\n</code></pre> <p></p> <p>Feladat</p> <p>K\u00e9sz\u00edts\u00fck el a fenti p\u00e9ld\u00e1t \u00fagy, hogy a <code>getParameterMap()</code> met\u00f3dust haszn\u00e1ljuk a param\u00e9terek kinyer\u00e9s\u00e9hez! Arra figyelj\u00fcnk, hogy lehetnek olyan param\u00e9terek, melyekhez t\u00f6bb \u00e9rt\u00e9k tartozik. Ez\u00e9rt ad vissza a getParameterMap() egy String -&gt; String[] map-et.</p>"},{"location":"legacy/08_gyakorlat/#status-codes","title":"Status codes","text":"<p>A v\u00e1laszban a szerver be\u00e1ll\u00edthat egy status code-ot, melyet azt\u00e1n a kliens oldalon k\u00fcl\u00f6nb\u00f6z\u0151 c\u00e9lokra haszn\u00e1lhatunk. N\u00e9h\u00e1ny gyakori HTTP status code:</p> <ul> <li>200: OK (minden rendben van)</li> <li>400: Bad Request (a szerver nem \u00e9rti, hogy mit szeretne a kliens a k\u00e9r\u00e9s\u00e9vel)</li> <li>401: Unauthorized (nincs joga a felhaszn\u00e1l\u00f3nak, pl.: csak admin k\u00e9rdezhet ilyet t\u0151lem...)</li> <li>404: Not Found (nem tal\u00e1lom azt az er\u0151forr\u00e1st amire sz\u00fcks\u00e9ged van. Pl.: olyan HTML oldalt keresek ami nem l\u00e9tezik a szerveren)</li> <li>500: Internal Server Error: A szerveren valami nem v\u00e1rt hiba t\u00f6rt\u00e9nt</li> </ul> <p>Ezeken fel\u00fcl m\u00e9g rengeteg f\u00e9le HTTP status code van, de ezekkel m\u00e1r b\u0151ven el lehet indulni.</p> <p>\u00c1ll\u00edtsunk be status code-ot a v\u00e1laszban!</p> <pre><code>public void doGet(HttpServletRequest request, HttpServletResponse response)\nthrows ServletException, IOException {\n\n// Set error code and reason.\nresponse.setStatus(200);\n}\n</code></pre> <p>Ha a b\u00f6ng\u00e9sz\u0151ben (pl.: Chrome-ban) a <code>http://localhost:8080/HelloWorld/HelloWorldServlet</code> helyre l\u00e1togatunk \u00e9s el\u0151szedj\u00fck a fejleszt\u0151i eszk\u00f6z\u00f6ket (Chrome-ban F12), ott v\u00e1lasszuk ki a network f\u00fclet! Itt l\u00e1thatjuk, hogy t\u00f6rt\u00e9nt egy k\u00e9r\u00e9s a HelloWorldServlet-re, melynek a status code-ja 200-at adott vissza.</p> <p></p> <p>Mag\u00e1t a HelloWorldServlet k\u00e9r\u00e9st is kiv\u00e1laszthatjuk, ha r\u00e1kattintunk, \u00e9s ekkor t\u00f6bb inform\u00e1ci\u00f3t l\u00e1thatunk az adott k\u00e9r\u00e9sr\u0151l.</p> <p>Feladat</p> <p>Pr\u00f3b\u00e1ljuk ki, hogy \u00e1t\u00edrjuk a status code-ot mondjuk 404-re vagy valamilyen hibajelz\u0151 status code-ra! Pr\u00f3b\u00e1ljuk ki, a k\u00f6vetkez\u0151t is: <code>response.sendError(401, \"Need auth\");</code></p> <p>Feladat</p> <p>Az el\u0151z\u0151 t\u00e9m\u00e1ban meg\u00edrt form-os p\u00e9ld\u00e1t eg\u00e9sz\u00edts\u00fck ki \u00fagy, hogy amennyiben a param\u00e9terek k\u00f6z\u00f6tt nem szerepel valamelyik elv\u00e1rt \u00e9rt\u00e9k (last_name vagy first_name), akkor 400-as hibak\u00f3dot adunk vissza.</p>"},{"location":"legacy/08_gyakorlat/#webxml","title":"web.xml","text":"<p>Itt az ideje, hogy megvizsg\u00e1ljuk a <code>web.xml</code> \u00e1llom\u00e1nyt, melyet legener\u00e1ltattunk a rendszerrel! A <code>web.xml</code> egy \u00fagynevezett deployment descriptor, melyet a deploy-ol\u00e1s sor\u00e1n haszn\u00e1l a rendszer (azaz akkor amikor a legy\u00e1rtott war-t belerakjuk az alkalmaz\u00e1sszerverbe \u00e9s ott elindul az alkalmaz\u00e1s).</p> <p>A deployment descriptor egy \u00e1ltal\u00e1nos elnevez\u00e9se az olyan konfigur\u00e1ci\u00f3s f\u00e1jloknak, melyek egy alkalmaz\u00e1s, webes t\u00e1rol\u00f3ba t\u00f6rt\u00e9n\u0151 telep\u00edt\u00e9s\u00e9nek m\u00f3dj\u00e1t defini\u00e1lj\u00e1k, struktur\u00e1lt form\u00e1ban.</p> <p>A Java Platform, Enterprise Edition le\u00edr\u00f3i megadj\u00e1k, hogyan legyenek telep\u00edtve a modulok \u00e9s komponensek. Ilyen komponensek lehetnek p\u00e9ld\u00e1ul webalkalmaz\u00e1sok. Ez a le\u00edr\u00f3 f\u00e1jl tartalmazza az utas\u00edt\u00e1sokat a webalkalmaz\u00e1s telep\u00edt\u00e9s\u00e9hez, melyet \"deployment tool\" fog \u00e9rtelmezni. Ez a be\u00e1ll\u00edt\u00e1sok alapj\u00e1n, k\u00fcl\u00f6nf\u00e9le kont\u00e9ner \u00e9s biztons\u00e1gi be\u00e1ll\u00edt\u00e1st v\u00e9gez el, valamint speci\u00e1lis k\u00f6rnyezeti be\u00e1ll\u00edt\u00e1sokat alkalmazhat. A szervleteket az alkalmaz\u00e1sszerver az \u00fagynevezett servlet kont\u00e9nerbe t\u00f6lti be \u00e9s itt fognak futni ezek a szervletek.</p> <p>Webalkalmaz\u00e1sokn\u00e1l a telep\u00edt\u00e9si le\u00edr\u00f3kat <code>web.xml</code>-nek h\u00edvj\u00e1k, \u00e9s a projekt mappaszerkezet\u00e9ben a <code>WEB-INF</code> mapp\u00e1ban tal\u00e1lhat\u00f3. A <code>web.xml</code>-ben is megadhat\u00f3ak p\u00e9ld\u00e1ul a servlet elnevez\u00e9sek \u00e9s az URL lek\u00e9pez\u00e9sek.</p>"},{"location":"legacy/08_gyakorlat/#servletek-es-url-ek","title":"Servletek \u00e9s URL-ek","text":"<p>A <code>web.xml</code> egy kapcsolatot defini\u00e1l URL c\u00edmek \u00e9s a szervletek k\u00f6z\u00f6tt, melyek a k\u00e9r\u00e9seket szolg\u00e1lj\u00e1k ki. A Webkiszolg\u00e1l\u00f3 arra haszn\u00e1lja ezt a konfigur\u00e1ci\u00f3s f\u00e1jlt, hogy megkeresse az adott URL-hez tartoz\u00f3 szervletet, \u00e9s megh\u00edvja a k\u00e9r\u00e9shez tartoz\u00f3 oszt\u00e1ly megfelel\u0151 met\u00f3dus\u00e1t. (pl. a doGet() met\u00f3dust a HTTP GET k\u00e9r\u00e9sek eset\u00e9n).</p> <p>Egy URL-t egy szervlethez a k\u00f6vetkez\u0151 m\u00f3don lehet kapcsolni. A <code>&lt;servlet&gt;</code> kulcssz\u00f3val deklar\u00e1ljuk a szervletet, majd megadjuk a kapcsolatot egy URL c\u00edmmel. Ezt a <code>&lt;servlet-mapping&gt;</code> kulcssz\u00f3val tehetj\u00fck meg.</p> <p>A <code>&lt;servlet&gt;</code> elem megad\u00e1s\u00e1hoz defini\u00e1lnunk kell a nev\u00e9t, az oszt\u00e1ly\u00e1t \u00e9s a kezdeti param\u00e9tereit (ha vannak ilyenek). Az oszt\u00e1ly tag arra a Java oszt\u00e1lyra hivatkozik, amely a szervlethez befut\u00f3 k\u00e9r\u00e9sek kezel\u00e9s\u00e9t val\u00f3s\u00edtja meg. T\u00f6bbsz\u00f6r is deklar\u00e1lhat\u00f3 ugyanaz az oszt\u00e1ly, ha a kiindul\u00e1si param\u00e9terei k\u00fcl\u00f6nb\u00f6z\u0151ek, azonban a n\u00e9vnek egyedinek kell lennie a teljes f\u00e1jlban.</p> <pre><code>&lt;servlet&gt;\n&lt;servlet-name&gt;HelloWorldServlet&lt;/servlet-name&gt;\n&lt;servlet-class&gt;HelloWorldServlet&lt;/servlet-class&gt;\n&lt;/servlet&gt;\n\n&lt;servlet-mapping&gt;\n&lt;servlet-name&gt;HelloWorldServlet&lt;/servlet-name&gt;\n&lt;url-pattern&gt;/HelloWorldServlet&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban defini\u00e1lunk egy Servlet-et, melynek neve <code>HelloWorldServlet</code> lesz. A hozz\u00e1 tartoz\u00f3 oszt\u00e1ly ugyanerre a n\u00e9vre hallgat. Ezut\u00e1n a <code>&lt;servlet-mapping&gt;</code>-ben megadhatjuk, hogy az el\u0151zetesen <code>HelloWorldServlet</code> n\u00e9vre keresztelt servlet az \u00f6sszes olyan k\u00e9r\u00e9st szolg\u00e1lja ki, amely a <code>/HelloWorldServlet</code> URL-re t\u00f6rt\u00e9nik. Ha minden k\u00e9r\u00e9st ezzel a servlettel szeretn\u00e9nk kiszolg\u00e1lni, akkor \u00edrhatn\u00e1nk ezt is:</p> <pre><code>&lt;servlet-mapping&gt;\n&lt;servlet-name&gt;HelloWorldServlet&lt;/servlet-name&gt;\n&lt;url-pattern&gt;/*&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n</code></pre> <p>Az alkalmaz\u00e1sunkban, ha megtekintj\u00fck a <code>web.xml</code> \u00e1llom\u00e1nyt, akkor m\u00e9gsem l\u00e1tunk ilyen servlet megad\u00e1st. Ez az\u00e9rt van, mert a 3.0-\u00e1s servlet standardba beker\u00fclt egy \u00faj elem, melynek seg\u00edts\u00e9g\u00e9vel k\u00f6nnyebben megadhatjuk a fenti URL lek\u00e9pez\u00e9st. Ehhez vizsg\u00e1ljuk, meg a <code>HelloWorldServlet</code> oszt\u00e1lyt! Vegy\u00fck \u00e9szre az al\u00e1bbi annot\u00e1ci\u00f3t az oszt\u00e1lyon!</p> <pre><code>@WebServlet(\"/HelloWorldServlet\")\n</code></pre> <p>Ez pontosan azt mondja meg a rendszernek, hogy ez az oszt\u00e1ly egy servlet, mely a <code>/HelloWorldServlet</code> URL-re \u00e9rkez\u0151 k\u00e9r\u00e9seket fogja kiszolg\u00e1lni. Ebben az esetben a servlet neve megegyezik az oszt\u00e1ly nev\u00e9vel. Amennyiben m\u00e1shogy szeretn\u00e9nk rendelkezni akkor az annot\u00e1ci\u00f3nak megadhatunk tov\u00e1bbi param\u00e9tereket is. P\u00e9ld\u00e1k:</p> <pre><code>// Servlet nev\u00e9nek megad\u00e1sa\n@WebServlet(name=\"HelloWorldServlet\", urlPatterns=\"/HelloWorldServlet\")\n\n// t\u00f6bb url pattern megad\u00e1sa\n@WebServlet(urlPatterns = {\"/HelloWorldServlet\", \"/HelloWorld\"})\n\n//init-paramok megad\u00e1sa\n@WebServlet(\nurlPatterns = \"/HelloWorldServlet\",\ninitParams =\n{\n@WebInitParam(name = \"saveDir\", value = \"D:/FileUpload\"),\n@WebInitParam(name = \"allowedTypes\", value = \"jpg,jpeg,gif,png\")\n}\n)\n</code></pre> <p>A teljes list\u00e1t l\u00e1sd itt.</p>"},{"location":"legacy/08_gyakorlat/#welcome-file-lista","title":"Welcome File Lista","text":"<p>Amikor egy URL nem egy f\u00e1jlra, hanem a szerveren tal\u00e1lhat\u00f3 valamely almapp\u00e1ra hivatkozik, akkor lehet\u0151s\u00e9g van megadni egy sor alap\u00e9rtelmezett oldalt, amik kezelik a k\u00e9r\u00e9st. A welcome file list\u00e1t a <code>web.xml</code>-en bel\u00fcl kell megadnunk.</p> <pre><code>&lt;welcome-file-list&gt;\n&lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;\n&lt;welcome-file&gt;index.html&lt;/welcome-file&gt;\n&lt;/welcome-file-list&gt;\n</code></pre> <p>Ebben az esetben, ha ell\u00e1togatunk a <code>localhost/&lt;alkalmaz\u00e1sunk neve&gt;</code> helyre, akkor a rendszer els\u0151k\u00e9nt egy <code>index.jsp</code>-t fog keresni \u00e9s ezt k\u00fcldi vissza v\u00e1laszk\u00e9nt, ha ilyet nem tal\u00e1l, akkor megpr\u00f3b\u00e1lja ugyanezt az <code>index.html</code>-el.</p>"},{"location":"legacy/08_gyakorlat/#servletek-egyuttmukodese","title":"Servletek egy\u00fcttm\u0171k\u00f6d\u00e9se","text":"<p>A <code>RequestDispatcher</code> oszt\u00e1ly ny\u00fajt ehhez t\u00e1mogat\u00e1st, melynek seg\u00edts\u00e9g\u00e9vel a k\u00e9r\u00e9st egy m\u00e1sik er\u0151forr\u00e1shoz (HTML, servlet, JSP) juttathatjuk el. Haszn\u00e1lhatjuk arra is, hogy egy m\u00e1sik er\u0151forr\u00e1s (HTML, servlet, JSP) v\u00e1lasz\u00e1t elhelyezz\u00fck az eredeti k\u00e9r\u00e9st kiszolg\u00e1l\u00f3 servlet v\u00e1lasz\u00e1ba (igaz\u00e1b\u00f3l t\u00f6bb er\u0151forr\u00e1s j\u00e1tszik szerepet a v\u00e1lasz l\u00e9trehoz\u00e1s\u00e1ban).</p> <p>A <code>RequestDispatcher</code> k\u00e9t met\u00f3dust ad erre:</p> <ul> <li><code>public void forward(ServletRequest request,ServletResponse response)throws ServletException,java.io.IOException</code></li> <li><code>public void include(ServletRequest request,ServletResponse response)throws ServletException,java.io.IOException</code></li> </ul> <p>A k\u00f6vetkez\u0151 \u00e1br\u00e1n a <code>forward</code> l\u00e1that\u00f3:</p> <p> </p> <p>A felhaszn\u00e1l\u00f3 k\u00fcld egy k\u00e9r\u00e9st, melyre a Servlet1 ad valamilyen v\u00e1laszt (a response-ban b\u00e1rmit \u00e1ll\u00edthatunk), pl bele\u00edrja az output stream-be, hogy cica (de m\u00e9g nem k\u00fcldi a v\u00e1laszt vissza a kliensnek!!!). Ezut\u00e1n tov\u00e1bb\u00edtjuk a Servlet2-h\u00f6z a RequestDispatcher seg\u00edts\u00e9g\u00e9vel. A Servlet2 elhelyezi a v\u00e1laszban a saj\u00e1t eredm\u00e9nyeit (pl bele\u00edrja, hogy macska). Ezut\u00e1n m\u00e1r nem forwardolunk, hanem a v\u00e1laszt visszak\u00fcldj\u00fck a kliensnek, mely \u00edgy tartalmazza a Servlet1 \u00e9s a Servlet2 v\u00e1laszait is. Az is el\u0151fordulhat, hogy a Servlet1 nem helyezett el semmilyen konkr\u00e9t elemet a v\u00e1laszban, viszont mondjuk \u0151 \u00e1ll\u00edt be automatikusan egy sz\u00fcks\u00e9ges param\u00e9tert Servlet2 sz\u00e1m\u00e1ra.</p> <p>Ehhez k\u00e9pest az include egy picit m\u00e1sk\u00e9ppen m\u0171k\u00f6dik, ahogy azt az al\u00e1bbi \u00e1bra j\u00f3l mutatja:</p> <p> </p> <p>A Servlet1 include-olja a Servlet2-t, mely elk\u00e9sz\u00edti a v\u00e1lasz\u00e1t \u00e9s azt a Servlet1 v\u00e1lasz\u00e1ba is belerakjuk.</p> <p>A RequestDispatcher-re az al\u00e1bbi m\u00f3don szerezhet\u00fcnk referenci\u00e1t:</p> <pre><code>RequestDispatcher rd=request.getRequestDispatcher(\"Servlet2\");\nrd.forward(request, response); // a k\u00e9r\u00e9s \u00e9s v\u00e1lasz tov\u00e1bb\u00edt\u00e1sa Servlet2-nek\n</code></pre>"},{"location":"legacy/08_gyakorlat/#bejelentkezes-pelda","title":"Bejelentkez\u00e9s p\u00e9lda","text":"<p>index.html <pre><code>&lt;form action=\"servlet1\" method=\"post\"&gt;  \n  Name:&lt;input type=\"text\" name=\"userName\"/&gt;&lt;br/&gt;  \n  Password:&lt;input type=\"password\" name=\"userPass\"/&gt;&lt;br/&gt;  \n  &lt;input type=\"submit\" value=\"login\"/&gt;  \n&lt;/form&gt;\n</code></pre></p> <p>Login.java <pre><code>...\n@WebServlet(\"/servlet1\")\npublic class Login extends HttpServlet {  public void doPost(HttpServletRequest request, HttpServletResponse response)  throws ServletException, IOException {  response.setContentType(\"text/html\");  PrintWriter out = response.getWriter();  String n=request.getParameter(\"userName\");  String p=request.getParameter(\"userPass\");  if(p.equals(\"servlet\"){  RequestDispatcher rd=request.getRequestDispatcher(\"servlet2\");  rd.forward(request, response);  }  else{  out.print(\"Sorry UserName or Password Error!\");  RequestDispatcher rd=request.getRequestDispatcher(\"/index.html\");  rd.include(request, response);  }  }  }  </code></pre></p> <p>WelcomeServlet.java: <pre><code>@WebServlet(\"/servlet2\")\npublic class WelcomeServlet extends HttpServlet {  public void doPost(HttpServletRequest request, HttpServletResponse response)  throws ServletException, IOException {  response.setContentType(\"text/html\");  PrintWriter out = response.getWriter();  String n=request.getParameter(\"userName\");  out.print(\"Welcome \"+n);  }  }  </code></pre></p> <p>A fenti p\u00e9lda puszt\u00e1n a szervletek egy\u00fcttm\u0171k\u00f6d\u00e9s\u00e9t mutatja be, production k\u00f3dba ne haszn\u00e1ljunk ilyen logint!!!</p>"},{"location":"legacy/08_gyakorlat/#atiranyitas","title":"\u00c1tir\u00e1ny\u00edt\u00e1s","text":"<p>Az include-hoz \u00e9s a forward-hoz hasonl\u00f3 a <code>sendRedirect</code> met\u00f3dus, de fontos k\u00fcl\u00f6nbs\u00e9gek vannak, melynek meg\u00e9rt\u00e9s\u00e9t az al\u00e1bbi \u00e1bra mutatja:</p> <p> </p> <p>Ebben az esetben a Servlet1 v\u00e1laszban annyit k\u00fcld, hogy neked kliens fiam, valahova m\u00e1shova kell menned, hogy megkapd a megfelel\u0151 v\u00e1laszt. Ezt vissza is k\u00fcldi a kliensnek, majd Servlet2-h\u00f6z megy el a kliens \u00e9s \u0151 fogja a v\u00e9geredm\u00e9nyt el\u00e9t\u00e1rni. P\u00e9lda: Amennyiben siker\u00fclt bejelentkezni egy rendszerbe (servlet1 v\u00e9gzi az autentik\u00e1ci\u00f3t), akkor az alkalmaz\u00e1sszerver tov\u00e1bbir\u00e1ny\u00edtja a felhaszn\u00e1l\u00f3t valamilyen kezd\u0151k\u00e9perny\u0151re, mondjuk a profilj\u00e1ra.</p> <p>P\u00e9lda: <pre><code>response.sendRedirect(\"http://www.inf.u-szeged.hu\");  </code></pre></p>"},{"location":"legacy/08_gyakorlat/#servletconfig","title":"ServletConfig","text":"<p>A web kont\u00e9ner minden szervlet sz\u00e1m\u00e1ra k\u00e9sz\u00edt egy ServletConfig obkjektumot, mely lehet\u0151v\u00e9 teszi a servletek konfigur\u00e1ci\u00f3j\u00e1t, param\u00e9terez\u00e9s\u00e9t.</p> <p>P\u00e9lda:</p> <p>web.xml <pre><code>&lt;web-app&gt;  &lt;servlet&gt;  &lt;servlet-name&gt;DemoServlet&lt;/servlet-name&gt;  &lt;servlet-class&gt;DemoServlet&lt;/servlet-class&gt;  &lt;init-param&gt;  &lt;param-name&gt;driver&lt;/param-name&gt;  &lt;param-value&gt;org.sqlite.JDBC&lt;/param-value&gt;  &lt;/init-param&gt;  &lt;/servlet&gt;  &lt;servlet-mapping&gt;  &lt;servlet-name&gt;DemoServlet&lt;/servlet-name&gt;  &lt;url-pattern&gt;/servlet1&lt;/url-pattern&gt;  &lt;/servlet-mapping&gt;  &lt;/web-app&gt;  </code></pre></p> <p>DemoServlet: <pre><code>...\npublic class DemoServlet extends HttpServlet {  public void doGet(HttpServletRequest request, HttpServletResponse response)  throws ServletException, IOException {  response.setContentType(\"text/html\");  PrintWriter out = response.getWriter();  ServletConfig config=getServletConfig();  String driver=config.getInitParameter(\"driver\");  out.print(\"Driver is: \"+driver);  out.close();  }  }  </code></pre></p> <p>Fontos</p> <p>A param\u00e9ter csak az adott servletben lesz el\u00e9rhet\u0151!!! Amennyiben alkalmaz\u00e1s szint\u0171 'glob\u00e1lis' param\u00e9terre van sz\u00fcks\u00e9g\u00fcnk, akkor haszn\u00e1ljuk a ServletContext-et!</p> <p>A request-ben elhelyezett param\u00e9terekhez hasonl\u00f3an itt is lek\u00e9rhet\u0151 az \u00f6sszes inicializ\u00e1l\u00f3 param\u00e9ter: <pre><code>    ...\nPrintWriter out = response.getWriter();  ServletConfig config=getServletConfig();  Enumeration&lt;String&gt; e=config.getInitParameterNames();  String str=\"\";  while(e.hasMoreElements()){  str=e.nextElement();  out.print(\"&lt;br&gt;Name: \"+str);  out.print(\" value: \"+config.getInitParameter(str));  }\n...\n</code></pre></p>"},{"location":"legacy/08_gyakorlat/#servletcontext","title":"ServletContext","text":"<p>A web kont\u00e9ner a szervletekhez k\u00e9sz\u00edt egy-egy k\u00fcl\u00f6n\u00e1ll\u00f3 Config objektumot, melyet az el\u0151z\u0151 fejezetben l\u00e1ttunk, azonban ezen fel\u00fcl k\u00e9sz\u00edt egy glob\u00e1lis l\u00e1that\u00f3s\u00e1g\u00fa <code>ServletContext</code> objektumot is, melyet minden szervletb\u0151l el\u00e9rhet\u00fcnk. A glob\u00e1lis l\u00e1that\u00f3s\u00e1g\u00fa, t\u00f6bb szervletb\u0151l is haszn\u00e1lni k\u00edv\u00e1nt param\u00e9tereket a context-ben \u00e1ll\u00edtsuk be!</p> <p>A <code>ServletContext</code> objektumot a servlett\u0151l, a request, \u00e9s a ServletConfig-t\u00f3l is elk\u00e9rhetj\u00fck. <pre><code>ServletContext application = getServletContext();  //servlett\u0151l\n\nServletContext application = request.getServletContext(); //request-t\u0151l\n\nServletContext application = getServletConfig().getServletContext();// configt\u00f3l\n</code></pre></p> <p>A web.xml-ben a k\u00f6vetkez\u0151k\u00e9ppen adhatunk meg param\u00e9tert: <pre><code>&lt;web-app&gt;  ......  &lt;context-param&gt;  &lt;param-name&gt;parametername&lt;/param-name&gt;  &lt;param-value&gt;parametervalue&lt;/param-value&gt;  &lt;/context-param&gt;  ......  &lt;/web-app&gt;  </code></pre></p> <p>A Context-b\u0151l is lehet\u0151s\u00e9g\u00fcnk van lek\u00e9rni az \u00f6sszes init param\u00e9tert: <pre><code>  ServletContext context=getServletContext();\nEnumeration&lt;String&gt; e=context.getInitParameterNames();\n</code></pre></p>"},{"location":"legacy/08_gyakorlat/#attributumok","title":"Attrib\u00fatumok","text":"<p>Az attrib\u00fatumokat t\u00f6bb scope-ban is be\u00e1ll\u00edthatjuk. Tekinthet\u00fcnk r\u00e1juk \u00fagy, mint k\u00fcl\u00f6nb\u00f6z\u0151 scope-ban defini\u00e1lt v\u00e1ltoz\u00f3kra. A scope-ok a k\u00f6vetkez\u0151ek lehetnek:</p> <ul> <li>request scope -&gt; <code>HttpServletRequest</code></li> <li>session scope -&gt; HttpSession</li> <li>application scope (context scope) -&gt; ServletContext</li> </ul> <p>Az \u00f6sszes scope-ban a k\u00f6vetkez\u0151 met\u00f3dusokat haszn\u00e1lhatjuk:</p> <ul> <li><code>public void setAttribute(String name,Object object)</code></li> <li><code>public Object getAttribute(String name)</code></li> <li><code>public void removeAttribute(String name)</code></li> </ul> <p>P\u00e9lda, amiben az application (context) scope-ot haszn\u00e1ljuk egy attrib\u00fatum be\u00e1ll\u00edt\u00e1s\u00e1ra, majd azt a m\u00e1sik servletben kiolvassuk <pre><code>...\npublic class DemoServlet1 extends HttpServlet{  public void doGet(HttpServletRequest req,HttpServletResponse res)  {  try {  res.setContentType(\"text/html\");  PrintWriter out = res.getWriter();  ServletContext context = getServletContext();  context.setAttribute(\"company\",\"IBM\");  out.println(\"Welcome to first servlet\");  out.println(\"&lt;a href='servlet2'&gt;visit&lt;/a&gt;\");  out.close();  } catch(Exception e){\nout.println(e);\n}  }\n}  </code></pre></p> <p>DemoServlet2: <pre><code>public class DemoServlet2 extends HttpServlet{  public void doGet(HttpServletRequest req,HttpServletResponse res)  {  try{  res.setContentType(\"text/html\");  PrintWriter out = res.getWriter();  ServletContext context = getServletContext();  String n = (String)context.getAttribute(\"company\");  out.println(\"Welcome to \" + n);  out.close();  } catch(Exception e){\nout.println(e);\n}  }\n}\n</code></pre></p>"},{"location":"legacy/08_gyakorlat/#munkamenet-kezelese-session-management","title":"Munkamenet kezel\u00e9se (session management)","text":"<p>Mivel a HTTP protokoll egy \u00e1llapotmentes protokoll, azaz a k\u00e9r\u00e9sek k\u00f6z\u00f6tt nincs \u00e1llapotment\u00e9s, az\u00e9rt valamilyen megold\u00e1sra sz\u00fcks\u00e9g van, hogy ezt a hi\u00e1nyoss\u00e1got kik\u00fcsz\u00f6b\u00f6lj\u00fck.</p> <p>A munkamentek k\u00f6vet\u00e9s\u00e9re lehet\u0151s\u00e9get ny\u00fajtanak a k\u00f6vetkez\u0151k:</p> <ul> <li>Cookies</li> <li>Hidden Form Field</li> <li>URL \u00fajra\u00edr\u00e1s</li> <li>HttpSession</li> </ul>"},{"location":"legacy/08_gyakorlat/#cookies","title":"Cookies","text":"<p>A Cookie egy kicsi inform\u00e1ci\u00f3szelet, mely meg\u0151rz\u0151dik a k\u00e9r\u00e9sek k\u00f6z\u00f6tt. Egy cookie-nak van neve, \u00e9rt\u00e9ke, \u00e9s tov\u00e1bbi opcion\u00e1lis attrib\u00fatuimai (comment, verzi\u00f3sz\u00e1m, maximum kor)</p> <p>Egy \u00faj k\u00e9r\u00e9sn\u00e9l a v\u00e1laszhoz hozz\u00e1adhatjuk a cookie-t \u00e9s innent\u0151l kezdve a kliens az \u00f6sszes k\u00e9r\u00e9sben elk\u00fcldi az \u00e1ltalunk a szerverr\u0151l visszak\u00fcld\u00f6tt cookie-t. A cookie alapvet\u0151en a kliens b\u00f6ng\u00e9sz\u0151j\u00e9nek cache-ben t\u00e1rol\u00f3dik.</p> <p>K\u00e9t t\u00edpusa:</p> <ul> <li>Non-persistent: egy session alatt \u00e9l, amikor a felhaszn\u00e1l\u00f3 becsukja a b\u00f6ng\u00e9sz\u0151t akkor a cookie t\u00f6rl\u0151dik</li> <li>persistent: t\u00f6bb session-\u00f6n kereszt\u00fcl \u00e9l, csak akkor t\u00f6r\u00f6lj\u00fck a cookie-t, ha a felhaszn\u00e1l\u00f3 kil\u00e9p.</li> </ul> <p>H\u00e1rt\u00e1nya, hogy ha a kliens nem enged\u00e9lyezi a cookie-k haszn\u00e1lat\u00e1t, akkor az eg\u00e9sz session tracking nem fog m\u0171k\u00f6dni, tov\u00e1bb\u00e1 a cookie-ban csak sz\u00f6veges inform\u00e1ci\u00f3t tarthatunk (sz\u00e1mot sz\u00f6vegk\u00e9nt tudunk t\u00e1rolni, de bin\u00e1ris infot m\u00e1r nem).</p> <p>A cookie-k haszn\u00e1lat\u00e1hoz a <code>Cookie</code> oszt\u00e1ly ad seg\u00edts\u00e9get.</p> <p>P\u00e9lda egy cookie hozz\u00e1ad\u00e1s\u00e1ra: <pre><code>Cookie cookie = new Cookie(\"user\",\"Bela\");\nresponse.addCookie(cookie);\n</code></pre></p> <p>Figyelem</p> <p>A Tomcat 8.5 ut\u00e1ni verzi\u00f3ja m\u00e1r az RFC 6265 szabv\u00e1nyt haszn\u00e1lja a Cookie-k tekintet\u00e9ben, ami nem engedi meg a whitespace-ek haszn\u00e1lat\u00e1t a cookie-kban.</p> <p>Mivel a cookie kliens oldalon t\u00e1rolt, \u00edgy t\u00f6rl\u00e9se kicsit tr\u00fckk\u00f6sebb: <pre><code>Cookie ck=new Cookie(\"user\",\"\"); // vagy lehet nullra is \u00e1ll\u00edtani\nck.setMaxAge(0); // fontos, hogy a \u00e9rv\u00e9nyess\u00e9g r\u00f6gt\u00f6n le is j\u00e1r\nresponse.addCookie(ck); // \u00edgy friss\u00edteni, fogja a cookie-t a b\u00f6ng\u00e9sz\u0151\n</code></pre></p> <p>A cookie-k lek\u00e9r\u00e9se: <pre><code>Cookie ck[]=request.getCookies(); for(int i = 0; i &lt; ck.length; i++){  out.print(\"&lt;br&gt;\" + ck[i].getName() + \" \" + ck[i].getValue());\n}  </code></pre></p>"},{"location":"legacy/08_gyakorlat/#httpsession","title":"HttpSession","text":"<p>A munkamenet k\u00f6vet\u00e9s\u00e9nek egyik lehets\u00e9ges megold\u00e1sak\u00e9nt a session szolg\u00e1l, mely egy-egy felhaszn\u00e1l\u00f3hoz k\u00fcl\u00f6n-k\u00fcl\u00f6n biztos\u00edt egy ilyen scope-ot, azaz a felhaszn\u00e1l\u00f3 munkamenet\u00e9hez adhatunk hozz\u00e1/olvashatunk ki adatokat. A web kont\u00e9ner minden felhaszn\u00e1l\u00f3hoz egy egyedi session id-t rendel, mellyel azt\u00e1n azonos\u00edtja a felhaszn\u00e1l\u00f3i munkamenetet.</p> <p>Session lek\u00e9r\u00e9se: <pre><code>public HttpSession getSession()\npublic HttpSession getSession(boolean create)\n</code></pre> A param\u00e9ter n\u00e9k\u00fcli v\u00e1ltozat l\u00e9trehozza a felhaszn\u00e1l\u00f3hoz a session-t ha az m\u00e9g nem l\u00e9tezik. A m\u00e1sodik, param\u00e9teres met\u00f3dusban viszont mi magunk adhatjuk meg, hogy a Session-t l\u00e9trehozzuk-e vagy sem abban az esetben, ha az m\u00e9g nem l\u00e9tezett.</p> <p>Hasznos met\u00f3dusok: <pre><code>public String getId() // a session azonos\u00edt\u00f3j\u00e1t adja vissza, mely egyedi\npublic long getCreationTime() //millisecben a l\u00e9trehoz\u00e1s d\u00e1tuma (1970. jan. 1-t\u0151l eltelt millisec)\npublic long getLastAccessedTime() // az az id\u0151 szint\u00e9n millisec-ben, amikor a kliens legutolj\u00e1ra k\u00fcld\u00f6tt k\u00e9r\u00e9st, mely ehhez a sessionh\u00f6z tartozott\npublic void invalidate() // a session \u00e9rv\u00e9nytelen\u00edt\u00e9se. Minden belepakolt adatot eldobunk\n</code></pre></p> <p>Attrib\u00fatum be\u00e1ll\u00edt\u00e1sa: <pre><code>HttpSession session=request.getSession();  session.setAttribute(\"username\", \"Gipsz Jakab\");\n</code></pre></p> <p>Attrib\u00fatim lek\u00e9r\u00e9se: <pre><code>HttpSession session=request.getSession();\nString name=(String)session.getAttribute(\"username\");\n</code></pre></p>"},{"location":"legacy/08_gyakorlat/#filterek","title":"Filterek","text":"<p>A filter egy olyan objektum, melynek utas\u00edt\u00e1sai k\u00f6zvetlen\u00fcl a k\u00e9r\u00e9s kiszolg\u00e1l\u00e1sa el\u0151tt (pre-process) vagy k\u00f6zvetlen\u00fcl a v\u00e1lasz el\u0151\u00e1ll\u00edt\u00e1sa (m\u00e9g nem k\u00fcldj\u00fck vissza) ut\u00e1n (post-processing) futnak le. Haszn\u00e1lhat\u00f3 p\u00e9ld\u00e1ul adatkonverzi\u00f3ra, logol\u00e1sra, t\u00f6m\u00f6r\u00edt\u00e9sre, k\u00f3dol\u00e1sra \u00e9s dek\u00f3dol\u00e1sra, input valid\u00e1ci\u00f3ra, autentik\u00e1ci\u00f3ra, autoriz\u00e1ci\u00f3ra stb.</p> <p>Fontos oszt\u00e1lyok:</p> <ul> <li>Filter (maga a filter oszt\u00e1ly)</li> <li>FilterChain (minden filter helyet foglal egy filter l\u00e1ncban, melyet meg is kap a filter)</li> <li>FilterConfig (minden filternek lehetnek egyedi be\u00e1ll\u00edt\u00e1sai, hasonl\u00f3k\u00e9ppen mint a ServletConfig a Servlet eset\u00e9ben)</li> </ul> <p>A filternek nem doGet, doPost, stb met\u00f3dusai vannak, hanem egy doFilter met\u00f3dusa, ahol a filter logik\u00e1j\u00e1t adhatjuk meg.</p> <p>A filtereket is a web.xml-ben adhatjuk meg. A filtereknek is meg lehet adni, hogy mely url-ekre fusson le. <pre><code>&lt;web-app&gt;  &lt;filter&gt;  &lt;filter-name&gt;...&lt;/filter-name&gt;  &lt;filter-class&gt;...&lt;/filter-class&gt;  &lt;/filter&gt;  &lt;filter-mapping&gt;  &lt;filter-name&gt;...&lt;/filter-name&gt;  &lt;url-pattern&gt;...&lt;/url-pattern&gt;  &lt;/filter-mapping&gt;  &lt;/web-app&gt;\n</code></pre></p> <p>Ha a filterek sorrendje sz\u00e1m\u00edt akkor haszn\u00e1ljuk a web xml-t! Amilyen sorrendben szerepelnek a web.xml-ben olyan sorrendben fognak lefutni. Ugyanakkor, lehet\u0151s\u00e9g van a <code>WebFilter</code> annot\u00e1ci\u00f3 haszn\u00e1lat\u00e1ra is, de itt a sorrendet nem tudjuk befoly\u00e1solni.</p> <p>P\u00e9lda: <pre><code>@WebFilter(\"/*\")\npublic class MyFilter implements Filter{  public void init(FilterConfig config) throws ServletException {}  public void doFilter(ServletRequest req, ServletResponse resp,  FilterChain chain) throws IOException, ServletException {  PrintWriter out=resp.getWriter();  out.print(\"filter is invoked before\");  chain.doFilter(req, resp);\n\nout.print(\"filter is invoked after\");  }\n\npublic void destroy() {}  }  </code></pre></p> <p>A servletekn\u00e9l l\u00e1tott m\u00f3don a filtereknek is lehet param\u00e9tereket megadni, melynek kezel\u00e9se ugyan\u00fagy megy mint a servletekn\u00e9l.</p>"},{"location":"legacy/09_gyakorlat/","title":"9. gyakorlat","text":""},{"location":"legacy/09_gyakorlat/#java-server-pages-jsp","title":"Java Server Pages (JSP)","text":"<p>A JSP technol\u00f3gia csak\u00fagy, mint a Servletek az\u00e9rt hivatottak, hogy a webes alkalmaz\u00e1sokat k\u00e9sz\u00edthess\u00fcnk. Gondoljunk r\u00e1juk \u00fagy, mint a szervleteket kieg\u00e9sz\u00edt\u0151 technol\u00f3gi\u00e1ra. A JSP t\u00e9nylegesen maga is egy Servlet, a Servletb\u0151l sz\u00e1rmazik. Minden funkci\u00f3t, amit a servletek kapcs\u00e1n tanultunk itt is haszn\u00e1lni tudunk. A JSP oldalakra tekints\u00fcnk \u00fagy, mint egyszer\u0171 HTML oldalakra, azonban azok dinamikus volt\u00e1t az biztos\u00edtja, hogy be\u00e1gyazhatunk bel\u00e9j\u00fck Java k\u00f3dot, mellyel a tartalmat gener\u00e1lhatjuk (dinamikuss\u00e1 tehetj\u00fck). Az el\u0151z\u0151 \u00f3r\u00e1n l\u00e1tottak alapj\u00e1n mindenki azt mondhatja, hogy a komplex HTML v\u00e1lasz el\u0151\u00e1ll\u00edt\u00e1sa a servleten bel\u00fcl nem csak hogy macer\u00e1s, de magas hibahajlammal b\u00edr.</p> <p>A JSP oldalak meg\u00e9rt\u00e9s\u00e9t nagyban seg\u00edti az al\u00e1bbi \u00e1bra \u00e1ttanulm\u00e1nyoz\u00e1sa:</p> <p> </p> <p>Az egyik kulcsl\u00e9p\u00e9s a JSP-k servletekk\u00e9 alak\u00edt\u00e1sa. Ezt az \u00e1talak\u00edt\u00e1st az alkalmaz\u00e1s szerver v\u00e9gzi el. Ezut\u00e1n a megszokott folyamat zajlik.</p> <p>A JSP oldalak, HTML-szer\u0171en tagekkel \u00edrhat\u00f3ak le, de benne Java k\u00f3dot is \u00edrhatunk. Hozzunk l\u00e9tre egy \u00faj Maven webapp-os projektet, ahogy azt a szervletekn\u00e9l is tett\u00fck \u00e9s adjuk, hozz\u00e1 a dependency-khez a servlet-api-t. Ezut\u00e1n a gener\u00e1lt projekt index.jsp oldal\u00e1n a k\u00f6vetkez\u0151 k\u00f3dot \u00edrjuk be, majd ind\u00edtsunk el a Tomcat Servert (be\u00e1ll\u00edt\u00e1s ugyanaz, mint a servletekn\u00e9l):</p> <pre><code>&lt;html&gt;  \n&lt;body&gt;  \n  &lt;% out.print(2*5); %&gt;  \n&lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre> <p>Ez a 10-es eredm\u00e9nyt \u00edrja ki. K\u00e9s\u0151bb megn\u00e9zz\u00fck, hogy pontosan mi t\u00f6rt\u00e9nik.</p> <p>A JSP oldalakat a projekt\u00fcnk\u00f6n bel\u00fcl a webapp mapp\u00e1ba kell helyezni, de fontos, hogy ne a <code>WEB-INF</code> mapp\u00e1ba rakjuk, mert az z\u00e1rt az alkalmaz\u00e1sszerveren bel\u00fcl, azokat a f\u00e1jlokat a kliens nem \u00e9ri el direkt m\u00f3don (web.xml-ben kell ilyen esetben megadni). <code>Jobb klikk webapp -&gt; New -&gt; JSP/JSPX Page -&gt; JSP Page</code></p> <p>Tipp</p> <p>A JSP oldalakat haszn\u00e1ljuk megjelen\u00edt\u00e9sre, a controller logik\u00e1t szervezz\u00fck Servletekbe!</p> <p>Amint azt l\u00e1ttuk a servleteket az alkalmaz\u00e1sszerver\u00fcnk Servlet kont\u00e9nere menedzseli. A JSP oldalakat a JSP kont\u00e9ner kezeli. JSP fejleszt\u00e9s sor\u00e1n aj\u00e1nlott a maven dependency-k k\u00f6z\u00e9 felvenni a k\u00f6vetkez\u0151t:</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;\n&lt;artifactId&gt;jsp-api&lt;/artifactId&gt;\n&lt;version&gt;2.2.1-b03&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Feladat</p> <p>Adjunk hozz\u00e1 egy \u00faj JSP oldalt a projekt\u00fcnkh\u00f6z \u00e9s az els\u0151 oldalra helyezz\u00fcnk el egy linket, ami \u00e1tvisz a m\u00e1sik oldalra!</p> Megold\u00e1s <p>index.jsp: <pre><code>&lt;html&gt;\n  &lt;body&gt;\n  &lt;h2&gt;Hello World!&lt;/h2&gt;\n  &lt;a href=\"second.jsp\"&gt;Go To Second Page&lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>second.jsp: <pre><code>&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Second Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Second Page&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>A <code>second.jsp</code>-ben tal\u00e1lhat\u00f3 els\u0151 sort az IntelliJ gener\u00e1lja. K\u00e9s\u0151bb megismerked\u00fcnk ezekkel az elemekkel is.</p>"},{"location":"legacy/09_gyakorlat/#jsp-eletciklusok","title":"JSP \u00e9letciklusok","text":"<p>A JSP oldalak az al\u00e1bbi \u00e9letciklussal rendelkeznek. Egy r\u00e9sz\u00fcket m\u00e1r l\u00e1thattuk kor\u00e1bban:</p> <ul> <li>Transzform\u00e1l\u00e1s: A JSP oldalak szervlett\u00e9 alak\u00edt\u00e1sa. Pl.: <code>index.jsp</code> -&gt; <code>index_jsp.java</code></li> <li>Ford\u00edt\u00e1s: A legener\u00e1lt szervleteket leford\u00edtjuk, amennyiben az \u00e1talak\u00edt\u00e1s sikeres volt</li> <li>Oszt\u00e1lybet\u00f6lt\u00e9s: Mem\u00f3ri\u00e1ba t\u00f6lt\u00e9s</li> <li>P\u00e9ld\u00e1nyos\u00edt\u00e1s: A JSP kont\u00e9ner l\u00e9trehoz egy p\u00e9ld\u00e1nyt a JSP oldalb\u00f3l (m\u00e1r szervletk\u00e9nt gondolhatunk r\u00e1)</li> <li>Inicializ\u00e1l\u00e1s: ServletConfig \u00e9s ServletContext el\u00e9rhet\u0151v\u00e9 v\u00e1lik az oldal sz\u00e1m\u00e1ra</li> <li>K\u00e9r\u00e9s feldolgoz\u00e1s: Minden k\u00e9r\u00e9st k\u00fcl\u00f6n sz\u00e1lon szolg\u00e1lnak ki a JSP oldalak is, mint ahogyan a szervletekn\u00e9l is</li> <li>Megsemmis\u00edt\u00e9s: Hasonl\u00f3an, mint a szervletekn\u00e9l a JSP oldalak is megsemmis\u00fclnek \u00e9let\u00fck v\u00e9g\u00e9n (pl.: szerver le\u00e1ll\u00edt\u00e1s)</li> </ul>"},{"location":"legacy/09_gyakorlat/#eletciklus-metodusok","title":"\u00c9letciklus met\u00f3dusok","text":"<p>Ahogy a szervletekn\u00e9l is jelen voltak az \u00e9letciklusokat t\u00e1mogat\u00f3 met\u00f3dusok (init, service, destroy), itt is megtal\u00e1lhat\u00f3ak:</p> <ul> <li>jspInit(): a JspPage interface-ben van megadva</li> <li>_jspService(HttpServletRequest request, HttpServletResponse response): HttpJspPage interface tartalmazza</li> <li>jspDestroy(): a JspPage interface-ben van megadva</li> </ul> <p>A <code>JspPage</code> \u00e9s a <code>HttpJspPage</code> interf\u00e9szeket nem kell megadnunk direktben, ezeket az interface-eket automatikusan implement\u00e1lja minden JSP oldal. Ezeket a met\u00f3dusokat a JSP oldalon bel\u00fcl tudjuk fel\u00fcldefini\u00e1lni, amennyiben az sz\u00fcks\u00e9ges (\u00e1ltal\u00e1ban nem az) a declaration tag-ek haszn\u00e1lat\u00e1val (l\u00e1sd lentebb).</p>"},{"location":"legacy/09_gyakorlat/#jsp-scripting","title":"JSP scripting","text":"<p>A JSP oldalakon bel\u00fcl haszn\u00e1lhatunk \u00fagynevezett scripting tageket (<code>&lt;%...%&gt;</code>). Ezeken bel\u00fcl java k\u00f3dokat \u00e9s kifejez\u00e9seket adhatunk meg. 3 t\u00edpus\u00e1t k\u00fcl\u00f6nb\u00f6ztetj\u00fck meg:</p> <ul> <li>scriptlet tag: <code>&lt;% java source code %&gt;</code></li> <li>expression tag: <code>&lt;%= expresison %&gt;</code></li> <li>declaration tag: <code>&lt;%! declaration %&gt;</code></li> </ul> <p>P\u00e9lda egy param\u00e9ter ki\u00edr\u00e1s\u00e1ra:</p> <p>index.html <pre><code>&lt;html&gt;  \n  &lt;body&gt;  \n    &lt;form action=\"welcome.jsp\"&gt;  \n      &lt;input type=\"text\" name=\"username\"&gt;  \n      &lt;input type=\"submit\" value=\"go\"&gt;&lt;br/&gt;  \n    &lt;/form&gt;  \n  &lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre></p> <p>welcome.jsp <pre><code>&lt;html&gt;  \n  &lt;body&gt;  \n  &lt;%  \n    String name = request.getParameter(\"username\");\n    out.print(\"welcome \"+name);  \n  %&gt;  \n  &lt;/body&gt;  \n&lt;/html&gt; \n</code></pre></p> <p>Ez ki\u00edrja az index.html form-j\u00e1ban megadott felhaszn\u00e1l\u00f3i nevet a JSP oldalon. Vegy\u00fck \u00e9szre az <code>out.print</code> sort, melyben k\u00e9rdezhetn\u00e9nk, hogy mi\u00e9rt nincs a <code>System</code> az out el\u00e9\u00edrva. A JSP oldalakon haszn\u00e1lhat\u00f3 n\u00e9h\u00e1ny el\u0151re defini\u00e1lt, \u00fagynevezett implicit objektum, mint p\u00e9ld\u00e1ul az <code>out</code>, melynek t\u00edpusa <code>JspWriter</code>, m\u0171k\u00f6d\u00e9s\u00e9t tekintve pedig a servletekben haszn\u00e1lt <code>PrintWriter</code>-hez hasonl\u00edt. Egy m\u00e1sik implicit objektum is szerepel, m\u00e9gpedig a <code>request</code>. Ez a <code>HttpServletRequest</code> objektumunkat jel\u00f6li \u00e9s automatikusan megkapja a JSP oldal. A scriptletek mindig java utas\u00edt\u00e1sokat tartalmaznak, \u00edgy az utas\u00edt\u00e1sok v\u00e9g\u00e9re pontosvessz\u0151t kell \u00edrnunk!</p> <p>A servletekben HTML k\u00f3dot \u00edrtunk Java k\u00f3dba, most pedig HTML-be \u00edrunk Java-t. Nem \u00fagy t\u0171nik, hogy sokkal jobb volna a JSP... Val\u00f3ban a scriptletek el\u00e9gg\u00e9 el tudj\u00e1k cs\u00faf\u00edtani a JSP oldalak forr\u00e1sk\u00f3dj\u00e1t, ez\u00e9rt is tal\u00e1lt\u00e1k ki az Expression Language technol\u00f3gi\u00e1t, melyet a k\u00e9s\u0151bbiekben t\u00e1rgyalunk.</p> <p>A JSP tartalm\u00e1ra tekinthet\u00fcnk, \u00fagy mintha a service met\u00f3dusban lenn\u00e9nk \u00e9s ott \u00edrn\u00e1nk ki a HTML-es tartalmat (v\u00e9gs\u0151 soron t\u00e9nyleg ez t\u00f6rt\u00e9nik). A scriptlet-k\u00e9nt \u00edrt k\u00f3d, \u00edgy ebbe a met\u00f3dusba ker\u00fcl, melynek k\u00f6vetkezm\u00e9nyek\u00e9nt a scriptletben nem defini\u00e1lhatunk met\u00f3dusokat vagy adattagokat. Erre ad megold\u00e1st a declaration tag (ez <code>&lt;%! ... %&gt;</code>), mivel az ezek k\u00f6z\u00e9 a tag-ek k\u00f6z\u00e9 \u00edrt k\u00f3dot a service() met\u00f3duson k\u00edv\u00fclre gener\u00e1lja az alkalmaz\u00e1s szerver JSP translator motorja.</p> <p>P\u00e9lda. <pre><code>&lt;html&gt;  \n  &lt;body&gt;  \n    &lt;%!   \n      int cube(int n){  \n        return n*n*n*;  \n      }  \n    %&gt; \n\n    Cube of 3 is: &lt;% out.print(cube(3)); %&gt;\n  &lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre></p> <p>A 3. tag az expression tag, melybe \u00edrt k\u00f3d a response output stream-j\u00e9re \u00edr\u00f3dik. Nem kell out.print-et \u00edrni! F\u0151k\u00e9nt v\u00e1ltoz\u00f3k vagy met\u00f3dush\u00edv\u00e1sok \u00e9rt\u00e9k\u00e9nek ki\u00edr\u00e1s\u00e1ra haszn\u00e1lhat\u00f3.</p> <p>P\u00e9lda: <pre><code>  &lt;html&gt;  \n    &lt;body&gt;  \n      Current Time: &lt;%= java.util.Calendar.getInstance().getTime() %&gt;  \n    &lt;/body&gt;  \n  &lt;/html&gt;  \n</code></pre></p>"},{"location":"legacy/09_gyakorlat/#implicit-objektumok","title":"Implicit-objektumok","text":"<p>A JSP oldalakon implicit objektumokat is kapunk, melyet a web kont\u00e9ner inicializ\u00e1l. Ezek k\u00f6z\u00fcl m\u00e1r l\u00e1ttuk is az <code>out</code> \u00e9s a <code>request</code> implicit objektumokat, melyek rendre a servlet-n\u00e9l l\u00e1tott <code>PrintWriter</code>-hez hasonl\u00f3 (<code>JspWriter</code> t\u00edpus\u00fa) output stream \u00edr\u00f3ja, illetve a <code>HttpServletRequest</code> objektumunk.</p> <p>A k\u00f6vetkez\u0151 implicit objektumok k\u00f6z\u00fcl v\u00e1logathatunk (z\u00e1r\u00f3jelben a t\u00edpusukat l\u00e1thatjuk):</p> <ul> <li>application (<code>ServletContext</code>)</li> <li>config (<code>ServletConfig</code>)</li> <li>jspContext (<code>JspContext</code>)</li> <li>out (<code>JspWriter</code>)</li> <li>page (<code>Object</code>)</li> <li>pageContext (<code>PageContext</code>)</li> <li>request (<code>HttpServletRequest</code>)</li> <li>response (<code>HttpServletResponse</code>)</li> <li>session (<code>HttpSession</code>)</li> <li>exception (<code>Throwable</code>)</li> </ul> <p>A fenti implicit objektumokat a scriptletekben b\u00e1rhol haszn\u00e1lhatjuk, mivel az olyan, mintha a <code>_jspService()</code> met\u00f3dusban \u00edrn\u00e1nk k\u00f3dot. Ezt tov\u00e1bbgondolva, ad\u00f3dik, hogy ezeket az implicit objektumokat nem haszn\u00e1lhatjuk a declaration tag-ek k\u00f6z\u00f6tt, mivel az mag\u00e1hoz a servlet oszt\u00e1lyhoz fog tartozni (adattagokat \u00e9s met\u00f3dusokat defini\u00e1lhatok).</p> <p>Most n\u00e9zz\u00fck meg a fontosabb implicit objektumokat r\u00e9szletesebben!</p>"},{"location":"legacy/09_gyakorlat/#request-implicit-objektum","title":"Request implicit objektum","text":"<p>A request implicit objektumot a szervlet <code>service(HttpServletRequest req, ...)</code> met\u00f3dus\u00e1ban param\u00e9terk\u00e9nt megkapott <code>request</code> objektummal azonos\u00edthat\u00f3 (t\u00e9nylegesen ugyanaz az objektum), t\u00edpusa <code>HttpServletRequest</code>. Funkcionalit\u00e1s\u00e1t tekintve is megegyezik a servletekben megismert <code>request</code> objektummal, attrib\u00fatumokat \u00e1ll\u00edthatunk be, k\u00e9rhet\u00fcnk le, ugyan\u00edgy a param\u00e9tereket is el\u00e9rhetj\u00fck.</p>"},{"location":"legacy/09_gyakorlat/#response-implicit-objektum","title":"Response implicit objektum","text":"<p>A response implicit objektumot a szervlet <code>service(..., HttpServletResponse resp)</code> met\u00f3dus\u00e1ban param\u00e9terk\u00e9nt megkapott response objektummal azonos\u00edthat\u00f3, t\u00edpusa <code>HttpServletResponse</code>. Hasonl\u00f3an haszn\u00e1lhat\u00f3 mint a szervletekn\u00e9l.</p> <p>P\u00e9lda jsp oldalon bel\u00fcli redirect-re: <pre><code>&lt;%   \n  response.sendRedirect(\"http://www.google.com\");  \n%&gt;  \n</code></pre></p>"},{"location":"legacy/09_gyakorlat/#config-implicit-objektum","title":"Config implicit objektum","text":"<p>Amennyiben a jsp oldalunknak szeretn\u00e9nk init param\u00e9tereket be\u00e1ll\u00edtani, akkor azt nem tudjuk megtenni olyan annot\u00e1ci\u00f3s form\u00e1ban, csak a web.xml-ben. N\u00e9zz\u00fcnk egy p\u00e9ld\u00e1t, hogy hogyan lehet JSP oldalakat megadni a web.xml-ben!</p> <p>index.jsp <pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;h2&gt;Hello &lt;%= config.getInitParameter(\"name\") %&gt; &lt;/h2&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>web.xml <pre><code>&lt;!DOCTYPE web-app PUBLIC\n \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n \"http://java.sun.com/dtd/web-app_2_3.dtd\" &gt;\n\n&lt;web-app&gt;\n&lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt;\n&lt;servlet&gt;\n&lt;servlet-name&gt;index&lt;/servlet-name&gt;\n&lt;jsp-file&gt;/index.jsp&lt;/jsp-file&gt;\n&lt;init-param&gt;\n&lt;param-name&gt;name&lt;/param-name&gt;\n&lt;param-value&gt;Kandisz N\u00f3ra&lt;/param-value&gt;\n&lt;/init-param&gt;\n&lt;/servlet&gt;\n\n&lt;servlet-mapping&gt;\n&lt;servlet-name&gt;index&lt;/servlet-name&gt;\n&lt;url-pattern&gt;/index&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n&lt;/web-app&gt;\n</code></pre></p> <p>A JSP oldalon ki\u00edrjuk a web.xml-ben megadott <code>name</code> init param\u00e9ter \u00e9rt\u00e9k\u00e9t. A web.xml-es megad\u00e1s arra is megfelel\u0151, hogy elrejts\u00fck az url-b\u0151l, hogy jsp oldalakkal j\u00e1tszunk a h\u00e1tt\u00e9rben. Mivel a JSP oldalak servletekk\u00e9 alakulnak a h\u00e1tt\u00e9rben, ez\u00e9rt a web.xml-ben is ugyan\u00fagy adjuk meg \u0151ket, mint ahogyan az a hagyom\u00e1nyos servletekn\u00e9l t\u00f6rt\u00e9nt, viszont vegy\u00fck \u00e9szre, hogy itt megadjuk a <code>jsp-file</code> elemet is, melyben megadjuk azt, hogy itt egy jsp f\u00e1jlr\u00f3l van sz\u00f3.</p>"},{"location":"legacy/09_gyakorlat/#application-implicit-objektum","title":"Application implicit objektum","text":"<p>Hasonl\u00f3an a <code>ServletConfig</code> objektumhoz, a ServletContext-hez is hozz\u00e1f\u00e9rhet\u00fcnk implicit objektum form\u00e1j\u00e1ban. A <code>ServletContext</code> objektumnak megfelel\u0151 implicit objektum az <code>application</code>.</p> <p>P\u00e9lda context param kiolvas\u00e1s\u00e1ra:</p> <p>web.xml: <pre><code>&lt;web-app&gt;  &lt;servlet&gt;  &lt;servlet-name&gt;welcome&lt;/servlet-name&gt;  &lt;jsp-file&gt;/welcome.jsp&lt;/jsp-file&gt;  &lt;/servlet&gt;  &lt;servlet-mapping&gt;  &lt;servlet-name&gt;welcome&lt;/servlet-name&gt;  &lt;url-pattern&gt;/welcome&lt;/url-pattern&gt;  &lt;/servlet-mapping&gt;  &lt;context-param&gt;  &lt;param-name&gt;driver&lt;/param-name&gt;  &lt;param-value&gt;org.sqlite.JDBC&lt;/param-value&gt;  &lt;/context-param&gt;  &lt;/web-app&gt;  </code></pre></p> <p>welcome.jsp: <pre><code>&lt;%   \n  String driver=application.getInitParameter(\"driver\");  \n  out.print(\"driver name is=\"+driver);  \n%&gt;  \n</code></pre></p>"},{"location":"legacy/09_gyakorlat/#session-implicit-objektum","title":"Session implicit objektum","text":"<p>A request-t\u0151l elk\u00e9rhet\u0151 <code>HttpSession</code> t\u00edpus\u00fa objektum megfelel\u0151je.</p> <p>P\u00e9lda session haszn\u00e1lat\u00e1ra.</p> <p>index.html <pre><code>&lt;html&gt;  \n  &lt;body&gt;  \n    &lt;form action=\"welcome.jsp\"&gt;  \n      &lt;input type=\"text\" name=\"uname\"&gt;  \n      &lt;input type=\"submit\" value=\"go\"&gt;&lt;br/&gt;  \n    &lt;/form&gt;  \n  &lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre></p> <p>welcome.jsp: <pre><code>&lt;html&gt;  \n  &lt;body&gt;  \n  &lt;%   \n    String name = request.getParameter(\"uname\");  \n    out.print(\"Welcome \" + name);  \n    session.setAttribute(\"user\",name);\n  %&gt;\n  &lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre> A be\u00e1ll\u00edtott attrib\u00fatumot m\u00e1s oldalakon a <code>session.getAttribute(\"user\")</code> h\u00edv\u00e1ssal k\u00e9rhetj\u00fck le. Mivel a session-kezel\u00e9s el\u00e9gg\u00e9 k\u00f6lts\u00e9ges, \u00edgy ha nincs r\u00e1 sz\u00fcks\u00e9g, akkor megmondhatjuk a JSP oldalnak, hogy ne k\u00e9sz\u00edtsen session objektumot az adott oldalhoz. A session p\u00e9ld\u00e1ul felesleges lehet a login oldalon. Ehhez a <code>&lt;%@ page session=\"false\" %&gt;</code> k\u00f3dr\u00e9szletet illessz\u00fck az oldal tetej\u00e9re. A pontos viselked\u00e9st k\u00e9s\u0151bb tiszt\u00e1zzuk a direkt\u00edv\u00e1kn\u00e1l.</p>"},{"location":"legacy/09_gyakorlat/#pagecontext-implicit-objektum","title":"pageContext implicit objektum","text":"<p>A pageContext objektum a <code>javax.servlet.jsp.PageContext</code> oszt\u00e1ly egy p\u00e9ld\u00e1nya, melyen kereszt\u00fcl el\u00e9rhet\u0151ek a k\u00fcl\u00f6nb\u00f6z\u0151 scope-okban l\u00e9v\u0151 attrib\u00fatumok (session scope, request scope, application scope). A pageContext-en kereszt\u00fcl a t\u00f6bbi implicit objektumot is el tudjuk \u00e9rni.</p> <p>P\u00e9lda: <pre><code>&lt;html&gt;  &lt;body&gt;  &lt;%   String name=request.getParameter(\"uname\");  out.print(\"Welcome \"+name);  pageContext.setAttribute(\"user\",name,PageContext.SESSION_SCOPE);    %&gt;  &lt;/body&gt;  &lt;/html&gt;  </code></pre></p> <p>A pageContext implicit objektumot ritk\u00e1bban haszn\u00e1ljuk, mivel helyette haszn\u00e1lhatjuk az implicit objektumokat k\u00f6zvetlen\u00fcl.</p> <p>Feladat</p> <p>K\u00e9sz\u00edts\u00fcnk JSP oldalt, melyen egy gomb megnyom\u00e1sakor egy sz\u00e1ml\u00e1l\u00f3 \u00e9rt\u00e9k\u00e9t n\u00f6velj\u00fck eggyel! A sz\u00e1ml\u00e1l\u00f3t nem kell kell k\u00fcl\u00f6n szervletben n\u00f6velni. Csin\u00e1ljunk mindent egyetlen JSP oldalon!</p> Megold\u00e1s <p>index.jsp: <pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;%!\nprivate static int counter = 0;\n%&gt;\n\n&lt;%\nif(request.getParameter(\"submit\") != null){\ncounter++;\n}\n%&gt;\n\n&lt;h1&gt;Counter value: &lt;%= counter %&gt;&lt;/h1&gt;\n\n&lt;form method=\"post\" action=\"index.jsp\"&gt;\n&lt;button type=\"submit\" name=\"submit\"&gt;Increment&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>A form-on bel\u00fcl a gombnak a <code>name</code> attrib\u00fatum\u00e1t fontos submit-re \u00e1ll\u00edtani, mert a request param\u00e9terei k\u00f6z\u00f6tt ilyen n\u00e9ven fogjuk el\u00e9rni azt. Az eredm\u00e9ny az, hogy csak akkor n\u00f6velj\u00fck a counter \u00e9rt\u00e9k\u00e9t, ha a postban megtal\u00e1lhat\u00f3 volt a submit param\u00e9ter (b\u00e1rmi is legyen az \u00e9rt\u00e9ke).</p> <p>Feladat</p> <p>K\u00e9sz\u00edts\u00fcnk egy form-ot, melyen bek\u00e9rj\u00fck a felhaszn\u00e1l\u00f3 adatait: n\u00e9v, email, sz\u00fclet\u00e9si \u00e9v! A form megnyom\u00e1sakor ker\u00fclj\u00fcnk \u00e1t egy m\u00e1sik jsp oldalra, ahol ki\u00edrjuk ezeket a param\u00e9tereket, de el\u0151tte a kapott \u00e9rt\u00e9keket (ha vannak) beletessz\u00fck a session-be. A ki\u00edr\u00e1s is a session-b\u0151l t\u00f6rt\u00e9njen!</p> Megold\u00e1s <p>index.jsp <pre><code>  &lt;html&gt;\n&lt;body&gt;\n\n&lt;h1&gt;Update profile&lt;/h1&gt;\n\n&lt;form method=\"post\" action=\"details.jsp\"&gt;\n&lt;div&gt;\n&lt;label for=\"name\"&gt;Name&lt;/label&gt;\n&lt;input type=\"text\" id=\"name\" name=\"name\"&gt;\n&lt;/div&gt;\n&lt;div&gt;\n&lt;label for=\"email\"&gt;Email&lt;/label&gt;\n&lt;input type=\"email\" id=\"email\" name=\"email\"&gt;\n&lt;/div&gt;\n&lt;div&gt;\n&lt;label for=\"age\"&gt;Age&lt;/label&gt;\n&lt;input type=\"number\" id=\"age\" name=\"age\"&gt;\n&lt;/div&gt;\n&lt;button type=\"submit\" name=\"submit\"&gt;Update profile&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>details.jsp <pre><code>&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;User details&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;%\nString name = request.getParameter(\"name\");\nString email = request.getParameter(\"email\");\nString age = request.getParameter(\"age\");\n\nif(name != null &amp;&amp; !name.isEmpty()){\nsession.setAttribute(\"name\", name);\n}\nif(email != null &amp;&amp; !email.isEmpty()){\nsession.setAttribute(\"email\", email);\n}\nif(age != null &amp;&amp; !age.isEmpty()){\nsession.setAttribute(\"age\", age);\n}\n%&gt;\n\n&lt;h1&gt;User details&lt;/h1&gt;\n\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td&gt;Name:&lt;/td&gt;\n&lt;td&gt;&lt;%= session.getAttribute(\"name\") == null ? \"Not specified\" : session.getAttribute(\"name\") %&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Email:&lt;/td&gt;\n&lt;td&gt;&lt;%= session.getAttribute(\"email\") == null ? \"Not specified\" : session.getAttribute(\"email\")  %&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Age:&lt;/td&gt;\n&lt;td&gt;&lt;%= session.getAttribute(\"age\") == null ? \"Not specified\" : session.getAttribute(\"age\") %&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"legacy/09_gyakorlat/#jsp-direktivak","title":"JSP direkt\u00edv\u00e1k","text":"<p>A direkt\u00edv\u00e1k az alkalmaz\u00e1sszervernek sz\u00f3l\u00f3 \u00fczenetek, melyekkel megmondhatjuk, hogy a JSP oldalt milyen m\u00f3don alak\u00edtsa szervlett\u00e9 a kont\u00e9ner, illetve m\u00f3dos\u00edtani tudjuk, hogy milyen k\u00e9pess\u00e9g\u0171 szervlet\u00fcnk keletkezik a transzform\u00e1l\u00e1s ut\u00e1n. 3 t\u00edpusa van:</p> <ul> <li>page direkt\u00edva</li> <li>include direkt\u00edva</li> <li>taglib direkt\u00edva</li> </ul> <p>Ezek szintaxisa</p> <p>&lt;%@ directive attribute=\"value\" %&gt;</p> <p>, ahol a <code>directive</code> maga a <code>page</code>, <code>include</code>, vagy <code>taglib</code>.</p>"},{"location":"legacy/09_gyakorlat/#page-direktiva","title":"page direkt\u00edva","text":"<p>Az eg\u00e9sz oldalra vonatkoz\u00f3 attrib\u00fatumok megad\u00e1s\u00e1ra szolg\u00e1l. Egy <code>page</code> direkt\u00edv\u00e1hoz megadhat\u00f3ak attrib\u00fatumok, melyeket egy vagy ak\u00e1r t\u00f6bb <code>page</code> direkt\u00edv\u00e1ban helyezhet\u00fcnk el a hat\u00e1s ugyanaz. Haszn\u00e1lata:</p> <p>&lt;%@ page attribute=\"value\" %&gt;</p> <p>N\u00e9zz\u00fck milyen attrib\u00fatumokkal tal\u00e1lkozhatunk a leggyakrabban.</p> <p>import: Hasonl\u00f3an a java-s import-hoz itt is pontosan egy java oszt\u00e1lyt h\u00fazhatunk be vele.</p> <p>P\u00e9lda: <pre><code>&lt;%@ page import=\"java.util.Date\" %&gt; &lt;html&gt;  &lt;body&gt;  \nToday is: &lt;%= new Date()%&gt;\n&lt;/body&gt;  &lt;/html&gt;  </code></pre> Addig nem haszn\u00e1lhatjuk a <code>Date</code> oszt\u00e1lyt, ameddig nem h\u00faztuk be.</p> <p>contentType: Ahogyan a servletekn\u00e9l a <code>response.setContentType(\"text/html\")</code> be\u00e1ll\u00edtotta a response mime t\u00edpus\u00e1t, itt ezt a k\u00f6vetkez\u0151k\u00e9ppen tehetj\u00fck meg.</p> <pre><code>&lt;html&gt;  \n&lt;body&gt;  \n\n  &lt;%@ page contentType=\"text/html\" %&gt;  \n\n  Szevasz Jozsi!\n&lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre> <p>errorPage: Ebben az attrib\u00fatumban megadhatjuk, hogy amennyiben az oldalunk egy hib\u00e1t dob, akkor azt melyik hibaoldal kezelje le. Itt b\u00e1rmilyen URI-t megadhatunk.</p> <p>isErrorPage: Ezt akkor adjuk meg, amikor az adott jsp oldal egy hibakezel\u0151 oldal. Az implicit objektumok k\u00f6z\u00f6tt szerepelt az <code>exception</code>, amir\u0151l nem besz\u00e9lt\u00fcnk m\u00e9g. Ez az implicit objektum csak az olyan oldalakon \u00e9rhet\u0151 el, melyekn\u00e9l az <code>isErrorPage</code> attrib\u00fatumot igazra \u00e1ll\u00edtottuk.</p> <p>session: Ahogy azt kor\u00e1bban m\u00e1r l\u00e1ttuk a session objektum l\u00e9trehoz\u00e1s\u00e1t tilthatjuk le. Alap\u00e9rtelmezetten enged\u00e9lyezve van.</p>"},{"location":"legacy/09_gyakorlat/#include-direktiva","title":"include direkt\u00edva","text":"<p>Az include direkt\u00edva seg\u00edts\u00e9g\u00e9vel beh\u00fazhatjuk m\u00e1s er\u0151forr\u00e1sok (jsp, hmtl, text f\u00e1jlok) tartalm\u00e1t. Igen hasznos lehet akkor, amikor az oldalainkat logikailag fel akarjuk osztani pl: header, main, footer r\u00e9szekre. Az <code>include</code>-ot a k\u00f6vetkez\u0151 form\u00e1ban haszn\u00e1ljuk:</p> <p>&lt;%@ include file=\"test.jsp\" %&gt;</p> <p>ahol a test.jsp egy relat\u00edv \u00fatvonalmegad\u00e1s az aktu\u00e1lis jsp oldalhoz k\u00e9pest.</p> <p>P\u00e9ld\u00e1ul egy header beh\u00faz\u00e1sa: <pre><code>&lt;html&gt;  \n&lt;body&gt;  \n  &lt;%@ include file=\"header.html\" %&gt;\n\n  Today is: &lt;%= java.util.Calendar.getInstance().getTime() %&gt;  \n&lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre></p>"},{"location":"legacy/09_gyakorlat/#taglib-direktiva","title":"taglib direkt\u00edva","text":"<p>A taglib direkt\u00edva tag library-k beh\u00faz\u00e1s\u00e1ra alkalmazhat\u00f3, melyek custom tag-eket tartalmaznak. K\u00e9s\u0151bb majd l\u00e1tjuk, hogy hogyan csin\u00e1lhatunk saj\u00e1t tageket. Pl.: a <code>&lt;%= java.util.Calendar.getInstance().getTime() %&gt;</code> scriptlet helyett, csin\u00e1lhatunk egy saj\u00e1t <code>&lt;currentTime&gt;</code> tag-et, mely ki\u00edrja az aktu\u00e1lis id\u0151t \u00e9s ilyen m\u00f3don nem \"koszolja\" \u00f6ssze a forr\u00e1sk\u00f3dot.</p>"},{"location":"legacy/09_gyakorlat/#expression-language","title":"Expression Language","text":"<p>Az Expression Language vagy r\u00f6viden EL, egy olyan b\u0151v\u00edt\u00e9s, mely sokkal egyszer\u0171bb\u00e9 teszi az objektumokkal val\u00f3 munk\u00e1t, mint p\u00e9ld\u00e1ul a request, application, response, stb. Mint kor\u00e1bban l\u00e1ttuk, nem igaz\u00e1n j\u00f3, hogy a JSP-ben alapvet\u0151en HTML k\u00f3d van, mely teli van t\u0171zdelve Java k\u00f3dokkal. Az Expression Language ebben is seg\u00edt.</p> <p>Szintaxisa:</p> <p>${ expression } </p> <p>Az ilyen kifejez\u00e9seket a JSP oldalon bel\u00fcl ak\u00e1rhol haszn\u00e1lhatjuk.</p> <p>Ahogy a scriptletekben is rendelkez\u00fcnk implicit objektumokkal, \u00edgy az Expression Language-ben is el\u00e9rj\u00fck ezeket.</p> <p>Implicit objektumok list\u00e1ja:</p> <ul> <li>pageScope (csak az ezen oldalhoz t\u00e1rolt attrib\u00fatumok map-je)</li> <li>requestScope (a request-ben t\u00e1rolt attrib\u00fatumok map-je)</li> <li>sessionScope (a session-ben t\u00e1rolt attrib\u00fatumok map-je)</li> <li>applicationScope (a ServletContext-ben t\u00e1rolt attrib\u00fatumok map-je)</li> <li>param (request param\u00e9terek lek\u00e9rdez\u00e9s\u00e9hez)</li> <li>paramValues (a request param\u00e9terek list\u00e1ja)</li> <li>header (a k\u00e9r\u00e9s header-je)</li> <li>headerValues (az \u00f6sszes request header lek\u00e9rdez\u00e9se)</li> <li>cookie (cookie-k lek\u00e9rdez\u00e9s\u00e9hez)</li> <li>initParam (a context init param\u00e9terek lek\u00e9rdez\u00e9s\u00e9hez, amit a web.xml-ben adtunk meg, servlet init paramhoz nem haszn\u00e1lhat\u00f3)</li> </ul> <p>Figyelem</p> <p>A fenti implicit objektumokat ne keverj\u00fck \u00f6ssze a JSP implicit objektumokkal!</p> <p>Az Expression Language igazi ereje abban van, hogy nem kell folyamatosan v\u00e1ltanunk HTML \u00e9s java code k\u00f6z\u00f6tt.</p> <p>Vegy\u00fck a k\u00f6vetkez\u0151 p\u00e9ld\u00e1t:</p> <p>index.html <pre><code>&lt;html&gt;  \n  &lt;body&gt;  \n    &lt;form action=\"welcome.jsp\"&gt;  \n      &lt;input type=\"text\" name=\"uname\"&gt;  \n      &lt;input type=\"submit\" value=\"go\"&gt;&lt;br/&gt;  \n    &lt;/form&gt;  \n  &lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre></p> <p>welcome.jsp: <pre><code>&lt;html&gt;  &lt;body&gt;  &lt;%   String name = request.getParameter(\"uname\");  out.print(\"Welcome \" + name);  %&gt;\n&lt;/body&gt;  &lt;/html&gt;  </code></pre></p> <p>Expression Language haszn\u00e1lat\u00e1val a welcome.jsp a k\u00f6vetkez\u0151k\u00e9ppen is \u00edrhat\u00f3:</p> <pre><code>&lt;html&gt;  &lt;body&gt; Welcome ${param.uname}\n  &lt;/body&gt;  &lt;/html&gt;  </code></pre> <p>Az EL-el \u00edrt k\u00f3d sokkal r\u00f6videbb, sokkal tiszt\u00e1bb, k\u00f6nnyebben \u00e9rthet\u0151, \u00edgy mindenk\u00e9ppen aj\u00e1nlatos a haszn\u00e1lata.</p> <p>Seg\u00edts\u00e9g!!! Nem m\u0171k\u00f6dik az EL!</p> <p>Ennek t\u00f6bb oka lehet. A legval\u00f3sz\u00edn\u0171bb az, hogy a web.xml rosszul van meg\u00edrva. Mivel a 2.4-es servlet specifik\u00e1ci\u00f3t\u00f3l kezd\u0151d\u0151en t\u00e1mogatott az EL, \u00edgy a Maven \u00e1ltal gener\u00e1lt webapp nem igaz\u00e1n j\u00f3, mivel abban 2.3-as DTD specifik\u00e1ci\u00f3 van megadva, ami igencsak helytelen. <pre><code>  &lt;!DOCTYPE web-app PUBLIC\n  \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n  \"http://java.sun.com/dtd/web-app_2_3.dtd\" &gt;\n\n&lt;web-app&gt;\n&lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt;\n\n&lt;/web-app&gt;\n</code></pre></p> <p>A legegyszer\u0171bb megold\u00e1s, hogy a <code>&lt;!DOCTYPE ...</code> megad\u00e1st kit\u00f6r\u00f6lj\u00fck.</p>"},{"location":"legacy/09_gyakorlat/#el-operatorok","title":"EL oper\u00e1torok","text":"<p>A legt\u00f6bb EL implicit objektum egy map amib\u0151l \u00e9rt\u00e9keket k\u00e9rdezhet\u00fcnk le. Erre haszn\u00e1lhat\u00f3 a property access oper\u00e1tor (.), amivel a mapb\u0151l lek\u00e9rhetj\u00fck a megfelel\u0151 \u00e9rt\u00e9ket. P\u00e9ld\u00e1ul:</p> <p>${requestScope.person.name}</p> <p>Ez lek\u00e9ri a requestScope-ban defini\u00e1lt person attrib\u00fatumot, melynek azt\u00e1n lek\u00e9ri a name attrib\u00fatum\u00e1t. A person itt m\u00e1r nem egy map, hanem egy Bean objektum. Az ilyen Bean objektumokon is haszn\u00e1lhatjuk a property access oper\u00e1tort. A Bean alatt az \u00e1ltalunk m\u00e1r megismert Bean-eket \u00e9rtj\u00fck (publikus konstruktor, getter/setter, szerializ\u00e1lhat\u00f3). Fontos, hogy Bean-en \u00e9s java.util.Map objektumokon haszn\u00e1lhatjuk ezt az oper\u00e1tort.</p> <p>A k\u00f6vetkez\u0151 fontos oper\u00e1tor a collection access oper\u00e1tor. T\u00f6mb\u00f6k vagy list\u00e1k elemeihez kapunk hozz\u00e1f\u00e9r\u00e9st a haszn\u00e1latukkal. P\u00e9ld\u00e1k:</p> <p>${myList[1]}  // a myList lista 1 elem\u00e9t adja vissza</p> <p>${myList[\u201c1\u201d]} // nem csak sz\u00e1mmal, hanem string-el is megadhatjuk az indexet</p> <p>${myMap[expr]} // ha az index nem string akkor a param\u00e9ter EL kifejez\u00e9sk\u00e9nt ki\u00e9rt\u00e9kel\u0151dik</p> <p>${myMap[myList[1]]} // ak\u00e1r t\u00f6bbsz\u00f6r\u00f6sen is egym\u00e1sba lehet \u00e1gyazni</p> <p>Az EL kifejez\u00e9seken bel\u00fcl haszn\u00e1lhatjuk a tov\u00e1bbi megszokott egyszer\u0171 oper\u00e1torokat is:</p> <ul> <li>aritmetikai oper\u00e1torok (<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code>)</li> <li>logikai oper\u00e1torok (<code>&amp;&amp;</code>, <code>||</code>, <code>!</code>)</li> <li>rel\u00e1ci\u00f3s oper\u00e1torok (<code>&lt;</code>, <code>&gt;</code>, <code>==</code>, <code>!=</code>, <code>&lt;=</code>, <code>&gt;=</code>)</li> </ul> <p>Fontos</p> <p>Fontos \u00e9szben tartani a k\u00f6vetkez\u0151ket, amikor EL-t haszn\u00e1lunk:</p> <ul> <li>Az EL kifejez\u00e9sek mindig a k\u00f6vetkez\u0151 form\u00e1ban szerepelnek: <code>${...}</code></li> <li>Egy oldalon a EL feldolgoz\u00e1st letilthatjuk a <code>&lt;%@ page isELIgnored=\"true\" %&gt;</code> page direkt\u00edva haszn\u00e1lat\u00e1val</li> <li>Az EL seg\u00edts\u00e9g\u00e9vel lek\u00e9rdezhet\u00fcnk attrib\u00fatumokat, header-\u00f6ket, cookie-kat, viszont nem \u00e1ll\u00edthatunk be \u00e9rt\u00e9ket</li> <li>Az EL implicit objektumai k\u00fcl\u00f6nb\u00f6znek a JSP implicit objektumait\u00f3l, kiv\u00e9ve a pageContext</li> <li>Az EL NULL-bar\u00e1t: nem dob\u00e1l exception, ha nincs meg valamilyen attrib\u00fatum</li> </ul>"},{"location":"legacy/09_gyakorlat/#jsp-action-tag-ek","title":"JSP action tag-ek","text":"<p>A jsp action tag-ek halmaza sokat seg\u00edthet, hogy ne kelljen \u00e1tv\u00e1ltani java k\u00f3dra, helyette jsp-t \u00edrhatunk tov\u00e1bbra is. Itt csak a legfontosabbakat action tag-eket mutatjuk be.</p>"},{"location":"legacy/09_gyakorlat/#jspusebean","title":"jsp:useBean","text":"<p>Akkor haszn\u00e1ljuk, ha egy Java Bean-t le szeretn\u00e9nk k\u00e9rni egy adott scope-b\u00f3l, vagy egy \u00faj objektumot l\u00e9trehozni egy adott scope-ban. P\u00e9lda:</p> <pre><code>&lt;jsp:useBean id=\"person\" class=\"hu.alkfejl.Person\" scope=\"session\" /&gt;\n</code></pre> <p>Ebben az esetben a JSP kont\u00e9ner megkeresi a person nev\u0171 bejegyz\u00e9st a session-ben. Amennyiben ilyet nem tal\u00e1l, akkor l\u00e9trehoz egy \u00faj Person objektumot \u00e9s person n\u00e9ven be is \u00e1ll\u00edtja azt a session-ben. Miut\u00e1n defini\u00e1ltuk a Bean-t a JSP oldalon, onnant\u00f3l kezdve lek\u00e9rhetj\u00fck a property-jeit egy m\u00e1sik jsp action tag-gel, melyet <code>getProperty</code>-nek h\u00edvnak:</p> <pre><code>&lt;jsp:getProperty name=\"person\" property=\"name\" /&gt;\n</code></pre> <p>Ezt viszont nem igaz\u00e1n szoktuk haszn\u00e1lni, mivel m\u00e1r ismerj\u00fck az EL k\u00e9pess\u00e9geit, teh\u00e1t a fenti megfelel\u0151je:</p> <pre><code>${person.name}\n</code></pre> <p>A get mellett van egy setProperty jsp action tag, amit viszont m\u00e1r sokkal ink\u00e1bb haszn\u00e1lunk, mivel az EL seg\u00edts\u00e9g\u00e9vel nem tudunk \u00e9rt\u00e9keket be\u00e1ll\u00edtani.</p> <pre><code>&lt;jsp:setProperty name=\"person\" property=\"name\" value=\"Gipsz Jakab\" /&gt;\n</code></pre> <p>Ha a name property-t csak akkor akarjuk be\u00e1ll\u00edtani, ha \u00faj objektumot kellett l\u00e9trehozni (azaz nem volt m\u00e9g benne a sessionben), akkor a setProperty-t a useBean tag gyerekek\u00e9nt adjuk meg!</p> <pre><code>&lt;jsp:useBean id=\"person\" class=\"hu.alkfejl.Person\" scope=\"session\"&gt;\n&lt;jsp:setProperty name=\"person\" property=\"name\" value=\"Gipsz Jakab\" /&gt;\n&lt;/jsp:useBean&gt;\n</code></pre> <p>N\u00e9h\u00e1ny tudnival\u00f3:</p> <ul> <li>Amennyiben a useBean-ek nem adunk meg scope-ot akkor a <code>page</code> az alap\u00e9rtelmezett.</li> <li>Ha a request param\u00e9terek alapj\u00e1n akarom be\u00e1ll\u00edtani a property-t, akkor a setProperty <code>param</code> attrib\u00fatum\u00e1ban adhatom meg, hogy milyen nev\u0171 request param\u00e9ter \u00e9rt\u00e9k\u00e9t akarom a bean-nek odaadni. Ha a property neve megegyezik a request param\u00e9ter nev\u00e9vel, akkor elhagyhatom a param attrib\u00fatumot.</li> <li>Amennyiben a bean \u00f6sszes property-j\u00e9t be akarom \u00e1ll\u00edtani \u00e9s azok neve rendre megegyezik a request param\u00e9terek neveivel, akkor \u00edrhatom a k\u00f6vetkez\u0151t: <code>&lt;jsp:setProperty name=\"person\" property=\"*\" /&gt;</code></li> </ul>"},{"location":"legacy/09_gyakorlat/#jspforward","title":"jsp:forward","text":"<p>A szervletekn\u00e9l megismert <code>RequestDispatcher forward</code> met\u00f3dusa helyett haszn\u00e1lhat\u00f3.</p> <p>Az al\u00e1bbi k\u00f3dr\u00e9szletek ekvivalensek:</p> <pre><code>&lt;jsp:forward page=\"welcome.jsp\" /&gt;\n</code></pre> <p>Ugyanez a servlet doGet, doPost, stb met\u00f3dusokban: <pre><code>RequestDispatcher rd = request.getRequestDispatcher(\"welcome.jsp\");\nrd.forward(request, response);\n</code></pre></p>"},{"location":"legacy/09_gyakorlat/#jspinclude","title":"jsp:include","text":"<p>A szervletekn\u00e9l megismert <code>RequestDispatcher include</code> met\u00f3dus\u00e1val megegyez\u0151.</p> <p>Az al\u00e1bbi k\u00f3dr\u00e9szletek ekvivalensek:</p> <pre><code>&lt;jsp:include page=\"welcome.jsp\" /&gt;\n</code></pre> <p>Ugyanez a servlet doGet, doPost, stb met\u00f3dusokban: <pre><code>RequestDispatcher rd = request.getRequestDispatcher(\"welcome.jsp\");\nrd.include(request, response);\n</code></pre></p> <p>Egy fontos k\u00fcl\u00f6nbs\u00e9g azonban van: include direkt\u00edva haszn\u00e1latakor az include a transzform\u00e1l\u00e1skor t\u00f6rt\u00e9nik (azaz r\u00e9sze lesz a leford\u00edtott servlet-nek), m\u00edg jelen esetben fut\u00e1si id\u0151ben. Ez azt jelenti, hogy abban az esetben ha er\u0151sen dinamikus JSP oldalunk van, akkor az include direkt\u00edva cs\u0151d\u00f6t mondhat, \u00edgy ilyenkor \u00e9rdemes lehet a <code>jsp:include</code>-ot haszn\u00e1lni.</p>"},{"location":"legacy/09_gyakorlat/#jstl","title":"JSTL","text":"<p>A JSTL (JSP Standard Tag Library) egy adag egyedi tag-et ad a kez\u00fcnkbe, melyekkel sokkal k\u00f6nnyebb a fejleszt\u00e9s, illetve az EL mellett, a JSTL haszn\u00e1lat\u00e1val is sokkal szebb k\u00f3dot \u00edrhatunk a JSP oldalban, an\u00e9lk\u00fcl, hogy v\u00e1ltanunk k\u00e9ne scriptlet-re. A JSTL szolg\u00e1ltat n\u00e9h\u00e1ny bej\u00e1r\u00e1ssal \u00e9s el\u00e1gaz\u00e1ssal kapcsolatos tag-et. A JSTL-ben t\u00f6bb csoport tal\u00e1lhat\u00f3 meg, de mi csak a core library-t fogjuk haszn\u00e1lni. Ennek haszn\u00e1lat\u00e1hoz el\u0151sz\u00f6r a pom.xml-be fel kell venn\u00fcnk a k\u00f6vetkez\u0151 dependency-t:</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n&lt;artifactId&gt;jstl&lt;/artifactId&gt;\n&lt;version&gt;1.2&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Majd azon az oldalon, ahol haszn\u00e1lni szeretn\u00e9nk a jstl-t ott a k\u00f6vetkez\u0151t kell, beilleszten\u00fcnk.</p> <p>&lt;%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %&gt;</p>"},{"location":"legacy/09_gyakorlat/#cout","title":"c:out","text":"<p>A c:out hasonl\u00edt a <code>&lt;%= ... %&gt;</code> expression scriptlet-hez, viszont itt EL-el haszn\u00e1lhatjuk.</p> <p>P\u00e9lda: <pre><code>&lt;%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %&gt;  &lt;html&gt;  &lt;body&gt;  &lt;c:out value=\"${sessionScope.user.name}\"/&gt;  &lt;/body&gt;  &lt;/html&gt; </code></pre></p> <p>A fenti k\u00f3d a session-b\u0151l kiszedn\u00e9 a be\u00e1ll\u00edtott user bean objektumot, melynek a ki\u00edrja a name fieldj\u00e9t.</p>"},{"location":"legacy/09_gyakorlat/#cimport","title":"c:import","text":"<p>Hasonl\u00f3 a <code>&lt;jsp:include&gt;</code> action tag-hez, viszont k\u00e9pes k\u00fcls\u0151 url-ekr\u0151l is beh\u00fazni a tartalmat.</p>"},{"location":"legacy/09_gyakorlat/#cset","title":"c:set","text":"<p>A <code>&lt;c:set&gt;</code> v\u00e1ltoz\u00f3k be\u00e1ll\u00edt\u00e1s\u00e1ra haszn\u00e1lhat\u00f3, melynek megadhatjuk a scope-ot is (requestScope, sessionScope, applicationScope).</p> <p>P\u00e9lda:</p> <pre><code>&lt;c:set var=\"income\" scope=\"session\" value=\"${99 * 20 * 100}\"/&gt; </code></pre> <p>Fontos, hogy a scope megad\u00e1s\u00e1n\u00e1l nem kell megadni a teljes implicit objektumot, azaz nem sessionScope-ot \u00edrunk, hanem szimpl\u00e1n session-t.</p>"},{"location":"legacy/09_gyakorlat/#cremove","title":"c:remove","text":"<p>A <code>c:set</code> ellenkez\u0151je, elt\u00e1vol\u00edthatunk a megadott scope-b\u00f3l v\u00e1ltoz\u00f3kat. F\u0151 a takar\u00edt\u00e1s magunk ut\u00e1n, ha m\u00e1r nincs sz\u00fcks\u00e9g\u00fcnk valamire.</p> <p>"},{"location":"legacy/09_gyakorlat/#cif","title":"c:if","text":"<p>A v\u00e1laszba felt\u00e9telesen helyezhet\u00fcnk el tartalmat.</p> <p>P\u00e9lda: <pre><code>&lt;c:if test=\"${income &gt; 8000}\"&gt;  &lt;p&gt;My income is: &lt;c:out value=\"${income}\"/&gt;&lt;p&gt;  &lt;/c:if&gt;  </code></pre></p> <p>A fenti p\u00e9ld\u00e1ban csak akkor \u00edrjuk ki a j\u00f6vedelmet, ha az nagyobb mint 8000.</p>"},{"location":"legacy/09_gyakorlat/#cchoose","title":"c:choose","text":"<p>A Java-s switch megfelel\u0151je.</p> <p>P\u00e9lda: <pre><code>&lt;c:choose&gt;  &lt;c:when test=\"${income &lt;= 1000}\"&gt;  Income is not good.  &lt;/c:when&gt;  &lt;c:when test=\"${income &gt; 10000}\"&gt;  Income is very good.  &lt;/c:when&gt;  &lt;c:otherwise&gt;  Income is undetermined...  &lt;/c:otherwise&gt;  &lt;/c:choose&gt;  </code></pre></p> <p>A case \u00e1gaknak megfeleltethet\u0151 a when, illetve a default \u00e1gnak az otherwise.</p>"},{"location":"legacy/09_gyakorlat/#cforeach","title":"c:forEach","text":"<p>Iter\u00e1ci\u00f3hoz haszn\u00e1lhat\u00f3 a c:forEach tag, melyben index alap\u00fa, illetve a t\u00e9nyleges foreach iter\u00e1ci\u00f3 is megadhat\u00f3.</p> <p>P\u00e9lda: <pre><code>&lt;c:forEach var=\"j\" begin=\"1\" end=\"3\"&gt;  Item &lt;c:out value=\"${j}\"/&gt;\n&lt;/c:forEach&gt; </code></pre></p> <p>Egy m\u00e1sik p\u00e9lda sor\u00e1n, ha adott mondjuk a sessionben egy List t\u00edpus\u00fa lista akkor annak elemeit a k\u00f6vetkez\u0151k\u00e9ppen \u00edrhatjuk ki. <pre><code>&lt;c:forEach items=\"${sessionScope.texts}\" var=\"text\"&gt;  &lt;c:out value=\"${text}\"/&gt;\n&lt;/c:forEach&gt; </code></pre>"},{"location":"legacy/09_gyakorlat/#credirect","title":"c:redirect","text":"<p>A szervletekn\u00e9l l\u00e1tott <code>response.sendRedirect(\"welcome.jsp\")</code> mint\u00e1j\u00e1ra haszn\u00e1lhat\u00f3, de megint csak nem kell \u00e1tv\u00e1ltanunk scriptlet-be. Az url-ben megadhat\u00f3 k\u00fcls\u0151 er\u0151forr\u00e1s is.</p> <p></p>"},{"location":"legacy/09_gyakorlat/#feladatok","title":"Feladatok","text":"<p>Feladat</p> <p>K\u00e9sz\u00edts\u00fcnk egy k\u00e9pek felt\u00f6lt\u00e9s\u00e9re alkalmas JSP alkalmaz\u00e1st, mely Base64-be alak\u00edtja \u00e1t a k\u00e9pet!</p> Megold\u00e1s <p>index.jsp: <pre><code>&lt;html&gt;\n&lt;body&gt;\n\n&lt;form action=\"image-upload\" enctype = \"multipart/form-data\" method=\"post\"&gt;\n&lt;label for=\"img\"&gt;Select image:&lt;/label&gt;\n&lt;input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\"&gt;\n&lt;input type=\"submit\"&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>ImageUpload.java: <pre><code>import javax.servlet.ServletException;\nimport javax.servlet.annotation.MultipartConfig;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.Part;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.SequenceInputStream;\nimport java.util.Base64;\nimport java.util.Vector;\n\n@WebServlet(\"/image-upload\")\n@MultipartConfig(\nfileSizeThreshold = 1024 * 1024, // 1 MB\nmaxFileSize = 1024 * 1024 * 5, // 5 MB\nmaxRequestSize = 1024 * 1024 * 5 * 5 // 25 MB\n)\npublic class ImageUpload extends HttpServlet {\n\n@Override\nprotected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\nVector&lt;InputStream&gt; allParts = new Vector&lt;&gt;();\n\nfor (Part part : req.getParts()) {\nallParts.add(part.getInputStream());\n}\n\nSequenceInputStream appended = new SequenceInputStream(allParts.elements());\nbyte[] img = appended.readAllBytes();\nString result = Base64.getEncoder().encodeToString(img);\n\nSystem.out.println(result);\n}\n}\n</code></pre></p> <p>Fontos, hogy a form-ban megadjuk, hogy multipart data-t k\u00fcld\u00fcnk majd. A szervletben a <code>MultipartConfig</code> annot\u00e1ci\u00f3ban jelezhetj\u00fck, hogy mekkora mennyis\u00e9g\u0171 adatot hajland\u00f3 fogadni a szervlet\u00fcnk. Ezut\u00e1n az adatr\u00e9szeket a request-t\u0151l a <code>getParts()</code>-al k\u00e9rhetj\u00fck le, \u00e9s minden part-t\u00f3l elk\u00e9rhet\u00fcnk egy InputStream-et. Mivel nek\u00fcnk a k\u00e9p egyben kell, ez\u00e9rt ezeket a Streameket \u00f6ssze kell f\u0171zn\u00fcnk. Erre alkalmas a <code>SequenceInputStream</code>, melynek van egy konstruktora, mely Enumeration-et v\u00e1r. Emiatt egy <code>Vector</code>-ba \u00f6sszegy\u0171jtj\u00fck az InputStreameket, melyre az <code>elements()</code> h\u00edv\u00e1s pontosan egy ilyen enumeration-t ad vissza. Ebb\u0151l a <code>SequenceInputStream</code>-b\u0151l m\u00e1r kinyerhetj\u00fck a byte t\u00f6mb\u00f6t, melyet azt\u00e1n a Base64 encoderrel tudunk k\u00f3dolni String-g\u00e9. <p>A kinyert String-et lementhetj\u00fck ak\u00e1r adatb\u00e1zisba is. Most csak ki\u00edrjuk a konzolra. Tesztel\u00e9skor haszn\u00e1lhatunk egy online decodert, hogy visszanyerj\u00fck az eredeti k\u00e9pet. Pl.: https://codebeautify.org/base64-to-image-converter</p> <p>Feladat</p> <p>K\u00e9sz\u00edts\u00fck el a <code>contacts</code> projekt\u00fcnket JSP oldalak \u00e9s servletek haszn\u00e1lat\u00e1val! Els\u0151 k\u00f6rben elegend\u0151 a list\u00e1z\u00e1st \u00e9s a hozz\u00e1ad\u00e1st implement\u00e1lni.</p> Megold\u00e1s <p>A megold\u00e1st l\u00e1sd a pub-on!</p>"},{"location":"legacy/10_gyakorlat/","title":"10. gyakorlat","text":""},{"location":"legacy/10_gyakorlat/#jsp-folytatas","title":"JSP folytat\u00e1s","text":""},{"location":"legacy/10_gyakorlat/#fragment-ek","title":"Fragment-ek","text":"<p>A nem teljes \u00e9rt\u00e9k\u0171, csak t\u00f6red\u00e9k JSP oldalakat JSP fragment-eknek nevezz\u00fck.</p> <p>Feladat</p> <p>A person-administrator alkalmaz\u00e1sunk jsp/servlet megval\u00f3s\u00edt\u00e1s\u00e1ban a <code>menu</code> \u00e9s a k\u00f6z\u00f6s <code>header</code> elemek nem \u00f6n\u00e1ll\u00f3 JSP oldalak. Viszont a b\u00f6ng\u00e9sz\u0151b\u0151l direktben el\u00e9rhet\u0151ek ezek az oldalak. Jav\u00edtsuk ki, hogy erre ne legyen lehet\u0151s\u00e9g! Arr\u00f3l m\u00e1r volt sz\u00f3, hogy amit nem akarunk, hogy a felhaszn\u00e1l\u00f3 el\u00e9rjen, azt a WEB-INF k\u00f6nyvt\u00e1rba kell pakolni. Tegy\u00fcnk is \u00edgy: mozgassuk a teljes common mapp\u00e1t a WEB-INF al\u00e1! Ezut\u00e1n \u00e1ll\u00edtsuk \u00e1t a t\u00f6bbi oldalon szerepl\u0151 el\u00e9r\u00e9si \u00fatvonalakat (../WEB-INF/common/... kell legyen)! </p>"},{"location":"legacy/10_gyakorlat/#felhasznalok-kezelese","title":"Felhaszn\u00e1l\u00f3k kezel\u00e9se","text":"<p>Feladat</p> <p>Adjunk hozz\u00e1 az alkalmaz\u00e1sunkhoz val\u00f3di felhaszn\u00e1l\u00f3 kezel\u00e9st! Jelen esetben a login alkalm\u00e1val csak beletessz\u00fck a session-be \u00e9s k\u00e9sz. Legyen lehet\u0151s\u00e9g\u00fcnk \u00fagy bel\u00e9pni, hogy t\u00e9nylegesen ellen\u0151rizz\u00fck az alkalmaz\u00e1sban, hogy helyes felhaszn\u00e1l\u00f3 jelsz\u00f3 p\u00e1rost adott-e meg a felhaszn\u00e1l\u00f3. A jelszavakat titkos\u00edtsuk bcrypt algoritmussal! Ehhez konstru\u00e1ljuk egy felhaszn\u00e1l\u00f3 t\u00e1bl\u00e1t, illetve az adott felhaszn\u00e1l\u00f3 k\u00fcl\u00f6n tudja menedzselni a saj\u00e1t kontaktjait, teh\u00e1t minden felhaszn\u00e1l\u00f3 csak az \u00e1ltala hozz\u00e1adott embereket l\u00e1tja. Legyen egy regisztr\u00e1ci\u00f3 men\u00fcpont is a login-r\u00f3l el\u00e9rhet\u0151!</p> <ol> <li> <p>l\u00e9p\u00e9s: Dolgozzuk \u00e1t az adatb\u00e1zist!    Az valahogy \u00edgy kell, hogy kin\u00e9zzen az \u00e1talak\u00edt\u00e1s ut\u00e1n:</p> <pre><code> create table CONTACT\n(\nid INTEGER not null\nconstraint CONTACT_pk\nprimary key autoincrement,\nname text not null,\nemail text not null,\naddress text,\ndateOfBirth text not null,\ncompany text,\nposition text,\nuser_id int\n);\n\ncreate unique index CONTACT_email_uindex\non CONTACT (email);\n\ncreate table PHONE\n(\nid integer not null\nconstraint PHONE_pk\nprimary key autoincrement,\nnumber text not null,\nphoneType integer not null,\ncontact_id int\nreferences CONTACT\n);\n\ncreate table USER\n(\nid INTEGER not null\nconstraint USER_pk\nprimary key autoincrement,\nusername text not null,\npassword text not null,\nemail text not null\n);\n\ncreate unique index USER_email_uindex\non USER (email);\n\ncreate unique index USER_username_uindex\non USER (username);\n</code></pre> </li> <li> <p>l\u00e9p\u00e9s: <code>User</code> model hozz\u00e1ad\u00e1sa a <code>contacts-core</code>-hoz \u00e9s <code>Contact</code> model aktualiz\u00e1l\u00e1sa.</p> <p><code>Contact.java</code> <pre><code> public class Contact{\n// other properties\nprivate ObjectProperty&lt;User&gt; user = new SimpleObjectProperty&lt;&gt;(this, \"user\");\n\n// getters, setters\n}\n</code></pre></p> <p><code>User.java</code> <pre><code> public class User {\nprivate IntegerProperty id = new SimpleIntegerProperty();\nprivate StringProperty username = new SimpleStringProperty();\nprivate StringProperty password = new SimpleStringProperty();\nprivate StringProperty email = new SimpleStringProperty();\n\n// getters, setters\n}\n</code></pre></p> </li> <li> <p>l\u00e9p\u00e9s: <code>UserDAO</code> \u00e9s <code>UserDAOImpl</code> elk\u00e9sz\u00edt\u00e9se</p> <pre><code>public interface UserDAO {\n\nUser getUserById(int id);\nvoid addUser(User user);\nUser login(String username, String password);\n}\n</code></pre> <p>A <code>UserDAO</code>-ban semmilyen k\u00fcl\u00f6nleges nincs.   Lehet\u0151s\u00e9get ad lek\u00e9rdez\u00e9sre, hozz\u00e1ad\u00e1sra (regisztr\u00e1ci\u00f3), illetve bejelentkez\u00e9sre.</p> <p>A konkr\u00e9t megval\u00f3s\u00edt\u00e1s:</p> <pre><code>public class UserDAOImpl implements UserDAO{\n\nprivate static UserDAOImpl instance;\nprivate static final String DB_CONN_STR = ContactConfiguration.getValue(\"db.url\");\n\npublic static UserDAOImpl getInstance() {\nif (instance == null) {\ntry {\nClass.forName(\"org.sqlite.JDBC\");\n} catch (ClassNotFoundException e1) {\ne1.printStackTrace();\n}\ninstance = new UserDAOImpl();\n}\nreturn instance;\n}\n\nprivate UserDAOImpl() {\n}\n\n@Override\npublic User getUserById(int id) {\ntry (Connection conn = DriverManager.getConnection(DB_CONN_STR);\nPreparedStatement pst = conn.prepareStatement(\"SELECT * FROM USER WHERE id = ?\")\n) {\npst.setInt(1, id);\n\nResultSet rs = pst.executeQuery();\nif (rs.next()) {\nUser u = new User();\nu.setId(rs.getInt(1));\nu.setUsername(rs.getString(2));\nu.setEmail(rs.getString(3));\nu.setPassword(rs.getString(4));\nreturn u;\n}\n\n} catch (SQLException e) {\ne.printStackTrace();\n}\nreturn null;\n}\n\n@Override\npublic void addUser(User user) {\n\ntry (Connection conn = DriverManager.getConnection(DB_CONN_STR);\nPreparedStatement pst = conn.prepareStatement(\"INSERT INTO USER (username, password, email) VALUES (?,?,?)\")\n) {\n\nString newPwd = BCrypt.withDefaults().hashToString(12, user.getPassword().toCharArray());\nuser.setPassword(newPwd);\npst.setString(1, user.getUsername());\npst.setString(2, user.getPassword());\npst.setString(3, user.getEmail());\n\npst.executeUpdate();\n} catch (SQLException e) {\ne.printStackTrace();\n}\n}\n\n@Override\npublic User login(String username, String password) {\n\ntry (Connection conn = DriverManager.getConnection(DB_CONN_STR);\nPreparedStatement pst = conn.prepareStatement(\"SELECT * FROM USER WHERE username = ?\")\n) {\npst.setString(1, username);\nResultSet rs = pst.executeQuery();\nif (rs.next()) {\n\nString dbPass = rs.getString(\"password\");\nBCrypt.Result result = BCrypt.verifyer().verify(password.toCharArray(), dbPass);\nif(result.verified){\nUser user = new User();\nuser.setUsername(rs.getString(\"username\"));\nuser.setPassword(rs.getString(\"password\"));\nuser.setEmail(rs.getString(\"email\"));\nuser.setId(rs.getInt(\"id\"));\nreturn user;\n}\n}\n\n} catch (SQLException e) {\ne.printStackTrace();\n}\n\nreturn null;\n}\n}\n</code></pre> <p>\u00c9rdemes megfigyelni, hogy a <code>UserDAOImpl</code> p\u00e9ld\u00e1nyos\u00edt\u00e1s\u00e1t a Singleton tervez\u00e9si minta ment\u00e9n k\u00e9sz\u00edtett\u00fck el, \u00edgy a <code>getInstance</code> h\u00edv\u00e1ssal k\u00e9rhet\u00fcnk majd egy ilyen p\u00e9ld\u00e1nyt (private konstruktor miatt k\u00edv\u00fclr\u0151l nem p\u00e9ld\u00e1nyos\u00edthat\u00f3).   A megismert mint\u00e1t alkalmazhatjuk a t\u00f6bbi DAO oszt\u00e1lyon is.</p> <p>Egy tov\u00e1bbi \u00e9rdekes r\u00e9sz, amikor az <code>addUser</code> met\u00f3dusban a jelsz\u00f3 hash-elt v\u00e1ltozat\u00e1t \u00e1ll\u00edtjuk el\u0151, tessz\u00fck ezt az\u00e9rt, mert nem szeretn\u00e9nk a nat\u00far sz\u00f6veges jelszavunkat menteni a DB-be.   Ehhez a bcrypt algoritmust haszn\u00e1ljuk, mely manaps\u00e1g egy javasolt hash-el\u00e9si algoritmus.   A JDK nem tartalmaz erre a c\u00e9lre be\u00e9p\u00edtett oszt\u00e1lyokat, \u00edgy egy k\u00fcl\u00f6n f\u00fcgg\u0151s\u00e9get haszn\u00e1lnuk.</p> <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;at.favre.lib&lt;/groupId&gt;\n&lt;artifactId&gt;bcrypt&lt;/artifactId&gt;\n&lt;version&gt;0.9.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Jelen esetben a az alapbe\u00e1ll\u00edt\u00e1sokat haszn\u00e1ljuk (<code>withDefaults</code>), illetve \u00edgy \u00e1ll\u00edtjuk el\u0151 a hash string-et a password alapj\u00e1n.   Tov\u00e1bbi konfigur\u00e1ci\u00f3kat is megadhatunk, melyr\u0151l b\u0151vebben a lib github oldal\u00e1n tal\u00e1lunk le\u00edr\u00e1st.   Miut\u00e1n megvan a hash, ezt be\u00e1ll\u00edtjuk a user password-j\u00e9nek \u00e9s \u00edgy ezt mentj\u00fck az adatb\u00e1zisba.   Amikor bejelentkez\u00fcnk, akkor pedig a megadott jelsz\u00f3t veti \u00f6ssze a library az adatb\u00e1zisban szerepl\u0151vel:   <code>BCrypt.Result result = BCrypt.verifyer().verify(password.toCharArray(), dbPass);</code></p> </li> <li> <p>l\u00e9p\u00e9s: Contact DAO updatel\u00e9se</p> <p><code>ContactDAO.java</code> <pre><code>public interface ContactDAO {\n\nList&lt;Contact&gt; findAll();\nList&lt;Contact&gt; findAll(User user);\n\nContact save(Contact contact);\nvoid delete(Contact contact);\n\n}\n</code></pre></p> <p>A <code>ContactDAO</code> \u00fagy v\u00e1ltozik meg, hogy a <code>findAll</code> param\u00e9ter\u00e9ben egy <code>User</code>-t is \u00e1tadunk.   A ment\u00e9skor szeretn\u00e9nk jel\u00f6lni, hogy az \u00faj\u00f6nnan l\u00e9trehozott kontakt melyik felhaszn\u00e1l\u00f3hoz tartozik (ezt most m\u00e1r a <code>Contact</code> modellben elt\u00e1roljuk), illetve, amikor lek\u00e9rdez\u00fcnk, akkor egy felhaszn\u00e1l\u00f3hoz tartoz\u00f3 kontaktot list\u00e1j\u00e1t adjuk vissza.   Mivel az asztali alkalmaz\u00e1sunkban nem kezelt\u00fcnk felhaszn\u00e1l\u00f3kat \u00e9s nem is fogunk m\u00e1r visszamenni arra a pontra, hogy ezt implement\u00e1ljunk, ez\u00e9rt az eredeti f\u00fcggv\u00e9nylenyomatokat meghagyjuk \u00e9s biztos\u00edtunk olyan lehet\u0151s\u00e9get, melyben a <code>User</code> is megadhat\u00f3.   Ennek t\u00fckr\u00e9ben a <code>ContactDAOImpl</code> a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>public class ContactDAOImpl implements ContactDAO{\n\nprivate static final String SELECT_ALL_CONTACTS = \"SELECT * FROM CONTACT\";\nprivate static final String SELECT_ALL_CONTACTS_BY_USER = \"SELECT * FROM CONTACT WHERE user_id = ?\";\nprivate static final String INSERT_CONTACT = \"INSERT INTO CONTACT (name, email, address, dateOfBirth, company, position, user_id) VALUES (?,?,?,?,?,?,?)\";\nprivate static final String UPDATE_CONTACT = \"UPDATE CONTACT SET name=?, email = ?, address = ?, dateOfBirth=?, company=?, position = ? WHERE id=?\";\nprivate static final String DELETE_CONTACT = \"DELETE FROM CONTACT WHERE id = ?\";\nprivate String connectionURL;\nprivate PhoneDAO phoneDAO = new PhoneDAOImpl();\nprivate UserDAO userDAO = UserDAOImpl.getInstance();\npublic ContactDAOImpl(){\ntry {\nClass.forName(\"org.sqlite.JDBC\");\n} catch (ClassNotFoundException e) {\ne.printStackTrace();\n}\nconnectionURL = ContactConfiguration.getValue(\"db.url\");\n}\n\n@Override\npublic List&lt;Contact&gt; findAll() {\nreturn findAll(null);\n}\n\n@Override\npublic List&lt;Contact&gt; findAll(User user) {\nList&lt;Contact&gt; result = new ArrayList&lt;&gt;();\n\ntry(Connection c = DriverManager.getConnection(connectionURL);\n){\nResultSet rs;\nif(user == null){\nStatement stmt = c.createStatement();\nrs = stmt.executeQuery(SELECT_ALL_CONTACTS);\n}\nelse{\nPreparedStatement stmt = c.prepareStatement(SELECT_ALL_CONTACTS_BY_USER);\nstmt.setInt(1, user.getId());\nrs = stmt.executeQuery();\n}\nwhile(rs.next()){\nContact contact = new Contact();\ncontact.setId(rs.getInt(\"id\"));\ncontact.setName(rs.getString(\"name\"));\ncontact.setEmail(rs.getString(\"email\"));\ncontact.setAddress(rs.getString(\"address\"));\nDate date = Date.valueOf(rs.getString(\"dateOfBirth\"));\ncontact.setDateOfBirth(date == null ? LocalDate.now() : date.toLocalDate());\ncontact.setCompany(rs.getString(\"company\"));\ncontact.setPosition(rs.getString(\"position\"));\ncontact.setPhones(phoneDAO.findAllByContactId(contact.getId()));\ncontact.setUser(userDAO.getUserById(rs.getInt(\"user_id\")));\nresult.add(contact);\n\n}\n\n} catch (SQLException throwables) {\nthrowables.printStackTrace();\n}\n\nreturn result;\n}\n\n@Override\npublic Contact save(Contact contact) {\ntry(Connection c = DriverManager.getConnection(connectionURL);\nPreparedStatement stmt = contact.getId() &lt;= 0 ? c.prepareStatement(INSERT_CONTACT, Statement.RETURN_GENERATED_KEYS) : c.prepareStatement(UPDATE_CONTACT)\n){\nif(contact.getId() &gt; 0){ // UPDATE\nstmt.setInt(7, contact.getId());\n}\nelse{\nif(contact.getUser() != null){\nstmt.setInt(7, contact.getUser().getId());\n}\n}\nstmt.setString(1, contact.getName());\nstmt.setString(2, contact.getEmail());\nstmt.setString(3, contact.getAddress());\nstmt.setString(4, contact.getDateOfBirth().toString());\nstmt.setString(5, contact.getCompany());\nstmt.setString(6, contact.getPosition());\n\nint affectedRows = stmt.executeUpdate();\nif(affectedRows == 0){\nreturn null;\n}\n\nif(contact.getId() &lt;= 0){ // INSERT\nResultSet genKeys = stmt.getGeneratedKeys();\nif(genKeys.next()){\ncontact.setId(genKeys.getInt(1));\n}\n}\n\n} catch (SQLException throwables) {\nthrowables.printStackTrace();\nreturn null;\n}\n\nreturn contact;\n}\n\n// delete is unmodified\n}\n</code></pre> </li> <li> <p>l\u00e9p\u00e9s: login updatel\u00e9se</p> <p>A login oldalon alapvet\u0151en marad minden \u00fagy, ahogy volt de egy linket hozz\u00e1adunk, hogy a regisztr\u00e1l\u00e1s oldalra \u00e1t tudjunk navig\u00e1lni abban az esetben ha m\u00e9g nem volt l\u00e9trehozott fi\u00f3kunk.</p> <pre><code>&lt;span&gt;&lt;a href=\"register.jsp\"&gt;Register&lt;/a&gt;&lt;/span&gt;\n</code></pre> </li> <li> <p>l\u00e9p\u00e9s: LoginController updatel\u00e9se:</p> <p>Ahhoz, hogy a bejentkez\u00e9s az \u00faj DAO-val egy\u00fcttm\u0171k\u00f6dj\u00f6n, a LoginController-ben is kell n\u00e9h\u00e1ny m\u00f3dos\u00edt\u00e1st eszk\u00f6z\u00f6ln\u00fcnk.   Itt m\u00e1r felhaszn\u00e1ljuk a DAO ny\u00fajtotta <code>login</code> met\u00f3dust.</p> <pre><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nrequest.setCharacterEncoding(\"utf-8\");\nresponse.setCharacterEncoding(\"utf-8\");\n\nUserDAO userDAO = UserDAOImpl.getInstance();\n\nString username = request.getParameter(\"username\");\nString password = request.getParameter(\"password\");\n\nUser user = userDAO.login(username, password);\n\nif( user == null){\nresponse.sendRedirect(\"pages/login.jsp\");\nreturn;\n}\n\nrequest.getSession().setAttribute(\"currentUser\", user);\nresponse.sendRedirect(\"pages/list-contact.jsp\");\n}\n</code></pre> </li> <li> <p>l\u00e9p\u00e9s: regisztr\u00e1ci\u00f3s form</p> <p>A regisztr\u00e1ci\u00f3s form valahogy \u00edgy n\u00e9zhet ki:  <pre><code> &lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;jsp:include page=\"../WEB-INF/common/common-header.jsp\"/&gt;\n&lt;title&gt;Register&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=\"container\"&gt;\n&lt;form action=\"../RegisterController\" method=\"post\"&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"username\"&gt;Username&lt;/label&gt;\n&lt;input required name=\"username\" type=\"text\" class=\"form-control\" id=\"username\"\nplaceholder=\"Username\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"password\"&gt;Password&lt;/label&gt;\n&lt;input required name=\"password\" type=\"password\" class=\"form-control\" id=\"password\"\nplaceholder=\"Password\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"email\"&gt;Email&lt;/label&gt;\n&lt;input required name=\"email\" type=\"email\" class=\"form-control\" id=\"email\"\nplaceholder=\"Email\"/&gt;\n&lt;/div&gt;\n&lt;button id=\"submit\" type=\"submit\" class=\"btn btn-primary\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>A regisztr\u00e1ci\u00f3s formban be\u00e9rj\u00fck a felhaszn\u00e1l\u00f3nevet, a jelsz\u00f3t \u00e9s az email c\u00edmet.   A regisztr\u00e1ci\u00f3s form az adatokat tov\u00e1bbk\u00fcldi a <code>RegisterController</code>-nek, mely az adatr\u00e9tegnek tov\u00e1bbk\u00fcldi a regisztr\u00e1ci\u00f3s k\u00e9relmet.</p> <p><pre><code>@WebServlet(\"/RegisterController\")\npublic class RegisterController extends HttpServlet {\n\nUserDAO dao = UserDAOImpl.getInstance();\n\n@Override\nprotected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\nreq.setCharacterEncoding(\"utf-8\");\nresp.setCharacterEncoding(\"utf-8\");\nUser user = new User();\nuser.setUsername(req.getParameter(\"username\"));\nuser.setEmail(req.getParameter(\"email\"));\nuser.setPassword(req.getParameter(\"password\"));\n\ndao.addUser(user);\n\nresp.sendRedirect(\"pages/login.jsp\");\n}\n}\n</code></pre>   Jelen esetben semmilyen jelleg\u0171 ellen\u0151rz\u00e9s nincs, amivel a regisztr\u00e1ci\u00f3 sikeress\u00e9g\u00e9t ellen\u0151rizz\u00fck.</p> </li> <li> <p>l\u00e9p\u00e9s: Alak\u00edtsunk a hozz\u00e1ad\u00e1son \u00e9s a list\u00e1z\u00e1son az \u00fajfajta DAO-nak megfelel\u0151en (kell egy user, akihez tartoz\u00f3 kontaktokat szeretn\u00e9nk list\u00e1zni, illetve akinek szeretn\u00e9nk \u00faj kontaktot l\u00e9trehozni).</p> <p>Az egyik igen fontos pont, hogy a <code>list-contact.jsp</code>-ben beh\u00fazzuk a <code>ContactController</code>-t, melynek ilyen m\u00f3don a <code>doGet</code> met\u00f3dusa fog lefutni, mely az al\u00e1bbit teszi:</p> <pre><code>...\nprivate ContactDAO dao = new ContactDAOImpl();\n\n@Override\nprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\nUser currentUser = (User) req.getSession().getAttribute(\"currentUser\");\nList&lt;Contact&gt; all = dao.findAll(currentUser);\nreq.setAttribute(\"contactList\", all);\n}\n...\n</code></pre> <p>A session alapj\u00e1n lek\u00e9rj\u00fck az aktu\u00e1lis felhaszn\u00e1l\u00f3t \u00e9s csak a hozz\u00e1 tartoz\u00f3 kontaktokat adjuk vissza.</p> <p>A hozz\u00e1ad\u00e1s form-ja nem v\u00e1ltozott, csak a common header r\u00e9sz miatt.</p> <p>Elk\u00fcldj\u00fck a <code>ContactController</code>-nek az \u00f6sszes sz\u00fcks\u00e9ges param\u00e9tert.   A doPost a k\u00f6vetkez\u0151k\u00e9ppen m\u00f3dosul:</p> <pre><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nrequest.setCharacterEncoding(\"utf-8\");\n// setup params\n...\nUser currentUser = (User) request.getSession().getAttribute(\"currentUser\");\nc.setUser(currentUser);\n\nc = dao.save(c);\n...\n// saving phones\n\n}\n</code></pre> <p>Fontos, hogy a request encoding-j\u00e1t is UTF-8-ra \u00e1ll\u00edtsuk be, m\u00e1sk\u00fcl\u00f6nben az adatb\u00e1zisba is rossz encoding-al ker\u00fcl be az \u00faj kontakt (<code>request.setCharacterEncoding(\"utf-8\");</code>).</p> </li> <li> <p>l\u00e9p\u00e9s: L\u00e9nyeg\u00e9ben k\u00e9sz vagyunk, de egy-k\u00e9t dolog m\u00e9g kimaradt, mint p\u00e9ld\u00e1ul a logout \u00e1talak\u00edt\u00e1sa.</p> <p>Eddig a cookie-ban volt csak az aktu\u00e1lis user, most viszont a sessionben t\u00e1roljuk, \u00edgy ezt is \u00e1t kell alak\u00edtanunk kicsit.</p> <pre><code>protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nrequest.getSession().removeAttribute(\"username\");\n\nresponse.sendRedirect(\"pages/login.jsp\");\n}\n</code></pre> <p>Szimpl\u00e1n t\u00f6r\u00f6lj\u00fck a sessionb\u0151l a <code>currentUser</code> attrib\u00fatumot, illetve a login oldalra kalauzoljuk a felhaszn\u00e1l\u00f3t.</p> </li> <li> <p>l\u00e9p\u00e9s: Men\u00fc update:</p> <p>A men\u00fcs\u00e1v jobb oldal\u00e1n ki\u00edrjuk az aktu\u00e1lis felhaszn\u00e1l\u00f3 nev\u00e9t, illetve az itteni leny\u00edl\u00f3 men\u00fcben biztos\u00edtjuk, hogy a felhaszn\u00e1l\u00f3 ki tudjon jelentkezni.   A men\u00fcs\u00e1v szint\u00e9n a cookie-t haszn\u00e1lta eddig, \u00edgy ezt is \u00e1t kell alak\u00edtani. Az idev\u00e1g\u00f3 k\u00f3dr\u00e9szlet:</p> <pre><code>&lt;c:if test=\"${sessionScope.currentUser.username != null}\"&gt;\n&lt;li class=\"nav-item dropdown ml-auto\"&gt;\n&lt;a class='nav-link dropdown-toggle' href='#' id='navbarDropdownMenuLink' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'&gt;\n${sessionScope.currentUser.username}\n        &lt;/a&gt;\n&lt;div class='dropdown-menu dropdown-menu-right' aria-labelledby='navbarDropdownMenuLink'&gt;\n&lt;a class='dropdown-item' href='../LogoutController'&gt;Kijelentkez\u00e9s&lt;/a&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;/c:if&gt;\n</code></pre> </li> <li> <p>l\u00e9p\u00e9s: Filterez\u00e9s</p> <p>A login megold\u00e1sunk m\u00e1r eg\u00e9szen t\u0171rhet\u0151, azonban jelen helyzetben, ha a valamelyik oldalra navig\u00e1lunk direktben, akkor az oldalt megpr\u00f3b\u00e1lja bet\u00f6lteni a rendszer.   A megfelel\u0151 m\u0171k\u00f6d\u00e9s az volna, hogy legal\u00e1bb a session-t ellen\u0151rizz\u00fck, hogy be van-e jelentkezve a felhaszn\u00e1l\u00f3.   Amennyiben igen, akkor az adott oldalra engedj\u00fck, m\u00e1sk\u00fcl\u00f6nben visszha\u00edr\u00e1ny\u00edtjuk a login oldalra.   Mivel a filterez\u00e9st minden lehets\u00e9ges oldalra szeretn\u00e9nk v\u00e9grehajtani, \u00edgy az a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>@WebFilter(\"/*\")\npublic class AuthFilter implements Filter {\n\nprivate List&lt;String&gt; exclusions;\n\n@Override\npublic void init(FilterConfig filterConfig) throws ServletException {\nthis.exclusions = Arrays.asList(filterConfig.getServletContext().getInitParameter(\"login-filter-exclusion\").split(\",\"));\nthis.exclusions.replaceAll(String::trim);\n}\n\n@Override\npublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n\nString path = ((HttpServletRequest) request).getServletPath();\nif (exclusions.stream().anyMatch(path::equals)) {\nchain.doFilter(request, response);\nreturn;\n}\n\nUser currentUser = (User) ((HttpServletRequest) request).getSession().getAttribute(\"currentUser\");\n\nif (currentUser == null) {\n((HttpServletResponse)response).sendRedirect(((HttpServletRequest) request).getContextPath() + \"/pages/login.jsp\");\n}\nelse{\nchain.doFilter(request, response);\n}\n}\n}\n</code></pre> <p>A filterez\u00e9sn\u00e9l a <code>/*</code>-al mondjuk meg, hogy minden k\u00e9r\u00e9sre szeretn\u00e9nk futtatni a filtert.   Mivel van t\u00f6bb oldal is, amin azonban nem szeretn\u00e9nk, ha a filter lefutna, \u00edgy ezeket valamilyen m\u00f3don meg kell adnunk.   Sajnos kiv\u00e9teleket nem tudunk megadni a filter url-patter r\u00e9szn\u00e9l, ez\u00e9rt a <code>web.xml</code>-ben adjuk meg azokat az url-eket, melyekre nem szeretn\u00e9nk filterez\u00e9st v\u00e9grehajtani.   M\u00e9g egy technikai probl\u00e9m, hogy egy param-hoz nem tudunk t\u00f6bb \u00e9rt\u00e9ket megadni, \u00edgy vessz\u0151vel elv\u00e1lasztva adjuk ezt meg.   A Filter-ben pedig a vessz\u0151k ment\u00e9n feldaraboljuk a string-et (init-ben).</p> <pre><code>&lt;context-param&gt;\n&lt;param-name&gt;login-filter-exclusion&lt;/param-name&gt;\n&lt;param-value&gt;\n/index.jsp,\n        /pages/login.jsp,\n        /LoginController,\n        /pages/register.jsp,\n        /RegisterController,\n        /css/style.css\n    &lt;/param-value&gt;\n&lt;/context-param&gt;\n</code></pre> <p>A doFilter met\u00f3dusban megvizsg\u00e1ljuk, hogy az aktu\u00e1lis k\u00e9r\u00e9s url-je (context url n\u00e9lk\u00fcl) megegyezik-e a megadott lista b\u00e1rmely elem\u00e9vel.   Amennyiben tal\u00e1lunk ilyet, akkor tov\u00e1bbengedj\u00fck a k\u00e9r\u00e9st, m\u00e1sk\u00fcl\u00f6nben megvizsg\u00e1ljuk, hogy be vagyunk-e jelentkezve.   Ha a session-ben tal\u00e1lunk bejelentkezett felhaszn\u00e1l\u00f3t, akkor tov\u00e1bbengedj\u00fck a k\u00e9r\u00e9st, m\u00e1sk\u00fcl\u00f6nben a login-ra ir\u00e1ny\u00edtjuk.</p> </li> </ol> <p>Ez egy komplexebb feladat volt, de l\u00e9p\u00e9senk\u00e9nt sz\u00e9pen fel lehetett \u00e9p\u00edteni az alkalmaz\u00e1s megfelel\u0151 m\u0171k\u00f6d\u00e9s\u00e9t. A megold\u00e1s megtal\u00e1lhat\u00f3 a pub-on <code>01-contacts-user</code> mapp\u00e1ban.</p>"},{"location":"legacy/10_gyakorlat/#profil-hozzaadasa","title":"Profil hozz\u00e1ad\u00e1sa","text":"<p>Feladat</p> <p>B\u0151v\u00edts\u00fck az alkalmaz\u00e1st egy profil oldallal, ahol megadhatunk profilk\u00e9pet, le\u00edr\u00e1st is. Az oldalon lehessen updatelni a felhaszn\u00e1l\u00f3 tulajdons\u00e1gait (jelsz\u00f3t nem kell).</p> <p>Els\u0151k\u00e9nt b\u0151v\u00edts\u00fck a <code>User</code> oszt\u00e1lyt a k\u00e9p \u00e9s a le\u00edr\u00e1s opci\u00f3kkal!</p> <pre><code>private StringProperty description = new SimpleStringProperty();\nprivate StringProperty profilePic = new SimpleStringProperty();\n\n// getters and setters\n</code></pre> <p>A <code>UserDAO</code>-t m\u00f3dos\u00edtsuk \u00fagy, hogy az az <code>update</code>-re is k\u00e9pes legyen. Ehhez az <code>addUser</code>-t refaktor\u00e1ljuk, hogy <code>save</code>-nek h\u00edvj\u00e1k!</p> <pre><code>User save(User user);\n</code></pre> <p>Az implement\u00e1ci\u00f3t pedig a k\u00f6vetkez\u0151k\u00e9ppen m\u00f3dos\u00edtsuk:</p> <pre><code>...\nprivate static final String INSERT_USER = \"INSERT INTO USER (username, email, profilePic, description, password) VALUES (?,?,?,?,?)\";\nprivate static final String UPDATE_USER = \"UPDATE User SET username=?, email=?, profilePic=?, description=? WHERE id=?\";\n...\n@Override\npublic User save(User user) {\n\ntry (Connection conn = DriverManager.getConnection(DB_CONN_STR);\nPreparedStatement pst = user.getId() &lt;= 0 ? conn.prepareStatement(INSERT_USER, Statement.RETURN_GENERATED_KEYS) : conn.prepareStatement(UPDATE_USER)\n) {\npst.setString(1, user.getUsername());\npst.setString(2, user.getEmail());\npst.setString(3, user.getProfilePic());\npst.setString(4, user.getDescription());\n\nif(user.getId() &gt; 0) { // UPDATE\npst.setInt(5, user.getId());\n}\nelse{ // INSERT\nString hashedPwd = BCrypt.withDefaults().hashToString(12, user.getPassword().toCharArray());\npst.setString(5, hashedPwd);\n}\n\nint affectedRows = pst.executeUpdate();\nif(affectedRows == 0){\nreturn null;\n}\n\nif(user.getId() &lt;= 0){ // INSERT\nResultSet genKeys = pst.getGeneratedKeys();\nif(genKeys.next()){\nuser.setId(genKeys.getInt(1));\n}\n}\n\nuser.setPassword(\"\"); // do not return even the hashed password for the caller\n\n} catch (SQLException e) {\ne.printStackTrace();\n}\n\nreturn user;\n\n}\n</code></pre> <p>Ahhoz, hogy megfelel\u0151en m\u0171k\u00f6djenek az adatb\u00e1zis m\u0171veletek m\u00f3dos\u00edtanunk kell a DB s\u00e9m\u00e1t is:</p> <pre><code>create table USER\n(\nid INTEGER not null\nconstraint USER_pk\nprimary key autoincrement,\nusername text not null,\npassword text not null,\nemail text not null,\nprofilePic text,\ndescription text\n);\n</code></pre> <p>A regisztr\u00e1l\u00e1si oldalon most nem v\u00e1ltoztatunk, \u00edgy n\u00e9zz\u00fck a profil oldalt!</p> <pre><code>&lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %&gt;\n&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;jsp:include page=\"../WEB-INF/common/common-header.jsp\"/&gt;\n&lt;script src=\"../js/profile.js\" &gt;&lt;/script&gt;\n&lt;title&gt;Profile&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;jsp:include page=\"../WEB-INF/common/menu.jsp\"/&gt;\n\n\n&lt;div class=\"container bootstrap snippet\"&gt;\n&lt;div class=\"row\"&gt;\n&lt;div class=\"col-sm-10\"&gt;&lt;h1&gt;${sessionScope.currentUser.username}&lt;/h1&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"row\"&gt;\n&lt;div class=\"col-sm-3\"&gt;&lt;!--left col--&gt;\n&lt;div class=\"text-center\"&gt;\n&lt;c:choose&gt;\n&lt;c:when test=\"${sessionScope.currentUser.profilePic.length() &gt; 0}\"&gt;\n&lt;img src=\"${sessionScope.currentUser.profilePic}\" class=\"avatar img-circle img-thumbnail\"\nalt=\"avatar\"&gt;\n&lt;/c:when&gt;\n&lt;c:otherwise&gt;\n&lt;img src=\"http://ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"avatar img-circle img-thumbnail\"\nalt=\"avatar\"&gt;\n&lt;/c:otherwise&gt;\n&lt;/c:choose&gt;\n\n&lt;h6&gt;Upload a different photo...&lt;/h6&gt;\n&lt;input type=\"file\" class=\"text-center center-block file-upload\"&gt;\n&lt;/div&gt;\n&lt;br&gt;\n\n&lt;/div&gt;&lt;!--/col-3--&gt;\n&lt;div class=\"col-sm-9\"&gt;\n&lt;div class=\"tab-content\"&gt;\n&lt;div class=\"tab-pane active\" id=\"home\"&gt;\n&lt;hr&gt;\n&lt;form class=\"form\" action=\"../UserController\" method=\"post\"&gt;\n&lt;div class=\"form-group\"&gt;\n\n&lt;div class=\"col-xs-6\"&gt;\n&lt;label for=\"name\"&gt;&lt;h4&gt;Name&lt;/h4&gt;&lt;/label&gt;\n&lt;input type=\"text\" class=\"form-control\" name=\"name\" id=\"name\"\nplaceholder=\"Name\" value=\"${sessionScope.currentUser.username}\"&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;div class=\"col-xs-6\"&gt;\n&lt;label for=\"email\"&gt;&lt;h4&gt;Email&lt;/h4&gt;&lt;/label&gt;\n&lt;input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\"\nplaceholder=\"your@email.com\" value=\"${sessionScope.currentUser.email}\"&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;div class=\"col-xs-6\"&gt;\n&lt;label for=\"description\"&gt;&lt;h4&gt;Description&lt;/h4&gt;&lt;/label&gt;\n&lt;input type=\"text\" class=\"form-control\" name=\"description\" id=\"description\"\nplaceholder=\"a short description\" value=\"${sessionScope.currentUser.description}\"&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;div class=\"col-xs-12\"&gt;\n&lt;br&gt;\n&lt;button class=\"btn btn-primary\" type=\"submit\"&gt;&lt;i\nclass=\"glyphicon glyphicon-ok-sign\"&gt;&lt;/i&gt; Save\n                                &lt;/button&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/form&gt;\n\n&lt;/div&gt;&lt;!--/tab-pane--&gt;\n&lt;/div&gt;&lt;!--/tab-content--&gt;\n\n&lt;/div&gt;&lt;!--/col-9--&gt;\n&lt;/div&gt;&lt;!--/row--&gt;\n\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>A fontosabb sorokat kiemelt\u00fck a k\u00f6nnyebbs\u00e9g v\u00e9gett. Mivel szeretn\u00e9nk egy olyan m\u0171k\u00f6d\u00e9st, melynek sor\u00e1n biztos\u00edtjuk, hogy \u00faj k\u00e9p kiv\u00e1laszt\u00e1sa eset\u00e9n a profilk\u00e9pet egyb\u0151l meg is jelen\u00edtj\u00fck, \u00edgy ezt jQuery seg\u00edts\u00e9g\u00e9vel oldjuk meg, melyet az els\u0151 kiemelt sor h\u00faz be. A profil friss\u00edt\u00e9sekor a <code>UserController</code>-hez k\u00fcldj\u00fck a k\u00e9r\u00e9st, ahol az aktu\u00e1lisan bejelentkezett felhaszn\u00e1l\u00f3 adatait m\u00f3dos\u00edtjuk (kiv\u00e9ve a jelsz\u00f3t).</p> <p>El\u0151sz\u00f6r l\u00e1ssuk a <code>profile.js</code> \u00e1llom\u00e1nyt:</p> <pre><code>$(document).ready(function() {\n\nlet readURL = function(input) {\nif (input.files &amp;&amp; input.files[0]) {\nlet reader = new FileReader();\n\nreader.onload = function (e) {\n$('.avatar').attr('src', e.target.result);\n}\n\nreader.readAsDataURL(input.files[0]);\n}\n}\n\n$(\".file-upload\").on('change', function(){\nreadURL(this);\n});\n\n$(\".form\").submit( function(eventObj) {\n$(\"&lt;input /&gt;\").attr(\"type\", \"hidden\")\n.attr(\"name\", \"profilePic\")\n.attr(\"value\", $('.avatar').attr('src') )\n.appendTo(\".form\");\nreturn true;\n});\n});\n</code></pre> <p>Minden esetben, amikor v\u00e1ltozik a kiv\u00e1lasztott k\u00e9p, akkor beolvassuk a k\u00e9pet egy <code>FileReader</code> seg\u00edts\u00e9g\u00e9vel, majd ezt \u00e1ll\u00edtjuk be a profilk\u00e9p <code>src</code> attrib\u00fatum\u00e1nak. Amikor a form-ot submit-elj\u00fck, akkor egy rejtett input field-ben adjuk \u00e1t a <code>profilePic</code> nev\u0171 attrib\u00fatumot a formData-ban, hogy ezt k\u00f6nnyen feldolgozhassuk a szerver oldalon.</p> <p>Az elk\u00fcld\u00f6tt inform\u00e1ci\u00f3k feldolgoz\u00e1s\u00e1t a <code>UserController</code> <code>doPost</code> met\u00f3dusa v\u00e9gzi:</p> <pre><code>@Override\nprotected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n\nUser user = (User) req.getSession().getAttribute(\"currentUser\");\n\nif(req.getParameter(\"name\") != null &amp;&amp; !req.getParameter(\"name\").isEmpty()){\nuser.setUsername(req.getParameter(\"name\"));\n}\n\nif(req.getParameter(\"email\") != null &amp;&amp; !req.getParameter(\"email\").isEmpty()){\nuser.setEmail(req.getParameter(\"email\"));\n}\n\nif(req.getParameter(\"profilePic\") != null &amp;&amp; !req.getParameter(\"profilePic\").isEmpty()){\nuser.setProfilePic(req.getParameter(\"profilePic\"));\n}\n\nif(req.getParameter(\"description\") != null &amp;&amp; !req.getParameter(\"description\").isEmpty()){\nuser.setDescription(req.getParameter(\"description\"));\n}\n\nuser = userDAO.save(user);\n\nreq.getSession().setAttribute(\"currentUser\", user);\nresp.sendRedirect(\"pages/profile.jsp\");\n}\n</code></pre> <p>Els\u0151k\u00e9nt a session-b\u0151l kiszedj\u00fck az aktu\u00e1lis felhaszn\u00e1l\u00f3t, majd friss\u00edtj\u00fck az attrib\u00fatumait \u00e9s elmentj\u00fck az adatb\u00e1zisban, majd friss\u00edtj\u00fck a sessionben l\u00e9v\u0151 <code>currentUser</code> objektumot.</p> <p>Miut\u00e1n ezekkel megvagyunk, helyezz\u00fck el a men\u00fcben is a profil men\u00fcpontot:</p> <pre><code>...\n&lt;div class='dropdown-menu dropdown-menu-right' aria-labelledby='navbarDropdownMenuLink'&gt;\n&lt;a class='dropdown-item' href='../pages/profile.jsp'&gt;Profile&lt;/a&gt;\n&lt;a class='dropdown-item' href='../LogoutController'&gt;Logout&lt;/a&gt;\n&lt;/div&gt;\n...\n</code></pre>"},{"location":"legacy/10_gyakorlat/#torles-es-modositas","title":"T\u00f6rl\u00e9s \u00e9s m\u00f3dos\u00edt\u00e1s","text":"<p>Feladat</p> <p>B\u0151v\u00edts\u00fck az alkalmaz\u00e1st t\u00f6rl\u00e9s \u00e9s m\u00f3dos\u00edt\u00e1s elemekkel</p> <p>Els\u0151k\u00e9nt helyezz\u00fck el a t\u00f6rl\u00e9s \u00e9s m\u00f3dos\u00edt\u00e1s ikonokat a list\u00e1ban! Ezekhez az ikonokhoz font-awesome-t haszn\u00e1lunk, \u00edgy azt a <code>common-header.jsp</code>-ben be kell h\u00faznunk!</p> <p><code>common-header.jsp</code>:</p> <pre><code>...\n&lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\"&gt;\n...\n</code></pre> <p>Ezut\u00e1n a <code>list-contact.jsp</code> oldalon adjunk hozz\u00e1 egy \u00faj oszlopot, melyben ezek az ikonok lesznek megjelen\u00edtve:</p> <pre><code>...\n&lt;th scope=\"col\"&gt;Actions&lt;/th&gt;\n...\n&lt;td&gt;\n&lt;a href=\"../UpdateContactController?contactId=${item.id}\"&gt;&lt;i class=\"fas fa-edit\"&gt;&lt;/i&gt;&lt;/a&gt;\n&lt;a href=\"../DeleteContactController?contactId=${item.id}\"&gt;&lt;i class=\"fas fa-trash\"&gt;&lt;/i&gt;&lt;/a&gt;\n&lt;/td&gt;\n...\n</code></pre> <p>Kezdj\u00fcnk az <code>UpdateContactController</code> megval\u00f3s\u00edt\u00e1s\u00e1val:</p> <pre><code>@WebServlet(\"/UpdateContactController\")\npublic class UpdateContactController extends HttpServlet {\nprivate ContactDAO dao = new ContactDAOImpl();\n\n@Override\nprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\nString contactIdStr = req.getParameter(\"contactId\");\n\nif(contactIdStr != null &amp;&amp; !contactIdStr.isEmpty()){\nint contactId = Integer.parseInt(contactIdStr);\nContact contact = dao.findById(contactId);\nreq.setAttribute(\"contact\", contact);\n}\n\nreq.getRequestDispatcher(\"pages/add-contact.jsp\").forward(req, resp);\n}\n}\n</code></pre> <p>Maga az update nem egy bonyolult konstrukci\u00f3. A queryString-ben elk\u00fcld\u00f6tt param\u00e9ter alapj\u00e1n lek\u00e9rj\u00fck a megfelel\u0151 kontaktot, majd ezt a k\u00e9r\u00e9sben, mint attrib\u00fatum elhelyezz\u00fck. Ezek ut\u00e1n a a k\u00e9r\u00e9st tov\u00e1bb\u00edtjuk a <code>add-contact.jsp</code> oldalnak (mely ebben a form\u00e1ban lehet, hogy meg\u00e9rett egy \u00e1tnevez\u00e9sre, de most ezzel nem foglalkozunk). Itt pedig ki fogjuk olvasni a k\u00e9r\u00e9sben elhelyezett attrib\u00fatum \u00f6sszes \u00e9rt\u00e9k\u00e9t \u00e9s ezzel t\u00f6ltj\u00fck fel a fel\u00fcleti vez\u00e9rl\u0151ket.</p> <pre><code>&lt;%@ page import=\"hu.alkfejl.model.Phone\" %&gt;\n&lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %&gt;\n&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %&gt;\n\n&lt;html&gt;\n&lt;head&gt;\n&lt;jsp:include page=\"../WEB-INF/common/common-header.jsp\"/&gt;\n&lt;script src=\"${pageContext.request.contextPath}/js/add-contact.js\"&gt;&lt;/script&gt;\n&lt;title&gt;Add Contact&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;jsp:include page=\"../WEB-INF/common/menu.jsp\"/&gt;\n&lt;jsp:useBean id=\"contact\" class=\"hu.alkfejl.model.Contact\" scope=\"request\" /&gt;\n&lt;div class=\"container\"&gt;\n&lt;form action=\"${pageContext.request.contextPath}/ContactController\" method=\"post\"&gt;\n&lt;input type=\"hidden\" name=\"id\" value=\"${contact.id}\" /&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"name\"&gt;Name&lt;/label&gt;\n&lt;input required name=\"name\" type=\"text\" class=\"form-control\" id=\"name\"\nplaceholder=\"Enter name\" value=\"${contact.name}\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"email\"&gt;Email&lt;/label&gt;\n&lt;input required name=\"email\" type=\"email\" class=\"form-control\" id=\"email\"\nplaceholder=\"Email\" value=\"${contact.email}\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"dateOfBirth\"&gt;Date of Birth&lt;/label&gt;\n&lt;input required id=\"dateOfBirth\" name=\"dateOfBirth\" type=\"date\" class=\"form-control\"\nplaceholder=\"Date of Birth\" value=\"${contact.dateOfBirth}\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label&gt;Phones&lt;/label&gt;\n&lt;c:if test=\"${contact.phones.size() &gt; 0}\"&gt;\n&lt;c:forEach var=\"phone\" items=\"${contact.phones}\"&gt;\n&lt;div class=\"row\"&gt;\n&lt;div class=\"col\"&gt;\n&lt;input name=\"phoneValues\" type=\"text\" class=\"form-control mb-3\"\nplaceholder=\"Enter phone number\" value=\"${phone.number}\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"col\"&gt;\n&lt;select name=\"phoneTypes\" class=\"custom-select\"&gt;\n&lt;c:forEach var=\"phoneType\" items=\"&lt;%=Phone.PhoneType.values()%&gt;\"&gt;\n&lt;c:if test=\"${phone.phoneType.value.equals(phoneType.value)}\"&gt;\n&lt;option selected=\"true\" value=\"${phoneType.value}\"&gt;${phoneType.value}&lt;/option&gt;\n&lt;/c:if&gt;\n&lt;c:if test=\"${!phone.phoneType.value.equals(phoneType.value)}\"&gt;\n&lt;option value=\"${phoneType.value}\"&gt;${phoneType.value}&lt;/option&gt;\n&lt;/c:if&gt;\n&lt;/c:forEach&gt;\n&lt;/select&gt;\n&lt;/div&gt;\n&lt;div class=\"col md-2\"&gt;\n&lt;c:if test=\"${phone.equals(contact.phones.get(contact.phones.size() - 1))}\"&gt;\n&lt;button type=\"button\" class=\"btn btn-secondary\" onclick=\"newRow(this)\"&gt;New&lt;/button&gt;\n&lt;/c:if&gt;\n&lt;c:if test=\"${!phone.equals(contact.phones.get(contact.phones.size() - 1))}\"&gt;\n&lt;button type=\"button\" class=\"btn btn-secondary\" onclick=\"deleteRow(this)\"&gt;Delete&lt;/button&gt;\n&lt;/c:if&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/c:forEach&gt;\n&lt;/c:if&gt;\n&lt;c:if test=\"${contact.phones == null or contact.phones.size() == 0}\"&gt;\n&lt;div class=\"row\"&gt;\n&lt;div class=\"col\"&gt;\n&lt;input name=\"phoneValues\" type=\"text\" class=\"form-control mb-3\"\nplaceholder=\"Enter phone number\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"col\"&gt;\n&lt;select name=\"phoneTypes\" class=\"custom-select\"&gt;\n&lt;c:forEach var=\"phoneType\" items=\"&lt;%=Phone.PhoneType.values()%&gt;\"&gt;\n&lt;option value=\"${phoneType.value}\"&gt;${phoneType.value}&lt;/option&gt;\n&lt;/c:forEach&gt;\n&lt;/select&gt;\n&lt;/div&gt;\n&lt;div class=\"col md-2\"&gt;\n&lt;button onclick=\"newRow(this)\" type=\"button\" class=\"btn btn-secondary\"&gt;New&lt;/button&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/c:if&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"address\"&gt;Address&lt;/label&gt;\n&lt;input id=\"address\" name=\"address\" type=\"text\" class=\"form-control\" id=\"address\"\nplaceholder=\"Address\" value=\"${contact.address}\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"company\"&gt;Company&lt;/label&gt;\n&lt;input id=\"company\" name=\"company\" type=\"text\" class=\"form-control\" id=\"company\"\nplaceholder=\"Company\" value=\"${contact.company}\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"address\"&gt;Position&lt;/label&gt;\n&lt;input id=\"position\" name=\"position\" type=\"text\" class=\"form-control\" id=\"position\"\nplaceholder=\"Position\" value=\"${contact.position}\"/&gt;\n&lt;/div&gt;\n&lt;button id=\"submit\" type=\"submit\" class=\"btn btn-primary\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>A fenti k\u00f3dr\u00e9szletben kiemelt\u00fck a fontosabb v\u00e1ltoztat\u00e1sokat. El\u0151sz\u00f6r is a forward miatt az <code>add-contact.js</code> el\u00e9r\u00e9se nem biztos lesz megfelel\u0151, \u00edgy a <code>pageContext.request.contextPath</code> URL-t haszn\u00e1ljuk, mely megadja a context \u00fatvonal\u00e1t (pl.: <code>http://localhost:8080/contacts_web_war</code>). Ezut\u00e1n az el\u0151zetesen a request-ben elhelyezett <code>contact</code> attrib\u00fatumot kiolvassuk a <code>useBean</code> seg\u00edts\u00e9g\u00e9vel, majd ezt fogjuk felhaszn\u00e1lni az oldalon, hogy felt\u00f6lts\u00fck a field-ek \u00e9rt\u00e9keit.</p> <p>A megl\u00e9v\u0151 input field-ek mellett hozz\u00e1adunk egy rejtett mez\u0151t az <code>id</code> sz\u00e1m\u00e1ra is, mivel err a feldolgoz\u00e1s sor\u00e1n sz\u00fcks\u00e9g\u00fcnk lesz, hiszen friss\u00edteni szeretn\u00e9nk. Ezen fel\u00fcl az \u00f6sszes field-hez megadjuk a <code>value=\"${contact.property}</code> attrib\u00fatumot, hogy ki is t\u00f6ltse az input-okat az aktu\u00e1lis \u00e9rt\u00e9kekkel.</p> <p>A telefonsz\u00e1mok eset\u00e9ben azonban \u00f6sszetettebb feladatunk van \u00e9s n\u00e9mi \u00e1tszervez\u00e9st is ig\u00e9nyel a feladat. Amennyiben a kontakthoz tartoznak telefonsz\u00e1mok, akkor azokat ki kell \u00edrnunk, illetve mindegyik mellett a <code>Delete</code> opci\u00f3t adjuk meg, kiv\u00e9ve az utols\u00f3n\u00e1l, ahol a <code>New</code> opci\u00f3t. Az els\u0151 <code>c:if</code>, akkor fut le, amikor vannak telefonsz\u00e1mok. Ebben az esetben v\u00e9gigiter\u00e1lunk a m\u00e1r megadott telefonsz\u00e1mokon \u00e9s mindegyikhez megadunk egy <code>div</code>-et (<code>row</code> class-al). Ki\u00edrjuk mag\u00e1t a telefonsz\u00e1mot (40. sor) egy vez\u00e9rl\u0151ben, majd egy leny\u00edl\u00f3ba belerakjuk az \u00f6sszes <code>phoneType</code> opci\u00f3t \u00e9s k\u00f6zben figyelj\u00fck, hogy ha az adott <code>phoneType</code> megegyezik azzal, ami ki volt v\u00e1lasztva, akkor r\u00e1ker\u00fcl a <code>selected</code> attrib\u00fatum is, azaz \u0151 lesz kiv\u00e1lasztva a fel\u00fcleten.</p> <p>A gombok megad\u00e1sakor (54-61. sor) figyelj\u00fck, hogy az utols\u00f3 elemn\u00e9l vagyunk-e. Az utols\u00f3 elemn\u00e9l a <code>New</code> sz\u00f6veg lesz a gombon, illetve a <code>newRow(this)</code> esem\u00e9nykezel\u0151t adjuk meg. Ellenkez\u0151 esetben a <code>Delete</code> sz\u00f6veget alkalmazzuk \u00e9s a <code>deleteRow(this)</code> esem\u00e9nykezel\u0151t. A <code>newRow</code> \u00e9s a <code>deleteRow</code> f\u00fcggv\u00e9nyeket az <code>add-contact.js</code>-ben adjuk meg, melyet szint\u00e9n m\u00f3dos\u00edtanunk kellett a kontakt friss\u00edt\u00e9s \u00e9rdek\u00e9ben. A 65-82. sorig tart\u00f3 r\u00e9szben szerepel az, amikor nincs megadva telefonsz\u00e1m a kontakhoz, amely alapj\u00e1n csak egy \u00fcres beviteli sort adunk meg.</p> <p>Ezut\u00e1n l\u00e1ssuk a m\u00f3dos\u00edtott JavaScript r\u00e9szt:</p> <pre><code>function newRow(button){\nbutton = $(button);\nlet newRowToAdd = button.closest('.row').clone(true);\nnewRowToAdd.find('input').val('');\n\nbutton.html('Delete');\nbutton.attr('onclick', 'deleteRow(this)');\nlet phoneRows = $('.row');\nphoneRows.last().parent().append(newRowToAdd);\n}\n\nfunction deleteRow(button){\nbutton.closest('.row').remove();\n}\n</code></pre> <p>A JS k\u00f3d funkcionalit\u00e1sa l\u00e9nyeg\u00e9ben megmaradt, csup\u00e1n a kiszervezt\u00fck azokat k\u00e9t k\u00fcl\u00f6n f\u00fcggv\u00e9nybe.</p> <p>A fentiek eddig a pontig teljesen j\u00f3l m\u0171k\u00f6dnek, azonban a kontakt friss\u00edt\u00e9sekor egy \u00faj rekord fog megjelenni, mivel a <code>ContactController</code>-ben is hozz\u00e1 kell igaz\u00edtanunk a m\u0171k\u00f6d\u00e9st a most megval\u00f3s\u00edtott elemekhez.</p> <pre><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\nrequest.setCharacterEncoding(\"utf-8\");\nresponse.setCharacterEncoding(\"utf-8\");\n\nint contactId = 0;\ntry {\ncontactId = Integer.parseInt(request.getParameter(\"id\"));\n} catch (NumberFormatException ex){\nex.printStackTrace();\n}\n\nContact c = dao.findById(contactId);\n\n// check if c exists -&gt; if no then construct a new one (it's a save)\nif(c == null){\nc = new Contact();\n}\n\ntry {\nc.setName(request.getParameter(\"name\"));\nc.setEmail(request.getParameter(\"email\"));\nc.setDateOfBirth(LocalDate.parse(request.getParameter(\"dateOfBirth\")));\nc.setAddress(request.getParameter(\"address\"));\nc.setCompany(request.getParameter(\"company\"));\nc.setPosition(request.getParameter(\"position\"));\n\nUser currentUser = (User) request.getSession().getAttribute(\"currentUser\");\nc.setUser(currentUser);\n\nString[] phoneValues = request.getParameterValues(\"phoneValues\");\nString[] phoneTypes = request.getParameterValues(\"phoneTypes\");\nString[] phoneIds = request.getParameterValues(\"phoneIds\");\n\nList&lt;Phone&gt; phones = new ArrayList&lt;&gt;();\nfor(int i = 0; i &lt; phoneValues.length; i++){\nPhone p = null;\nif(phoneIds != null &amp;&amp; phoneIds[i] != null &amp;&amp; !phoneIds[i].isEmpty()){\np = phoneDAO.findById(Integer.parseInt(phoneIds[i]));\n}\n\nif(p == null){\np = new Phone();\n}\n\np.setNumber(phoneValues[i]);\nfinal String phoneTypeString = phoneTypes[i];\nOptional&lt;Phone.PhoneType&gt; foundPhoneType = Arrays.stream(Phone.PhoneType.values()).filter(phoneType -&gt; phoneType.getValue().equals(phoneTypeString)).findFirst();\np.setPhoneType(foundPhoneType.orElse(Phone.PhoneType.UNKNOWN));\nphones.add(p);\n}\nc.setPhones(phones);\ndao.save(c);\n\n\nresponse.sendRedirect(\"pages/list-contact.jsp\");\n\n} catch (Exception e) {\ne.printStackTrace();\n}\n\n}\n</code></pre> <p>A legfontosabb az <code>id</code> kiolvas\u00e1sa, mely alapj\u00e1n lek\u00e9rdezz\u00fck a megl\u00e9v\u0151 kontaktot. K\u00e9s\u0151bb a <code>save</code> hat\u00e1s\u00e1ra ment\u00e9s vagy beilleszt\u00e9s is t\u00f6rt\u00e9nhet, \u00edgy ezt nem kell majd igaz\u00edtanunk. Ezut\u00e1n feldolgozzuk a telefonsz\u00e1mokat, azonban sz\u00fcks\u00e9g\u00fcnk lesz a megl\u00e9v\u0151 id-kra, melyeket a <code>phoneIds</code>-ban k\u00fcld\u00fcnk el, \u00edgy ezt a jsp-ben is el kell helyezn\u00fcnk egy hidden field-be:</p> <pre><code>&lt;input type=\"hidden\" name=\"phoneIds\" value=\"${phone.id}\" /&gt;\n</code></pre> <p>Miut\u00e1n kiolvastuk a megfelel\u0151 telefonokat (<code>Phone</code> objektumok l\u00e9trehoz\u00e1sa) elmentj\u00fck a kontaktot. Ezen a ponton egy nagyobb refaktor\u00e1l\u00e1st is tegy\u00fcnk meg, amelyet kicsit halogattunk. Ennek eredm\u00e9nyek\u00e9ppen a DAO r\u00e9teget \u00e1talak\u00edtottuk, hogy a egy kontakt ment\u00e9se eset\u00e9n a hozz\u00e1 tartoz\u00f3 telefonsz\u00e1mokat is friss\u00edtse az adatel\u00e9r\u00e9si r\u00e9teg. A m\u00f3dos\u00edt\u00e1sokat ezen a ponton nem fogjuk kifejteni, a m\u00f3dos\u00edtott DAO el\u00e9rhet\u0151 a pub-ban.</p> <p>Az update mellett a delete-hez tartoz\u00f3 servlet a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki:</p> <pre><code>@WebServlet(\"/DeleteContactController\")\npublic class DeleteContactController extends HttpServlet {\n\nContactDAO dao = ContactDAOImpl.getInstance();\n\n@Override\nprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\ntry {\nint contactId = Integer.parseInt(req.getParameter(\"contactId\"));\ndao.delete(contactId);\n}\ncatch (NumberFormatException ex){\nex.printStackTrace();\n}\n\nresp.sendRedirect(\"pages/list-contact.jsp\");\n}\n}\n</code></pre> <p>Itt is \u00e9rdemes megjegyezni, hogy a kontakt kit\u00f6rl\u00e9se az \u00f6sszes hozz\u00e1tartoz\u00f3 telefonsz\u00e1mot is kit\u00f6rli. Tov\u00e1bbi feladatk\u00e9nt hozz\u00e1adhatunk egy meger\u0151s\u00edt\u00e9st a t\u00f6rl\u00e9shez, de ezen a ponton ezzel most nem foglalkozunk.</p>"},{"location":"legacy/11_gyakorlat/","title":"11. gyakorlat","text":""},{"location":"legacy/11_gyakorlat/#sajat-tagek-custom-tags","title":"Saj\u00e1t tagek (Custom tags)","text":"<p>A felhaszn\u00e1l\u00f3 saj\u00e1t maga hozhat l\u00e9tre \u00faj tagaket. Ez\u00e1ltal seg\u00edt abban, hogy ne kelljen scriptleteket haszn\u00e1lni, illetve seg\u00edt szepar\u00e1lni az \u00fczleti logik\u00e1t a megjelen\u00edt\u00e9st\u0151l. Ezek mellett tal\u00e1n a legnagyobb el\u0151nye, hogy ezeket a tageket \u00fajra fel tudjuk haszn\u00e1lni t\u00f6bb helyen is. K\u00e9tf\u00e9lek\u00e9ppen haszn\u00e1lhatjuk a saj\u00e1t tagjeinket: <pre><code>&lt;prefix:tagname attr1=value1....attrn=valuen /&gt;\n\nvagy\n\n&lt;prefix:tagname attr1=value1....attrn=valuen &gt;  body code  &lt;/prefix:tagname&gt;  </code></pre></p> <p>A saj\u00e1t tagek defin\u00edci\u00f3j\u00e1hoz nagyobb szabads\u00e1got ad, ha TLD-ket (Tag Library Descriptor-okat) adunk meg, de ez t\u00falmutat a c\u00e9ljainkon, mivel kicsit neh\u00e9zkes \u00e9s t\u00f6bb helyen kell ezeket megadni.</p> <p>Egy m\u00e1sik, egyszer\u0171bb m\u00f3dja, hogy a tag defin\u00edci\u00f3kat a WEB-INF/tags mapp\u00e1ban helyezz\u00fck el. K\u00e9sz\u00edts\u00fck el a current-datetime taget!</p> <p>WEB-INF/tags/current-datetime.tag <pre><code>&lt;%@ tag import=\"java.time.LocalDateTime\"%&gt;\n&lt;%@ tag language=\"java\" pageEncoding=\"ISO-8859-1\"%&gt;\n\n&lt;%\nout.println(LocalDateTime.now());\n%&gt;\n</code></pre></p> <p>Figyelj\u00fck meg, hogy a <code>page</code> direkt\u00edva helyett azt \u00edrtjuk, hogy <code>tag</code>, ezzel is jelezv\u00e9n, hogy egy saj\u00e1t tag-et defini\u00e1lunk. A tag egyszer\u0171en ki\u00edrja az aktu\u00e1lis d\u00e1tumot \u00e9s id\u0151t.</p> <p>Haszn\u00e1lata, index.jsp <pre><code>&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%&gt;\n&lt;%@ taglib tagdir=\"/WEB-INF/tags\" prefix=\"t\"%&gt;\n\n&lt;t:current-datetime /&gt;\n</code></pre></p> <p>A taglib direkt\u00edv\u00e1ban nem az uri-t kell megadnunk, hanem a tagdir attrib\u00fatumban a saj\u00e1t tagjeink k\u00f6nyvt\u00e1r\u00e1t. Innent\u0151l m\u00e1r haszn\u00e1lhatjuk a tags k\u00f6nyvt\u00e1rban l\u00e9v\u0151 tageket mint p\u00e9ld\u00e1ul a current-datetime-ot.</p>"},{"location":"legacy/11_gyakorlat/#custom-tagek-attributumai","title":"Custom tagek attrib\u00fatumai","text":"<p>Az el\u0151z\u0151 p\u00e9ld\u00e1ban csak egy tag-et csin\u00e1ltunk, de annak nem voltak attrib\u00fatumai, ami viszont egy el\u00e9g \u00e1ltal\u00e1nos elv\u00e1r\u00e1s egy saj\u00e1t tag-t\u0151l.</p> <p>K\u00e9sz\u00edts\u00fck el azt a saj\u00e1t tag-et amelyet a k\u00f6vetkez\u0151k\u00e9ppen tudunk haszn\u00e1lni:</p> <pre><code>&lt;t:cube value=\"4\" /&gt;\n</code></pre> <p>Ehhez k\u00e9sz\u00edt\u00fcnk egy cube.tag \u00e1llom\u00e1nyt a WEB-INF/tags mapp\u00e1ba, melynek tartalma: <pre><code>&lt;%@ tag language=\"java\" pageEncoding=\"ISO-8859-1\"%&gt;\n\n&lt;%@ attribute name=\"value\" required=\"true\" type=\"java.lang.Double\" %&gt;\n\n&lt;%\nout.print(value * value * value);\n%&gt;\n</code></pre> Mint az kit\u0171nik, attrib\u00fatumot a <code>&lt;%@ attribute %&gt;</code> direkt\u00edv\u00e1val adhatunk meg. Ez a direkt\u00edva csak tag defin\u00edci\u00f3kn\u00e1l haszn\u00e1lhat\u00f3, jsp oldalakn\u00e1l nem. Az attrib\u00fatumnak meg lehet adni a nev\u00e9t, hogy k\u00f6telez\u0151-e, mint azt a fenti p\u00e9ld\u00e1ban is l\u00e1thatjuk. Nagyon fontos a <code>type</code> attrib\u00fatum.  A p\u00e9ld\u00e1ban a 3. hatv\u00e1nyra emel\u0151 tag\u00fcnknek egy sz\u00e1mot kell v\u00e1rnia, azonban az attrib\u00fatumok alapt\u00edpusa <code>java.util.String</code>. A mi eset\u00fcnkben ez egy nagy exception-t eredm\u00e9nyezne, mivel arra nem tudja \u00e9rtelmezni a <code>value * value</code> kifejez\u00e9st, \u00edgy a type-ot megadtuk, hogy Double-t v\u00e1rjon \u00e9s \u00edgy m\u0171k\u00f6dik is a tag. Ezen fel\u00fcl az attrib\u00fatumnak adhatunk le\u00edr\u00e1st is a <code>description</code> megad\u00e1s\u00e1val.</p> <p>Amennyiben nem attrib\u00fatumban, hanem a tagek k\u00f6z\u00f6tt akarjuk megadni az \u00e9rt\u00e9ket a cube-nak, akkor a k\u00f6vetkez\u0151t kell tenn\u00fcnk:</p> <pre><code>&lt;%@ tag language=\"java\" pageEncoding=\"ISO-8859-1\"%&gt;\n\n&lt;jsp:doBody scope=\"request\" var=\"value\" /&gt;\n\n&lt;%\nint value = Integer.parseInt(((String)request.getAttribute(\"value\")).trim());\nout.print(value * value * value);\n%&gt;\n</code></pre> <p>A jsp:doBody seg\u00edts\u00e9g\u00e9vel a custom tag\u00fcnk k\u00f6z\u00f6tti body r\u00e9szt \u00e9rt\u00e9kelhetj\u00fck ki. A ki\u00e9rt\u00e9kel\u00e9s eredm\u00e9ny\u00e9t egyb\u0151l nyomhatjuk az outba, ekkor nem kell sem a scope sem a var attrib\u00fatumot haszn\u00e1lnunk. Ha viszont szeretn\u00e9nk felhaszn\u00e1lni az \u00e9rt\u00e9k\u00e9t k\u00e9s\u0151bb, akkor \u00e9rdemes lehet elt\u00e1rolni, mint ahogyan most is ki akarjuk sz\u00e1molni a k\u00f6b\u00e9t. Ehhez kiolvassuk a tartalmat, majd string-\u00e9 alak\u00edtjuk \u00e9s trimmelj\u00fck, hogy tudjunk parsolni olyat is ha k\u00fcl\u00f6nb\u00f6z\u0151 sorban van a nyit\u00f3 \u00e9s z\u00e1r\u00f3 tag, illetve k\u00f6zte az adat. Haszn\u00e1lni egyszer\u0171en a k\u00f6vetkez\u0151k\u00e9ppen lehet:</p> <pre><code>&lt;t:cube&gt;3&lt;/t:cube&gt;\n</code></pre> <p>Az attribute direkt\u00edv\u00e1nak van egy tov\u00e1bbi param\u00e9tere, m\u00e9gpedig, hogy az attrib\u00fatum az fragment-e. Ez azt jelenti, hogy a tag param\u00e9ter\u00fcl jsp k\u00f3dr\u00e9szletet kap. Ezek nagyon j\u00f3l haszn\u00e1lhat\u00f3ak, ha p\u00e9ld\u00e1ul template-et kell k\u00e9sz\u00edten\u00fcnk az oldalainkhoz.</p> <p>A cube tag-et b\u0151v\u00edts\u00fck, hogy benne m\u00e9g tov\u00e1bbi jsp-t adhassunk meg! A tag defin\u00edci\u00f3ban az al\u00e1bbiakat kell \u00edrnunk: <pre><code>&lt;%@ tag language=\"java\" pageEncoding=\"UTF-8\"%&gt;\n\n&lt;%@ attribute name=\"value\" required=\"true\" type=\"java.lang.Double\"  %&gt;\n&lt;%@ attribute name=\"content\" fragment=\"true\"%&gt;\n\n&lt;%\nout.print(value * value * value);\n%&gt;\n\n&lt;jsp:invoke fragment=\"content\" /&gt;\n</code></pre> A kapott jsp fragment-et az oldalon bel\u00fcl a <code>&lt;jsp:invoke&gt;</code> haszn\u00e1lat\u00e1val illeszthetj\u00fck be. Ezt ak\u00e1r t\u00f6bb ponton is megtehetj\u00fck. Ezut\u00e1n a haszn\u00e1lat\u00e1t tekintve a k\u00f6vetkez\u0151ket kell tenn\u00fcnk:</p> <pre><code>&lt;t:cube value=\"3\" &gt;\n&lt;jsp:attribute name=\"content\"&gt;\nasdqwe\n  &lt;/jsp:attribute&gt;\n&lt;/t:cube&gt;\n</code></pre> <p>Most, hogy az alapokat megn\u00e9zt\u00fck ideje, hogy \u00e1talak\u00edtsuk az alkalmaz\u00e1sunkat \u00fagy, hogy az page template-eket haszn\u00e1ljon. Az esetleges \u00fajdons\u00e1gokat menet k\u00f6zben m\u00e9g tiszt\u00e1zzuk.</p> <p>Feladat</p> <p>Alak\u00edtsuk \u00e1t \u00fagy a contacts alkalmaz\u00e1sunkat, hogy page template-eket haszn\u00e1ljon!</p> <p>El\u0151sz\u00f6r is k\u00fcl\u00f6nb\u00f6ztess\u00fck meg azt a k\u00fcl\u00f6nb\u00f6z\u0151 eseteket, amikre sz\u00fcks\u00e9g\u00fcnk lehet:</p> <ul> <li>Common header sz\u00fcks\u00e9ges az oldalhoz</li> <li>Common header \u00e9s men\u00fc is sz\u00fcks\u00e9ges az oldalon</li> </ul> <p>Ez alapj\u00e1n k\u00e9tf\u00e9le page template-et fogunk elk\u00e9sz\u00edteni. Vegy\u00fck az els\u0151t, melyben csak a common header lesz benne. Ehhez a <code>WEB-INF</code> alatt hozzuk l\u00e9tre a <code>tags</code> k\u00f6nyvt\u00e1rat, ahol l\u00e9trehozzuk a <code>basic-layout.tag</code> \u00e1llom\u00e1nyt, melynek a k\u00f6vetkez\u0151 tartalma lesz:</p> <pre><code>&lt;%@ tag description=\"Basic Page template\" pageEncoding=\"UTF-8\" %&gt;\n&lt;%@ attribute name=\"title\" required=\"false\" type=\"java.lang.String\" %&gt;\n&lt;%@ attribute name=\"header\" fragment=\"true\" %&gt;\n&lt;%@ attribute name=\"footer\" fragment=\"true\" %&gt;\n\n\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;${title}&lt;/title&gt;\n&lt;link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/style.css\"&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\"&gt;\n&lt;link rel=\"stylesheet\"\nhref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\nintegrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\ncrossorigin=\"anonymous\"&gt;\n&lt;script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\nintegrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\ncrossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;script\nsrc=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"\nintegrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\"\ncrossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;script\nsrc=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"\nintegrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\"\ncrossorigin=\"anonymous\"&gt;&lt;/script&gt;\n\n&lt;jsp:invoke fragment=\"header\"/&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;div id=\"body\" class=\"container\"&gt;\n&lt;jsp:doBody/&gt;\n&lt;/div&gt;\n&lt;jsp:invoke fragment=\"footer\"/&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>A f\u00e1jl elej\u00e9n megadjuk, hogy egy custom tag-r\u0151l van sz\u00f3 (aminek neve megegyezik a f\u00e1jl nev\u00e9vel: <code>basic-layout</code>), majd megadjuk, hogy milyen attrib\u00fatumokat fogunk haszn\u00e1lni ebben a tag-ben. Az els\u0151 attrib\u00fatum a <code>title</code>, mely az oldal c\u00edm\u00e9t adja meg \u00e9s annak t\u00edpus\u00fa <code>String</code>. Ha megn\u00e9zz\u00fck, hogy hol haszn\u00e1ljuk fel a <code>title</code> attrib\u00fatumot, akkor l\u00e1thatjuk, hogy a <code>&lt;title&gt;${title}&lt;/title&gt;</code> megad\u00e1sban szerepel, ami az oldal c\u00edm\u00e9t adja meg. Ilyenkor a tag-et a k\u00f6vetkez\u0151k\u00e9ppen fogjuk haszn\u00e1lni: <code>&lt;basic-layout title=\"Login\"&gt;...&lt;/basic-layout&gt;</code>, melynek eredm\u00e9nyek\u00e9ppen a megadott oldal c\u00edme <code>Login</code> lesz.</p> <p>A <code>&lt;head&gt;</code> r\u00e9szben a kor\u00e1bban <code>common-header.jsp</code> oldalon megadott elemeket helyezz\u00fck el. Ugyanakkor itt van m\u00e9g egy fontos pont, amikor megh\u00edvjuk a <code>header</code> attrib\u00fatumot, amely viszont m\u00e1r egy fragment a <code>title</code>-el ellent\u00e9tben, \u00edgy az tartalmazhat HTML r\u00e9szf\u00e1t is ak\u00e1r. Erre az\u00e9rt van sz\u00fcks\u00e9g, mert az egyes oldalak esetleg tov\u00e1bb szeretn\u00e9k b\u0151v\u00edteni a <code>&lt;head&gt;</code>-ben megadott elemeket, mint p\u00e9ld\u00e1ul az <code>add-contact.jsp</code>-ben szeretn\u00e9nk haszn\u00e1lni az <code>add-contact.js</code> \u00e1llom\u00e1nyt (m\u00e1shol viszont nem). Ugyanezt v\u00e9gezz\u00fck el a <code>footer</code>-re, melyet jelenleg ugyan nem haszn\u00e1lunk, de k\u00e9s\u0151bb j\u00f3l j\u00f6het.</p> <p>A haszn\u00e1lat hely\u00e9n a <code>&lt;basic-layout title=\"xxx\"&gt;...&lt;/basic-layout&gt;</code> k\u00f6z\u00f6tt megadott tartalmat a <code>&lt;jsp:doBody/&gt;</code> h\u00edv\u00e1ssal \u00edrhatjuk ki a template-ben. Ezt a tartalmat egy <code>div</code>-ben helyezz\u00fck el <code>&lt;div id=\"body\" class=\"container\"&gt;</code>.</p> <p>Miut\u00e1n megvan a template, n\u00e9zz\u00fck, hogy hogyan haszn\u00e1lhatjuk fel azt p\u00e9ld\u00e1ul a <code>login.jsp</code> oldalon:</p> <pre><code>&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %&gt;\n&lt;%@ taglib prefix=\"t\" tagdir=\"/WEB-INF/tags\" %&gt;\n\n&lt;t:basic-layout title=\"Login\"&gt;\n&lt;form action=\"../LoginController\" method=\"post\"&gt;\n...\n  &lt;/form&gt;\n&lt;/t:basic-layout&gt;\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban a beh\u00fazzuk a haszn\u00e1lni k\u00edv\u00e1nt tagek mapp\u00e1j\u00e1t: <code>tagdir</code> \u00e9s adunk neki egy prefixet, mely most a <code>t</code>. Ezut\u00e1n egyszer\u0171en haszn\u00e1ljuk a saj\u00e1t <code>basic-layout</code> tag-\u00fcnket, ahol megadjuk a <code>title</code> attrib\u00fatumot. Most a megadott <code>&lt;form&gt;</code> elem ker\u00fcl a template-ben megadott <code>&lt;jsp:doBody/&gt;</code> helyre.</p> <p>A teljess\u00e9g kedv\u00e9\u00e9rt alul l\u00e1that\u00f3 a b\u00f6ng\u00e9sz\u0151ben el\u00e9rhet\u0151 HTML, ahol m\u00e1r a saj\u00e1t tag- felold\u00e1s\u00e1t l\u00e1thatjuk:</p> <pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Login&lt;/title&gt;\n        &lt;link rel=\"stylesheet\" href=\"/contacts_web_war/css/style.css\"&gt;\n        &lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\"&gt;\n        &lt;link rel=\"stylesheet\"\n              href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n              integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n              crossorigin=\"anonymous\"&gt;\n        &lt;script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n                integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n                crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n        &lt;script\n                src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"\n                integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\"\n                crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n        &lt;script\n                src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"\n                integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\"\n                crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div id=\"body\" class=\"container\"&gt;\n          &lt;form action=\"../LoginController\" method=\"post\"&gt;\n              &lt;div class=\"form-group\"&gt;\n                  &lt;label for=\"username\"&gt;Username&lt;/label&gt;\n                  &lt;input required name=\"username\" type=\"text\" class=\"form-control\" id=\"username\"\n                        placeholder=\"Username\"/&gt;\n              &lt;/div&gt;\n              &lt;div class=\"form-group\"&gt;\n                  &lt;label for=\"password\"&gt;Password&lt;/label&gt;\n                  &lt;input required name=\"password\" type=\"password\" class=\"form-control\" id=\"password\"\n                        placeholder=\"Password\"/&gt;\n              &lt;/div&gt;\n              &lt;button id=\"submit\" type=\"submit\" class=\"btn btn-primary\"&gt;Submit&lt;/button&gt;\n              &lt;span&gt;&lt;a href=\"register.jsp\"&gt;Register&lt;/a&gt;&lt;/span&gt;\n          &lt;/form&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Ezt az alap template-et a login mellett a <code>register.jsp</code> is haszn\u00e1lja, mely nagyon hasonl\u00f3 lesz a login-hoz:</p> <pre><code>&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;%@ taglib prefix=\"t\" tagdir=\"/WEB-INF/tags\" %&gt;\n\n&lt;t:basic-layout title=\"Register\"&gt;\n&lt;form action=\"../RegisterController\" method=\"post\"&gt;\n...\n    &lt;/form&gt;\n&lt;/t:basic-layout&gt;\n</code></pre> <p>Az eddigi form-ot \u00e1tmozgattuk a <code>basic-layout</code> tag body r\u00e9sz\u00e9be, illetve m\u00e1s <code>title</code>-t adtunk meg, de m\u00e1s k\u00fcl\u00f6nbs\u00e9g nincs.</p> <p>Ezut\u00e1n n\u00e9zz\u00fck meg azt, hogy hogyan haszn\u00e1lhatjuk fel a <code>basic-layout</code> tag-et egy m\u00e1sik tag defin\u00edci\u00f3j\u00e1ban, azaz hogyan b\u0151v\u00edthetj\u00fck ezt a tag-et (a men\u00fcvel). Nyilv\u00e1nval\u00f3an a <code>basic-layout</code>-ban szerepl\u0151 elemeket szeretn\u00e9nk a <code>basic-layout-menu</code> tag-ben is alkalmazni, viszont k\u00f3dot nem szeretn\u00e9nk duplik\u00e1lni.</p> <pre><code>&lt;%@ tag description=\"Basic Page template\" pageEncoding=\"UTF-8\" %&gt;\n&lt;%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %&gt;\n&lt;%@ taglib prefix=\"t\" tagdir=\"/WEB-INF/tags\" %&gt;\n&lt;%@ attribute name=\"header\" fragment=\"true\" %&gt;\n&lt;%@ attribute name=\"footer\" fragment=\"true\" %&gt;\n&lt;%@ attribute name=\"title\" required=\"false\" type=\"java.lang.String\" %&gt;\n\n&lt;t:basic-layout title=\"${title}\"&gt;\n&lt;jsp:attribute name=\"header\"&gt;\n&lt;jsp:invoke fragment=\"header\" /&gt;\n&lt;/jsp:attribute&gt;\n&lt;jsp:attribute name=\"footer\"&gt;\n&lt;jsp:invoke fragment=\"footer\" /&gt;\n&lt;/jsp:attribute&gt;\n\n&lt;jsp:body&gt;\n&lt;nav class=\"navbar fixed-top navbar-expand-lg navbar-light bg-light\"&gt;\n...\n        &lt;/nav&gt;\n&lt;jsp:doBody/&gt;\n&lt;/jsp:body&gt;\n&lt;/t:basic-layout&gt;\n</code></pre> <p>Mivel hasonl\u00f3an meg szeretn\u00e9nk adni egy <code>basic-layout-menu</code> tag-nek is a <code>title</code>-t, az esetleges <code>header</code>-t \u00e9s <code>footer</code>-t, \u00edgy ezeket az attrib\u00fatumokat itt is \"kivezetj\u00fck\", melyeket majd tov\u00e1bbadjuk a <code>basic-layout</code>-nak. Ez l\u00e1tsz\u00f3dik p\u00e9ld\u00e1ul a <code>&lt;t:basic-layout title=\"${title}\"&gt;</code> sorban is. A <code>header</code> \u00e9s a <code>footer</code> megad\u00e1sa kicsit m\u00e1sk\u00e9ppen m\u0171k\u00f6dik. A <code>header</code> beilleszt\u00e9s\u00e9hez a <code>&lt;jsp:invoke fragment=\"header\" /&gt;</code>-ot kell megh\u00edvnunk, melyet \"k\u00edv\u00fclr\u0151l\" kapunk. Mivel ezt a <code>&lt;t:basic-layout&gt;</code>-nak szeretn\u00e9nk tov\u00e1bbadni, \u00edgy itt meg kell adni, hogy a <code>basic-layout</code> <code>header</code> attrib\u00fatum\u00e1t szeretn\u00e9nk be\u00e1ll\u00edtani, ez\u00e9rt kell a <code>&lt;jsp:attribute name=\"header\"&gt;</code> megad\u00e1s. Hasonl\u00f3k\u00e9ppen a k\u00edv\u00fclr\u0151l kapott <code>basic-layout-menu</code> tartalm\u00e1t tov\u00e1bb szeretn\u00e9nk adni a <code>basic-layout</code> body-jak\u00e9nt, \u00edgy ezt <code>&lt;jsp:body&gt;</code> tag-ek k\u00f6z\u00f6tt kell megadnunk. Annyi a k\u00fcl\u00f6nbs\u00e9g, hogy a k\u00edv\u00fclr\u0151l kapott body HTML tartalom el\u00e9 berakjuk a <code>nav</code>-ot, azaz a men\u00fct.</p> <p>N\u00e9zz\u00fck, hogy hogyan haszn\u00e1lja fel a <code>list-contact.jsp</code> oldal a template-et:</p> <pre><code>&lt;%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %&gt;\n&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %&gt;\n&lt;%@ taglib prefix=\"t\" tagdir=\"/WEB-INF/tags\"%&gt;\n\n&lt;jsp:include page=\"/ContactController\"/&gt;\n\n&lt;t:basic-layout-menu title=\"List Contact\"&gt;\n&lt;table class=\"table\"&gt;\n...\n    &lt;/table&gt;\n&lt;/t:basic-layout-menu&gt;\n</code></pre> <p>A tag felhaszn\u00e1l\u00e1sa a megszokott m\u00f3don t\u00f6rt\u00e9nik, nincs semmi m\u00e1gia. A k\u00fcl\u00f6nbs\u00e9g annyi, hogy most m\u00e1r a <code>&lt;basic-layout-menu&gt;</code> tag-et haszn\u00e1ljuk.</p> <p>Viszont van egy fontos k\u00fcl\u00f6nbs\u00e9g, akkor amikor a <code>header</code>-be vagy a <code>footer</code>-be is bele szeretn\u00e9nk valamit rakni. Ez igaz\u00e1b\u00f3l hasonl\u00f3an megy, mint a <code>basic-layout-menu</code>-n\u00e9l. L\u00e1ssuk az <code>add-contact.jsp</code> oldalt:</p> <pre><code>&lt;%@ page import=\"hu.alkfejl.model.Phone\" %&gt;\n&lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %&gt;\n&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %&gt;\n&lt;%@ taglib prefix=\"t\" tagdir=\"/WEB-INF/tags\" %&gt;\n\n&lt;t:basic-layout-menu title=\"Add Contact\"&gt;\n&lt;jsp:attribute name=\"header\"&gt;\n&lt;script src=\"${pageContext.request.contextPath}/js/add-contact.js\"&gt;&lt;/script&gt;\n&lt;/jsp:attribute&gt;\n&lt;jsp:body&gt;\n&lt;jsp:useBean id=\"contact\" class=\"hu.alkfejl.model.Contact\" scope=\"request\"/&gt;\n&lt;form action=\"${pageContext.request.contextPath}/ContactController\" method=\"post\"&gt;\n...\n        &lt;/form&gt;\n&lt;/jsp:body&gt;\n&lt;/t:basic-layout-menu&gt;\n</code></pre> <p>Szok\u00e1sos m\u00f3don beh\u00fazzuk a haszn\u00e1lni k\u00edv\u00e1nt tag-ek k\u00f6nyvt\u00e1r\u00e1t: <code>&lt;%@ taglib prefix=\"t\" tagdir=\"/WEB-INF/tags\" %&gt;</code>. Ezut\u00e1n a <code>&lt;basic-layout-menu&gt;</code>-on bel\u00fcl a header-t szeretn\u00e9nk megadni, ahol a <code>&lt;script src=\"${pageContext.request.contextPath}/js/add-contact.js\"&gt;&lt;/script&gt;</code> b\u0151v\u00edt\u00e9st szeretn\u00e9nk eszk\u00f6z\u00f6lni. Ezut\u00e1n pedig a body-ban megadni a <code>useBean</code>-nel a megfelel\u0151 <code>Contact</code> objektumot \u00e9s a <code>form</code>-ot. Amennyiben nem jelezn\u00e9nk, hogy mi a header attrib\u00fatum \u00e9s mi a <code>basic-layout-menu</code> body-ja, akkor a rendszer mindent body-nak venne, \u00edgy megadjuk a header attrib\u00fatum \u00e9rt\u00e9k\u00e9t a <code>&lt;jsp:attribute name=\"header\"&gt;</code> tag haszn\u00e1lat\u00e1val, illetve a <code>&lt;jsp:body&gt;</code>-val mag\u00e1t <code>basic-layout-menu</code> body-j\u00e1t.</p> <p>A <code>profile.jsp</code> oldalon hasonl\u00f3 m\u00f3dos\u00edt\u00e1sokat kell tenn\u00fcnk, mint az <code>add-contact.jsp</code>-n, \u00edgy azt itt m\u00e1r nem mutatjuk be.</p> <p>Ezzel elk\u00e9sz\u00edtett\u00fck a kontakt alkalmaz\u00e1sunk webes v\u00e1ltozat\u00e1t is. A teljes projektet l\u00e1sd a pub-on!</p>"},{"location":"legacy/12_gyakorlat/","title":"12. gyakorlat","text":""},{"location":"legacy/12_gyakorlat/#xml-technologiak","title":"XML technol\u00f3gi\u00e1k","text":""},{"location":"legacy/12_gyakorlat/#standard-generalized-markup-language-sgml","title":"Standard Generalized Markup Language (SGML)","text":"<p>Az SGML egy \u00e1ltal\u00e1nos jel\u00f6l\u0151 nyelv, amelyet ISO szabv\u00e1ny defini\u00e1l. A c\u00e9lja, hogy egy adott szintaktik\u00e1nak megfelel\u0151 dokumentumot k\u00f6nnyen lehessen kezelni. Az SGML konkr\u00e9t alkalmaz\u00e1sa a HTML, de az XML is az SGML r\u00e9szhalmaza. Az SGML bonyolult, ez\u00e9rt sz\u00e9les k\u00f6rben nem is terjedt el, ez\u00e9rt ezzel k\u00fcl\u00f6n nem is foglalkozunk, csak az XML-lel.</p>"},{"location":"legacy/12_gyakorlat/#extensible-markup-language-xml","title":"Extensible Markup Language (XML)","text":"<p>Az 1. gyakorlaton m\u00e1r megismerkedt\u00fcnk az XML-lel, \u00e9s a f\u00e9l\u00e9v sor\u00e1n m\u00e1r a gyakorlati alkalmaz\u00e1s\u00e1t is l\u00e1ttuk, mert a maven projekt f\u00e1jl (<code>pom.xml</code>), illetve a webes r\u00e9szn\u00e9l a konfigur\u00e1ci\u00f3s f\u00e1jl (<code>web.xml</code>) is XML volt. Azonban ezek ink\u00e1bb a gyakorlatban t\u00f6rt\u00e9n\u0151 alkalmazhat\u00f3s\u00e1gra p\u00e9ld\u00e1k, \u00e9s nem arra, hogy mag\u00e1t az XML-t hogyan kell fel\u00e9p\u00edteni, mit lehet \u00e9s mit nem lehet haszn\u00e1lni, illetve hogyan kell valid\u00e1lni azt. A k\u00f6vetkez\u0151kben az XML technol\u00f3gi\u00e1kkal fogunk megismerkedni, amihez az al\u00e1bbi p\u00e9ld\u00e1t fogjuk haszn\u00e1lni.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;\n&lt;jelentkezes idoszak=\"2019/2020II\" egyetem=\"SZTE\"&gt;\n&lt;hallgato id=\"KOJEAE.SZE\"&gt;\n&lt;hnev&gt;Kov\u00e1cs J\u00e1nos&lt;/hnev&gt;\n&lt;szuletesnap&gt;2000-01-08&lt;/szuletesnap&gt;\n&lt;szak evf=\"2\"&gt;programtervezo informatikus&lt;/szak&gt;\n&lt;/hallgato&gt;\n&lt;kurzusok&gt;\n&lt;kurzus id=\"IAB8532\"&gt;\n&lt;nev&gt;Alkalmaz\u00e1sfejleszt\u00e9s I.&lt;/nev&gt;\n&lt;kredit&gt;2&lt;/kredit&gt;\n&lt;hely&gt;I223&lt;/hely&gt;\n&lt;idopont&gt;Szerda 15:00-16:00&lt;/idopont&gt;\n&lt;tanar&gt;Dr. Siket Istv\u00e1n&lt;/tanar&gt;\n&lt;/kurzus&gt;\n&lt;kurzus id=\"XEL24234\" jovahagyas=\"igen\"&gt;\n&lt;nev&gt;E-Learning&lt;/nev&gt;\n&lt;kredit&gt;3&lt;/kredit&gt;\n&lt;hely&gt;B107&lt;/hely&gt;\n&lt;idopont&gt;Szerda 12:00-14:00&lt;/idopont&gt;\n&lt;tanar&gt;Dr. Kov\u00e1cs G\u00e9za&lt;/tanar&gt;\n&lt;/kurzus&gt;\n&lt;kurzus id=\"LL2458I\" nyelv=\"n\u00e9met\"&gt;\n&lt;nev&gt;N\u00e9met k\u00f6z\u00e9pfok&lt;/nev&gt;\n&lt;kredit&gt;0&lt;/kredit&gt;\n&lt;hely&gt;VI. lektor\u00e1tus&lt;/hely&gt;\n&lt;tanar&gt;Dr. Szab\u00f3 Gabriella&lt;/tanar&gt;\n&lt;oratarto&gt;Nagy Annam\u00e1ria&lt;/oratarto&gt;\n&lt;/kurzus&gt;\n&lt;/kurzusok&gt;\n&lt;/jelentkezes&gt;\n</code></pre>"},{"location":"legacy/12_gyakorlat/#document-type-definition-dtd","title":"Document Type Definition (DTD)","text":"<p>A DTD szab\u00e1lyok halmaza, amely SGML t\u00edpus\u00fa nyelvekhez hat\u00e1roz meg dokumentumt\u00edpust. A DTD meghat\u00e1rozza, hogy</p> <ul> <li>milyen elemek lehetnek a dokumentumban,</li> <li>az elemek hogyan kapcsol\u00f3dhatnak egym\u00e1shoz,</li> <li>milyen tartalmuk lehet,</li> <li>milyen tulajdons\u00e1guk lehet.</li> </ul> <p>Fontos, hogy a DTD-ben minden olyan elemet defini\u00e1lni kell, ami az XML-ben el\u0151fordul!</p> <p>A DTD-t k\u00e9tf\u00e9lek\u00e9ppen lehet megadni:</p> <ul> <li>Bels\u0151, amikor a DTD ugyanabban a f\u00e1jlban van, mint amire vonatkozik.</li> <li>K\u00fcls\u0151, amikor a DTD egy k\u00fcl\u00f6n f\u00e1jlban van, \u00e9s csak egy hivatkoz\u00e1st tartalmaz a dokumentum a DTD-re.</li> </ul> <p>A DTD fel\u00e9p\u00edt\u00e9s\u00e9n\u00e9l defini\u00e1ljuk az XML fa szerkezet\u00e9t, amihez els\u0151 l\u00e9p\u00e9sben a fa gy\u00f6ker\u00e9t adjuk meg. A jelentkez\u00e9s xml eset\u00e9ben a fa gy\u00f6kere a jelentkez\u00e9s, amit a k\u00f6vetkez\u0151 m\u00f3don defini\u00e1lunk.</p> <pre><code>&lt;!DOCTYPE jelentkezes\n[\n ...\n]&gt;\n</code></pre> <p>Egy konkr\u00e9t XML-hez nagyon sokf\u00e9le valid\u00e1ci\u00f3s szab\u00e1lyt defini\u00e1lhatunk, mert nem tudhatjuk, hogy mi k\u00f6telez\u0151 \u00e9s mi nem, melyik elemb\u0151l mennyi a minimum \u00e9s maximum, melyik elemre milyen megk\u00f6t\u00e9sek vannak, stb. Mi most egyet fogunk megadni, ami logikusan k\u00f6vetkezik az XML-b\u0151l, illetve bemutatja a DTD lehet\u0151s\u00e9geit is.</p> <p>A <code>jelentkezes</code> elemnek van egy attrib\u00fatuma (<code>id</code>) \u00e9s k\u00e9t gyereke, a <code>hallgato</code> \u00e9s a <code>kurzusok</code>. Ezt az <code>ELEMENT</code> \u00e9s <code>ATTLIST</code> seg\u00edts\u00e9g\u00e9vel adhatjuk meg.</p> <pre><code>&lt;!DOCTYPE jelentkezes\n[\n  &lt;!ELEMENT jelentkezes (hallgato, kurzusok)&gt;\n  &lt;!ATTLIST jelentkezes idoszak CDATA #REQUIRED&gt;\n]&gt;\n</code></pre> <p>Az <code>idoszak</code> t\u00edpus\u00e1t is megadtuk, ez tetsz\u0151leges sz\u00f6veg (<code>CDATA</code>) lehet, (amit a feldolgoz\u00f3 nem is fogja feldolgozni), illetve defini\u00e1ltuk, hogy k\u00f6telez\u0151 megadni (<code>#REQUIRED</code>).</p>"},{"location":"legacy/12_gyakorlat/#attributum","title":"Attrib\u00fatum","text":"<p>Az attrib\u00fatum fontosabb lehets\u00e9ges t\u00edpusa:</p> <ul> <li><code>CDATA</code> - sz\u00f6veges adat</li> <li><code>ID</code>  - egyedi azonos\u00edt\u00f3, azaz egy azonos\u00edt\u00f3 nem fordulhat el\u0151 k\u00e9tszer (pl. a <code>kurzus</code> <code>id</code>-ja)</li> <li>Felsorol\u00e1s, amikor defini\u00e1ljuk, hogy pontosan milyen \u00e9rt\u00e9keket vehet fel (pl.  a <code>kurzus</code> eset\u00e9ben a <code>jovahagyas</code>)</li> <li><code>ENTITY</code> \u00e9s <code>ENTITIES</code> - k\u00fcls\u0151 hivatkoz\u00e1s megad\u00e1sa (k\u00e9s\u0151bb lesz r\u00e1 p\u00e9lda)</li> <li><code>IDREF</code> \u00e9s <code>IDREFS</code> - egy vagy t\u00f6bb m\u00e1sik elemre t\u00f6rt\u00e9n\u0151 hivatkoz\u00e1s</li> <li><code>NMTOKEN</code> \u00e9s <code>NMTOKENS</code> - Valid XML n\u00e9v</li> </ul> <p>Az attrib\u00fatum k\u00f6vetelm\u00e9nyek a k\u00f6vetkez\u0151k lehetnek:</p> <ul> <li> <p><code>#REQUIRED</code> - k\u00f6telez\u0151 megadni, p\u00e9ld\u00e1ul a jelentkez\u00e9si id\u0151szakot vagy a hallgat\u00f3nak az egyedi azonos\u00edt\u00f3j\u00e1t</p> <pre><code>&lt;!ATTLIST jelentkezes idoszak CDATA #REQUIRED&gt;\n&lt;!ATTLIST kurzus      id      ID    #REQUIRED&gt;\n</code></pre> </li> </ul> <ul> <li> <p><code>#FIXED</code> - k\u00f6telez\u0151 megadni, de csak egy fix \u00e9rt\u00e9ket vehet fel, ami p\u00e9lda lehet, hogy az egyetem csak az SZTE lehet</p> <pre><code>&lt;!ATTLIST jelentkezes egyetem CDATA #FIXED \"SZTE\"&gt;\n</code></pre> </li> </ul> <ul> <li> <p><code>#IMPLIED</code> - opcion\u00e1lis, azaz megadhatjuk, de nem k\u00f6telez\u0151, p\u00e9ld\u00e1ul a nyelv a kurzusokn\u00e1l</p> <pre><code>&lt;!ATTLIST kurzus      nyelv   CDATA #IMPLIED&gt;\n</code></pre> </li> </ul> <ul> <li> <p>felsorol\u00e1s - megadhatjuk, hogy milyen \u00e9rt\u00e9keket vehet fel, mint p\u00e9ld\u00e1ul a j\u00f3v\u00e1hagy\u00e1sos kurzusokn\u00e1l, de megadhatunk alap\u00e9rtelmezett \u00e9rt\u00e9ket is, hogy ne kelljen minden nem j\u00f3v\u00e1hagy\u00e1soshoz ki\u00edrni a \"nem\"-et</p> <pre><code>&lt;!ATTLIST kurzus      jovahagyas   (igen | nem) \"nem\"&gt;\n</code></pre> </li> </ul>"},{"location":"legacy/12_gyakorlat/#elem","title":"Elem","text":"<p>Az elemek eset\u00e9ben megadhatjuk, hogy mi legyen a tartalmuk:</p> <ul> <li><code>EMPTY</code> - \u00fcres, az elemnek nem lehet tartalma (pl. HTML eset\u00e9ben a <code>&lt;br /&gt;</code>)</li> </ul> <ul> <li><code>ANY</code>- tetsz\u0151leges tartalmat megadhatunk, amit az XML megenged</li> </ul> <ul> <li><code>#PCDATA</code> - parsed data, azaz olyan adattartalom, amit az XML-parser feldolgoz</li> </ul> <ul> <li>Gyerek elemek - tov\u00e1bbi XML elemek</li> </ul> <ul> <li> <p>Ezek kombin\u00e1ci\u00f3ja, amikor t\u00f6bbf\u00e9le tartalmat is megadhatunk, pl. a hallgat\u00f3 eset\u00e9ben</p> <pre><code>&lt;!ELEMENT hallgato (hnev, szuletesnap, szak)&gt;\n</code></pre> </li> </ul> <p>A gyerek elemek eset\u00e9ben azt is megadhatjuk, hogy h\u00e1nyszor forduljanak el\u0151:</p> <ul> <li> <p>Szekvencia: ha vessz\u0151vel elv\u00e1lasztva adjuk mega, akkor minden elemnek l\u00e9teznie kell</p> <pre><code>&lt;!ELEMENT hallgato (hnev, szuletesnap, szak)&gt;\n</code></pre> </li> </ul> <ul> <li> <p>Ha t\u00f6bb elem k\u00f6z\u00fcl kell v\u00e1lasztani egyet, akkor a | jellel adhatjuk meg, pl. <code>tanar</code> vagy <code>oratarto</code></p> <pre><code>&lt;!ELEMENT kurzus (... (tanar|oratarto) )&gt;\n</code></pre> </li> </ul> <ul> <li> <p>Ism\u00e9tl\u0151d\u00e9s oper\u00e1torok</p> <ul> <li>Nincs - pontosan egyszer kell el\u0151fordulnia</li> </ul> <ul> <li>? - egyszer vagy egyszer sem, pl. lehet, hogy m\u00e9g nem ismert a kurzus id\u0151pontja</li> </ul> <ul> <li>+ - legal\u00e1bb egyszer szerepelnie kell, pl. a hallgat\u00f3nak legal\u00e1bb egy szakja van</li> </ul> <ul> <li> <p>* - ak\u00e1rh\u00e1nyszor szerepelhet (ak\u00e1r el is lehet hagyni), pl. tetsz\u0151leges kurzust felvehet</p> <pre><code>&lt;!ELEMENT hallgato (hnev, szuletesnap, szak+)&gt;\n&lt;!ELEMENT kurzusok (kurzus*)&gt;\n&lt;!ELEMENT kurzus (nev, kredit, hely, idopont?, (tanar|oratarto)+ )&gt;\n</code></pre> </li> </ul> </li> </ul>"},{"location":"legacy/12_gyakorlat/#teljes-pelda","title":"Teljes p\u00e9lda","text":"<p>Ezen \u00e9p\u00edt\u0151elemek felhaszn\u00e1lva a <code>jelentkezes.xml</code>-hez tartoz\u00f3 egy lehets\u00e9ges DTD a k\u00f6vetkez\u0151:</p> <pre><code>&lt;!DOCTYPE jelentkezes\n[\n    &lt;!ELEMENT jelentkezes (hallgato, kurzusok)&gt;\n    &lt;!ATTLIST jelentkezes \n        idoszak CDATA #REQUIRED\n        egyetem CDATA #FIXED \"SZTE\"\n    &gt;\n\n    &lt;!ELEMENT hallgato (hnev, szuletesnap, szak+)&gt;\n    &lt;!ATTLIST hallgato id ID #REQUIRED&gt;\n    &lt;!ELEMENT hnev (#PCDATA)&gt;\n    &lt;!ELEMENT szuletesnap (#PCDATA)&gt;\n    &lt;!ELEMENT szak (#PCDATA)&gt;\n    &lt;!ATTLIST szak evf CDATA #REQUIRED&gt;\n\n    &lt;!ELEMENT kurzusok (kurzus*)&gt;\n    &lt;!ELEMENT kurzus (nev, kredit, hely, idopont?, (tanar|oratarto)+ )&gt;\n    &lt;!ATTLIST kurzus\n        id    ID    #REQUIRED\n        nyelv CDATA #IMPLIED\n        jovahagyas (igen | nem) \"nem\"\n    &gt;\n\n    &lt;!ELEMENT nev (#PCDATA)&gt;\n    &lt;!ELEMENT kredit (#PCDATA)&gt;\n    &lt;!ELEMENT hely (#PCDATA)&gt;\n    &lt;!ELEMENT idopont (#PCDATA)&gt;\n    &lt;!ELEMENT tanar (#PCDATA)&gt;\n  &lt;!ELEMENT oratarto (#PCDATA)&gt;\n\n]&gt;\n</code></pre>"},{"location":"legacy/12_gyakorlat/#hivatkozasok","title":"Hivatkoz\u00e1sok","text":""},{"location":"legacy/12_gyakorlat/#kulso-hivatkozasok","title":"K\u00fcls\u0151 hivatkoz\u00e1sok","text":"<p>Az els\u0151 k\u00fcls\u0151 hivatkoz\u00e1s maga a DTD lehet. Megtehetj\u00fck, hogy a fenti DTD-t bem\u00e1soljuk az XML elej\u00e9re, de ez nem c\u00e9lszer\u0171, mert \u00edgy minden XML tartalmazza a DTD-t, ami nagyobb m\u00e9ret\u0171 lesz, a DTD redund\u00e1nsan szerepel az \u00f6sszes XML-ben, illetve, ha m\u00f3dos\u00edtjuk a DTD-t, akkor minden XML-ben ki kell cser\u00e9lni. Ez\u00e9rt c\u00e9lszer\u0171 k\u00fcls\u0151 hivatkoz\u00e1sk\u00e9nt megadni a DTD-t, \u00e9s ilyenkor az XML elej\u00e9re csak a hivatkoz\u00e1st kell besz\u00farni.</p> <pre><code>&lt;!DOCTYPE jelentkezes SYSTEM \"jelentkezes.dtd\"&gt;\n</code></pre> <p>De nem csak a DTD-re lehet k\u00fcls\u0151 hivatkoz\u00e1st defini\u00e1lni, hanem ,,b\u00e1rmire''. P\u00e9ld\u00e1ul a <code>kurzusok</code> vagy a <code>kurzus</code> eset\u00e9ben is meg lehet adni, hogy valami k\u00fcls\u0151 f\u00e1jlra vagy egy web c\u00edmre hivatkozzon.</p> <pre><code>&lt;!ENTITY kurzusok    SYSTEM \"https://www...\"&gt;\n&lt;!ENTITY kurzus      SYSTEM \"file://C:...\"&gt;\n</code></pre>"},{"location":"legacy/12_gyakorlat/#belso-hivatkozasok","title":"Bels\u0151 hivatkoz\u00e1sok","text":"<p>A DTD lehet\u0151s\u00e9get biztos\u00edt v\u00e1ltoz\u00f3 defin\u00edci\u00f3kra is, \u00e9s ezekre a v\u00e1ltoz\u00f3kra k\u00e9s\u0151bb hivatkozhatunk is. P\u00e9ld\u00e1ul ha az SZTE-t nem akarjuk mindenhova ki\u00edrni, helyette felvesz\u00fcnk egy v\u00e1ltoz\u00f3t, annak \u00e9rt\u00e9k\u00fcl adjuk, \u00e9s ha valami\u00e9rt v\u00e1ltozik az egyetem neve, akkor csak egy helyen kell m\u00f3dos\u00edtani. A kor\u00e1bbi p\u00e9lda kapcsol\u00f3d\u00f3 r\u00e9sze (valid XML-l\u00e9 alak\u00edtva):</p> <pre><code>&lt;!DOCTYPE jelentkezes\n[\n  &lt;!ENTITY EGYETEMNEVE \"SZTE\"&gt;\n&lt;!ELEMENT jelentkezes EMPTY&gt;\n&lt;!ATTLIST jelentkezes egyetem CDATA #FIXED \"SZTE\"&gt;\n]&gt;\n\n&lt;jelentkezes egyetem=\"&amp;EGYETEMNEVE;\" /&gt;\n</code></pre>"},{"location":"legacy/12_gyakorlat/#hivatkozasok-hasznalatanak-veszelyei","title":"Hivatkoz\u00e1sok haszn\u00e1lat\u00e1nak vesz\u00e9lyei","text":"<p>Haszn\u00e1ljuk vagy ne haszn\u00e1ljuk a ne haszn\u00e1ljuk a hivatkoz\u00e1sokat? L\u00e1thatjuk, hogy sz\u00e1mos el\u0151ny\u00fck van:</p> <ul> <li>csak egy helyen szerepel a DTD,</li> <li>csak egy helyen adok \u00e9rt\u00e9ket a v\u00e1ltoz\u00f3nak, \u00e9s azt\u00e1n haszn\u00e1lom.</li> </ul> <p>Sz\u00f3val akkor haszn\u00e1ljuk, mi baj t\u00f6rt\u00e9nhet?</p>"},{"location":"legacy/12_gyakorlat/#dtd-valtozok","title":"DTD v\u00e1ltoz\u00f3k","text":"<p>Tegy\u00fck fel, hogy van egy alkalmaz\u00e1sunk, ami egy webszerveren fut, \u00e9s valami inputot v\u00e1runk XML form\u00e1tumban. El\u0151vigy\u00e1zatosak vagyunk, \u00e9s hogy v\u00e9dj\u00fck a szervert (t\u00e1rhely, mem\u00f3ria, processzor kapacit\u00e1s), lekorl\u00e1tozzuk a felt\u00f6ltend\u0151 f\u00e1jlok m\u00e9ret\u00e9t. Ekkor megnyugodhatunk, mi baj t\u00f6rt\u00e9nhet, ,,mindenre'' gondolunk.</p> <p>Vagy m\u00e9gsem? Mi van akkor, ha az egyik ,,bar\u00e1tunk'' meglep minket a k\u00f6vetkez\u0151 XML-lel?</p> <pre><code>&lt;!DOCTYPE pelda [\n  &lt;!ENTITY a \"1234567890\"&gt;\n&lt;!ENTITY b \"&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;&amp;a;\"&gt;\n&lt;!ENTITY c \"&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;&amp;b;\"&gt;\n&lt;!ENTITY d \"&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;&amp;c;\"&gt;\n\n&lt;!ENTITY l \"&amp;k;&amp;k;&amp;k;&amp;k;&amp;k;&amp;k;&amp;k;&amp;k;\"&gt;\n&lt;!ENTITY m \"&amp;l;&amp;l;&amp;l;&amp;l;&amp;l;&amp;l;&amp;l;&amp;l;\"&gt;\n]&gt;\n&lt;pelda&gt;&amp;m;&lt;/pelda&gt;\n</code></pre> <p>Mi fog t\u00f6rt\u00e9nni ekkor? Az XML feldolgoz\u00f3 elv\u00e9gzi a dolg\u00e1t, \u00e9s el\u0151\u00e1ll\u00edtja az XML-t, amihez ki kell sz\u00e1molnia <code>m</code>-et, amihez el\u0151bb <code>l</code>-re is sz\u00fcks\u00e9ge van, ... De mekkora lesz <code>m</code>?</p> <ul> <li><code>a</code> 10 b\u00e1jtos</li> <li><code>b</code> 8-szor tartalmazza <code>a</code>-t, azaz 10 * 8 = 80 b\u00e1jt</li> <li><code>c</code> 8-szor tartalmazza <code>b</code>-t, azaz 10 * 8 * 8 = 10 * 82 = 640 b\u00e1jt</li> <li><code>d</code> 8-szor tartalmazza <code>c</code>-t, azaz 10 * 83 = 5 KB</li> <li><code>e</code> 8-szor tartalmazza <code>d</code>-t, azaz 10 * 84 = 40 KB</li> <li>...</li> <li><code>m</code> 8-sor tartalmazza <code>d</code>-t, azaz 10 * 812 = 640 GB!!!</li> </ul> <p>Azaz a fenti ,,\u00e1rtatlannak t\u0171n\u0151'' XML feldolgoz\u00e1s\u00e1hoz 640GB mem\u00f3ri\u00e1ra van sz\u00fcks\u00e9g.</p>"},{"location":"legacy/12_gyakorlat/#xml-external-entity-xxe-sebezhetoseg","title":"XML External Entity (XXE) sebezhet\u0151s\u00e9g","text":"<p>A k\u00fcls\u0151 hivatkoz\u00e1sok hasznosak, de azokat is fenntart\u00e1sokkal kell kezelni. P\u00e9ld\u00e1ul, ha valami k\u00fcls\u0151 hivatkoz\u00e1s tartalm\u00e1t a felhaszn\u00e1l\u00f3 l\u00e1thatja, akkor esetleg olyan inform\u00e1ci\u00f3hoz is hozz\u00e1juthat, amihez nincs jogosults\u00e1ga. De ki lenne ilyen amat\u0151r, hogy ezt megengedi, \u00e9s vajon mihez f\u00e9rhet hozz\u00e1? Nos, egy val\u00f3s p\u00e9lda erre, hogy kor\u00e1bban a google toolbart testre lehetett szabni XML seg\u00edts\u00e9g\u00e9vel. Ez egy hasznos funkci\u00f3 volt, csak nem (vagy nem megfelel\u0151en) valid\u00e1lt\u00e1k az XML-t, \u00edgy ha valaki a szerveren tal\u00e1lhat\u00f3 <code>/etc/passwd</code> vagy az <code>/etc/hosts</code> f\u00e1jlok tartalm\u00e1val akarta kieg\u00e9sz\u00edteni a toolbarj\u00e1t, akkor megtehette  </p> <ul> <li>https://blog.detectify.com/2014/04/11/how-we-got-read-access-on-googles-production-servers/</li> <li>https://news.softpedia.com/news/Google-Rewards-Experts-for-XXE-Vulnerability-in-Toolbar-Button-Gallery-437290.shtml</li> </ul>"},{"location":"legacy/12_gyakorlat/#xml-schema-definition-xsd","title":"XML Schema Definition (XSD)","text":"<p>Annak ellen\u00e9re, hogy a DTD-vel is defini\u00e1lthatjuk az XML form\u00e1tum\u00e1t, van n\u00e9h\u00e1ny h\u00e1tr\u00e1nya, ami\u00e9rt ink\u00e1bb az XSD-t \u00e9rdemes haszn\u00e1lni. An\u00e9lk\u00fcl, hogy ismern\u00e9nk az XSD-t, a DTD-vel kapcsolatban lehetett n\u00e9hol hi\u00e1ny\u00e9rzet\u00fcnk, ez\u00e9rt most el\u0151re \u00f6sszefoglaljuk a fontosabb k\u00fcl\u00f6nbs\u00e9geket, illetve az XSD el\u0151nyeit a DTD-vel szemben:</p> <ul> <li>Az XSD XML alap\u00fa, m\u00edg a DTD nem, azaz a DTD-hez meg kell tanulni egy \u00fajabb szintaxist (ami az\u00e9rt nem annyira bonyolult  ).</li> <li>Az XSD sokf\u00e9le t\u00edpust defini\u00e1l (sz\u00e1m, d\u00e1tum, ...), m\u00edg a DTD alapb\u00f3l ezt nem t\u00e1mogatja.<ul> <li>Ez\u00e9rt nem tudtunk a sz\u00fclet\u00e9si \u00e9vnek d\u00e1tum t\u00edpus megk\u00f6vetelni, vagy a kredit sz\u00e1mnak nemnegat\u00edv eg\u00e9sz \u00e9rt\u00e9ket.</li> </ul> </li> <li>Az XSD-vel defini\u00e1lhatjuk a gyerek elemek sz\u00e1m\u00e1t \u00e9s sorrendj\u00e9t, m\u00edg a DTD ezt nem t\u00e1mogatja.</li> <li>Az XML-ben haszn\u00e1lhatunk n\u00e9vtereket, \u00e9s az XSD t\u00e1mogatja ezt.</li> <li>Az\u00e9rt a DTD mellett sz\u00f3l p\u00e9ld\u00e1ul, hogy defini\u00e1lhatunk <code>ENTITY</code>-t, amit az XSD nem t\u00e1mogat.</li> </ul>"},{"location":"legacy/12_gyakorlat/#xsd-bevezeto","title":"XSD Bevezet\u0151","text":"<p>Az XSD XML alapon defini\u00e1lja, hogy az adott XML hogyan n\u00e9zhet ki, azaz </p> <ul> <li>milyen elemek \u00e9s attrib\u00fatumok fordulhatnak el\u0151,</li> <li>mennyi gyerek elem \u00e9s milyen sorrendben fordulhat el\u0151,</li> <li>az elemek \u00e9s attrib\u00fatumok t\u00edpusait,</li> <li>\u00e9s az elemek \u00e9s attrib\u00fatumok fix \u00e9rt\u00e9keit.</li> </ul> <p>Az XSD megad\u00e1sa egy XML f\u00e1jllal t\u00f6rt\u00e9nik, ahol az XSD nyelvtanban defini\u00e1lt elemeket haszn\u00e1lhatjuk. A gy\u00f6k\u00e9rben megadjuk, hogy az XSD n\u00e9vteret haszn\u00e1ljuk, \u00e9s ezen elemeket az <code>xs</code> prefixszel fogjuk haszn\u00e1lni.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;xs:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"&gt;\n...\n&lt;/xs:schema&gt;\n</code></pre> <p>Az XSD-ben megtal\u00e1lhat\u00f3ak azok az alapt\u00edpusok, amelyek a legt\u00f6bb nyelvben l\u00e9teznek, p\u00e9ld\u00e1ul:</p> <ul> <li>sz\u00f6veg: string</li> <li>sz\u00e1m: integer, long, short, byte, ..., float, double, ...</li> <li>d\u00e1tum: date, time, ...</li> <li>egy\u00e9b: boolean</li> </ul>"},{"location":"legacy/12_gyakorlat/#element","title":"Element","text":"<p>Egy XML elemet az XSD-ben az <code>element</code> seg\u00edts\u00e9g\u00e9vel adhatunk meg, ahol meg kell adni a nev\u00e9t \u00e9s azt, hogy mi lehet a tartalma. Az <code>element</code> lehet egyszer\u0171, amikor egy XSD a t\u00edpusa, de lehet \u00f6sszetett is, amikor mi \u00edrjuk le, hogy mit tartalmazhat.</p> <p>P\u00e9ld\u00e1ul a <code>kredit</code> vagy a <code>tan\u00e1r</code> eset\u00e9ben, amikor egyszer\u0171 elemnek tekintj\u00fck:</p> <pre><code>&lt;xs:element name=\"kredit\" type=\"xs:integer\"&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\"/&gt;\n</code></pre> <p>Komplex elemet <code>complexType</code> seg\u00edts\u00e9g\u00e9vel defini\u00e1lhatunk, ahol meg kell adnunk azt is, hogy</p> <ul> <li>milyen elemeket tartalmazzon,</li> <li>melyikb\u0151l mennyit tartalmazzon,</li> <li>\u00e9s hogy sz\u00e1m\u00edt-e a sorrendj\u00fck van sem.</li> </ul>"},{"location":"legacy/12_gyakorlat/#osszetett-elem","title":"\u00d6sszetett elem","text":"<p>Ha olyan \u00f6sszetett elemet szeretn\u00e9nk defini\u00e1lni, ahol az \u00f6sszes gyereknek el\u0151 kell fordulnia, de a sorrend tetsz\u0151leges lehet, akkor az <code>all</code>-t kell haszn\u00e1lni. P\u00e9ld\u00e1ul a kurzusnak lehet neve, kreditje, helye, ... (a tan\u00e1r vagy \u00f3ratart\u00f3 v\u00e1laszt\u00e1st most m\u00e9g nem vessz\u00fck figyelembe).</p> <pre><code>&lt;xs:element name=\"kurzus\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:all&gt;\n&lt;xs:element name=\"nev\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"kredit\" type=\"xs:integer\"&gt;\n&lt;xs:element name=\"hely\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"idopont\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\"/&gt;\n&lt;/xs:all&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n</code></pre> <p>Ha az elemek sorrendje is fontos, akkor a <code>sequence</code>-t kell haszn\u00e1lni:</p> <pre><code>&lt;xs:element name=\"kurzus\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:sequence&gt;\n&lt;xs:element name=\"nev\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"kredit\" type=\"xs:integer\"&gt;\n&lt;xs:element name=\"hely\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"idopont\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\"/&gt;\n&lt;/xs:sequence&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n</code></pre> <p>Azt is megtehetj\u00fck, hogy az elemek k\u00f6z\u00fcl v\u00e1lasztunk (<code>choice</code>), p\u00e9ld\u00e1ul, ha a kurzusnak tan\u00e1ra vagy \u00f3ratart\u00f3ja van, \u00e9s ilyenkor vagy az egyiket, vagy a m\u00e1sikat kell megadni:</p> <pre><code>&lt;xs:element name=\"kurzus\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:choice&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"oratarto\" type=\"xs:string\"/&gt;\n&lt;/xs:choice&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n</code></pre>"},{"location":"legacy/12_gyakorlat/#szamossag-megadasa","title":"Sz\u00e1moss\u00e1g megad\u00e1sa","text":"<p>Lehet\u0151s\u00e9g\u00fcnk van azt is megadni, hogy egy elem h\u00e1nyszor forduljon, illetve \u00f6sszesen h\u00e1ny elem lehet. Ezekre a <code>minOccurs</code> \u00e9s <code>maxOccurs</code> attrib\u00fatumokat haszn\u00e1lhatjuk.</p> <p>P\u00e9ld\u00e1ul ha a kurzus eset\u00e9ben az id\u0151pont opcion\u00e1lis, azaz nem k\u00f6telez\u0151, akkor a <code>minOccurs</code> \u00e9rt\u00e9k\u00e9t 0-ra kell \u00e1ll\u00edtani, \u00e9s \u00edgy elhagyhat\u00f3 lesz. Tov\u00e1bb\u00e1 ha legfeljebb 5 tan\u00e1ra lehet (most tekints\u00fcnk el a tan\u00e1r vagy oktat\u00f3 megk\u00f6zel\u00edt\u00e9st\u0151l) a kurzusnak, akkor azt a k\u00f6vetkez\u0151 m\u00f3don lehet megadni:</p> <pre><code>&lt;xs:element name=\"kurzus\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:all&gt;\n&lt;xs:element name=\"nev\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"kredit\" type=\"xs:integer\"&gt;\n&lt;xs:element name=\"hely\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"idopont\" type=\"xs:string\" minOccurs=\"0\"/&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\" maxOccurs=\"5\"/&gt;\n&lt;/xs:all&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n</code></pre> <p>A <code>minOccurs</code> \u00e9rt\u00e9ke 0 vagy 1 lehet, a <code>maxOccurs</code> tetsz\u0151leges eg\u00e9sz. Mindkett\u0151nek az alap\u00e9rtelmezett \u00e9rt\u00e9ke 1, azaz minden gyerek elemnek egyszer kell szerepelnie, ha ezt nem specifik\u00e1ljuk m\u00e1sk\u00e9pp.</p>"},{"location":"legacy/12_gyakorlat/#referencia-masik-elemre","title":"Referencia m\u00e1sik elemre","text":"<p>Mivel az XML-ben el\u00e9g m\u00e9ly egym\u00e1sba \u00e1gyaz\u00e1si hierarchia alakulhat ki, az\u00e9rt az XSD is el\u00e9g bonyolult \u00e9s m\u00e9ly lehet, ez\u00e9rt c\u00e9lszer\u0171 bizonyos r\u00e9szeket kiszervezni, \u00e9s azokra csak hivatkoz\u00e1sokat megadni. Ilyen lehet, hogy a <code>jelentkezes</code>-t k\u00e9t nagyobb r\u00e9szre bontjuk, a <code>hallgato</code>-ra \u00e9s a <code>kurzusok</code>-ra.</p> <pre><code>&lt;xs:element name=\"jelentkezes\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:sequence&gt;\n&lt;xs:element ref=\"hallgato\"/&gt;\n&lt;xs:element ref=\"kurzusok\"/&gt;\n&lt;/xs:sequence&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n\n&lt;xs:element name=\"hallgato\"&gt;\n...\n&lt;/xs:element&gt;\n\n&lt;xs:element name=\"kurzusok\"&gt;\n...\n&lt;/xs:element&gt;\n</code></pre>"},{"location":"legacy/12_gyakorlat/#attributum_1","title":"Attrib\u00fatum","text":"<p>Az attrib\u00fatumokat az <code>attribute</code> seg\u00edts\u00e9g\u00e9vel adhatjuk meg, ahol meg kell adni az attrib\u00fatum nev\u00e9t, a t\u00edpus\u00e1t, \u00e9s hogy k\u00f6telez\u0151 (<code>required</code>) vagy opcion\u00e1lis (<code>optional</code>), \u00e9s esetleg van-e alap\u00e9rtelmezett \u00e9rt\u00e9ke. N\u00e9h\u00e1ny p\u00e9lda az attrib\u00fatumokra, ahol az <code>evf</code> vagy az <code>id</code> megad\u00e1sa k\u00f6telez\u0151, a <code>nyelv</code> opcion\u00e1lis, mint ahogy a <code>jovahagyas</code> is, de ott m\u00e9g alap\u00e9rtelemezett \u00e9rt\u00e9ket is megadunk.</p> <pre><code>&lt;xs:attribute name=\"evf\" type=\"xs:integer\" use=\"required\"/&gt;\n&lt;xs:attribute name=\"id\" type=\"idTipus\" use=\"required\"/&gt;\n&lt;xs:attribute name=\"jovahagyas\" type=\"igenNemTipus\" use=\"optional\" default=\"nem\"/&gt;\n&lt;xs:attribute name=\"nyelv\" type=\"xs:string\" use=\"optional\"/&gt;\n</code></pre> <p>Ha egy elemnek van attrib\u00fatuma, akkor az m\u00e1r nem lehet egyszer\u0171 elem, hi\u00e1ba nincs tov\u00e1bbi gyereke. P\u00e9ld\u00e1ul a <code>szak</code> eset\u00e9ben csak a szakot kell megadni sz\u00f6veggel, de van egy <code>evf</code> attrib\u00fatuma is.</p> <pre><code>&lt;xs:element name=\"szak\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:simpleContent&gt;\n&lt;xs:extension base=\"xs:string\"&gt;\n&lt;xs:attribute name=\"evf\" type=\"xs:integer\" use=\"required\"/&gt;\n&lt;/xs:extension&gt;\n&lt;/xs:simpleContent&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n</code></pre> <p>Vagy p\u00e9ld\u00e1ul a <code>kurzus</code> attrib\u00fatumainak megad\u00e1sa a k\u00f6vetkez\u0151 lehet:</p> <pre><code>&lt;xs:element name=\"kurzus\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:all&gt;\n&lt;xs:element name=\"nev\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"kredit\" type=\"xs:integer\"&gt;\n&lt;xs:element name=\"hely\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"idopont\" type=\"xs:string\" minOccurs=\"0\"/&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\" maxOccurs=\"5\"/&gt;\n&lt;/xs:all&gt;\n&lt;xs:attribute name=\"id\" type=\"idTipus\" use=\"required\"/&gt;\n&lt;xs:attribute name=\"jovahagyas\" type=\"igenNemTipus\" use=\"optional\" default=\"nem\"/&gt;\n&lt;xs:attribute name=\"nyelv\" type=\"xs:string\" use=\"optional\"/&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n</code></pre>"},{"location":"legacy/12_gyakorlat/#sajat-tipus-megszoritasok","title":"Saj\u00e1t t\u00edpus, megszor\u00edt\u00e1sok","text":"<p>Eddig csak a be\u00e9p\u00edtett t\u00edpusokat haszn\u00e1ltuk, azonban lehet\u0151s\u00e9g\u00fcnk van megszor\u00edt\u00e1sokat is alkalmazni a t\u00edpusokra, illetve \u00faj t\u00edpusokat is defini\u00e1lhatunk, amit k\u00e9s\u0151bb felhaszn\u00e1lhatunk. Egy logikus megszor\u00edt\u00e1s, hogy a kredit \u00e9rt\u00e9knek legyen minimum \u00e9s maximum \u00e9rt\u00e9ke. \u00edgy a kor\u00e1bbi</p> <pre><code>&lt;xs:element name=\"kredit\" type=\"xs:integer\"&gt;\n</code></pre> <p>helyett megadjuk, hogy tov\u00e1bbra is eg\u00e9sz sz\u00e1m, de a megszor\u00edt\u00e1sokat is defini\u00e1ljuk:</p> <pre><code>&lt;xs:element name=\"kredit\"&gt;\n&lt;xs:simpleType&gt;\n&lt;xs:restriction base=\"xs:integer\"&gt;\n&lt;xs:minInclusive value=\"0\"/&gt;\n&lt;xs:maxInclusive value=\"30\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n&lt;/xs:element&gt;\n</code></pre> <p>Saj\u00e1t t\u00edpus defini\u00e1l\u00e1s\u00e1n\u00e1l meg kell adni a t\u00edpus nev\u00e9t, valamint azt, hogy mit reprezent\u00e1ljon. P\u00e9ld\u00e1ul a hallgat\u00f3k \u00e9s a kurzusok azonos\u00edt\u00f3inak olyan string azonos\u00edt\u00f3kat fogadunk el, amelyek legal\u00e1bb 5 \u00e9s legfeljebb 10 hossz\u00faak.</p> <pre><code>&lt;xs:simpleType name=\"idTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:minLength value=\"5\"/&gt;\n&lt;xs:maxLength value=\"10\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n</code></pre> <p>Ha a j\u00f3v\u00e1hagy\u00e1shoz szeretn\u00e9nk egy t\u00edpust defini\u00e1lni, ami csak igen vagy nem lehet, akkor az string t\u00edpus lesz, \u00e9s megadott \u00e9rt\u00e9keket vehet fel.</p> <pre><code>&lt;xs:simpleType name=\"igenNemTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:enumeration value=\"igen\"/&gt;\n&lt;xs:enumeration value=\"nem\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n</code></pre> <p>De lehet\u0151s\u00e9g van minta alapj\u00e1n is megszor\u00edt\u00e1st defini\u00e1lni. Ilyen lehet p\u00e9ld\u00e1ul az, hogy melyik id\u0151szakra vonatkozik, ahol a mint\u00e1nak az eleje az <code>\u00e9vsz\u00e1m/\u00e9vsz\u00e1m</code>, majd ezt k\u00f6veti egy vagy k\u00e9t <code>I</code>. Ez a minta nem fogja ellen\u0151rizni, hogy az \u00e9vsz\u00e1m j\u00f3-e, de legal\u00e1bb ilyen form\u00e1tumban kapjuk meg.</p> <pre><code>&lt;xs:simpleType name=\"idoszakTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:pattern value=\"\\d{4}/\\d{4}I(I)?\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n</code></pre>"},{"location":"legacy/12_gyakorlat/#teljes-xml","title":"Teljes XML","text":"<p>Ezen \u00e9p\u00edt\u0151elemek felhaszn\u00e1l\u00e1s\u00e1val egy lehets\u00e9ges XSD a jelentkezes.xml p\u00e9ld\u00e1hoz a k\u00f6vetkez\u0151:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\"&gt;\n\n&lt;!-- Bevezet\u00fcnk n\u00e9h\u00e1ny t\u00edpust amit a p\u00e9ld\u00e1ban fogunk haszn\u00e1lni --&gt;\n\n&lt;xs:simpleType name=\"idoszakTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:pattern value=\"\\d{4}/\\d{4}I(I)?\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n\n&lt;xs:simpleType name=\"egyetemTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:pattern value=\"SZTE\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n\n&lt;xs:simpleType name=\"idTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:minLength value=\"5\"/&gt;\n&lt;xs:maxLength value=\"10\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n\n&lt;xs:simpleType name=\"igenNemTipus\"&gt;\n&lt;xs:restriction base=\"xs:string\"&gt;\n&lt;xs:enumeration value=\"igen\"/&gt;\n&lt;xs:enumeration value=\"nem\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n\n\n&lt;!-- Itt kezdj\u00fck el a szab\u00e1lyokat megadni az elementekre --&gt;\n\n&lt;xs:element name=\"jelentkezes\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:sequence&gt;\n&lt;xs:element ref=\"hallgato\"/&gt;\n&lt;xs:element ref=\"kurzusok\"/&gt;\n&lt;/xs:sequence&gt;\n&lt;xs:attribute name=\"idoszak\" type=\"idoszakTipus\" use=\"required\"/&gt;\n&lt;xs:attribute name=\"egyetem\" type=\"egyetemTipus\" use=\"required\"/&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n\n&lt;xs:element name=\"hallgato\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:all&gt; &lt;!-- nem fontos az elemek sorrendje --&gt;\n&lt;xs:element name=\"hnev\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"szuletesnap\" type=\"xs:date\"/&gt;\n&lt;xs:element name=\"szak\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:simpleContent&gt;\n&lt;xs:extension base=\"xs:string\"&gt;\n&lt;xs:attribute name=\"evf\" type=\"xs:integer\" use=\"required\"/&gt;\n&lt;/xs:extension&gt;\n&lt;/xs:simpleContent&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n&lt;/xs:all&gt;\n&lt;xs:attribute name=\"id\" type=\"idTipus\" use=\"required\"/&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n\n&lt;xs:element name=\"kurzusok\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:sequence&gt;\n&lt;xs:element name=\"kurzus\" maxOccurs=\"unbounded\"&gt;\n&lt;xs:complexType&gt;\n&lt;xs:all&gt;\n&lt;xs:element name=\"nev\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"kredit\"&gt;\n&lt;xs:simpleType&gt;\n&lt;xs:restriction base=\"xs:integer\"&gt;\n&lt;xs:minInclusive value=\"0\"/&gt;\n&lt;xs:maxInclusive value=\"30\"/&gt;\n&lt;/xs:restriction&gt;\n&lt;/xs:simpleType&gt;\n&lt;/xs:element&gt;\n&lt;xs:element name=\"hely\" type=\"xs:string\"/&gt;\n&lt;xs:element name=\"idopont\" type=\"xs:string\" minOccurs=\"0\"/&gt;\n&lt;xs:element name=\"tanar\" type=\"xs:string\" minOccurs=\"0\"/&gt;\n&lt;xs:element name=\"oratarto\" type=\"xs:string\" minOccurs=\"0\"/&gt;\n&lt;/xs:all&gt;\n&lt;xs:attribute name=\"id\" type=\"idTipus\" use=\"required\"/&gt;\n&lt;xs:attribute name=\"jovahagyas\" type=\"igenNemTipus\"\nuse=\"optional\" default=\"nem\"/&gt;\n&lt;xs:attribute name=\"nyelv\" type=\"xs:string\" use=\"optional\"/&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n&lt;/xs:sequence&gt;\n&lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n\n&lt;/xs:schema&gt;\n</code></pre>"},{"location":"legacy/12_gyakorlat/#xml-gyokere","title":"XML gy\u00f6kere","text":"<p>A fenti XSD eset\u00e9ben egy\u00e9rtelm\u0171nek t\u0171nik, hogy a <code>jelentkezes</code>-t v\u00e1rjuk el az XML gy\u00f6ker\u00e9nek, de ez nem \u00edgy van, mert egy olyan XML is valid, aminek a hallgat\u00f3 a gy\u00f6kere, \u00e9s csak azt a r\u00e9szt val\u00f3s\u00edtja meg.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;\n\n&lt;hallgato id=\"KOJEAE.SZE\"&gt;\n&lt;hnev&gt;Kov\u00e1cs J\u00e1nos&lt;/hnev&gt;\n&lt;szuletesnap&gt;2000-01-08&lt;/szuletesnap&gt;\n&lt;szak evf=\"2\"&gt;programtervezo informatikus&lt;/szak&gt;\n&lt;/hallgato&gt;\n</code></pre>"},{"location":"legacy/12_gyakorlat/#hasznos-linkek","title":"Hasznos linkek","text":"<ul> <li>XML online valid\u00e1l\u00e1sa: https://www.xmlvalidation.com/index.php?id=1&amp;L=0</li> <li>DTD: https://www.w3schools.com/xml/xml_dtd_intro.asp</li> <li>XSD: https://www.w3schools.com/xml/schema_intro.asp</li> </ul>"},{"location":"legacy/13_gyakorlat/","title":"13. gyakorlat","text":""},{"location":"legacy/13_gyakorlat/#xml-technologiak-folytatas","title":"XML technol\u00f3gi\u00e1k (folytat\u00e1s)","text":""},{"location":"legacy/13_gyakorlat/#xml-path-language-xpath","title":"XML Path Language (XPath)","text":"<p>Az XPath egy olyan lek\u00e9rdez\u0151 nyelv, amivel az XML dokumentumban elemeket tudunk kijel\u00f6lni, illetve az XML tartalma alapj\u00e1n sz\u00e1m\u00edt\u00e1sokat lehet elv\u00e9gezni (pl. egy adott elemnek h\u00e1ny gyereke van).</p>"},{"location":"legacy/13_gyakorlat/#xml-mint-fa","title":"XML, mint fa","text":"<p>Egy XML dokumentumot tekinthet\u00fcnk \u00fagy is, mint egy fa. Csak egy gy\u00f6kere lehet, \u00e9s az elemek egym\u00e1sba \u00e1gyaz\u00e1sa jelenti a f\u00e1ban a sz\u00fcl\u0151-gyerek kapcsolatot. N\u00e9zz\u00fck az al\u00e1bbi catalog XML-t:</p> <pre><code>&lt;catalog&gt;\n&lt;product code =\"123\"&gt;\n&lt;price&gt;35.99&lt;/price&gt;\n&lt;/product&gt;\n&lt;product code =\"456\"&gt;\n&lt;price&gt;22.95&lt;/price&gt;\n&lt;discount&gt;\n&lt;amount&gt;25&lt;/amount&gt;\n&lt;/discount&gt;\n&lt;/product&gt;\n&lt;product code =\"789\"&gt;\n&lt;price&gt;185.00 &lt;/price &gt;\n&lt;/product&gt;\n&lt;/catalog&gt;\n</code></pre> <p>A hozz\u00e1 tartoz\u00f3 fa az al\u00e1bbi (a piros kiemel\u00e9snek k\u00e9s\u0151bb lesz jelent\u0151s\u00e9ge). A f\u00e1nak a gy\u00f6kere egy speci\u00e1lis ,,elem'', ami val\u00f3j\u00e1ban nincs a gr\u00e1fban (mint pl. Linux alatt a gy\u00f6k\u00e9r k\u00f6nyvt\u00e1r). Ennek az elemnek a gyereke az XML gy\u00f6kere, majd a t\u00f6bb elem, de megjelennek az attrib\u00fatumok \u00e9s az elemek \u00e9rt\u00e9kei. Emellett a megjegyz\u00e9sek, feldolgoz\u00e1si utas\u00edt\u00e1sok, n\u00e9vterek is r\u00e9szei a f\u00e1nak, de ezekkel most nem foglalkozunk, XPath szempontj\u00e1b\u00f3l hasonl\u00f3ak.</p> <p></p>"},{"location":"legacy/13_gyakorlat/#eleresi-utvonalak-tengelyek-kivalasztas","title":"El\u00e9r\u00e9si \u00fatvonalak, tengelyek, kiv\u00e1laszt\u00e1s","text":"<p>Egy el\u00e9r\u00e9si \u00fatvonallal a f\u00e1ban egy vagy t\u00f6bb elemet jel\u00f6lhet\u00fcnk ki. Az el\u00e9r\u00e9si \u00fatvonalat k\u00e9tf\u00e9lek\u00e9ppen adhatjuk meg:</p> <ul> <li>Abszol\u00fat \u00fatvonallal: mindig a gy\u00f6k\u00e9rhez viszony\u00edtva adjuk meg. Ilyenkor <code>/</code> jellel kezd\u0151dik, p\u00e9ld\u00e1ul a <code>product</code> kijel\u00f6l\u00e9se: <code>/catalog/product</code></li> <li>Relat\u00edv \u00fatvonallal: amikor egy adott elemhez k\u00e9pest adjuk meg, p\u00e9ld\u00e1ul ha a <code>catalog</code> elemhez k\u00e9pest akarjuk megadni a <code>product</code>-ot, akkor el\u00e9g annyit \u00edrni, hogy <code>product</code>, de ha a <code>price</code>-t akarjuk, akkor kijel\u00f6lni, akkor <code>product/price</code> (hogy melyik, az majd k\u00e9s\u0151bb)</li> </ul> <p>A tengelyek seg\u00edts\u00e9g\u00e9vel egy adott elemhez k\u00e9pest jel\u00f6lhet\u00fcnk ki elemeket. N\u00e9h\u00e1ny fontosabb tengely, \u00e9s hogy mely elemeket jel\u00f6lik ki a <code>product</code> elemhez k\u00e9pest (illetve a r\u00f6vid jel\u00f6l\u00e9s\u00fck, ha van ilyen):</p> <ul> <li>self: \u00f6nmaga, azaz mag\u00e1t az elemet jel\u00f6li ki<ul> <li>a <code>product</code> eset\u00e9ben ez a <code>product</code> lesz</li> <li><code>self, vagy r\u00f6viden csak</code>.`</li> </ul> </li> <li>parent: az adott elem sz\u00fcl\u0151je<ul> <li>a <code>product</code> eset\u00e9ben a sz\u00fcl\u0151 a <code>catalog</code></li> <li><code>parent</code>, r\u00f6viden csak <code>..</code></li> </ul> </li> <li>child: az adott elem gyereke(i)<ul> <li>a <code>product</code>  eset\u00e9ben t\u00f6bb gyerek is van, a <code>price</code>  \u00e9s a <code>discount</code></li> <li><code>child</code> vagy r\u00f6viden csak az adott t\u00edpus\u00fa gyerek, azaz <code>child::price</code> helyett csak <code>price</code></li> </ul> </li> <li>attribute: az adott elem attrib\u00fatuma(i)<ul> <li>a <code>product</code> eset\u00e9ben a <code>code</code></li> <li><code>attribute::code</code> helyett el\u00e9g csak annyit \u00edrni, hogy <code>@code</code></li> </ul> </li> <li>descendant-or-self: az adott elem \u00e9s a lesz\u00e1rmazottai<ul> <li>a <code>productt</code> eset\u00e9ben a <code>product</code> \u00f6nmaga, \u00e9s minden lesz\u00e1rmazott elem (<code>price</code>, <code>discount</code>, <code>amount</code>)</li> <li>p\u00e9ld\u00e1ul, ha a lesz\u00e1rmazottak k\u00f6z\u00f6tt a <code>price</code>-ra vagyunk k\u00edv\u00e1ncsiak, akkor a <code>/descendant-or-self()/price</code> hivatkoz\u00e1st kell haszn\u00e1lni, vagy r\u00f6viden a <code>//price</code> jel\u00f6l\u00e9st</li> </ul> </li> <li>Tov\u00e1bbi tengelyek: <ul> <li>ancestors, ancestor-or-self, descendant, following, following-sibling, namespace, preceding, preceding-sibling</li> </ul> </li> </ul>"},{"location":"legacy/13_gyakorlat/#elemek-kivalasztasa","title":"Elemek kiv\u00e1laszt\u00e1sa","text":"<p>\u00datvonalak seg\u00edts\u00e9g\u00e9vel a fent le\u00edrt m\u00f3don, azaz p\u00e9ld\u00e1ul az \u00f6sszes <code>price</code> elem kiv\u00e1laszt\u00e1sa a <code>//price</code> seg\u00edts\u00e9g\u00e9vel tehet\u0151 meg. Azonban lehet egy\u00e9b lehet egy\u00e9b felt\u00e9teleket is meg megfogalmazni, \u00e1ltal\u00e1nosan a a k\u00e9plet <code>axis::node-test[predicate]</code> alakban \u00edrhat\u00f3 fel, ahol a predicate a felt\u00e9teleket jelenti. Ezekre n\u00e9h\u00e1ny p\u00e9lda:</p> <ul> <li>Azon <code>product</code> elemek kiv\u00e1laszt\u00e1sa, amelynek van k\u00f3d attrib\u00fatuma, \u00e9s annak az \u00e9rt\u00e9ke 123 a  <code>//product[@code=\"123\"]</code> kifejez\u00e9ssel v\u00e1laszthat\u00f3 ki, azaz az attrib\u00fatum \u00e9rt\u00e9k\u00e9re a a felt\u00e9telt a <code>[@attr=\"ertek\"]</code> mondja meg</li> <li>Ha azokat szeretn\u00e9nk kiv\u00e1lasztani, amelyeknek van <code>code</code> attrib\u00fatuma, de az \u00e9rt\u00e9ke mindegy, akkor a  <code>//product[@code]</code> kifejez\u00e9st kell haszn\u00e1lni, azaz attrib\u00fatum l\u00e9tez\u00e9s\u00e9re a felt\u00e9tel <code>[@attr]</code></li> <li>Ha az utols\u00f3 <code>product</code> elemet akarjuk kijel\u00f6lni, akkor a <code>product[last()]</code> seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg, de ha p\u00e9ld\u00e1ul a harmadikat, akkor <code>product[3]</code> a megold\u00e1s</li> <li>De t\u00f6bb felt\u00e9telt is \u00f6ssze lehet f\u0171zni, pl. <code>product[last()][@code]</code> \u00e9s ilyenkor balr\u00f3l jobbra lesznek ki\u00e9rt\u00e9kelve</li> </ul> <p>Az el\u00e9r\u00e9si \u00fatvonalak csom\u00f3pont gy\u0171jtem\u00e9nyeket adnak vissza, amiket felhaszn\u00e1lhatunk k\u00fcl\u00f6nb\u00f6z\u0151 m\u00f3don:</p> <ul> <li>\u00d6ssze lehet f\u0171zni, azaz ha egy XML-ben <code>cd</code> \u00e9s <code>dvd</code>vegyesen szerepel, akkor az \u00f6sszes <code>cd</code> vagy <code>dvd</code> kijel\u00f6l\u00e9se <code>cd | dvd</code>, azaz a <code>|</code> jellel lehet \u00f6sszef\u0171zni</li> <li>Meg is sz\u00e1molhatom az \u00f6sszes olyan <code>product</code> elemet, amelynek a k\u00f3dja legal\u00e1bb 500: <code>count(product[@code &gt;= 500])</code><ul> <li>De lehetne azon <code>price</code> elemeket is kiv\u00e1lasztani, ahol a <code>price</code> \u00e9rt\u00e9ke legal\u00e1bb 100: <code>/catalog/product[price &gt;= 100]/price</code></li> </ul> </li> <li>Kiv\u00e1laszthatom azokat az elemeket, amelyeknek a k\u00f3dja 500 \u00e9s 600 k\u00f6z\u00e9 esik: <code>product[@code &gt;500 and @code &lt;600]</code></li> <li>Sz\u00f6veges alap\u00fa sz\u0171r\u00e9sek is lehetnek, p\u00e9ld\u00e1ul azon v\u00e1s\u00e1rl\u00f3k kiv\u00e1laszt\u00e1sa, amelyeknek a neve \"dr\"-rel kezd\u0151dik: <code>customer[ starts-with(@name, \"dr\")]</code></li> </ul> <p>A teljess\u00e9g ig\u00e9nye n\u00e9lk\u00fcl csak n\u00e9h\u00e1ny p\u00e9ld\u00e1t mutattunk arra, hogy milyen lehet\u0151s\u00e9gek vannak csom\u00f3pontok kijel\u00f6l\u00e9s\u00e9re (tov\u00e1bbi p\u00e9ld\u00e1k), \u00e9s ezeket lehet kombin\u00e1lni is, pl. azon <code>price</code> elemeket is kiv\u00e1lasztani, ahol a <code>price</code> \u00e9rt\u00e9ke legal\u00e1bb 100: <code>/catalog/product[price &gt;= 100]/price</code></p>"},{"location":"legacy/13_gyakorlat/#xsl-extensible-stylesheet-language-transformations-xslt","title":"XSL (eXtensible Stylesheet Language) Transformations (XSLT)","text":"<p>Az XSL az az XML-hez tartoz\u00f3 style sheet, kb az, mint a CSS a HTML sz\u00e1m\u00e1ra. Az XSLT egy nyelv, amivel az XML dokumentumokat transzform\u00e1lni lehet:</p> <ul> <li> <p>XML-t XML-l\u00e9, ha p\u00e9ld\u00e1ul \u00e1t akarjuk alak\u00edtani (p\u00e9ld\u00e1ul a lenti k\u00e9t XML ugyanazt az inform\u00e1ci\u00f3 tartalmazza, csak m\u00e1s form\u00e1tumban), vagy valamilyen m\u0171veletet (sz\u0171r\u00e9s, sz\u00e1mol\u00e1s, \u00f6sszef\u0171z\u00e9s, stb.) is szeretn\u00e9nk v\u00e9gezni az adatokon.</p> <pre><code>&lt;employees&gt;\n&lt;employee&gt;\n&lt;name&gt;Reid&lt;/name&gt;\n&lt;salary&gt;91000&lt;/salary&gt;\n&lt;/employee&gt;\n...\n&lt;/employees&gt;\n</code></pre> <pre><code>&lt;staff&gt;\n&lt;staff-member name=\"Reid\" pay=\"91000\"/&gt;\n...\n&lt;/staff&gt;\n</code></pre> </li> </ul> <ul> <li> <p>XML-t HTML-l\u00e9 vagy m\u00e1s dokumentumm\u00e1 akarunk alak\u00edtani.</p> <pre><code>&lt;html&gt;\n  &lt;table&gt;\n    &lt;tr&gt;\n      &lt;td&gt;Reid&lt;/td&gt;\n      &lt;td&gt;91000&lt;/td&gt;\n    &lt;/tr&gt;\n    ...\n  &lt;/table&gt;\n&lt;/html&gt;\n</code></pre> </li> </ul>"},{"location":"legacy/13_gyakorlat/#xslt-szabalyok","title":"XSLT szab\u00e1lyok","text":"<p>A k\u00f6vetkez\u0151kben bemutatjuk, hogyan lehet megadni egy XSLT transzform\u00e1ci\u00f3t. Az eg\u00e9szet egy p\u00e9ld\u00e1n kereszt\u00fck fogjuk bemutatni, amikor is a c\u00e9l egy XML HTML-l\u00e9 konvert\u00e1l\u00e1sa lesz. A feladat a CD katal\u00f3gus XML \u00e1talak\u00edt\u00e1sa HTML-l\u00e9 a k\u00f6vetkez\u0151 szempontok szerint:</p> <ul> <li>A HTML oldal c\u00edme a <code>catalog</code> elem <code>name</code> attrib\u00fatum\u00e1nak az \u00e9rt\u00e9ke legyen</li> <li>\u00edrjuk ki, hogy h\u00e1ny CD van a katal\u00f3gusban</li> <li>A CD-k egy t\u00e1bl\u00e1zatban jelenjenek meg<ul> <li>Az <code>artist</code> szerint legyenek rendezve</li> <li>Az akci\u00f3s elemeknek piros legyen a h\u00e1ttere</li> <li>A CD \u00e1r\u00e1t Ft-ban adjuk meg</li> </ul> </li> </ul> <p>A CD katal\u00f3gus egy r\u00e9szlete:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;?xml-stylesheet type=\"text/xsl\" href=\"cd_catalog2Html.xsl\"?&gt;\n&lt;catalog name=\"My cds to sell\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:noNamespaceSchemaLocation=\"cd_catalog.xsd\"&gt;\n&lt;cd&gt;\n&lt;title&gt;Empire Burlesque&lt;/title&gt;\n&lt;artist&gt;Bob Dylan&lt;/artist&gt;\n&lt;country&gt;USA&lt;/country&gt;\n&lt;company&gt;Columbia&lt;/company&gt;\n&lt;price&gt;10.90&lt;/price&gt;\n&lt;year&gt;1985&lt;/year&gt;\n&lt;/cd&gt;\n&lt;cd&gt;\n&lt;title&gt;Hide your heart&lt;/title&gt;\n&lt;artist&gt;Bonnie Tyler&lt;/artist&gt;\n&lt;country&gt;UK&lt;/country&gt;\n&lt;company&gt;CBS Records&lt;/company&gt;\n&lt;price&gt;9.90&lt;/price&gt;\n&lt;year&gt;1988&lt;/year&gt;\n&lt;/cd&gt;\n...\n&lt;/catalog&gt;\n</code></pre> <p>Az XSLT is egy XML dokumentum, ahol az XSLT transzform\u00e1ci\u00f3t le\u00edr\u00f3 elemek/szab\u00e1lyok olyan elemek, amelyek az <code>xsl</code> n\u00e9vt\u00e9rben vannak, de emellett lehetnek tov\u00e1bbi elemek is, mint ahogy a p\u00e9ld\u00e1ban is lesznek majd HTML elemek is.</p> <pre><code>&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n...\n&lt;/xsl:stylesheet&gt;\n</code></pre> <p>A transzform\u00e1ci\u00f3 defini\u00e1l\u00e1sa nem m\u00e1s, mint XSLT szab\u00e1lyok megad\u00e1sa, melyek tetsz\u0151leges sorrendben v\u00e9grehajt\u00f3dhatnak. Az, hogy mire illeszkedik a transzform\u00e1land\u00f3 XML-ben, az XPath seg\u00edts\u00e9g\u00e9vel \u00edrhat\u00f3 le. A szab\u00e1lyokat a <code>&lt;xsl:template match=\"valami\"&gt;</code> seg\u00edt\u00e9s\u00e9vel adhatjuk meg, ahol a valami mondja meg, hogy mire illeszkedjen. P\u00e9ld\u00e1ul ha a gy\u00f6k\u00e9r elemre akarunk defini\u00e1lni egy szab\u00e1lyt, akkor az al\u00e1bbi m\u00f3don tehetj\u00fck meg:</p> <pre><code>&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n\n&lt;xsl:template match=\"/\"&gt;\n\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;CD katalogus&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\nTODO\n      &lt;/body&gt;\n&lt;/html&gt;\n\n&lt;/xsl:template&gt;\n\n&lt;/xsl:stylesheet&gt;\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban a gy\u00f6k\u00e9r elemre fog ,,v\u00e9grehajt\u00f3dni'' a szab\u00e1ly, aminek a belsej\u00e9ben egy HTML oldal k\u00f3dja l\u00e1that\u00f3, \u00e9s a v\u00e9grehajt\u00e1s itt azt jelenti majd, hogy azt a k\u00f3dot \"ki\u00edrja\", azaz a transzform\u00e1ci\u00f3 eredm\u00e9nye az a HTML oldal lesz.</p> <p>Ha egy adott XML elem \u00e9rt\u00e9k\u00e9t akarjuk kiolvasni az XSLT seg\u00edts\u00e9g\u00e9vel, akkor ezt a <code>&lt;xsl:value-of select=\"elem\"/&gt;</code> seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg. Ez kiolvassa az adott elem \u00e9rt\u00e9k\u00e9t, \u00e9s ,,be\u00edrja'' az adott helyre, azaz ha az oldal c\u00edm\u00e9nek a a katal\u00f3gus gy\u00f6k\u00e9r elem\u00e9nek a <code>name</code> attrib\u00fatum\u00e1t akarom megadni, akkor a k\u00f6vetkez\u0151 m\u00f3don kell kieg\u00e9sz\u00edteni a fenti p\u00e9ld\u00e1t:</p> <pre><code>  &lt;head&gt;\n&lt;title&gt;&lt;xsl:value-of select=\"catalog/@name\"/&gt;&lt;/title&gt;\n&lt;/head&gt;\n</code></pre> <p>Nem sz\u00fcks\u00e9ges abszol\u00fat \u00fatvonallal megadni a hivatkoz\u00e1st, mert a minta illeszt\u00e9sekor az adott elemen ,,\u00e1llunk'', ez\u00e9rt ahhoz k\u00e9pest relat\u00edv \u00fatvonallal is megadhatjuk. (Ha nem az XML elem \u00e9rt\u00e9k\u00e9t, hanem mag\u00e1t az XML elemet akarn\u00e1nk ki\u00edratni, akkor a <code>&lt;xsl:copy-of select=\"elem\"/&gt;</code> seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg, de ezt nem fogjuk haszn\u00e1lni a p\u00e9ld\u00e1ban.)</p> <p>A fenti megold\u00e1sban a gy\u00f6k\u00e9rre illeszked\u0151 mint\u00e1t defini\u00e1ltunk, de defini\u00e1lhatunk tov\u00e1bbi mint\u00e1kat is, \u00e9s azokra hivatkozhatunk, \u00edgy egy mint\u00e1t t\u00f6bbsz\u00f6r is fel lehet haszn\u00e1lni, illetve a k\u00f3d is \u00e1tl\u00e1that\u00f3 marad. A tov\u00e1bbi template-re val\u00f3 hivatkoz\u00e1st a <code>&lt;xsl:apply-templates select=\"elem\"/&gt;</code> seg\u00edts\u00e9g\u00e9vel adhatjuk meg.</p> <pre><code>&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n\n&lt;xsl:template match=\"/\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;&lt;xsl:value-of select=\"catalog/@name\"/&gt;&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;xsl:apply-templates select=\"catalog\"/&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n&lt;/xsl:template&gt;\n\n&lt;xsl:template match=\"catalog\"&gt;\nTODO\n  &lt;/xsl:template&gt;\n&lt;/xsl:stylesheet&gt;\n</code></pre> <p>A tov\u00e1bbi feladat a CD-khez elk\u00e9sz\u00edteni egy t\u00e1bl\u00e1zatot, aminek a fejl\u00e9c\u00e9t statikusan bele\u00edrhatjuk a transzform\u00e1ci\u00f3ba. Ezut\u00e1n a CD-ez kell bej\u00e1rni egy ,,for-ciklussal'' de \u00fagy, hogy az <code>artist</code> szerint legyenek rendezve. Erre egy lehets\u00e9ges megold\u00e1s, hogy defini\u00e1lunk egy szab\u00e1lyt a <code>cd</code>-re is, \u00e9s azt alkalmazzuk, de ett\u0151l m\u00e9g nem lesznek rendezve, ehhez meg kell adnunk, hogy az <code>artist</code> szerint rendezve alkalmazza a szab\u00e1lyt: <code>&lt;xsl:sort select=\"cd/artist\"/&gt;</code></p> <pre><code>  &lt;xsl:template match=\"catalog\"&gt;\n&lt;table border=\"1\"&gt;\n&lt;tr&gt;\n&lt;th&gt;El\u0151ad\u00f3&lt;/th&gt;&lt;th&gt;C\u00edm&lt;/th&gt;&lt;th&gt;Orsz\u00e1g&lt;/th&gt;&lt;th&gt;Megjelen\u00e9si \u00e9v&lt;/th&gt;&lt;th&gt;\u00c1r&lt;/th&gt;\n&lt;/tr&gt;\n&lt;xsl:apply-templates select=\"cd\"&gt;\n&lt;xsl:sort select=\"cd/artist\"/&gt;\n&lt;/xsl:apply-templates&gt;\n&lt;/table&gt;\n&lt;/xsl:template&gt;\n\n&lt;xsl:template match=\"cd\"&gt;\nTODO\n  &lt;/xsl:template&gt;\n</code></pre> <p>Minden egyes <code>cd</code> eset\u00e9ben egy \u00faj sort sz\u00farunk be a t\u00e1bl\u00e1zatba, ahol a sor piros h\u00e1tteret kap, ha az adott cd akci\u00f3s. Ehhez egy felt\u00e9telt kell megvizsg\u00e1lnunk, amit a mi eset\u00fcnkben a <code>&lt;xsl:if test=\"price/@discount\"&gt;</code> seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg, majd be\u00e1ll\u00edtjuk a bgcolor \u00e9rt\u00e9k\u00e9t, ha a felt\u00e9tel igaz (azaz a <code>price</code>-nak van <code>discount</code> attrib\u00fatuma).</p> <pre><code>    &lt;tr&gt;\n&lt;xsl:if test=\"price/@discount\"&gt;\n&lt;xsl:attribute name=\"bgcolor\"&gt;  &lt;xsl:value-of select=\"'#FF9999'\"/&gt;\n&lt;/xsl:attribute&gt;\n&lt;/xsl:if&gt;\n...\n    &lt;/tr&gt;\n</code></pre> <p>A t\u00f6bbi \u00e9rt\u00e9k be\u00edr\u00e1sa a t\u00e1bl\u00e1zatba m\u00e1r ,,nem neh\u00e9z''. Annyit m\u00e9g megtesz\u00fcnk, hogy a doll\u00e1rban megadott \u00e1rat \u00e1tkonvert\u00e1ljuk forintra 320Ft/$ \u00e1rfolyamon \u00e9s az \u00e9vsz\u00e1mot k\u00f6z\u00e9pre igaz\u00edtjuk.</p> <pre><code>  &lt;xsl:template match=\"cd\"&gt;\n\n&lt;tr&gt;    &lt;xsl:if test=\"price/@discount\"&gt;\n&lt;xsl:attribute name=\"bgcolor\"&gt;  &lt;xsl:value-of select=\"'#FF9999'\"/&gt;\n&lt;/xsl:attribute&gt;\n&lt;/xsl:if&gt;\n\n&lt;td&gt;&lt;xsl:value-of select=\"artist\"/&gt;&lt;/td&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"title\"/&gt;&lt;/td&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"country\"/&gt;&lt;/td&gt;\n\n&lt;td align=\"center\"&gt;&lt;xsl:value-of select=\"year\"/&gt;&lt;/td&gt;\n&lt;xsl:variable name=\"usprice\" select=\"price\"/&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"format-number($usprice * 184, '#')\"/&gt; FT&lt;/td&gt;\n&lt;/tr&gt;\n\n&lt;/xsl:template&gt;\n</code></pre> <p>A teljes megold\u00e1s egyben:</p> <pre><code>&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n\n&lt;xsl:template match=\"/\"&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n&lt;title&gt;&lt;xsl:value-of select=\"catalog/@name\"/&gt;&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;b&gt;A catal\u00f3gusban szerepl\u0151 cikkek sz\u00e1ma:\n           &lt;xsl:value-of select=\"count(catalog/cd)\"/&gt;\n&lt;/b&gt;\n&lt;xsl:apply-templates select=\"catalog\"/&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n&lt;/xsl:template&gt;\n\n&lt;xsl:template match=\"catalog\"&gt;\n&lt;table border=\"1\"&gt;\n&lt;tr&gt;\n&lt;th&gt;El\u0151ad\u00f3&lt;/th&gt;&lt;th&gt;C\u00edm&lt;/th&gt;&lt;th&gt;Orsz\u00e1g&lt;/th&gt;&lt;th&gt;Megjelen\u00e9si \u00e9v&lt;/th&gt;&lt;th&gt;\u00c1r&lt;/th&gt;\n&lt;/tr&gt;\n&lt;xsl:apply-templates select=\"cd\"&gt;\n&lt;xsl:sort select=\"cd/artist\"/&gt;\n&lt;/xsl:apply-templates&gt;\n&lt;/table&gt;\n&lt;/xsl:template&gt;\n\n\n&lt;xsl:template match=\"cd\"&gt;\n\n&lt;tr&gt;    &lt;xsl:if test=\"price/@discount\"&gt;\n&lt;xsl:attribute name=\"bgcolor\"&gt;  &lt;xsl:value-of select=\"'#FF9999'\"/&gt;\n&lt;/xsl:attribute&gt;\n&lt;/xsl:if&gt;\n\n&lt;td&gt;&lt;xsl:value-of select=\"artist\"/&gt;&lt;/td&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"title\"/&gt;&lt;/td&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"country\"/&gt;&lt;/td&gt;\n\n&lt;td align=\"center\"&gt;&lt;xsl:value-of select=\"year\"/&gt;&lt;/td&gt;\n&lt;xsl:variable name=\"usprice\" select=\"price\"/&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"format-number($usprice * 184, '#')\"/&gt; FT&lt;/td&gt;\n&lt;/tr&gt;\n\n&lt;/xsl:template&gt;\n\n&lt;/xsl:stylesheet&gt;\n</code></pre>"},{"location":"legacy/13_gyakorlat/#gyakorlati-resz","title":"Gyakorlati r\u00e9sz","text":"<p>Hogyan tudom ezt kipr\u00f3b\u00e1lni? Automatikus a transzform\u00e1ci\u00f3?</p>"},{"location":"legacy/13_gyakorlat/#bongeszo","title":"B\u00f6ng\u00e9sz\u0151","text":"<p>Ha az XML dokumentum elej\u00e9n meg van adva, hogy milyen transzform\u00e1ci\u00f3t kell alkalmazni a megjelen\u00edt\u00e9sn\u00e9l, akkor ,,automatikusan v\u00e9grehajt\u00f3dik''.</p> <pre><code>&lt;catalog name=\"My cds to sell\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:noNamespaceSchemaLocation=\"cd_catalog.xsd\"&gt;\n</code></pre> <p>Azonban ez a gyakorlatban nem m\u0171k\u00f6dik, mert a b\u00f6ng\u00e9sz\u0151k biztons\u00e1gi okokb\u00f3l tiltj\u00e1k a lok\u00e1lis f\u00e1jlok hozz\u00e1f\u00e9r\u00e9st. Ha ezt kikapcsoljuk, akkor m\u0171k\u00f6dik, hogy ,,bet\u00f6lt\u00e9skor'' (drag&amp;drop a f\u00e1jlt a b\u00f6ng\u00e9sz\u0151re) a transzform\u00e1lt v\u00e1ltozat jelenik meg. Ahhoz, hogy ezt ki lehessen pr\u00f3b\u00e1lni pl. Chrome alatt, a Chrome-ot a <code>\u2013allow-file-access-from-files</code> param\u00e9terrel kell elind\u00edtani.</p> <p></p>"},{"location":"legacy/13_gyakorlat/#visual-studio","title":"Visual Studio","text":"<p>Lehet\u0151s\u00e9g van a Visual Studioba is bet\u00f6lteni \u00e9s v\u00e9grehajtani a transzform\u00e1ci\u00f3t. Ehhez nyissuk meg a transzform\u00e1ci\u00f3s f\u00e1jl VS-ben, \u00e9s a a f\u00e1jl van kiv\u00e1lasztva, akkor a men\u00fcsorban megjelenik egy XML men\u00fcpont is. Itt el tudjuk ind\u00edtani a transzform\u00e1ci\u00f3t debug-gal vagy an\u00e9lk\u00fcl. Ehhez ki kell v\u00e1lasztani a transzform\u00e1land\u00f3 XML-t, majd lefut r\u00e1 a transzform\u00e1ci\u00f3 \u00e9s az eredm\u00e9ny megjelenik a VS-ben. Lehet\u0151s\u00e9g van break point-ok besz\u00far\u00e1s\u00e1ba is, \u00e9s akkor l\u00e9p\u00e9sr\u0151l l\u00e9p\u00e9sre tudjuk k\u00f6vetni a transzform\u00e1ci\u00f3t, l\u00e1tjuk hol \u00e1llunk a f\u00e1ban, ... Ekkor a m\u00e1r elk\u00e9sz\u00fcl \u00e9s \u00e9rtelmezhet\u0151 kimenet m\u00e1r megjelenik.</p> <p></p> <p>Forr\u00e1s: a fenti p\u00e9lda \u00e9s tov\u00e1bbi r\u00e9szletek a https://www.w3schools.com/xml/xsl_intro.asp\u00a0oldalon \u00e9rhet\u0151ek el.</p>"},{"location":"misc/generics/","title":"Java generikusok","text":""},{"location":"misc/generics/#motivacio","title":"Motiv\u00e1ci\u00f3","text":"<p>Nagyobb alkalmaz\u00e1sok fejleszt\u00e9sekor elker\u00fclhetetlen, hogy hib\u00e1kba \u00fctk\u00f6zz\u00fcnk. Hi\u00e1ba a gondos tervez\u00e9s \u00e9s a sok-sok tesztel\u00e9s, valahogy \u00fagyis \u00fatat tal\u00e1lnak maguknak. Szerencs\u00e9re n\u00e9h\u00e1ny hib\u00e1t egyszer\u0171bb megtal\u00e1lni, mint m\u00e1sokat. Ilyen hib\u00e1k p\u00e9ld\u00e1ul a ford\u00edt\u00e1si id\u0151ben \u00e9szlelhet\u0151 hib\u00e1k. A generikusok haszn\u00e1lat\u00e1val pr\u00f3b\u00e1lunk min\u00e9l t\u00f6bb fut\u00e1si idej\u0171 hib\u00e1t ford\u00edt\u00e1s k\u00f6zben detekt\u00e1lhat\u00f3v\u00e1, \u00edgy k\u00f6nnyeben jav\u00edthat\u00f3v\u00e1 tenni.</p>"},{"location":"misc/generics/#bevezetes","title":"Bevezet\u00e9s","text":"<p>A generikusok haszn\u00e1lat\u00e1val t\u00edpus param\u00e9tereket adhatunk meg oszt\u00e1lyokhoz, interface-ekhez, illetve met\u00f3dusokhoz. T\u00edpus param\u00e9ter...</p> <p>T\u00edpus param\u00e9ter...</p> <p>T\u00edpus param\u00e9ter...</p> <p>Ez a kulcs mondat. J\u00f3l jegyezz\u00fck meg.</p> <p>Az el\u0151ny amelyet behoznak az, hogy er\u0151s t\u00edpus ellen\u0151rz\u00e9sket tud v\u00e9gezni a ford\u00edt\u00f3, \u00edgy m\u00e1r \u0151 tudja jelezni, ha a t\u00edpusokkal valami nincs rendben. Ezen fel\u00fcl rengeteg castol\u00e1st\u00f3l szabad\u00edt meg minket, mely igencsak rontja a k\u00f3d olvashat\u00f3s\u00e1g\u00e1t.</p> <p>Vegy\u00fcnk egy egyszer\u0171 p\u00e9ld\u00e1t:</p> <pre><code>List list = new ArrayList();\nlist.add(\"hello\");\nString s = (String) list.get(0);\n</code></pre> <p>Ez a j\u00f3l ismert List, melyet rem\u00e9lem, hogy senki nem haszn\u00e1l \u00edgy... A list\u00e1ba beletessz\u00fck a \"hello\" sz\u00f6veget. Amikor el akarjuk k\u00e9rni a list\u00e1b\u00f3l a 0. elemet, azaz az im\u00e9nt berakott <code>String</code>-et akkor \u00e1t kell alak\u00edtanunk <code>String</code>-\u00e9, hiszen a <code>List</code> nem tud semmit arr\u00f3l, hogy milyen objektumokat szeretn\u00e9nk belepakolni (egyszer\u0171en <code>Object</code>-eket t\u00e1rol).</p> <p>Ugyanez a k\u00f3d \u00fajra\u00edrva, imm\u00e1r generikusok haszn\u00e1lat\u00e1val.</p> <pre><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;();\nlist.add(\"hello\");\nString s = list.get(0); </code></pre> <p>Mivel a <code>List</code>-nek megmondtuk a '&lt;&gt;' jelek k\u00f6z\u00f6tt, hogy String-eket akarunk t\u00e1rolni, ez\u00e9rt tudja, hogy amikor a 0. elemet k\u00e9rem el akkor az egy <code>String</code> t\u00edpus\u00fa objektum lesz. Tov\u00e1bb\u00e1 a hozz\u00e1ad\u00e1skor nem is engedi, hogy <code>String</code> helyett valami m\u00e1s elemet rakjak bele.</p> <p>A generikusok haszn\u00e1lat\u00e1val \u00e1ltal\u00e1nos \u00e9rv\u00e9ny\u0171 algoritmusokat is implement\u00e1lhatunk, melyek k\u00fcl\u00f6nb\u00f6z\u0151 t\u00edpus\u00fa elemekre egyar\u00e1nt m\u0171k\u00f6dnek, nem kell az algoritmust mindre meg\u00edrni. P\u00e9ld\u00e1ul: <code>Collections.sort()</code>.</p>"},{"location":"misc/generics/#generikus-tipusok","title":"Generikus t\u00edpusok","text":"<p>Egy generikus t\u00edpus olyan oszt\u00e1ly vagy interface, mely generikus t\u00edpusparam\u00e9terrel rendelkezik.</p> <p>Egyszer\u0171 doboz oszt\u00e1ly p\u00e9lda. El\u0151sz\u00f6r generikusok n\u00e9lk\u00fcl:</p> <pre><code>public class Box {\nprivate Object object;\n\npublic void set(Object object) { this.object = object; }\npublic Object get() { return object; }\n}\n</code></pre> <p>A doboz b\u00e1rmilyen objektumot k\u00e9pes elt\u00e1rolni. Ez menet k\u00f6zben hib\u00e1khoz vezethet, ha valamilyen felt\u00e9telez\u00e9sekkel el\u00fcnk arr\u00f3l, hogy milyen t\u00edpus\u00fa elem van \u00e9ppen a dobozban.</p> <p>Generikus oszt\u00e1lyk\u00e9nt:</p> <pre><code>public class Box&lt;T&gt; {\nprivate T t;\n\npublic void set(T t) { this.t = t; }\npublic T get() { return t; }\n}\n</code></pre> <p>Az oszt\u00e1ly defin\u00edci\u00f3j\u00e1t lecser\u00e9lt\u00fck a k\u00f6vetkez\u0151re: <code>public class Box&lt;T&gt;</code>. Itt jelenik meg el\u0151sz\u00f6r a <code>T</code> t\u00edpus param\u00e9ter. Ezen a ponton mondjuk azt, hogy a Box oszt\u00e1ly v\u00e1r egy t\u00edpus param\u00e9tert is. A <code>T</code> t\u00edpus param\u00e9ter ezek ut\u00e1n b\u00e1rhol haszn\u00e1lhat\u00f3 az oszt\u00e1lyon bel\u00fcl. A fenti p\u00e9ld\u00e1ban az <code>Object</code> minden el\u0151fordul\u00e1s\u00e1t <code>T</code>-re cser\u00e9lj\u00fck, azaz nem <code>Object</code>-eket fog t\u00e1rolni az oszt\u00e1ly, hanem olyan elemet melyet megadnak a Box konstruktor\u00e1ban.</p> <p>A t\u00edpus param\u00e9tereket \u00e1ltal\u00e1ban egy nagy bet\u0171vel szoktuk jel\u00f6lni. A <code>T</code> a type sz\u00f3b\u00f3l j\u00f6n, de ezen fel\u00fcl haszn\u00e1latos p\u00e9ld\u00e1ul a K (Key), E (Element), V (Value), N (Number).</p> <p>A fenti oszt\u00e1ly haszn\u00e1lata igen egyszer\u0171:</p> <pre><code>Box&lt;Integer&gt; integerBox = new Box&lt;Integer&gt;();\n</code></pre> <p>Ez deklar\u00e1l egy integerBox nev\u0171 v\u00e1ltoz\u00f3t, mely ahogy neve mutatja, <code>Integer</code> elemet k\u00e9pes t\u00e1rolni. A konstruktor h\u00edv\u00e1s\u00e1val le is p\u00e9ld\u00e1nyos\u00edtun egy ilyen objektumot.</p> <p>A 7-es Java verzi\u00f3val megjelent a diamond oper\u00e1tor, melynek k\u00f6sz\u00f6nhet\u0151en nem kell ki\u00edrni a t\u00edpus param\u00e9tert a konstruktor h\u00edv\u00e1sba, ha a t\u00edpus param\u00e9ter a k\u00f6rnyezet alapj\u00e1n kik\u00f6vetkeztethet\u0151. A fenti p\u00e9ld\u00e1nyos\u00edt\u00e1s pontosan egy ilyen helyzet, \u00edgy haszn\u00e1ljuk a diamond oper\u00e1tort:</p> <pre><code>Box&lt;Integer&gt; integerBox = new Box&lt;&gt;();\n</code></pre> <p>Amennyiben t\u00f6bb t\u00edpus param\u00e9tert szeretn\u00e9nk haszn\u00e1lni egy oszt\u00e1lyban, interface-ben, akkor a t\u00edpus param\u00e9tereket vessz\u0151vel v\u00e1lasszuk el egym\u00e1st\u00f3l. \u00c1ltal\u00e1nos megad\u00e1si m\u00f3d:</p> <pre><code>class name&lt;T1, T2, ..., Tn&gt; { /* ... */ }\n</code></pre> <p>L\u00e1ssunk egy p\u00e9ld\u00e1t!</p> <pre><code>public class Pair&lt;K, V&gt; {\n\nprivate K key;\nprivate V value;\n\npublic Pair(K key, V value) {\nthis.key = key;\nthis.value = value;\n}\n\npublic K getKey()   { return key; }\npublic V getValue() { return value; }\n}\n</code></pre> <p>P\u00e9lda haszn\u00e1latra: <pre><code>    Pair&lt;String, Integer&gt; p1 = new Pair&lt;&gt;(\"Even\", 8);\nPair&lt;Integer, Integer&gt; p1 = new Pair&lt;&gt;(42, 999);\n</code></pre></p> <p>A haszn\u00e1latkor egy t\u00edpus megad\u00e1sakor haszn\u00e1lhatunk egy tov\u00e1bbi param\u00e9terezett t\u00edpust. Pl:</p> <pre><code>Pair&lt;String, Box&lt;Integer&gt;&gt; p1 = new Pair&lt;&gt;(\"key\", new Box&lt;Intger&gt;());\n</code></pre>"},{"location":"misc/generics/#raw-type","title":"Raw type","text":"<p>Amikor nem adunk meg egy generikusan meg\u00edrt oszt\u00e1lynak t\u00edpusparam\u00e9tert, akkor \u00fagynvezett raw type-ot kapunk eredm\u00e9ny\u00fcl. Pl. a <code>Box</code> t\u00edpusparam\u00e9ter n\u00e9lk\u00fcl: <pre><code>Box b = new Box();\n</code></pre> Ebben az esetben a <code>Box</code> Object-eket fog t\u00e1rolni. Ez legink\u00e1bb a 1.5-\u00f6s Java el\u0151tti Java verzi\u00f3kkal val\u00f3 kompatibilit\u00e1s miatt van. Ha lehet akkor ker\u00fclj\u00fck ennek haszn\u00e1lat\u00e1t!</p>"},{"location":"misc/generics/#generikus-metodusok","title":"Generikus met\u00f3dusok","text":"<p>Hasonl\u00f3, mint amikor egy oszt\u00e1lyra adjuk meg a generikus param\u00e9tert, itt viszont csak a met\u00f3duson bel\u00fcl fog \u00e9lni a t\u00edpusparam\u00e9ter\u00fcnk. Haszn\u00e1lhatjuk statikus \u00e9s nem statikus met\u00f3dusokra is egyar\u00e1nt. A t\u00edpusparam\u00e9tereket a visszat\u00e9r\u00e9si t\u00edpus megad\u00e1sa el\u0151tt kell megadni kisebb, nagyobb jelek k\u00f6z\u00f6tt: <pre><code>public class Util {\npublic static &lt;K, V&gt; boolean compare(Pair&lt;K, V&gt; p1, Pair&lt;K, V&gt; p2) {\nreturn p1.getKey().equals(p2.getKey()) &amp;&amp;\np1.getValue().equals(p2.getValue());\n}\n}\n</code></pre></p> <p>A fenti compare megh\u00edv\u00e1sa a k\u00f6vetkez\u0151k\u00e9ppen t\u00f6rt\u00e9nik: <pre><code>Pair&lt;Integer, String&gt; p1 = new Pair&lt;&gt;(1, \"apple\");\nPair&lt;Integer, String&gt; p2 = new Pair&lt;&gt;(2, \"pear\");\nboolean same = Util.&lt;Integer, String&gt;compare(p1, p2);\n</code></pre> Azonban a p1, p2 param\u00e9ter t\u00edpus\u00e1b\u00f3l a ford\u00edt\u00f3 ki tudja k\u00f6vetkeztetni a compare t\u00edpusparam\u00e9tereit, \u00edgy ezeket el is hagyhatjuk: <pre><code>boolean same = Util.compare(p1, p2);\n</code></pre></p>"},{"location":"misc/generics/#tipus-parameter-megszoritasok-bound-type-parameters","title":"T\u00edpus param\u00e9ter megszor\u00edt\u00e1sok (Bound Type Parameters)","text":"<p>Van amikor korl\u00e1tozni akarjuk a t\u00edpus param\u00e9terek lehets\u00e9ges \u00e9rt\u00e9keit. P\u00e9ld\u00e1ul lehet hogy egy f\u00fcggv\u00e9ny csak sz\u00e1mokon dolgozik, ez\u00e9rt le akarjuk korl\u00e1tozni, hogy csak <code>Number</code>-b\u0151l sz\u00e1rmaz\u00f3 osz\u00e1lyt adhassunk \u00e1t. Ez egy fels\u0151 korl\u00e1tot hat\u00e1roz meg. Ennek megad\u00e1s\u00e1hoz az extends kulcssz\u00f3t kell haszn\u00e1lnunk! T\u00edpus param\u00e9ter megszor\u00edt\u00e1sn\u00e1l az extends \u00e1ltal\u00e1nosan haszn\u00e1ladnd\u00f3 class-ra \u00e9s interface-re is (interface-re nem az implements-et kell haszn\u00e1lni).</p> <pre><code>public class Box&lt;T&gt; {\n\nprivate T t;          public void set(T t) {\nthis.t = t;\n}\n\npublic T get() {\nreturn t;\n}\n\npublic &lt;U extends Number&gt; void inspect(U u){\nSystem.out.println(\"T: \" + t.getClass().getName());\nSystem.out.println(\"U: \" + u.getClass().getName());\n}\n\npublic static void main(String[] args) {\nBox&lt;Integer&gt; integerBox = new Box&lt;Integer&gt;();\nintegerBox.set(new Integer(10));\nintegerBox.inspect(\"some text\"); // Hiba\n}\n}\n</code></pre> <p>Az inspect egyszer\u0171en ki\u00edrja a t \u00e9s az u param\u00e9ter t\u00edpusait, viszont megszor\u00edtjuk, hogy az u nem lehet csak a Number oszt\u00e1ly lesz\u00e1rmazott oszt\u00e1ly\u00e1nak objektuma. Ez a jelleg\u0171 megszor\u00edt\u00e1s az\u00e9rt is lehet j\u00f3, mert ha tudjuk a korl\u00e1tot, akkor tudjuk haszn\u00e1lni a fels\u0151 korl\u00e1t met\u00f3dusait. A fenti p\u00e9ld\u00e1ban haszn\u00e1lhatn\u00e1nk az <code>intValue()</code> met\u00f3dust p\u00e9ld\u00e1ul, hiszen azt minden <code>Number</code> t\u00edpus\u00fa objektum tudja.</p> <p>Egy t\u00edpusparam\u00e9ternek lehet t\u00f6bb megszor\u00edt\u00e1sa is: <pre><code>&lt;T extends B1 &amp; B2 &amp; B3&gt;\n</code></pre></p> <p>Ha a t\u00edpus param\u00e9ter megszor\u00edt\u00e1sai k\u00f6z\u00f6tt van oszt\u00e1ly, akkor azt kell els\u0151nek megadni.</p>"},{"location":"misc/generics/#pelda-tipusmegszoritasra","title":"P\u00e9lda t\u00edpusmegszor\u00edt\u00e1sra","text":"<p>A feladatunk, hogy egy <code>T</code> t\u00edpus\u00fa t\u00f6mbben megsz\u00e1moljuk, hogy h\u00e1ny olyan elem van, amelyik nagyobb a egy bizonyos megadott \u00e9rt\u00e9kn\u00e9l (szint\u00e9n <code>T</code> t\u00edpus\u00fa).</p> <pre><code>public static &lt;T&gt; int countIfGreater(T[] array, T threshold){\nint count = 0;\nfor(T item : array){\nif(item &gt; threshold){ // error\ncount++;\n}\n}\nreturn count;\n}\n</code></pre> <p>A fenti p\u00e9ld\u00e1ban hib\u00e1t kapunk az \u00f6sszehasonl\u00edt\u00e1sn\u00e1l, mivel a <code>&gt;</code> logikai oper\u00e1tor nincs \u00e9rtelmezve csak a primit\u00edv t\u00edpusokra (int, double, float, ...). Emiatt valami m\u00e1st kellene haszn\u00e1lnunk. Pontosan erre van kital\u00e1lva a <code>Comparable</code> interface, ami valahogy \u00edgy n\u00e9z ki:</p> <pre><code>public interface Comparable&lt;T&gt; {\npublic int compareTo(T o);\n}\n</code></pre> <p>A compareTo-nak az implement\u00e1l\u00f3 oszt\u00e1lyokban <code>-1</code>-et kell visszadniuk, ha saj\u00e1t \u00e9rt\u00e9ke kisebb, mint a param\u00e9ter\u00fcl kapott, 0-t ha megegyezik azzal, \u00e9s <code>+1</code>-et ha nagyobb ann\u00e1l. A <code>Comparable</code> interf\u00e9szt a fenti p\u00e9ld\u00e1ban t\u00f6k\u00e9letesen felhaszn\u00e1lhatjuk:</p> <pre><code>public static &lt;T extends Comparable&lt;T&gt;&gt; int countIfGreater(T[] array, T threshold){\nint count = 0;\nfor(T item : array){\nif(item.compareTo(threshold) &gt; 0){\ncount++;\n}\n}\nreturn count;\n}\n</code></pre>"},{"location":"misc/generics/#wildcards","title":"Wildcards","text":"<p>Java generikus k\u00f3dban a <code>?</code>-et h\u00edvj\u00e1k wildcard-nak, ami egy ismeretlen t\u00edpust reprezent\u00e1l. </p>"},{"location":"misc/generics/#felso-korlatos-wildcard","title":"Fels\u0151 korl\u00e1tos wildcard","text":"<p>Ahhoz, hogy meg\u00e9rts\u00fck ezt a r\u00e9szt, elengedhetetlen a k\u00f6vetkez\u0151t tudni: P\u00e9ld\u00e1ul a <code>Number</code> oszt\u00e1ly gyereke az <code>Integer</code>, de a <code>List&lt;Number&gt;</code>-nek nem gyereke a <code>List&lt;Integer&gt;</code>. Ezt nagyon v\u00e9ss\u00fck az agyunkba. Tekints\u00fck p\u00e9ld\u00e1ul a k\u00f6vetkez\u0151 k\u00f3dot: </p> <pre><code>public static void print(List&lt;Number&gt; list){\nlist.forEach(item -&gt; System.out.println( item ) );\n}\n\npublic static void main(String[] args) {\nList&lt;Integer&gt; test = new ArrayList&lt;&gt;();\nprint(test); // error\n}\n</code></pre> <p>A <code>print</code> megh\u00edv\u00e1sa ebben az esetben hib\u00e1t fog dobni. Ennek megold\u00e1s\u00e1ra m\u00e1r l\u00e1ttunk egy lehet\u0151s\u00e9get, haszn\u00e1ljunk generikus met\u00f3dust:</p> <pre><code>public static &lt;T extends Number&gt; void print(List&lt;T&gt; list){\nlist.forEach(item -&gt; System.out.println( item ) );\n}\n</code></pre> <p>Ez egy teljesen j\u00f3 megold\u00e1s, viszont tal\u00e1n kicsit nehezebb olvasni, mint a k\u00f6vetkez\u0151t:</p> <pre><code>public static void print(List&lt;? extends Number&gt; list){\nlist.forEach(item -&gt; System.out.println( item ) );\n}\n</code></pre> <p>A fenti k\u00f3dban a <code>?</code> jelenti az ismeretlen t\u00edpust. Itt maga a met\u00f3dus nem lesz generikus, csak a param\u00e9terre tesz\u00fcnk megk\u00f6t\u00e9seket, hogy amit list\u00e1t kapunk, annak az elemeinek bizony <code>Number</code>-nek vagy annak lesz\u00e1rmazottainak kell lennie. M\u00e9g egyszer felh\u00edvn\u00e1m a figyelmet, hogy a <code>List&lt;Number&gt;</code>-nek nem lesz\u00e1rmazottja a <code>List&lt;Integer&gt;</code>.</p>"},{"location":"misc/generics/#de-akkor-mikor-hasznaljak-generikus-metodust-es-mikor-wildcardot","title":"De akkor mikor haszn\u00e1ljak generikus met\u00f3dust \u00e9s mikor wildcardot?","text":"<p>Vegy\u00fck a k\u00f6vetkez\u0151 probl\u00e9m\u00e1t: \u00e1t akarunk m\u00e1solni egy list\u00e1b\u00f3l elemeket egy m\u00e1sik list\u00e1ba \u00e9s biztos\u00edtani szeretn\u00e9nk, hogy a forr\u00e1s \u00e9s a c\u00e9l lista t\u00edpusa megegyezik, hogy k\u00f6zben megszor\u00edt\u00e1st is szeretn\u00e9nk tenni (mondjuk a lista elemei a Number-b\u0151l sz\u00e1rmaznak). Ekkor a k\u00f6vetkez\u0151t \u00edrhatjuk t\u00edpusparam\u00e9terek haszn\u00e1lat\u00e1val:</p> <pre><code>public static &lt;T extends Number&gt; void copy(List&lt;T&gt; dest, List&lt;T&gt; src){\n...\n}\n</code></pre> <p>Ha ugyanezt szeretn\u00e9nk wildcard-al:</p> <p><pre><code>public static void copy(List&lt;? extends Number&gt; dest, List&lt;? extends Number&gt; src){\n...\n}\n</code></pre> Azonban ez hib\u00e1s, hiszen \u00e1tpasszolhatok dest-nek egy <code>List&lt;Integer&gt;</code>-t, mag src-nek egy <code>List&lt;Float&gt;</code>-ot. Az els\u0151 esetben ezt nem tehetem meg.</p> <p>Alapszab\u00e1ly: Ha a param\u00e9terek t\u00edpusai \u00e9s vagy a visszat\u00e9r\u00e9s t\u00edpusa k\u00f6z\u00f6tt valamilyen f\u00fcgg\u0151s\u00e9g van, akkkor ebben az esetben csak a t\u00edpusparam\u00e9teres (generikus met\u00f3dus) megold\u00e1s haszn\u00e1lhat\u00f3.</p> <p>Tov\u00e1bbi k\u00fcl\u00f6nbs\u00e9gek:     - Ha egy param\u00e9teres t\u00edpus\u00fa argumentumunk van, akkor haszn\u00e1ljunk Wildcard-ot! (Persze lehetne generikus t\u00edpus param\u00e9tert is haszn\u00e1lni)     - A generikus t\u00edpus param\u00e9terek t\u00e1mogatj\u00e1k a t\u00f6bbsz\u00f6r\u00f6s megszor\u00edt\u00e1s (<code>&lt;T extends B1 &amp; B2 &amp; B3&gt;</code>)     - A wildcard-ok t\u00e1mogatj\u00e1k az als\u00f3 \u00e9s fels\u0151 t\u00edpusmegszor\u00edt\u00e1sokat is, m\u00edg a generikus t\u00edpus param\u00e9terek csak a fels\u0151 korl\u00e1tot t\u00e1mogatj\u00e1k. Az als\u00f3 korl\u00e1tr\u00f3l hamarosan olvashatunk t\u00f6bbet is.</p>"},{"location":"misc/generics/#megszoritas-nelkuli-wildcard-ok","title":"Megszor\u00edt\u00e1s n\u00e9lk\u00fcli wildcard-ok","text":"<p>Ebben az esetben csak a <code>?</code>-et adjuk meg, pl: <code>List&lt;?&gt;</code>. Ezt \u00fagy h\u00edvjuk hogy ismeretlen t\u00edpus\u00fa lista. Hasznos lehet, ha olyan met\u00f3dust \u00edrunk, melyet meg lehet val\u00f3s\u00edtani az <code>Object</code> oszt\u00e1ly funkci\u00f3ival. P\u00e9ld\u00e1ul:</p> <pre><code>public static void printList(List&lt;Object&gt; list) {\nfor (Object elem : list)\nSystem.out.println(elem + \" \");\nSystem.out.println();\n}\n</code></pre> <p>A fenti csak ki\u00edrn\u00e1 a lista elemeit, viszont megintcsak az\u00e9rt, ami\u00e9rt a <code>List&lt;Object&gt;</code> nem \u0151soszt\u00e1lya a <code>List&lt;Integer&gt;</code>-nek, ez\u00e9rt ezekre az elemekre nem fog m\u0171k\u00f6dni, viszont a k\u00f6vetkez\u0151 megval\u00f3s\u00edt\u00e1s m\u00e1r lehet\u0151v\u00e9 fogja ezt tenni:</p> <pre><code>public static void printList(List&lt;?&gt; list) {\nfor (Object elem: list)\nSystem.out.print(elem + \" \");\nSystem.out.println();\n}\n</code></pre> <p>Tanuls\u00e1g: a <code>List&lt;Object&gt;</code> \u00e9s a <code>List&lt;?&gt;</code> nem ugyanaz.</p>"},{"location":"misc/generics/#also-korlatos-wildcard-ok","title":"Als\u00f3 korl\u00e1tos wildcard-ok","text":"<p>Hasonl\u00f3an a fels\u0151 korl\u00e1tos wildcardhoz (pl: <code>&lt;? extends Number&gt;</code>), haszn\u00e1lhatunk als\u00f3 korl\u00e1tot is, pl: <code>&lt;? super Number&gt;</code>. Ebben az esetben a megadott t\u00edpus csak Number \u00e9s annak \u0151soszt\u00e1lyai lehetnek.</p> <p>Fontos: egy wildcard-ra nem tudunk als\u00f3 \u00e9s fels\u0151 korl\u00e1tot is megadni egyszerre.</p> <p>P\u00e9lda: <pre><code>public static void addNumbers(List&lt;? super Integer&gt; list) {\nfor (int i = 1; i &lt;= 10; i++) {\nlist.add(i);\n}\n}\n</code></pre></p>"},{"location":"misc/generics/#feladatok","title":"Feladatok","text":"<ol> <li>\u00cdrjunk generikus oszt\u00e1lyt egy verem (Stack) reprezent\u00e1l\u00e1s\u00e1ra! Bel\u00fcl haszn\u00e1lhatunk ak\u00e1r List-et is. Legyen push \u00e9s pop met\u00f3dus illetve legyen egy print, ami a stackben tal\u00e1lhat\u00f3 aktu\u00e1lis \u00e9rt\u00e9keket \u00edrja ki.</li> <li>\u00cdrjunk generikus met\u00f3dust, mely megsz\u00e1molja, hogy az adott collection-ben h\u00e1ny darab p\u00e1ros sz\u00e1m van, vagy h\u00e1ny palindr\u00f3ma van, stb.! Figyelj\u00fcnk a megszor\u00edt\u00e1sokra! A krit\u00e9riumot param\u00e9terk\u00e9nt lehessen megadni!</li> </ol>"},{"location":"misc/generics/#megoldasok","title":"Megold\u00e1sok","text":"<ol> <li>feladat megold\u00e1sa</li> </ol> <pre><code>class Stack&lt;T&gt;{\nprivate List&lt;T&gt; items = new ArrayList&lt;&gt;();\n\npublic void push(T newItem){\nitems.add(newItem);\n}\n\npublic T pop(){\nif(items.size() &gt; 0){\nreturn items.remove(items.size() - 1);\n}\nelse{\nreturn null;\n}\n}\n\npublic void print(){\nif(items.size() == 0){\nSystem.out.println(\"Stack is empty.\");\nreturn;\n}\n\nfor(int i = items.size() - 1; i &gt;= 0; i--){\nSystem.out.println(items.get(i));\n}\n}\n}\n\npublic class DemoApplication {\n\npublic static void main(String[] args) {\nStack&lt;Integer&gt; stack = new Stack&lt;&gt;();\n\nstack.push(10);\nstack.push(20);\nstack.push(30);\n\nstack.print();\n\nSystem.out.println(stack.pop() + \" removed \");\nSystem.out.println(stack.pop() + \" removed \");\nSystem.out.println(stack.pop() + \" removed \");\n\nstack.print();\n\n}\n\n}\n</code></pre> <ol> <li>feladat megold\u00e1sa</li> </ol> <pre><code>import java.util.Arrays;\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.function.Predicate;\n\npublic class Main {\n\npublic static &lt;T&gt; int countIf(Collection&lt;T&gt; collection, Predicate&lt;T&gt; pred){\nint count = 0;\nfor(T item : collection){\nif(pred.test(item)){\ncount++;\n}\n}\n\nreturn count;\n}\n\npublic static void main(String[] args) {\nList&lt;Integer&gt; list = Arrays.asList(1,2,3,4,5,6,7);\n\nint result = countIf(list, e -&gt; e % 2 == 0);\n\nSystem.out.println(result);\n}\n}\n</code></pre>"},{"location":"misc/lambda/","title":"\u00dat a lambd\u00e1khoz","text":"<p>Ez a le\u00edr\u00e1s egy \u00e1ltal\u00e1nos bevezet\u0151t ad a Java 8-ban megjelent lambda kifejez\u00e9sekhez. A jegyzet bizonyos pontjain kit\u00e9r\u00fcnk a JavaFX kapcsol\u00f3d\u00e1si pontokra is, de a meg\u00e1llap\u00edt\u00e1sok \u00e1ltal\u00e1nosak \u00e9rv\u00e9ny\u0171ek.</p>"},{"location":"misc/lambda/#anonymous-osztalyok","title":"Anonymous oszt\u00e1lyok","text":"<p>Az egyik f\u0151 kiv\u00e1lt\u00f3 oka, hogy l\u00e9teznek lambda kifejez\u00e9sek, az anonim oszt\u00e1lyok l\u00e9tez\u00e9se. Gyorsan ism\u00e9telj\u00fck \u00e1t ennek alapjait!</p> <p>Alapvet\u0151en az anonim oszt\u00e1lyok azt a c\u00e9lt szolg\u00e1lj\u00e1k, hogy t\u00f6m\u00f6rebben \u00edrhassuk a programjainkat. Seg\u00edts\u00e9g\u00fckkel egy id\u0151ben tudunk deklar\u00e1lni egy oszt\u00e1lyt \u00e9s ebb\u0151l p\u00e9ld\u00e1nyos\u00edtani is egy objektumot. Tekinthet\u0151ek lok\u00e1lis oszt\u00e1lynak (mint egy lok\u00e1lis v\u00e1ltoz\u00f3, csak ez oszt\u00e1ly), aminek nincs neve.</p> <p>Tipp</p> <p>Akkor haszn\u00e1ljunk anonim inner class-okat, ha csak ott helyben, egyszer lesz r\u00e1 sz\u00fcks\u00e9g\u00fcnk, m\u00e1sk\u00fcl\u00f6nben csin\u00e1ljunk egy k\u00fcl\u00f6n oszt\u00e1lyt!</p>"},{"location":"misc/lambda/#anonymous-osztalyok-deklaracioja","title":"Anonymous oszt\u00e1lyok deklar\u00e1ci\u00f3ja","text":"<p>Fontos, hogy az anonim oszt\u00e1lyok kifejez\u00e9sek lesznek amikor l\u00e9trehozzuk \u0151ket \u00e9s nem pedig oszt\u00e1ly deklar\u00e1ci\u00f3k (nem kell p\u00e9ld\u00e1nyos\u00edtani, mivel az is megt\u00f6rt\u00e9nik).</p> <p>P\u00e9lda: Legyen egy interface-\u00fcnk, melyet <code>Hello</code>-nak h\u00edvunk \u00e9s legyen egy <code>sayHi</code> met\u00f3dusa! </p> <pre><code>interface Hello {\nvoid sayHi();\n}\n</code></pre> <p>Ezt az interface-t val\u00f3s\u00edtsa meg egy standart oszt\u00e1lydeklar\u00e1ci\u00f3!</p> <pre><code>class EnglishHello implements Hello {\n\n@Override\npublic void sayHi() { // implemented\nSystem.out.println(\"Hello World!\");\n}            }\n</code></pre> <p>Ezut\u00e1n ebb\u0151l az oszt\u00e1lyb\u00f3l tudunk p\u00e9ld\u00e1nyos\u00edtani egy objektumot!</p> <pre><code>Hello english = new EnglishHello();\nenglish.sayHi();\n</code></pre> <p>N\u00e9zz\u00fck, hogy ananymous m\u00f3don, hogyan tehetn\u00e9m meg ezt:</p> <pre><code>Hello german = new Hello(){\npublic void sayHi() { // implemented\nSystem.out.println(\"Hallo Welt!\");\n}\n};\n</code></pre> <p>Ebben az esetben olyan mintha egy konstruktort h\u00edvn\u00e9k meg, de mivel interface-t nem lehet p\u00e9ld\u00e1nyos\u00edtani (a Hello-t) ez \u00edgy nem elegend\u0151, kell egy blokkot is nyitnom, ahol az interface \u00e1ltal el\u0151\u00edrt met\u00f3dusokat kell kifejtenem (jelen esetben ez csak a <code>sayHi</code>). M\u00e9g egyszer hangs\u00falyozom, hogy itt kv\u00e1zi egy oszt\u00e1lydefin\u00edci\u00f3t adtam meg, de ehhez csak egy kifejez\u00e9st haszn\u00e1ltam (ez egy utas\u00edt\u00e1s r\u00e9sze: l\u00e1tszik is, hogy egy pontosvessz\u0151 van a kapcsos ut\u00e1n), mag\u00e1t egy anonim inner class-t.</p> <p>N\u00e9zz\u00fcnk egy \u00e9letszer\u0171bb p\u00e9ld\u00e1t! \u00daj sz\u00e1lak l\u00e9trehoz\u00e1sa egy remek p\u00e9lda:</p> <pre><code>class MyThread  {\n\npublic static void main(String[] args) { //Anonymous Inner class \nThread t = new Thread(new Runnable() { public void run(){ System.out.println(\"Child Thread\"); } });\n\nt.start(); System.out.println(\"Main Thread\"); } } </code></pre> <p>A p\u00e9ld\u00e1ban l\u00e9trehozunk egy \u00faj futtathat\u00f3 sz\u00e1lat, melynek implement\u00e1lnia kell a <code>Runnable</code> interface-t \u00e9s itt alkalmazzuk az anonim inner class-t. Ezut\u00e1n elind\u00edtjuk a sz\u00e1lat.</p> <p>M\u00e1sik tipikus haszn\u00e1lat a GUI alkalmaz\u00e1sokban. P\u00e9ld\u00e1ul az al\u00e1bbi JavaFX k\u00f3dr\u00e9szlet a <code>btn</code> gombhoz rendel egy esem\u00e9nykezel\u0151t, mely azt eredm\u00e9nyezi, hogy a gomb megnyom\u00e1sakor ki\u00edrjuk a <code>Hello World</code> \u00fczenetet a konzolra. A gomb esem\u00e9nykezel\u0151knek az <code>EventHandler&lt;ActionEvent&gt;</code> interface-t kell megval\u00f3s\u00edtani.</p> <pre><code>Button btn = new Button();\nbtn.setText(\"Say 'Hello World'\");\n\nbtn.setOnAction(new EventHandler&lt;ActionEvent&gt;() {\n\n@Override\npublic void handle(ActionEvent event) {\nSystem.out.println(\"Hello World!\");\n}\n});\n</code></pre>"},{"location":"misc/lambda/#osztalybovites","title":"Oszt\u00e1lyb\u0151v\u00edt\u00e9s","text":"<p>Az interface-ek megval\u00f3s\u00edt\u00e1sa mellett az anonim oszt\u00e1lyokat haszn\u00e1lhatjuk \u00fagy, mintha oszt\u00e1lyokb\u00f3l sz\u00e1rmazn\u00e1nk. A m\u00f3dja ugyanaz, mint amikor interf\u00e9szt implement\u00e1lunk, de a <code>new XXX(){...}</code> kifejez\u00e9sben az <code>XXX</code> nem interf\u00e9sz, hanem egy oszt\u00e1ly!</p> <p>Az egyszer\u0171 <code>sayHi</code> p\u00e9lda ilyen m\u00f3don \u00edgy n\u00e9zne ki.</p> <pre><code>class Sample{\n\nclass Hello {\nvoid sayHi(){\nSystem.out.println(\"Hello World\");\n}\n}\n\npublic static void main(Sring[] args){\n\nHello customHello = new Hello(){\n@Override\nvoid sayHi() {\nSystem.out.println(\"Hallo Welt\");\n}\n};\n\ncustomHello.sayHi();\n}\n}\n</code></pre> <p>Ebben az esetben egy megl\u00e9v\u0151 oszt\u00e1lyt terjeszt\u00fcnk ki (konkr\u00e9tan <code>extends</code>), \u00e9s itt fel\u00fcl\u00edrjuk a <code>sayHi()</code> met\u00f3dus\u00e1t.</p> <p>Val\u00f3s helyzetben ezt haszn\u00e1lhatjuk a <code>TableView</code>-n\u00e1l, amikor egy oszlop cell\u00e1it egyedi m\u00f3don szeretn\u00e9nk megjelen\u00edteni. Az al\u00e1bbi k\u00f3dban az oszlop \u00f6sszes cell\u00e1j\u00e1ban a <code>FooBar</code> sz\u00f6veg fog megjelenni.</p> <pre><code>TableColumn&lt;Foobar, Void&gt; col = new TableColumn&lt;&gt;(\"Header\");\ncol.setCellFactory( new TableCell&lt;&gt;() {\n\n@Override\nprotected void updateItem(Void item, boolean empty) {\nsuper.updateItem(item, empty);\nif (empty) {\nsetGraphic(null);\n} else {\nsetGraphic(new Label(\"FooBar\"));\n}\n}\n});\n</code></pre>"},{"location":"misc/lambda/#kulonbsegek-a-hagyomanyos-es-az-anonim-osztalyok-kozott","title":"K\u00fcl\u00f6nbs\u00e9gek a hagyom\u00e1nyos \u00e9s az anonim oszt\u00e1lyok k\u00f6z\u00f6tt","text":"<ul> <li>Egy norm\u00e1l oszt\u00e1ly ak\u00e1rmennyi interface-t implement\u00e1lhat, de egy anonim inner class csak egyet (ez a megad\u00e1s m\u00f3dj\u00e1b\u00f3l is j\u00f6n)</li> <li>Az anonim inner class vagy egy interf\u00e9szt implement\u00e1lhat vagy egy oszt\u00e1lyt terjeszthet ki, de egyszerre mindkett\u0151t nem.</li> <li>A regul\u00e1ris oszt\u00e1lyoknak ak\u00e1rmennyi konstruktora lehet, viszont az anonim oszt\u00e1lyokhoz nem tudunk \u00edrni konstruktort, mivel annak neve meg k\u00e9ne egyezzen az oszt\u00e1ly nev\u00e9vel, de ebben az esetben nincs neve. Helyette lehet haszn\u00e1lni p\u00e9ld\u00e1ul a p\u00e9ld\u00e1ny inicializ\u00e1l\u00f3 blokkot, mely minden p\u00e9ld\u00e1ny l\u00e9trehoz\u00e1sakor lefut.</li> </ul>"},{"location":"misc/lambda/#valtozok-elerese-anonymous-inner-classbol","title":"V\u00e1ltoz\u00f3k el\u00e9r\u00e9se anonymous inner classb\u00f3l","text":"<ul> <li>Az anonymous inner class hozz\u00e1f\u00e9r a befoglal\u00f3 oszt\u00e1ly adattagjaihoz</li> <li>A befoglal\u00f3 blokkon bel\u00fcl csak a final lok\u00e1lis v\u00e1ltoz\u00f3khoz f\u00e9r hozz\u00e1</li> <li>A anonim oszt\u00e1lyon bel\u00fcli v\u00e1ltoz\u00f3deklar\u00e1ci\u00f3k elfedik az ugyanolyan nev\u0171 befoglal\u00f3 blokkban tal\u00e1lhat\u00f3 v\u00e1ltoz\u00f3kat</li> </ul>"},{"location":"misc/lambda/#megszoritasok","title":"Megszor\u00edt\u00e1sok","text":"<ul> <li>Nem haszn\u00e1lhatunk statikus inicializ\u00e1l\u00f3 blokkot</li> <li>Statikus adattagokb\u00f3l csak konstansokat haszn\u00e1lhatunk</li> </ul> <p>Tov\u00e1bbi forr\u00e1sok:</p> <ul> <li>Oracle docs</li> <li>GeeksForGeeks</li> </ul>"},{"location":"misc/lambda/#lambda-kifejezesek","title":"Lambda kifejez\u00e9sek","text":"<p>Most, hogy m\u00e1r rendberaktuk az anonim inner classokat, r\u00e1fordulhatunk magukra a lambda kifejez\u00e9sekre.</p> <p>A lambda kifejez\u00e9seket akkor tudjuk haszn\u00e1lni, amikor egy anonymous inner class-t haszn\u00e1lunk interf\u00e9szen, \u00e9s ott csak egy met\u00f3dust kell kifejten\u00fcnk, azaz az interface csak egy met\u00f3dust tartalmaz. Az ilyen interface-eket h\u00edvj\u00e1k functional interface-nek. P\u00e9ld\u00e1ul ilyen a <code>java.lang.Runnable</code>.</p> <pre><code>@FunctionalInterface\npublic interface Runnable {\npublic abstract void run();\n}\n</code></pre> <p>Az 1.8-as JDK-ban ezeket az interface-eket el is l\u00e1tj\u00e1k a <code>FunctionalInterface</code> annot\u00e1ci\u00f3val, b\u00e1r ez ink\u00e1bb csak jelz\u00e9s \u00e9rt\u00e9k\u0171. Ha az interface t\u00e9nylegesen csak egy absztrakt met\u00f3dussal rendelkezik, akkor <code>FunctionalInterface</code> lesz akkor is, ha ez nincs annot\u00e1lva.</p> <p>A lambda expression-\u00f6k ilyen interface-ek implement\u00e1l\u00e1sakor j\u00f6hetnek j\u00f3l, mivel automatikusan implement\u00e1lj\u00e1k a functional interface abstract met\u00f3dus\u00e1t. N\u00e9zz\u00fcnk is egy p\u00e9ld\u00e1t:</p> <pre><code>interface FuncInterface { void abstractFun(int x); } class Test { public static void main(String args[]) { // by default implements abstractFun() \nFuncInterface fobj = (int x)-&gt;{\nSystem.out.println(2*x);\n}; fobj.abstractFun(5);\n} } </code></pre> <p>A fenti p\u00e9ld\u00e1ban amikor deklar\u00e1ljuk az <code>fobj</code>-t, akkor annak egy lambda expression-t adunk \u00e9rt\u00e9k\u00fcl (itt nagy szerepet kap az \u00fagynevezett Type Inferencer, azaz a t\u00edpuskik\u00f6vetkeztet\u0151 motor). Mivel tudjuk, hogy a bal oldalon egy FuncInterface-t kell kapnunk ez\u00e9rt az \u00e9rt\u00e9kad\u00e1s jobb oldal\u00e1n is ilyen t\u00edpus\u00fa elemnek kell lennie. Mivel ott egy lambda kifejez\u00e9st tal\u00e1lunk, ez\u00e9rt azt megpr\u00f3b\u00e1lja a rendszer r\u00e1h\u00fazni erre az interface-re, azaz a lambda kifejez\u00e9snek illeszkednie kell az <code>abstractFun()</code> met\u00f3dus fejl\u00e9c\u00e9hez (void visszat\u00e9r\u00e9s, egy int param\u00e9ter). Elemezz\u00fck a kifejez\u00e9st! A lambda kifejez\u00e9sek \u00e1ltal\u00e1nos alakja: <code>(params)-&gt;{f\u00fcggv\u00e9nyt\u00f6rzs}</code>. A lambda kifejez\u00e9s egy az egyben felfoghat\u00f3 \u00fagy, mint egy f\u00fcggv\u00e9ny, aminek a param\u00e9terei a kerek z\u00e1roljelek k\u00f6z\u00f6tt vannak, illetve a t\u00f6rzse a kapcsos z\u00e1r\u00f3jelek k\u00f6z\u00f6tt van.</p> <p>A fenti p\u00e9lda le\u00edrhat\u00f3 t\u00f6m\u00f6rebben is, mivel egy param\u00e9ter eset\u00e9ben elhagyhatom a kerek z\u00e1r\u00f3jeleket, de 0 param\u00e9ter eset\u00e9ben az \u00fcres z\u00e1r\u00f3jelp\u00e1rost ki kell \u00edrnom, illetve egy utas\u00edt\u00e1s eset\u00e9n elhagyhatom a t\u00f6rzset k\u00f6r\u00fcl\u00f6lel\u0151 kapcsos z\u00e1r\u00f3jelp\u00e1rost Tov\u00e1bb\u00e1, mivel azt is ismerem, hogy az <code>abstractFun</code>-nak milyen t\u00edpus\u00fa param\u00e9teri vannak, \u00edgy a param\u00e9ter t\u00edpusokat sem kell ki\u00edrnom. Teh\u00e1t a fenti lambda kifejez\u00e9s t\u00f6m\u00f6rebben:</p> <pre><code>FuncInterface fobj = x -&gt; System.out.println(2*x);\n</code></pre> <p>A k\u00f6nnyebb meg\u00e9rt\u00e9s v\u00e9gett a fenti p\u00e9lda Anonymous Inner Class megval\u00f3s\u00edt\u00e1ssal:</p> <pre><code>FuncInterface fobj = new FuncInterface() {\n@Override\npublic void abstractFun(int x) {\nSystem.out.println(x*2);\n}\n};\n\nfobj.abstractFun(5); //prints out: 10\n</code></pre> <p>L\u00e1that\u00f3, hogy a lambda kifejez\u00e9sek sokkal t\u00f6m\u00f6rebb \u00edr\u00e1sm\u00f3dot tesznek lehet\u0151v\u00e9, tov\u00e1bb\u00e1 a lambd\u00e1k el\u0151nyei:</p> <ul> <li>viselked\u00e9st (f\u00fcggv\u00e9nyt) adhatunk \u00e1t param\u00e9terk\u00e9nt, a k\u00f3dot adatk\u00e9nt tudjuk kezelni</li> <li>az \u00edgy l\u00e9trehozott f\u00fcggv\u00e9nyeknek nem kell egyik oszt\u00e1lyhoz sem tartozniuk</li> <li>objektumk\u00e9nt passzolhatjuk a f\u00fcggv\u00e9nyeket a rendszerben \u00e9s sz\u00fcks\u00e9g eset\u00e9n meg lehet \u0151ket h\u00edvni</li> </ul> <p>Lambda expression-\u00f6k haszn\u00e1lat\u00e1t a JDK sz\u00e9lesk\u00f6r\u0171en t\u00e1mogatja. A k\u00f6vetkez\u0151 p\u00e9ld\u00e1ban hozzunk l\u00e9tre egy <code>ArrayList</code>-et, melyet felt\u00f6lt\u00fcnk elemekkel, majd list\u00e1zzuk ki az elemeket(<code>System.out.println</code>-el).</p> <pre><code>public static void main(String args[]) { ArrayList&lt;Integer&gt; arr = new ArrayList&lt;Integer&gt;(); arr.add(1); arr.add(2); arr.add(3); arr.add(4); // \u00f6sszes elem\narr.forEach(n -&gt; System.out.println(n));   } </code></pre> <p>A legt\u00f6bb kollekci\u00f3ban az 1.8-as JDK \u00f3ta szerepel a <code>forEach</code> met\u00f3dus, mely v\u00e9gigmegy a kollekci\u00f3 elemein \u00e9s megh\u00edvja minden elemre a param\u00e9ter\u00fcl kapott f\u00fcggv\u00e9nyt. A forEach a k\u00f6vetkez\u0151t v\u00e1rja: <code>Consumer&lt;T&gt; action</code>. Ne ijedj\u00fcnk meg t\u0151le, \u0151 is csak egy simpla functional interface, melynek egy abstract met\u00f3dusa, az <code>accept</code> egy <code>T</code> t\u00edpus\u00fa param\u00e9tert v\u00e1r \u00e9s nincs visszat\u00e9r\u00e9si \u00e9rt\u00e9ke. Az\u00e9rt kell generikusnak lenni, mert maga a list\u00e1nk is generikus, teh\u00e1t egy Integer-eket tartalmaz\u00f3 lista elemeire csak olyan f\u00fcggv\u00e9nyt h\u00edvhatunk meg, ami egy Integer-t kap param\u00e9ter\u00fcl.</p> A fenti p\u00e9lda alapj\u00e1n \u00edrjunk olyan <code>forEach</code>-et a t\u00f6mbh\u00f6z, mely csak a p\u00e1ros sz\u00e1mokat \u00edrja ki a konzolra! <pre><code>    arr.forEach( num -&gt; {\nif(num % 2 == 0){\nSystem.out.println(num);\n}\n});\n</code></pre> <p>Felfedez\u00e9sek</p> <p>N\u00e9zz\u00fcnk k\u00f6r\u00fcl, hogy a list\u00e1kon milyen lambda expression-t param\u00e9ter\u00fcl v\u00e1r\u00f3 met\u00f3dusok jelentek m\u00e9g meg az 1.8-as JDK-ban.</p> <p>Miel\u0151tt a k\u00f6vetkez\u0151 feladatot megoldjuk m\u00e9g egy fontos dolgot kell \u00e9szrevenn\u00fcnk \u00e9s elrakt\u00e1roznunk elm\u00e9nkben. Amikor az interface-nek van visszat\u00e9r\u00e9se, de a lambda expression-ben csak egy utas\u00edt\u00e1sunk van, akkor annak az egy utas\u00edt\u00e1snak (expression-nek) az \u00e9rt\u00e9k\u00e9t (t\u00edpus\u00e1t) adjuk vissza eredm\u00e9ny\u00fcl. Amennyiben az interface void-ot ad vissza, akkor viszont nem fog a lambda expression t\u00f6rzse sem visszadni semmit. Amennyiben a lambda t\u00f6rzs\u00e9ben t\u00f6bb utas\u00edt\u00e1s tal\u00e1lhat\u00f3 akkor mindig ki kell \u00edrnunk a return kulcssz\u00f3t is, kiv\u00e9ve ha void visszat\u00e9r\u00e9st \u00edr el\u0151 a functional interface!</p> \u00cdrjunk egy functional interface-t, amelynek egy <code>double apply(double a, double b)</code> abstract met\u00f3dusa van! Az interface neve legyen <code>BasicOperator</code>! Ezt az inteface-t rakjuk egy oszt\u00e1lyon bel\u00fclre, mely oszt\u00e1lynak legyen egy <code>double doCalc(double a, double b, BasicOperator op)</code> met\u00f3dusa, amely bel\u00fcl megh\u00edvja a param\u00e9ter\u00fcl kapott f\u00fcggv\u00e9nyt a k\u00e9t megkapott param\u00e9terre. A main-en bel\u00fcl h\u00edvjuk meg a <code>doCalc</code>-ot a 4 alapm\u0171veletre (2-t helyben adjunk meg param\u00e9terk\u00e9nt, kett\u0151re pedig csin\u00e1ljunk referenci\u00e1t \u00e9s csak a refernci\u00e1t adjuk a <code>doCalc</code>-nak)! <pre><code>    class Test {\n\n@FunctionalInterface\ninterface BasicOperator{\ndouble apply(double a, double b);\n}\n\npublic static double doCalc(double a, double b, BasicOperator op){\nreturn op.apply(a, b);\n}\n\npublic static void main(String[] args) {\n\ndouble num1 = 10, num2 = 30;\n\nBasicOperator add = (a,b) -&gt; a + b;\nBasicOperator subtract = (a,b) -&gt; a-b;\n\nSystem.out.println(num1 +\" + \" + num2 + \" = \" + doCalc(num1,num2, add));\nSystem.out.println(num1 +\" - \" + num2 + \" = \" + doCalc(num1,num2, subtract));\n\nSystem.out.println(num1 +\" * \" + num2 + \" = \" + doCalc(num1,num2, (a,b) -&gt; a*b  ));\nSystem.out.println(num1 +\" / \" + num2 + \" = \" + doCalc(num1,num2, (a,b) -&gt; a/b  ));\n}\n}\n</code></pre> Most, hogy megcsin\u00e1ltuk a saj\u00e1t functional interface-\u00fcnket, gondolkozzunk el azon, hogy vajon be\u00e9p\u00edtett lehet\u0151s\u00e9g\u00fcnk van-e ugyanerre? N\u00e9zz\u00fck meg, hogy a <code>java.util.function</code> package-ben milyen megold\u00e1sok vannak erre! A megold\u00e1s csak az \u00f6sszead\u00e1sra mutat p\u00e9ld\u00e1t, mivel a t\u00f6bbire is hasonl\u00f3an alkalmazhat\u00f3. <p>Az egyik opci\u00f3 a <code>DoubleBinaryOperator</code> functional interface haszn\u00e1lata, ami k\u00e9t double param\u00e9tert v\u00e1r \u00e9s egy double-t ad vissza: <pre><code>    class Test {\n\npublic static double doCalc(double a, double b, DoubleBinaryOperator op){\nreturn op.applyAsDouble(a, b);\n}\n\npublic static void main(String[] args) {\n\ndouble num1 = 10, num2 = 30;\n\nDoubleBinaryOperator add = (a,b) -&gt; a + b;\n\nSystem.out.println(num1 +\" + \" + num2 + \" = \" + doCalc(num1,num2, add));\n}\n}\n</code></pre></p> <p>A k\u00f6vetkez\u0151 megold\u00e1sunk lehet az \u00e1ltal\u00e1nosabb <code>BinaryOperator&lt;T&gt;</code> haszn\u00e1lata, mely k\u00e9t <code>T</code> t\u00edpus\u00fa param\u00e9tert v\u00e1r \u00e9s <code>T</code> t\u00edpussal t\u00e9r vissza: <pre><code>    class Test {\n\npublic static double doCalc(double a, double b, BinaryOperator&lt;Double&gt; op){\nreturn op.apply(a, b);\n}\n\npublic static void main(String[] args) {\ndouble num1 = 10, num2 = 30;\nBinaryOperator&lt;Double&gt; add = (a,b) -&gt; a + b;\n\nSystem.out.println(num1 +\" + \" + num2 + \" = \" + doCalc(num1,num2, add));\n}\n}\n</code></pre></p> <p>Mivel a <code>BinaryOperator&lt;T&gt;</code> interface a <code>BiFunction&lt;T,U,R&gt;</code> interface egy specializ\u00e1lt v\u00e1ltozata, ez\u00e9rt ez ut\u00f3bbival is megcsin\u00e1lhatjuk ugyanezt, b\u00e1r ez nem a legszebb (viszont \u00e1ltal\u00e1nosabb helyzetekben j\u00f3l j\u00f6het): <pre><code>    class Test {\n\npublic static double doCalc(double a, double b, BiFunction&lt;Double, Double, Double&gt; op){\nreturn op.apply(a, b);\n}\n\npublic static void main(String[] args) {\ndouble num1 = 10, num2 = 30;\nBiFunction&lt;Double, Double, Double&gt; add = (a,b) -&gt; a + b;\n\nSystem.out.println(num1 +\" + \" + num2 + \" = \" + doCalc(num1,num2, add));\n}\n}\n</code></pre></p>"},{"location":"misc/lambda/#javautilfunction-csomag-legfontosabb-elemei","title":"java.util.function csomag legfontosabb elemei","text":"<p>Ebben a fejezetben bemutatjuk a legfontosabb be\u00e9p\u00edtett functional interface-eket, melyekkel gyakran tal\u00e1lkozhatunk.</p>"},{"location":"misc/lambda/#consumer","title":"Consumer","text":"<p>A <code>Consumer</code> az egyik leggyakrabban haszn\u00e1lt elem. P\u00e9ld\u00e1ul az \u00f6sszes <code>Iterable</code> kollekci\u00f3ban megtal\u00e1lhat\u00f3 <code>forEach</code> met\u00f3dus egy ilyen <code>Consumer</code> funkcion\u00e1lis interf\u00e9sz megval\u00f3s\u00edt\u00e1st v\u00e1r.</p> <p>Param\u00e9terek: Egy darab T generikus t\u00edpus\u00fa param\u00e9ter</p> <p>Visszat\u00e9r\u00e9s: Nincs</p> <p>P\u00e9lda: <pre><code>List&lt;Double&gt; numbers = Arrays.asList(20.0, 10.3, -23.0, -42.0);\nConsumer&lt;Double&gt; printer = num -&gt; System.out.println(num);\nnumbers.forEach(printer);\n</code></pre></p>"},{"location":"misc/lambda/#unaryoperator","title":"UnaryOperator","text":"<p>Egy param\u00e9teren elv\u00e9gzett m\u0171veletet reprezenz\u00e1l.</p> <p>Param\u00e9terek: Egy darab T generikus t\u00edpus\u00fa param\u00e9ter</p> <p>Visszat\u00e9r\u00e9s: T t\u00edpus\u00fa eredm\u00e9ny</p> <p>P\u00e9lda: A list\u00e1kon h\u00edvhatunk egy <code>replaceAll</code> met\u00f3dust, mely a lista minden elem\u00e9re megh\u00edvja a megadott f\u00fcggv\u00e9nyt. Az al\u00e1bbi p\u00e9ld\u00e1ban minden sz\u00e1mnak az abszol\u00fat \u00e9rt\u00e9k\u00e9t sz\u00e1m\u00edtja ki. <pre><code>List&lt;Double&gt; numbers = Arrays.asList(20.0, 10.3, -23.0, -42.0);\nUnaryOperator&lt;Double&gt; abs = num -&gt; Math.abs(num);\nnumbers.replaceAll(abs);\n</code></pre></p>"},{"location":"misc/lambda/#predicate","title":"Predicate","text":"<p>Valamilyen felt\u00e9tel eld\u00f6nt\u00e9s\u00e9re haszn\u00e1lhat\u00f3.</p> <p>Param\u00e9terek: Egy darab T generikus t\u00edpus\u00fa param\u00e9ter</p> <p>Visszat\u00e9r\u00e9s: Nincs</p> <p>P\u00e9lda: A kollekci\u00f3kban megtal\u00e1lhat\u00f3 egy <code>removeIf</code> met\u00f3dus, mely a kollekci\u00f3b\u00f3l kiveszi az \u00f6sszes olyan elemet, melyre a predik\u00e1tumot alkalmazva, az igazat adja vissza. A lenti p\u00e9lda a elt\u00e1vol\u00edtja a p\u00e1ros sz\u00e1mokat a list\u00e1b\u00f3l. <pre><code>List&lt;Integer&gt; numbers = Arrays.asList(20, 10, -23, -42);\nPredicate&lt;Integer&gt; isEven = num -&gt; num % 2 == 0;\nnumbers.removeIf(isEven);\n</code></pre></p>"},{"location":"misc/lambda/#comparator","title":"Comparator","text":"<p>A <code>Comparator</code> egy j\u00f3 p\u00e9lda arra, hogy a r\u00e9gebbi funkcion\u00e1lis interf\u00e9szekkel is gond n\u00e9lk\u00fcl haszn\u00e1lhatjuk a lambda kifejez\u00e9seket. A <code>Comparator</code> interface Java 1.2 \u00f3ta jelen van \u00e9s az \u00e1ltal\u00e1nos rendez\u0151 algoritmusok pl.: (<code>Collections.sort</code>) massz\u00edvan t\u00e1maszkodnak r\u00e1.</p> <p>Param\u00e9terek: K\u00e9t darab T generikus t\u00edpus\u00fa param\u00e9ter</p> <p>Visszat\u00e9r\u00e9s: int, ahol a visszat\u00e9r\u00e9s azt jelzi, hogy a k\u00e9t param\u00e9ter az \u00f6sszehasonl\u00edt\u00e1s szempontj\u00e1b\u00f3l milyen viszonyban \u00e1llnak. - &lt; 0: az els\u0151 param\u00e9ter a rendez\u00e9sben el\u0151r\u00e9bb ker\u00fcl - = 0: a k\u00e9t param\u00e9ter ugyanolyan - &gt; 0: a m\u00e1sodik param\u00e9ter ker\u00fcl el\u0151r\u00e9bb a rendez\u00e9sben</p> <p>P\u00e9lda: Szeretn\u00e9nk egy Double lista elemeit a szinuszaik alapj\u00e1n sorba rendezni: <pre><code>List&lt;Double&gt; numbers = Arrays.asList(20.0, 10.3, -23.0, -42.0);\n\nComparator&lt;Double&gt; sinComp = (num1, num2) -&gt; {\nif(Math.sin(num1) &lt; Math.sin(num2)){\nreturn -1;\n}\nelse if(Math.sin(num1) == Math.sin(num2)){\nreturn 0;\n}\nelse{\nreturn 1;\n}\n};\nnumbers.sort(sinComp);\n</code></pre></p>"},{"location":"misc/lambda/#function","title":"Function","text":"<p>Hasonl\u00f3 a <code>UnaryOperator</code>-hoz, azonban ez ut\u00f3bbi ugyanolyan t\u00edpus\u00fa \u00e9rt\u00e9ket ad vissza, mint amilyen t\u00edpus\u00fa a param\u00e9ter. A <code>Function</code> ezzel szemben laz\u00e1bb felt\u00e9telrendszert fogalmaz meg, mivel nem kell, hogy ugyanolyan t\u00edpussal t\u00e9rj\u00fcnk vissza.</p> <p>Param\u00e9terek: Egy darab T generikus t\u00edpus\u00fa param\u00e9ter</p> <p>Visszat\u00e9r\u00e9s: Egy darab R generikus t\u00edpus\u00fa param\u00e9ter</p> <p>P\u00e9lda: A Map oszt\u00e1ly biztos\u00edtja a <code>computeIfAbsent</code> met\u00f3dust, mely visszaadja a Map-b\u0151l a kulcshoz tartoz\u00f3 \u00e9rt\u00e9ket, ugyanakkor ha a kulcs m\u00e9g nem l\u00e9tezik a Map-ben, akkor l\u00e9trehozza azt a megadott <code>Function</code> seg\u00edts\u00e9g\u00e9vel. A p\u00e9ld\u00e1ban a map String-ekhez t\u00e1rolja el azok hossz\u00e1t. <pre><code>Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();\nFunction&lt;String, Integer&gt; lenFunc = s -&gt; s.length();\nInteger value = map.computeIfAbsent(\"John\", lenFunc);\n</code></pre></p>"},{"location":"misc/lambda/#scope-ok","title":"Scope-ok","text":"<p>A lambda expression-\u00f6kre hasonl\u00f3 elemek vonatkoznak, mint az anonim inner classokra, azonban van n\u00e9h\u00e1ny fontos k\u00fcl\u00f6nbs\u00e9g. Amikor anonymous inner class-t haszn\u00e1lunk, akkor az egy \u00faj scope-ot jelent. Ebbe a scope-ba rakhatunk a megval\u00f3s\u00edt\u00e1shoz tartoz\u00f3 field-eket, haszn\u00e1lhatjuk a this kulcssz\u00f3t is, amely ilyenkor az inner class p\u00e9ld\u00e1ny\u00e1ra vonatkozik. A lambda kifejez\u00e9sek scope-ja viszont a befoglal\u00f3 scope-ra korl\u00e1toz\u00f3dik. Nem tudunk field-eket l\u00e9trehozni a lambda kifejez\u00e9sben, csak lok\u00e1lis v\u00e1ltoz\u00f3kat, illetve a this a befoglal\u00f3 p\u00e9ld\u00e1nyra vonatkozik (p\u00e9ld\u00e1ul, ha a Test oszt\u00e1ly foo met\u00f3dus\u00e1ban haszn\u00e1lok egy lambd\u00e1t akkor a this a Test oszt\u00e1ly objektum\u00e1ra vonatkozik).</p>"},{"location":"misc/lambda/#best-practices","title":"Best practices","text":"<ul> <li>Ahogy m\u00e1r kor\u00e1bbi feladatban is l\u00e1ttuk a <code>java.util.function</code> package-ben tal\u00e1lhat\u00f3 functional interface-ekkel kiv\u00e1lthattuk saj\u00e1t interface \u00edr\u00e1s\u00e1t. Ennek megfelel\u0151en haszn\u00e1ljunk standard functional interface-eket!</li> <li>Saj\u00e1t functional interface-ek \u00edr\u00e1sakor, haszn\u00e1ljuk a <code>@FucntionalInterface</code> annot\u00e1ci\u00f3t. Ez biztos\u00edthatja, hogy k\u00e9s\u0151bb nem b\u0151v\u00edti senki az interface-t \u00fagy, hogy az elvesz\u00edti functional interface jelleg\u00e9t.</li> <li>Inner classok helyett haszn\u00e1ljunk lambda expression-t ott ahol lehet.</li> <li>Pr\u00f3b\u00e1ljunk elker\u00fclni az olyan met\u00f3dusok t\u00falterhel\u00e9s\u00e9t (overload), amik functional interface-t v\u00e1rnak param\u00e9ter\u00fcl:   <pre><code>  public interface Processor {\nString process(Callable&lt;String&gt; c) throws Exception;\nString process(Supplier&lt;String&gt; s);\n}\n\npublic class ProcessorImpl implements Processor {\n@Override\npublic String process(Callable&lt;String&gt; c) throws Exception {\n// implementation details\n}\n\n@Override\npublic String process(Supplier&lt;String&gt; s) {\n// implementation details\n}\n}\n</code></pre>   Els\u0151 r\u00e1n\u00e9z\u00e9sre ez j\u00f3 \u00f6tlet lehet, de amint haszn\u00e1lni akarjuk a <code>process</code>-t akkor nem tudja eld\u00f6nteni a rendszer, hogy melyik functional interface-re akarjuk h\u00edvni, \u00edgy ezt csak \"cs\u00fany\u00e1n tudjuk megtenni\":   <pre><code>  String result = processor.process(() -&gt; \"abc\"); // helytelen\n\n\nString result = processor.process((Supplier&lt;String&gt;) () -&gt; \"abc\"); // helyes, de nem sz\u00e9p\n</code></pre></li> <li>A lambd\u00e1ink legyenek min\u00e9l r\u00f6videbbek \u00e9s \u00e9rthet\u0151ek (ha kell akkor szervezz\u00fck ki a benn\u00fck tal\u00e1lhat\u00f3 k\u00f3dot met\u00f3dusokba)</li> <li>Ker\u00fclj\u00fck a lambda kifejez\u00e9sekben a param\u00e9terek t\u00edpus\u00e1nak ki\u00edr\u00e1s\u00e1t</li> <li>Egy param\u00e9ter eset\u00e9ben hagyjuk el a befoglal\u00f3 kerek z\u00e1r\u00f3jeleket</li> <li>Egy utas\u00edt\u00e1s eset\u00e9ben ne \u00edrjunk kapcsos z\u00e1r\u00f3jeleket, illetve <code>return</code> utas\u00edt\u00e1st</li> </ul> <p>Tov\u00e1bbi halad\u00f3 best practice-eket tal\u00e1lhatunk itt.</p>"},{"location":"misc/lambda/#method-refernces","title":"Method refernces","text":"<p>A method reference t\u00e9mak\u00f6r szorosan kapcsol\u00f3dik a lambd\u00e1khoz, \u00edgy \u00e9rdemes lehet ezeket is megismern\u00fcnk.</p>"},{"location":"misc/lambda/#attekintes","title":"\u00c1ttekint\u00e9s","text":"<p>A method reference egy speci\u00e1lis lambda kifejez\u00e9sk\u00e9nt \u00e9rtelmezhet\u0151. Arra haszn\u00e1ljuk, hogy egyszer\u0171 lambda kifejez\u00e9sek helyett l\u00e9tez\u0151 met\u00f3dusokra hivatkozzunk \u00e9s ezeket haszn\u00e1ljuk fel. P\u00e9ld\u00e1ul az al\u00e1bbi lambda kifejez\u00e9s</p> <pre><code>Consumer&lt;String&gt; c = s -&gt; System.out.println(s);\n</code></pre> <p>megadhat\u00f3 a k\u00f6vetkez\u0151 met\u00f3dus refernci\u00e1val is:</p> <pre><code>Consumer&lt;String&gt; c = System.out::println;\n</code></pre> <p>Vegy\u00fck \u00e9szre a <code>::</code> oper\u00e1tort! Haszn\u00e1latakor a <code>::</code> el\u00e9 megy az objektum vagy oszt\u00e1ly neve, ut\u00e1na pedig mag\u00e1nak a met\u00f3dusnak a neve param\u00e9terek n\u00e9lk\u00fcl (magukat a kerek z\u00e1r\u00f3jeleket sem kell kirakni hiszen azt h\u00edv\u00e1skor haszn\u00e1ljuk).</p> <p>A met\u00f3dus referenci\u00e1t eln\u00e9zve az al\u00e1bbi k\u00e9rd\u00e9sek mer\u00fclhetnek fel benn\u00fcnk:</p> <ul> <li>Ez most mi\u00e9rt lenne szebb mintha lambd\u00e1t haszn\u00e1lunk?</li> <li>Mi t\u00f6rt\u00e9nik a met\u00f3dus argumentumaival?</li> <li>Mi\u00e9rt lehet ez egy valid kifejez\u00e9s?</li> <li>Hogyan konstru\u00e1lhatok valid met\u00f3dus referenci\u00e1t?</li> </ul> <p>A met\u00f3dus referenci\u00e1kat csak ott alkalmazhatjuk, ahol a lambda kifejez\u00e9sek egy darab f\u00fcggv\u00e9nyh\u00edv\u00e1st tartalmaznak. P\u00e9ld\u00e1ul a fenti lambda, csak egy <code>System.out.println</code> h\u00edv\u00e1st tartalmazott.</p> <p>Ezek alapj\u00e1n a k\u00f6vetkez\u0151 meg\u00e1llap\u00edt\u00e1st tehetj\u00fck:</p> <ul> <li>Anonim oszt\u00e1lyok helyett haszn\u00e1lhatunk lambda expression-t, ha a megval\u00f3s\u00edtand\u00f3 interface-nek egy abstract met\u00f3dusa van</li> <li>Lambda kifejez\u00e9s helyett haszn\u00e1lhatunk method reference-t, ha a lambda kifejez\u00e9s csak egy met\u00f3dush\u00edv\u00e1st tartalmaz</li> </ul> <p>4 f\u00e9le method reference l\u00e9tezik, aszerint, hogy mire fogjuk a referenci\u00e1t. Mivel el\u00e9g neh\u00e9z magyarra ford\u00edtani ezeket, \u00edgy angol megnevez\u00e9s\u00fcket is haszn\u00e1ljuk:</p> <ul> <li>static method reference (statikus met\u00f3dus referencia)</li> <li>constructor method reference (konstruktor referencia)</li> <li>instance method of an object of a particular type (egy adott t\u00edpus\u00fa objektum egy met\u00f3dus\u00e1ra)</li> <li>instance method of a particular object (egy objektum met\u00f3dus\u00e1ra referencia)</li> </ul>"},{"location":"misc/lambda/#static-method-reference-statikus-metodus-referencia","title":"Static method reference (Statikus met\u00f3dus referencia)","text":"<p>A lambda kifejez\u00e9s, melyet jelen esetben met\u00f3dus referenci\u00e1ra cser\u00e9lhet\u00fcnk az al\u00e1bbi form\u00e1t k\u00f6veti:</p> <pre><code>(args) -&gt; Class.staticMethod(args)\n</code></pre> <p>Ez met\u00f3dus referenci\u00e1val a k\u00f6vetkez\u0151k\u00e9ppen \u00edrhat\u00f3:</p> <pre><code>Class::staticMethod\n</code></pre> <p>A met\u00f3dus referenci\u00e1kn\u00e1l a <code>::</code> oper\u00e1tort haszn\u00e1ljuk az oszt\u00e1ly neve \u00e9s az oszt\u00e1lymet\u00f3dus k\u00f6z\u00f6tt nem pedig a '.' oper\u00e1tort. Ezen fel\u00fcl az argumentumokat elhagyjuk (magukat a kerek z\u00e1r\u00f3jeleket is).</p> <p>N\u00e9zz\u00fcnk egy faladatot a k\u00f6nnyebb meg\u00e9rt\u00e9s v\u00e9gett! A feladat, hogy egy list\u00e1ban l\u00e9v\u0151 sz\u00e1moknak vegy\u00fck az abszol\u00fat\u00e9rt\u00e9k\u00e9t! A list\u00e1n val\u00f3 v\u00e9gigiter\u00e1l\u00e1sra m\u00e1r l\u00e1ttuk a <code>forEach</code>-et, viszont ez nem m\u00f3dos\u00edtja a lista elemeit, mely a <code>Consumer&lt;T&gt;</code> funkcion\u00e1lis interface megval\u00f3s\u00edt\u00e1s\u00e1b\u00f3l ad\u00f3dik, hiszen az void-ot ad vissza. A <code>forEach</code> helyett ilyen esetekben haszn\u00e1lhatjuk a <code>replaceAll</code> met\u00f3dust, mely egy <code>UnaryOperator&lt;T&gt;</code> funkcion\u00e1lis interface megval\u00f3s\u00edt\u00e1st v\u00e1r. A <code>UnaryOperator</code> egy param\u00e9tert v\u00e1r \u00e9s ugyanolyan t\u00edpus\u00fa a visszat\u00e9r\u00e9se, mint a param\u00e9tere. Erre a s\u00e9m\u00e1ra illeszkedik a <code>Math.abs</code> f\u00fcggv\u00e9ny mindegyik megval\u00f3s\u00edt\u00e1sa (k\u00fcl\u00f6n van minden primit\u00edv t\u00edpusra, ami sz\u00e1mot reprezent\u00e1l). N\u00e9zz\u00fck a megold\u00e1st!</p> <pre><code>List&lt;Integer&gt; numbers = Arrays.asList(1,-2,-3,4);\nnumbers.replaceAll(Math::abs);\nnumbers.forEach(System.out::println);\n</code></pre> <p>A megold\u00e1sban a m\u00e1sodik sorban van a l\u00e9nyeg. A statikus met\u00f3dus referenci\u00e1kn\u00e1l a <code>::</code> oper\u00e1tort kell minden esetben haszn\u00e1lnunk, melynek jelent\u00e9se a fenti p\u00e9ld\u00e1ban: a <code>Math</code> oszt\u00e1lyon bel\u00fcli <code>abs</code> met\u00f3dus referenci\u00e1j\u00e1t szeretn\u00e9m. A fenti l\u00e9nyegi sor lambda megfelel\u0151je a k\u00f6vetkez\u0151 volna: <code>numbers.replaceAll( n -&gt; Math.abs(n))</code>.</p> <p>A param\u00e9tereket nem kell \u00e1tadnunk, azok a sz\u00ednpad m\u00f6g\u00f6tt automatikusan \u00e1tad\u00f3dnak, amikor t\u00e9nylegesen megh\u00edv\u00f3dik a met\u00f3dus. A fenti p\u00e9ld\u00e1ban a <code>Math.abs</code>-r\u00f3l tudjuk, hogy egy darab param\u00e9tert v\u00e1r \u00e9s ugyanolyan t\u00edpus\u00fa a visszat\u00e9r\u00e9se mint a param\u00e9ter. Ez pedig pontosan illeszkedik a <code>UnaryOperator</code> \u00e1ltal el\u0151rtakra. Seg\u00edthet a meg\u00e9rt\u00e9sben, ha megn\u00e9zz\u00fck, hogy a replaceAll met\u00f3dus bel\u00fcl, hogyan haszn\u00e1lja fel a param\u00e9terben kapott <code>UnaryOperator</code> megval\u00f3s\u00edt\u00e1st.</p> K\u00e9sz\u00edts\u00fcnk egy saj\u00e1t statikus f\u00fcggv\u00e9nyt, mely double-t v\u00e1r \u00e9s double-t ad vissza \u00e9s a k\u00f6vetkez\u0151t sz\u00e1molja ki: a sz\u00e1mot megszorozza 3-mal, majd hozz\u00e1ad 42-t \u00e9s gy\u00f6k\u00f6t von ezen a r\u00e9szeredm\u00e9nyen. Ezt af\u00fcggv\u00e9nyt h\u00edvjuk meg egy lista \u00f6sszes elem\u00e9re! <pre><code>    public class Test {\n\nprivate static double myOp(double num){\nreturn Math.sqrt((num * 3) + 42);\n}\n\npublic static void main(String[] args) {\n\nList&lt;Double&gt; numbers = Arrays.asList(10.0, 20.0, 30.0, 40.0);\nnumbers.replaceAll(Test::myOp);\nnumbers.forEach(n -&gt; System.out.println(n));\n}\n}\n</code></pre>"},{"location":"misc/lambda/#konstruktor-referenciak","title":"Konstruktor referenci\u00e1k","text":"<p>Ebben az esetben a lambda kifejez\u00e9s, melyet le szeretn\u00e9nk cser\u00e9lni a k\u00f6vetkez\u0151 form\u00e1j\u00fa:</p> <pre><code>(args) -&gt; new ClassName(args)\n</code></pre> <p>ebb\u0151l met\u00f3dus referencia a k\u00f6vetkez\u0151 form\u00e1ban n\u00e9z ki:</p> <pre><code>ClassName::new\n</code></pre> <p>P\u00e9lda: <pre><code>// Using a method reference\nFunction&lt;String, Integer&gt; f = Integer::new;\nInteger i = f.apply(100); // \u00faj integer l\u00e9trehoz\u00e1sa\n</code></pre></p>"},{"location":"misc/lambda/#instance-method-of-an-object-of-a-particular-type","title":"Instance method of an object of a particular type","text":"<p>Ebben az esetben a kiv\u00e1ltand\u00f3 lambda kifejez\u00e9s\u00fcnk a k\u00f6vetkez\u0151 form\u00e1j\u00fa:</p> <pre><code>(obj, args) -&gt; obj.instanceMethod(args)\n</code></pre> <p>ahol param\u00e9ter\u00fcl egy objektumot adunk \u00e1t, melynek valamelyik met\u00f3dus\u00e1t h\u00edvjuk meg a megadott param\u00e9terrel (param\u00e9terekkel). Ez a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki met\u00f3dus referencia haszn\u00e1lat\u00e1val:</p> <pre><code>ObjectType::instanceMethod\n</code></pre> <p>Ez a transzform\u00e1ci\u00f3 m\u00e1r nem annyira trivi\u00e1lis, mivel nem az objektumot, hanem annak t\u00edpus\u00e1t adjuk \u00e1t. Tov\u00e1bb\u00e1 a m\u00e1sodik param\u00e9ter a sz\u00ednfalak m\u00f6g\u00f6tt ker\u00fcl \u00e1tad\u00e1sra.</p> <p>Vegy\u00fck a k\u00f6vetkez\u0151 p\u00e9ld\u00e1t:</p> <p><pre><code>String[] stringArray = { \"Barbara\", \"James\", \"Mary\", \"John\",\n\"Patricia\", \"Robert\", \"Michael\", \"Linda\" };\nArrays.sort(stringArray, String::compareToIgnoreCase);\n</code></pre> A <code>compareToIgnoreCase</code> egy p\u00e9ld\u00e1nymet\u00f3dus, melynek fejl\u00e9ce a k\u00f6vetkez\u0151 form\u00e1j\u00fa: <code>int compareToIgnoreCase(String str)</code>. A fenti p\u00e9ld\u00e1ban a sort egy <code>Comparator&lt;String&gt;</code>-t v\u00e1r, ami viszont a k\u00f6vetkez\u0151 form\u00e1j\u00fa <code>int compare(String o1, String o2);</code>. A met\u00f3dus referenci\u00e1nk eredm\u00e9nyek\u00e9ppen az els\u0151 param\u00e9ter lesz maga az objektum, a m\u00e1sodik a param\u00e9ter\u00fcl kapott String.</p>"},{"location":"misc/lambda/#instance-method-of-a-particular-object-egy-adott-tipusu-objektum-egy-metodusara","title":"Instance method of a particular object (egy adott t\u00edpus\u00fa objektum egy met\u00f3dus\u00e1ra)","text":"<p>Ebben az esetben a kiv\u00e1ltand\u00f3 lambda kifejez\u00e9s\u00fcnk a k\u00f6vetkez\u0151 form\u00e1j\u00fa:</p> <pre><code>(args) -&gt; obj.instanceMethod(args)\n</code></pre> <p>Ennek a met\u00f3dus reference form\u00e1ja a k\u00f6vetkez\u0151 lesz:</p> <pre><code>obj::instanceMethod\n</code></pre> <pre><code>class ComparisonProvider {\npublic int compareByName(Person a, Person b) {\nreturn a.getName().compareTo(b.getName());\n}\n\npublic int compareByAge(Person a, Person b) {\nreturn a.getBirthday().compareTo(b.getBirthday());\n}\n}\nComparisonProvider myComparisonProvider = new ComparisonProvider();\nArrays.sort(rosterAsArray, myComparisonProvider::compareByName);\n</code></pre>"},{"location":"misc/lambda/#best-practice-metodus-referenciak","title":"Best practice - met\u00f3dus referenci\u00e1k","text":"<ul> <li>Ahol lehet a lambd\u00e1k helyett haszn\u00e1ljunk met\u00f3dus referenci\u00e1kat</li> </ul>"},{"location":"misc/reflection/","title":"Java Reflection","text":""},{"location":"misc/reflection/#bevezetes","title":"Bevezet\u00e9s","text":"<p>A Java Reflection seg\u00edts\u00e9g\u00e9vel fut\u00e1s k\u00f6zben tudjuk lek\u00e9rni/m\u00f3dos\u00edtani oszt\u00e1lyok, interf\u00e9szek, field-ek vagy met\u00f3dusok tulajdons\u00e1gait. Tov\u00e1bb\u00e1 a reflection haszn\u00e1lat\u00e1val \u00faj objektumokat is l\u00e9trehozhatunk, met\u00f3dusokat h\u00edvhatunk meg.</p> <p>Legnagyobb el\u0151nye, hogy ezeket akkor is meg tudjuk tenni, amikor nem ismerj\u00fck a fentiek nev\u00e9t ford\u00edt\u00e1si id\u0151ben.</p> <p>A Java Reflection-t t\u00e1mogat\u00f3 oszt\u00e1lyok a JDK r\u00e9sz\u00e9t k\u00e9pezik \u00e9s a <code>java.lang.reflect</code> csomag alatt \u00e9rhet\u0151ek el.</p> <p>Ahhoz, hogy lek\u00e9rhess\u00fck egy oszt\u00e1lyr\u00f3l az inform\u00e1ci\u00f3kat, illetve haszn\u00e1lhassuk rajta a reflection ny\u00fajtotta lehet\u0151s\u00e9geket, meg kell h\u00edvnunk a <code>getClass()</code> met\u00f3dust.</p> <p>N\u00e9zz\u00fcnk is egy nagyon egyszer\u0171 p\u00e9ld\u00e1t! Ehhez csin\u00e1ljunk egy <code>Person</code> oszt\u00e1lyt.</p> <pre><code>public class Person {\nprivate String name;\nprivate int age;\n}\n</code></pre> <p>Reflection haszn\u00e1lta a <code>Person</code> oszt\u00e1ly field-jeinek el\u00e9r\u00e9s\u00e9hez: <pre><code>Object person = new Person();\nField[] fields = person.getClass().getDeclaredField();\n\nfor (Field f : fields) {\nSystem.out.println(f.getName());\n}\n</code></pre> A fenti k\u00f3d sz\u00e1nd\u00e9kosan Object v\u00e1ltoz\u00f3ban t\u00e1rolja el az \u00faj <code>Person</code> objektum c\u00edm\u00e9t, hogy jobban mutassa reflection el\u0151nyeit. Fut\u00e1s k\u00f6zben lek\u00e9rj\u00fck, az objektumhoz tartoz\u00f3 oszt\u00e1lyt, majd a deklar\u00e1lt field-ek list\u00e1j\u00e1t (\u0151soszt\u00e1ly fieldjei nincsenek benne), v\u00e9g\u00fcl ki\u00edrjuk ezek nev\u00e9t.</p>"},{"location":"misc/troubleshoot/","title":"Troubleshoot","text":"<p>Ezen az oldalon tal\u00e1lhat\u00f3 le\u00edr\u00e1sok azt a c\u00e9lt szolg\u00e1lj\u00e1k, hogy a gyakran el\u0151fordul\u00f3 hib\u00e1kat k\u00f6nnyen lehessen megoldani, r\u00e9szletes le\u00edr\u00e1s alapj\u00e1n. Ha valaki \u00fagy gondolja, hogy ismer olyan hib\u00e1t, ami gyakran fordul el\u0151 a gyakorlatok sor\u00e1n \u00e9s nem tal\u00e1lhat\u00f3 itt, jelezze a gyakorlatvezet\u0151knek egy hivatalos csatorn\u00e1n (email / CooSpace) \u00e9s ha \u00fagy tal\u00e1lj\u00e1k a gyakorlatvezet\u0151k, az is felv\u00e9telre ker\u00fcl ebbe a list\u00e1ba!</p>"},{"location":"misc/troubleshoot/#artifact-beallitasa-tomcat-szerverre-kezzel","title":"Artifact be\u00e1ll\u00edt\u00e1sa TomCat szerverre k\u00e9zzel","text":""},{"location":"misc/troubleshoot/#mirol-ismerjuk-fel","title":"Mir\u0151l ismerj\u00fck fel","text":"<p>A k\u00e9zzel t\u00f6rt\u00e9n\u0151 kunfigur\u00e1l\u00e1st akkor kell megtenn\u00fcnk, ha az IDE nem tal\u00e1lta meg az artifact-ot automatikusan. Amikor a szervert be\u00e1ll\u00edtjuk (kiv\u00e1lasztottuk, hogy melyik TomCat-et szeretn\u00e9nk haszn\u00e1lni) \u00e9s r\u00e1megy\u00fcnk a pirossal kiemelt \"FIX\" gombra nem j\u00f6nnek el\u0151 a lehet\u0151s\u00e9gek.</p> <p>Err\u0151l k\u00e9p:</p> <p></p>"},{"location":"misc/troubleshoot/#artifact-hozzaadasa","title":"Artifact hozz\u00e1ad\u00e1sa","text":"<p>Itt k\u00f6z\u00e9pen nem jelenik meg v\u00e1laszthat\u00f3 artifact. Ekkor a pluszjelre kell menn\u00fcnk, hogy k\u00e9zzel adjuk hozz\u00e1:</p> <p></p> <p>Ezut\u00e1n ki kell v\u00e1lasztanunk, hogy milyen artifact-ot szeretn\u00e9nk hozz\u00e1adni: Web Application: Archive</p> <p></p> <p>Ekkor egy \u00faj ablak jelenik meg, ahol k\u00fcl\u00f6nf\u00e9le be\u00e1ll\u00edt\u00e1sokat kell megtenn\u00fcnk. A name adattagot \u00edrjuk \u00e1t a module (Maven MultiModule Webes r\u00e9sz neve) nev\u00e9re \u00e9s az output directory-ban a kijel\u00f6lt r\u00e9szt out/artifacts/unnamed cser\u00e9lj\u00fck le a \\&lt;modul-neve&gt;/target k\u00f6nyvt\u00e1rra!</p> <p>\u00c1t\u00edr\u00e1sok el\u0151tt:</p> <p></p> <p>\u00c1t\u00edr\u00e1sok ut\u00e1n (web modulnevet felt\u00e9telezve):</p> <p></p> <p>Ekkor r\u00e1nyomhatunk az OK-ra, majd a k\u00f6vetkez\u0151 fel\u00fclet fogad:</p> <p></p> <p>Itt l\u00e1that\u00f3, hogy az application context az a web (a modul neve alapj\u00e1n) lesz, teh\u00e1t a szerver c\u00edme ut\u00e1n m\u00e9g ezt kell be\u00edrni, hogy el\u00e9rj\u00fck a mi tartalmunkat (ilyen mappa lesz a szerveren).</p> <p>Az is l\u00e1tsz\u00f3dik, hogy a futtat\u00e1s el\u0151tt k\u00fcl\u00f6nf\u00e9le feladatokat futtathatunk, pl. leford\u00edthatjuk az alkalmaz\u00e1sunkat, \u00f6sszecsomagolhatjuk, hogy a leg\u00fajabb v\u00e1ltozatot haszn\u00e1lja a szerver.</p>"},{"location":"misc/troubleshoot/#valtoztatott-kod","title":"V\u00e1ltoztatott k\u00f3d","text":"<p>Menj\u00fcnk a Before launch-n\u00e1l tal\u00e1lhat\u00f3 plusz jelre:</p> <p></p> <p>Itt v\u00e1lasszuk ki a Run Maven Goal-t</p> <p></p> <p>Ezut\u00e1n adjuk meg a k\u00edv\u00e1nt maven goal-t. Most egy clean-t adunk meg, ami kit\u00f6r\u00f6l mindent, majd egy package-t, ami leford\u00edtja a projectet \u00e9s \u00f6ssze\u00e1ll\u00edtja a v\u00e9gleges csomagot (war file).</p> <p></p>"},{"location":"misc/troubleshoot/#inditasi-url","title":"Ind\u00edt\u00e1si URL","text":"<p>Ha ezt be\u00e1ll\u00edtottuk, akkor az artifact megfelel\u0151en van konfigur\u00e1lva. M\u00e1r csak annyi kell, hogy az IDE amikor elind\u00edtja a b\u00f6ng\u00e9sz\u0151t, akkor a megfelel\u0151 application context-ben ind\u00edtsa el azt. Ezt az url-n\u00e9l megadott r\u00e9szben tudjuk be\u00edrni. A p\u00e1r l\u00e9p\u00e9ssel ezel\u0151tti application context-re lesz sz\u00fcks\u00e9g\u00fcnk.</p> <p></p> <p>Ezzel be\u00e1ll\u00edtottuk az artifactot amit deploy-kor a rendszer leford\u00edt, \u00f6sszerakja az \u00faj csomagot kirakja a szerverre majd elind\u00edtja a b\u00f6ng\u00e9sz\u0151t a megfelel\u0151 url-el.</p>"},{"location":"misc/troubleshoot/#dependency-automatikus-hozzaadasa","title":"Dependency automatikus hozz\u00e1ad\u00e1sa","text":"<p>Ha nem m\u0171k\u00f6dne a dependency hozz\u00e1ad\u00e1sa:</p> <p></p> <p></p> <p>Ekkor csak a t\u00edpust meghagyva az IDE megtal\u00e1lja a dependency-t.</p> <p></p> <p>\u00cdgy a Core dependency-t automatikusan hozz\u00e1 lehet adni a projekthez, azonban ekkor az ide a dependency-nek egy scope-ot \u00e1ll\u00edt be, m\u00e9ghozz\u00e1 compile scope-ot ami miatt fut\u00e1s k\u00f6zben a rendszer nem tal\u00e1lja a megfelel\u0151 oszt\u00e1lyokat.</p> <p>A rossz dependency:</p> <p></p> <p>Ami a k\u00f6vetkez\u0151 hiba\u00fczenetet eredm\u00e9nyezheti:</p> <p></p> <p>A scope-ot kit\u00f6r\u00f6lve megoldhatjuk a probl\u00e9m\u00e1t.</p> <p></p>"},{"location":"misc/troubleshoot/#doxxx-metodus-super-hivasa","title":"doXXX met\u00f3dus super h\u00edv\u00e1sa","text":"<p>Az IDE a Servlet <code>doXXX</code> met\u00f3dusainak gener\u00e1l <code>super</code> h\u00edv\u00e1st. Ezt a h\u00edv\u00e1st t\u00f6r\u00f6lj\u00fck ki. A super megval\u00f3s\u00edt\u00e1s hib\u00e1t k\u00fcld az oldalra mint nem t\u00e1mogatott k\u00e9r\u00e9s.</p> <p></p> <p>Vegy\u00fck ki a <code>super.doXXX()</code> h\u00edv\u00e1sokat!</p>"},{"location":"misc/troubleshoot/#tomcat-verzio","title":"TomCat verzi\u00f3","text":"<p>Ha az oldal nem t\u00f6lti be a helyesnek t\u0171n\u0151 oszt\u00e1lyt, mintha nem lenne olyan \u00fatvonal, azt is ellen\u0151rizz\u00fck, milyen verzi\u00f3j\u00fa TomCat szervert haszn\u00e1lunk! Tomcat 9 - javax f\u00fcgg\u0151s\u00e9gek Tomcat 10+ - jakarta f\u00fcgg\u0151s\u00e9gek</p> <p>Ha rossz szerver  verzi\u00f3 - f\u00fcgg\u0151s\u00e9g p\u00e1rost haszn\u00e1lunk, a projekt lefordul, de a szerver nem tal\u00e1lja meg az oszt\u00e1lyokat.</p> <p>J\u00f3 gyakorl\u00e1st!</p>"}]}